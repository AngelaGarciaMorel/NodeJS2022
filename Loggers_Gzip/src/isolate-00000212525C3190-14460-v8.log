v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7ab630000,0x7ff7af27e000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ffdc98b0000,0x7ffdc9aa7000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ffdc9670000,0x7ffdc972d000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ffdc7490000,0x7ffdc775d000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ffdc9190000,0x7ffdc91fb000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ffdc8f20000,0x7ffdc9045000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ffdc9730000,0x7ffdc9738000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ffdc4d90000,0x7ffdc4f74000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ffdc9050000,0x7ffdc90fe000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ffdc7760000,0x7ffdc7860000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ffdc7fb0000,0x7ffdc804e000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ffdc63f0000,0x7ffdc642b000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ffdc7910000,0x7ffdc79ac000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ffdc6e90000,0x7ffdc6ebe000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ffdc8800000,0x7ffdc89a0000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ffdc78b0000,0x7ffdc78d2000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ffdc9100000,0x7ffdc912a000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ffdc72e0000,0x7ffdc73eb000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ffdc73f0000,0x7ffdc748d000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ffdc7180000,0x7ffdc72d6000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ffdc78e0000,0x7ffdc7907000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ffdaea50000,0x7ffdaea77000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ffdc68c0000,0x7ffdc68cc000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ffdc8e70000,0x7ffdc8ea0000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ffdc6500000,0x7ffdc654b000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ffdc63d0000,0x7ffdc63e2000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ffdc4570000,0x7ffdc460e000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ffdc8a30000,0x7ffdc8d84000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ffdc6730000,0x7ffdc679a000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ffdc5820000,0x7ffdc5832000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7ffdc6fd0000,0x7ffdc7052000,0
shared-library-end
tick,0x7ffdc994cdc4,212315,0,0x0,6
profiler,begin,1000
new,CodeRange,0x21256680000,0
new,MemoryChunk,0x1be96500000,262144
new,MemoryChunk,0x2d7f9e40000,262144
new,MemoryChunk,0x1aa65e80000,262144
new,MemoryChunk,0x3a5b87c0000,262144
new,MemoryChunk,0xedd0440000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x1ee2d480000,262144
new,MemoryChunk,0x14fc4480000,262144
new,MemoryChunk,0xd800a40000,262144
new,MemoryChunk,0xf813700000,262144
new,MemoryChunk,0x2e58b380000,262144
new,MemoryChunk,0xebc01c0000,262144
new,MemoryChunk,0x30b03a80000,262144
new,MemoryChunk,0x212566c0000,262144
tick,0x7ff7ac01314e,217206,0,0x0,6
new,MemoryChunk,0x2f2c7bc0000,262144
code-creation,Builtin,2,221456,0x7ff7ac1a0474,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,221487,0x7ff7ac1a09d4,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,221499,0x7ff7ac1a0bb4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,221520,0x7ff7ac1a0e34,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,221572,0x7ff7ac1a0f14,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,221584,0x7ff7ac1a1094,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,221594,0x7ff7ac1a1134,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,221604,0x7ff7ac1a1174,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,221615,0x7ff7ac1a12f4,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,221625,0x7ff7ac1a14b4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,221682,0x7ff7ac1a1674,104,CallBoundFunction
code-creation,Builtin,2,221697,0x7ff7ac1a16f4,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,221707,0x7ff7ac1a1774,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,221718,0x7ff7ac1a17f4,120,Call_ReceiverIsAny
code-creation,Builtin,2,221728,0x7ff7ac1a1874,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,221739,0x7ff7ac1a1c74,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,221750,0x7ff7ac1a2074,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,221761,0x7ff7ac1a24b4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,221772,0x7ff7ac1a28f4,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,221783,0x7ff7ac1a2d34,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,221793,0x7ff7ac1a3174,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,221804,0x7ff7ac1a3534,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,221815,0x7ff7ac1a38f4,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,221826,0x7ff7ac1a3cb4,736,CallProxy
code-creation,Builtin,2,221835,0x7ff7ac1a3fb4,148,CallVarargs
code-creation,Builtin,2,221871,0x7ff7ac1a4054,944,CallWithSpread
code-creation,Builtin,2,221883,0x7ff7ac1a4414,1956,CallWithSpread_Baseline
code-creation,Builtin,2,221895,0x7ff7ac1a4bd4,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,221907,0x7ff7ac1a5374,864,CallWithArrayLike
code-creation,Builtin,2,221918,0x7ff7ac1a56f4,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,221930,0x7ff7ac1a5e14,156,CallForwardVarargs
code-creation,Builtin,2,221943,0x7ff7ac1a5eb4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,221955,0x7ff7ac1a5f54,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,221967,0x7ff7ac1a5ff4,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,221979,0x7ff7ac1a60f4,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,221993,0x7ff7ac1a6234,28,ConstructFunction
code-creation,Builtin,2,222004,0x7ff7ac1a6254,104,ConstructBoundFunction
code-creation,Builtin,2,222016,0x7ff7ac1a62d4,28,ConstructedNonConstructable
code-creation,Builtin,2,222028,0x7ff7ac1a62f4,100,Construct
code-creation,Builtin,2,222039,0x7ff7ac1a6374,148,ConstructVarargs
code-creation,Builtin,2,222050,0x7ff7ac1a6414,968,ConstructWithSpread
code-creation,Builtin,2,222061,0x7ff7ac1a67f4,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,222073,0x7ff7ac1a6ed4,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,222085,0x7ff7ac1a75d4,924,ConstructWithArrayLike
code-creation,Builtin,2,222097,0x7ff7ac1a7974,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,222109,0x7ff7ac1a7ff4,196,ConstructForwardVarargs
code-creation,Builtin,2,222121,0x7ff7ac1a80d4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,222133,0x7ff7ac1a81b4,804,Construct_Baseline
code-creation,Builtin,2,222145,0x7ff7ac1a84f4,820,Construct_WithFeedback
code-creation,Builtin,2,222182,0x7ff7ac1a8834,476,JSConstructStubGeneric
code-creation,Builtin,2,222193,0x7ff7ac1a8a14,376,JSBuiltinsConstructStub
code-creation,Builtin,2,222204,0x7ff7ac1a8b94,676,FastNewObject
code-creation,Builtin,2,222215,0x7ff7ac1a8e54,292,FastNewClosure
code-creation,Builtin,2,222226,0x7ff7ac1a8f94,720,ConstructProxy
code-creation,Builtin,2,222236,0x7ff7ac1a9274,360,JSEntry
code-creation,Builtin,2,222247,0x7ff7ac1a93f4,360,JSConstructEntry
code-creation,Builtin,2,222258,0x7ff7ac1a9574,360,JSRunMicrotasksEntry
code-creation,Builtin,2,222269,0x7ff7ac1a96f4,96,JSEntryTrampoline
code-creation,Builtin,2,222279,0x7ff7ac1a9774,96,JSConstructEntryTrampoline
code-creation,Builtin,2,222291,0x7ff7ac1a97f4,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,222302,0x7ff7ac1a9914,1116,StringCodePointAt
code-creation,Builtin,2,222313,0x7ff7ac1a9d74,1552,StringFromCodePointAt
code-creation,Builtin,2,222325,0x7ff7ac1aa394,544,StringEqual
code-creation,Builtin,2,222336,0x7ff7ac1aa5d4,276,StringGreaterThan
code-creation,Builtin,2,222380,0x7ff7ac1aa6f4,276,StringGreaterThanOrEqual
code-creation,Builtin,2,222393,0x7ff7ac1aa814,276,StringLessThan
code-creation,Builtin,2,222404,0x7ff7ac1aa934,276,StringLessThanOrEqual
code-creation,Builtin,2,222415,0x7ff7ac1aaa54,2492,StringSubstring
code-creation,Builtin,2,222426,0x7ff7ac1ab414,80,OrderedHashTableHealIndex
code-creation,Builtin,2,222438,0x7ff7ac1ab474,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,222449,0x7ff7ac1ab914,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,222460,0x7ff7ac1ab974,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,222472,0x7ff7ac1ab9d4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,222484,0x7ff7ac1aba34,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,222495,0x7ff7ac1aba94,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,222507,0x7ff7ac1abaf4,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,222520,0x7ff7ac1abb54,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,222534,0x7ff7ac1abbb4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,222545,0x7ff7ac1abc94,52,InterpreterOnStackReplacement
code-creation,Builtin,2,222557,0x7ff7ac1abcd4,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,222568,0x7ff7ac1abf34,56,BaselineOnStackReplacement
code-creation,Builtin,2,222579,0x7ff7ac1abf74,84,BaselineLeaveFrame
code-creation,Builtin,2,222589,0x7ff7ac1abfd4,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,222601,0x7ff7ac1ac0b4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,222613,0x7ff7ac1ac1b4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,222625,0x7ff7ac1ac294,1004,CompileLazy
code-creation,Builtin,2,222636,0x7ff7ac1ac694,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,222647,0x7ff7ac1ac6f4,252,InstantiateAsmJs
code-creation,Builtin,2,222658,0x7ff7ac1ac7f4,32,NotifyDeoptimized
code-creation,Builtin,2,222669,0x7ff7ac1ac834,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,222680,0x7ff7ac1acb54,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,222728,0x7ff7ac1ace74,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,222740,0x7ff7ac1ad194,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,222752,0x7ff7ac1ad4b4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,222764,0x7ff7ac1ad4f4,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,222777,0x7ff7ac1ad534,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,222788,0x7ff7ac1ad574,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,222800,0x7ff7ac1ad5d4,288,CallApiCallback
code-creation,Builtin,2,222811,0x7ff7ac1ad714,268,CallApiGetter
code-creation,Builtin,2,222823,0x7ff7ac1ad834,12,HandleApiCall
code-creation,Builtin,2,222834,0x7ff7ac1ad854,12,HandleApiCallAsFunction
code-creation,Builtin,2,222846,0x7ff7ac1ad874,12,HandleApiCallAsConstructor
code-creation,Builtin,2,222858,0x7ff7ac1ad894,64,AllocateInYoungGeneration
code-creation,Builtin,2,222870,0x7ff7ac1ad8f4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,222882,0x7ff7ac1ad934,64,AllocateInOldGeneration
code-creation,Builtin,2,222894,0x7ff7ac1ad994,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,222905,0x7ff7ac1ad9d4,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,222917,0x7ff7ac1adb94,496,GrowFastDoubleElements
code-creation,Builtin,2,222929,0x7ff7ac1add94,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,222941,0x7ff7ac1adf34,388,DebugBreakTrampoline
code-creation,Builtin,2,222953,0x7ff7ac1ae0d4,180,ToNumber
code-creation,Builtin,2,222964,0x7ff7ac1ae194,292,ToNumber_Baseline
code-creation,Builtin,2,222975,0x7ff7ac1ae2d4,360,ToNumeric_Baseline
code-creation,Builtin,2,222986,0x7ff7ac1ae454,104,PlainPrimitiveToNumber
code-creation,Builtin,2,222998,0x7ff7ac1ae4d4,212,ToNumberConvertBigInt
code-creation,Builtin,2,223009,0x7ff7ac1ae5b4,132,Typeof
code-creation,Builtin,2,223020,0x7ff7ac1ae654,104,BigIntToI64
code-creation,Builtin,2,223031,0x7ff7ac1ae6d4,4,BigIntToI32Pair
code-creation,Builtin,2,223048,0x7ff7ac1ae6f4,232,I64ToBigInt
code-creation,Builtin,2,223060,0x7ff7ac1ae7f4,4,I32PairToBigInt
code-creation,Builtin,2,223071,0x7ff7ac1ae814,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,223083,0x7ff7ac1ae894,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,223095,0x7ff7ac1af934,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,223106,0x7ff7ac1b3734,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,223118,0x7ff7ac1b3854,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,223130,0x7ff7ac1b3894,12,LoadIC_StringLength
code-creation,Builtin,2,223141,0x7ff7ac1b38b4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,223153,0x7ff7ac1b38d4,3056,LoadIC_NoFeedback
code-creation,Builtin,2,223165,0x7ff7ac1b44d4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,223176,0x7ff7ac1b4514,7332,StoreIC_NoFeedback
code-creation,Builtin,2,223187,0x7ff7ac1b61d4,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,223199,0x7ff7ac1b6294,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,223211,0x7ff7ac1b62f4,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,223223,0x7ff7ac1b63f4,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,223236,0x7ff7ac1b64f4,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,223275,0x7ff7ac1b65f4,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,223287,0x7ff7ac1b66f4,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,223298,0x7ff7ac1b9f14,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,223310,0x7ff7ac1bc4b4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,223322,0x7ff7ac1bf8f4,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,223334,0x7ff7ac1c10d4,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,223346,0x7ff7ac1c3214,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,223359,0x7ff7ac1c7dd4,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,223371,0x7ff7ac1c9f14,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,223383,0x7ff7ac1cca34,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,223394,0x7ff7ac1ccd54,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,223405,0x7ff7ac1cce14,72,HasIndexedInterceptorIC
code-creation,Builtin,2,223416,0x7ff7ac1cce74,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,223427,0x7ff7ac1ccef4,224,DynamicCheckMaps
code-creation,Builtin,2,223439,0x7ff7ac1ccff4,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,223451,0x7ff7ac1cd074,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,223463,0x7ff7ac1cd134,152,EnqueueMicrotask
code-creation,Builtin,2,223474,0x7ff7ac1cd1d4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,223484,0x7ff7ac1cd1f4,3476,RunMicrotasks
code-creation,Builtin,2,223495,0x7ff7ac1cdf94,2636,HasProperty
code-creation,Builtin,2,223506,0x7ff7ac1ce9f4,1156,DeleteProperty
code-creation,Builtin,2,223517,0x7ff7ac1cee94,1972,CopyDataProperties
code-creation,Builtin,2,223530,0x7ff7ac1cf654,9184,SetDataProperties
code-creation,Builtin,2,223541,0x7ff7ac1d1a54,28,Abort
code-creation,Builtin,2,223552,0x7ff7ac1d1a74,28,AbortCSAAssert
code-creation,Builtin,2,223562,0x7ff7ac1d1a94,12,EmptyFunction
code-creation,Builtin,2,223573,0x7ff7ac1d1ab4,12,Illegal
code-creation,Builtin,2,223588,0x7ff7ac1d1ad4,12,StrictPoisonPillThrower
code-creation,Builtin,2,223606,0x7ff7ac1d1af4,12,UnsupportedThrower
code-creation,Builtin,2,223622,0x7ff7ac1d1b14,64,ReturnReceiver
code-creation,Builtin,2,223638,0x7ff7ac1d1b74,28,ArrayConstructor
code-creation,Builtin,2,223666,0x7ff7ac1d1b94,404,ArrayConstructorImpl
code-creation,Builtin,2,223713,0x7ff7ac1d1d34,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,223737,0x7ff7ac1d1e14,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,223753,0x7ff7ac1d1ef4,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,223810,0x7ff7ac1d1fb4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,223829,0x7ff7ac1d2074,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,223846,0x7ff7ac1d2134,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,223862,0x7ff7ac1d21f4,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,223878,0x7ff7ac1d22b4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,223894,0x7ff7ac1d2374,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,223931,0x7ff7ac1d2594,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,223946,0x7ff7ac1d2794,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,223961,0x7ff7ac1d2954,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,223976,0x7ff7ac1d2af4,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,223990,0x7ff7ac1d2cb4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,224004,0x7ff7ac1d2e54,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,224019,0x7ff7ac1d3034,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,224033,0x7ff7ac1d31d4,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,224046,0x7ff7ac1d3234,12,ArrayConcat
code-creation,Builtin,2,224058,0x7ff7ac1d3254,12,ArrayPrototypeFill
code-creation,Builtin,2,224070,0x7ff7ac1d3274,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,224083,0x7ff7ac1d3634,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,224095,0x7ff7ac1d36d4,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,224108,0x7ff7ac1d37b4,548,ArrayIncludes
code-creation,Builtin,2,224120,0x7ff7ac1d39f4,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,224132,0x7ff7ac1d3d54,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,224144,0x7ff7ac1d3dd4,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,224156,0x7ff7ac1d3e54,552,ArrayIndexOf
code-creation,Builtin,2,224168,0x7ff7ac1d4094,12,ArrayPop
code-creation,Builtin,2,224180,0x7ff7ac1d40b4,616,ArrayPrototypePop
code-creation,Builtin,2,224192,0x7ff7ac1d4334,12,ArrayPush
code-creation,Builtin,2,224203,0x7ff7ac1d4354,2424,ArrayPrototypePush
code-creation,Builtin,2,224215,0x7ff7ac1d4cd4,12,ArrayShift
code-creation,Builtin,2,224227,0x7ff7ac1d4cf4,12,ArrayUnshift
code-creation,Builtin,2,224264,0x7ff7ac1d4d14,956,CloneFastJSArray
code-creation,Builtin,2,224275,0x7ff7ac1d50d4,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,224287,0x7ff7ac1d5974,976,ExtractFastJSArray
code-creation,Builtin,2,224298,0x7ff7ac1d5d54,260,ArrayPrototypeEntries
code-creation,Builtin,2,224309,0x7ff7ac1d5e74,248,ArrayPrototypeKeys
code-creation,Builtin,2,224321,0x7ff7ac1d5f74,260,ArrayPrototypeValues
code-creation,Builtin,2,224332,0x7ff7ac1d6094,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,224344,0x7ff7ac1d71f4,4168,FlattenIntoArray
code-creation,Builtin,2,224355,0x7ff7ac1d8254,4172,FlatMapIntoArray
code-creation,Builtin,2,224366,0x7ff7ac1d92b4,372,ArrayPrototypeFlat
code-creation,Builtin,2,224377,0x7ff7ac1d9434,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,224389,0x7ff7ac1d95f4,12,ArrayBufferConstructor
code-creation,Builtin,2,224401,0x7ff7ac1d9614,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,224419,0x7ff7ac1d9634,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,224430,0x7ff7ac1d9654,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,224440,0x7ff7ac1d9674,804,AsyncFunctionEnter
code-creation,Builtin,2,224451,0x7ff7ac1d99b4,132,AsyncFunctionReject
code-creation,Builtin,2,224461,0x7ff7ac1d9a54,128,AsyncFunctionResolve
code-creation,Builtin,2,224471,0x7ff7ac1d9af4,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,224494,0x7ff7ac1d9b14,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,224504,0x7ff7ac1da614,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,224517,0x7ff7ac1db114,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,224529,0x7ff7ac1db1d4,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,224542,0x7ff7ac1db294,12,BigIntConstructor
code-creation,Builtin,2,224552,0x7ff7ac1db2b4,12,BigIntAsUintN
code-creation,Builtin,2,224562,0x7ff7ac1db2d4,12,BigIntAsIntN
code-creation,Builtin,2,224572,0x7ff7ac1db2f4,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,224584,0x7ff7ac1db314,12,BigIntPrototypeToString
code-creation,Builtin,2,224595,0x7ff7ac1db334,12,BigIntPrototypeValueOf
code-creation,Builtin,2,224605,0x7ff7ac1db354,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,224616,0x7ff7ac1db374,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,224627,0x7ff7ac1db394,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,224638,0x7ff7ac1db3b4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,224649,0x7ff7ac1db3d4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,224686,0x7ff7ac1db3f4,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,224698,0x7ff7ac1db414,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,224710,0x7ff7ac1db434,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,224722,0x7ff7ac1db454,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,224734,0x7ff7ac1db474,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,224746,0x7ff7ac1db494,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,224757,0x7ff7ac1db4b4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,224770,0x7ff7ac1db4d4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,224781,0x7ff7ac1db4f4,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,224793,0x7ff7ac1db514,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,224805,0x7ff7ac1db534,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,224816,0x7ff7ac1db554,12,CallSitePrototypeIsEval
code-creation,Builtin,2,224828,0x7ff7ac1db574,12,CallSitePrototypeIsNative
code-creation,Builtin,2,224840,0x7ff7ac1db594,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,224851,0x7ff7ac1db5b4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,224863,0x7ff7ac1db5d4,12,CallSitePrototypeToString
code-creation,Builtin,2,224907,0x7ff7ac1db5f4,12,ConsoleDebug
code-creation,Builtin,2,224917,0x7ff7ac1db614,12,ConsoleError
code-creation,Builtin,2,224928,0x7ff7ac1db634,12,ConsoleInfo
code-creation,Builtin,2,224938,0x7ff7ac1db654,12,ConsoleLog
code-creation,Builtin,2,224949,0x7ff7ac1db674,12,ConsoleWarn
code-creation,Builtin,2,224959,0x7ff7ac1db694,12,ConsoleDir
code-creation,Builtin,2,224969,0x7ff7ac1db6b4,12,ConsoleDirXml
code-creation,Builtin,2,224979,0x7ff7ac1db6d4,12,ConsoleTable
code-creation,Builtin,2,224990,0x7ff7ac1db6f4,12,ConsoleTrace
code-creation,Builtin,2,225000,0x7ff7ac1db714,12,ConsoleGroup
code-creation,Builtin,2,225011,0x7ff7ac1db734,12,ConsoleGroupCollapsed
code-creation,Builtin,2,225022,0x7ff7ac1db754,12,ConsoleGroupEnd
code-creation,Builtin,2,225032,0x7ff7ac1db774,12,ConsoleClear
code-creation,Builtin,2,225043,0x7ff7ac1db794,12,ConsoleCount
code-creation,Builtin,2,225053,0x7ff7ac1db7b4,12,ConsoleCountReset
code-creation,Builtin,2,225079,0x7ff7ac1db7d4,12,ConsoleAssert
code-creation,Builtin,2,225092,0x7ff7ac1db7f4,12,ConsoleProfile
code-creation,Builtin,2,225107,0x7ff7ac1db814,12,ConsoleProfileEnd
code-creation,Builtin,2,225121,0x7ff7ac1db834,12,ConsoleTime
code-creation,Builtin,2,225136,0x7ff7ac1db854,12,ConsoleTimeLog
code-creation,Builtin,2,225161,0x7ff7ac1db874,12,ConsoleTimeEnd
code-creation,Builtin,2,225177,0x7ff7ac1db894,12,ConsoleTimeStamp
code-creation,Builtin,2,225193,0x7ff7ac1db8b4,12,ConsoleContext
code-creation,Builtin,2,225207,0x7ff7ac1db8d4,12,DataViewConstructor
code-creation,Builtin,2,225222,0x7ff7ac1db8f4,12,DateConstructor
code-creation,Builtin,2,225237,0x7ff7ac1db914,216,DatePrototypeGetDate
code-creation,Builtin,2,225251,0x7ff7ac1db9f4,216,DatePrototypeGetDay
code-creation,Builtin,2,225313,0x7ff7ac1dbad4,216,DatePrototypeGetFullYear
code-creation,Builtin,2,225346,0x7ff7ac1dbbb4,216,DatePrototypeGetHours
code-creation,Builtin,2,225369,0x7ff7ac1dbc94,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,225395,0x7ff7ac1dbd74,216,DatePrototypeGetMinutes
code-creation,Builtin,2,225408,0x7ff7ac1dbe54,216,DatePrototypeGetMonth
code-creation,Builtin,2,225422,0x7ff7ac1dbf34,216,DatePrototypeGetSeconds
code-creation,Builtin,2,225440,0x7ff7ac1dc014,124,DatePrototypeGetTime
code-creation,Builtin,2,225454,0x7ff7ac1dc094,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,225467,0x7ff7ac1dc174,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,225481,0x7ff7ac1dc254,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,225508,0x7ff7ac1dc334,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,225528,0x7ff7ac1dc414,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,225545,0x7ff7ac1dc4f4,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,225558,0x7ff7ac1dc5d4,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,225571,0x7ff7ac1dc6b4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,225583,0x7ff7ac1dc794,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,225596,0x7ff7ac1dc874,124,DatePrototypeValueOf
code-creation,Builtin,2,225608,0x7ff7ac1dc8f4,352,DatePrototypeToPrimitive
code-creation,Builtin,2,225621,0x7ff7ac1dca74,12,DatePrototypeGetYear
code-creation,Builtin,2,225633,0x7ff7ac1dca94,12,DatePrototypeSetYear
code-creation,Builtin,2,225645,0x7ff7ac1dcab4,12,DateNow
code-creation,Builtin,2,225656,0x7ff7ac1dcad4,12,DateParse
code-creation,Builtin,2,225668,0x7ff7ac1dcaf4,12,DatePrototypeSetDate
code-creation,Builtin,2,225680,0x7ff7ac1dcb14,12,DatePrototypeSetFullYear
code-creation,Builtin,2,225692,0x7ff7ac1dcb34,12,DatePrototypeSetHours
code-creation,Builtin,2,225704,0x7ff7ac1dcb54,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,225717,0x7ff7ac1dcb74,12,DatePrototypeSetMinutes
code-creation,Builtin,2,225744,0x7ff7ac1dcb94,12,DatePrototypeSetMonth
code-creation,Builtin,2,225756,0x7ff7ac1dcbb4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,225769,0x7ff7ac1dcbd4,12,DatePrototypeSetTime
code-creation,Builtin,2,225781,0x7ff7ac1dcbf4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,225794,0x7ff7ac1dcc14,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,225807,0x7ff7ac1dcc34,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,225819,0x7ff7ac1dcc54,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,225832,0x7ff7ac1dcc74,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,225845,0x7ff7ac1dcc94,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,225857,0x7ff7ac1dccb4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,225870,0x7ff7ac1dccd4,12,DatePrototypeToDateString
code-creation,Builtin,2,225883,0x7ff7ac1dccf4,12,DatePrototypeToISOString
code-creation,Builtin,2,225895,0x7ff7ac1dcd14,12,DatePrototypeToUTCString
code-creation,Builtin,2,225907,0x7ff7ac1dcd34,12,DatePrototypeToString
code-creation,Builtin,2,225920,0x7ff7ac1dcd54,12,DatePrototypeToTimeString
code-creation,Builtin,2,225932,0x7ff7ac1dcd74,12,DatePrototypeToJson
code-creation,Builtin,2,225945,0x7ff7ac1dcd94,12,DateUTC
code-creation,Builtin,2,225957,0x7ff7ac1dcdb4,12,ErrorConstructor
code-creation,Builtin,2,225994,0x7ff7ac1dcdd4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,226006,0x7ff7ac1dcdf4,12,ErrorPrototypeToString
code-creation,Builtin,2,226017,0x7ff7ac1dce14,12,FunctionConstructor
code-creation,Builtin,2,226029,0x7ff7ac1dce34,68,FunctionPrototypeApply
code-creation,Builtin,2,226040,0x7ff7ac1dce94,12,FunctionPrototypeBind
code-creation,Builtin,2,226058,0x7ff7ac1dceb4,32,FunctionPrototypeCall
code-creation,Builtin,2,226069,0x7ff7ac1dcef4,12,FunctionPrototypeToString
code-creation,Builtin,2,226079,0x7ff7ac1dcf14,192,CreateIterResultObject
code-creation,Builtin,2,226090,0x7ff7ac1dcff4,788,CreateGeneratorObject
code-creation,Builtin,2,226100,0x7ff7ac1dd314,12,GeneratorFunctionConstructor
code-creation,Builtin,2,226112,0x7ff7ac1dd334,412,GeneratorPrototypeNext
code-creation,Builtin,2,226122,0x7ff7ac1dd4d4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,226139,0x7ff7ac1dd694,424,GeneratorPrototypeThrow
code-creation,Builtin,2,226151,0x7ff7ac1dd854,12,AsyncFunctionConstructor
code-creation,Builtin,2,226162,0x7ff7ac1dd874,372,SuspendGeneratorBaseline
code-creation,Builtin,2,226173,0x7ff7ac1dd9f4,88,ResumeGeneratorBaseline
code-creation,Builtin,2,226184,0x7ff7ac1dda54,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,226195,0x7ff7ac1dda94,12,GlobalDecodeURI
code-creation,Builtin,2,226205,0x7ff7ac1ddab4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,226216,0x7ff7ac1ddad4,12,GlobalEncodeURI
code-creation,Builtin,2,226226,0x7ff7ac1ddaf4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,226237,0x7ff7ac1ddb14,12,GlobalEscape
code-creation,Builtin,2,226247,0x7ff7ac1ddb34,12,GlobalUnescape
code-creation,Builtin,2,226268,0x7ff7ac1ddb54,12,GlobalEval
code-creation,Builtin,2,226278,0x7ff7ac1ddb74,132,GlobalIsFinite
code-creation,Builtin,2,226288,0x7ff7ac1ddc14,124,GlobalIsNaN
code-creation,Builtin,2,226298,0x7ff7ac1ddc94,12,JsonParse
code-creation,Builtin,2,226308,0x7ff7ac1ddcb4,12,JsonStringify
code-creation,Builtin,2,226319,0x7ff7ac1ddcd4,4608,LoadIC
code-creation,Builtin,2,226354,0x7ff7ac1deef4,4296,LoadIC_Megamorphic
code-creation,Builtin,2,226364,0x7ff7ac1dffd4,4520,LoadIC_Noninlined
code-creation,Builtin,2,226375,0x7ff7ac1e1194,44,LoadICTrampoline
code-creation,Builtin,2,226385,0x7ff7ac1e11d4,24,LoadICBaseline
code-creation,Builtin,2,226395,0x7ff7ac1e11f4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,226406,0x7ff7ac1e1234,7376,LoadSuperIC
code-creation,Builtin,2,226416,0x7ff7ac1e2f14,24,LoadSuperICBaseline
code-creation,Builtin,2,226426,0x7ff7ac1e2f34,8148,KeyedLoadIC
code-creation,Builtin,2,226435,0x7ff7ac1e4f14,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,226445,0x7ff7ac1e8254,44,KeyedLoadICTrampoline
code-creation,Builtin,2,226456,0x7ff7ac1e8294,24,KeyedLoadICBaseline
code-creation,Builtin,2,226465,0x7ff7ac1e82b4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,226476,0x7ff7ac1e82f4,5104,StoreGlobalIC
code-creation,Builtin,2,226486,0x7ff7ac1e96f4,44,StoreGlobalICTrampoline
code-creation,Builtin,2,226496,0x7ff7ac1e9734,24,StoreGlobalICBaseline
code-creation,Builtin,2,226506,0x7ff7ac1e9754,5340,StoreIC
code-creation,Builtin,2,226515,0x7ff7ac1eac34,44,StoreICTrampoline
code-creation,Builtin,2,226525,0x7ff7ac1eac74,24,StoreICBaseline
code-creation,Builtin,2,226537,0x7ff7ac1eac94,5780,KeyedStoreIC
code-creation,Builtin,2,226546,0x7ff7ac1ec334,44,KeyedStoreICTrampoline
code-creation,Builtin,2,226556,0x7ff7ac1ec374,24,KeyedStoreICBaseline
code-creation,Builtin,2,226566,0x7ff7ac1ec394,404,StoreInArrayLiteralIC
code-creation,Builtin,2,226576,0x7ff7ac1ec534,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,226586,0x7ff7ac1ec554,140,LookupContextBaseline
code-creation,Builtin,2,226596,0x7ff7ac1ec5f4,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,226607,0x7ff7ac1ec694,3244,LoadGlobalIC
code-creation,Builtin,2,226616,0x7ff7ac1ed354,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,226626,0x7ff7ac1edff4,44,LoadGlobalICTrampoline
code-creation,Builtin,2,226636,0x7ff7ac1ee034,24,LoadGlobalICBaseline
code-creation,Builtin,2,226646,0x7ff7ac1ee054,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,226683,0x7ff7ac1ee094,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,226695,0x7ff7ac1ee0b4,140,LookupGlobalICBaseline
code-creation,Builtin,2,226707,0x7ff7ac1ee154,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,226719,0x7ff7ac1ee1f4,2064,CloneObjectIC
code-creation,Builtin,2,226730,0x7ff7ac1eea14,24,CloneObjectICBaseline
code-creation,Builtin,2,226742,0x7ff7ac1eea34,1988,CloneObjectIC_Slow
code-creation,Builtin,2,226753,0x7ff7ac1ef214,2756,KeyedHasIC
code-creation,Builtin,2,226764,0x7ff7ac1efcf4,24,KeyedHasICBaseline
code-creation,Builtin,2,226775,0x7ff7ac1efd14,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,226787,0x7ff7ac1f0774,1436,IterableToList
code-creation,Builtin,2,226798,0x7ff7ac1f0d14,1240,IterableToFixedArray
code-creation,Builtin,2,226809,0x7ff7ac1f11f4,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,226889,0x7ff7ac1f14f4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,226942,0x7ff7ac1f1534,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,226955,0x7ff7ac1f15b4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,226968,0x7ff7ac1f1994,1616,StringListFromIterable
code-creation,Builtin,2,226980,0x7ff7ac1f1ff4,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,226992,0x7ff7ac1f24d4,4156,MapConstructor
code-creation,Builtin,2,227004,0x7ff7ac1f3514,1996,MapPrototypeSet
code-creation,Builtin,2,227016,0x7ff7ac1f3cf4,1524,MapPrototypeDelete
code-creation,Builtin,2,227028,0x7ff7ac1f42f4,204,MapPrototypeGet
code-creation,Builtin,2,227040,0x7ff7ac1f43d4,164,MapPrototypeHas
code-creation,Builtin,2,227052,0x7ff7ac1f4494,12,MapPrototypeClear
code-creation,Builtin,2,227064,0x7ff7ac1f44b4,284,MapPrototypeEntries
code-creation,Builtin,2,227076,0x7ff7ac1f45d4,144,MapPrototypeGetSize
code-creation,Builtin,2,227088,0x7ff7ac1f4674,492,MapPrototypeForEach
code-creation,Builtin,2,227100,0x7ff7ac1f4874,284,MapPrototypeKeys
code-creation,Builtin,2,227112,0x7ff7ac1f4994,284,MapPrototypeValues
code-creation,Builtin,2,227124,0x7ff7ac1f4ab4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,227136,0x7ff7ac1f4ed4,1168,MapIteratorToList
code-creation,Builtin,2,227148,0x7ff7ac1f5374,12,NumberPrototypeToExponential
code-creation,Builtin,2,227161,0x7ff7ac1f5394,12,NumberPrototypeToFixed
code-creation,Builtin,2,227173,0x7ff7ac1f53b4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,227186,0x7ff7ac1f53d4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,227200,0x7ff7ac1f53f4,328,SameValue
code-creation,Builtin,2,227212,0x7ff7ac1f5554,204,SameValueNumbersOnly
code-creation,Builtin,2,227224,0x7ff7ac1f5634,792,Add_Baseline
code-creation,Builtin,2,227236,0x7ff7ac1f5954,828,Subtract_Baseline
code-creation,Builtin,2,227248,0x7ff7ac1f5c94,808,Multiply_Baseline
code-creation,Builtin,2,227260,0x7ff7ac1f5fd4,832,Divide_Baseline
code-creation,Builtin,2,227271,0x7ff7ac1f6334,764,Modulus_Baseline
code-creation,Builtin,2,227283,0x7ff7ac1f6634,808,Exponentiate_Baseline
code-creation,Builtin,2,227321,0x7ff7ac1f6974,708,BitwiseAnd_Baseline
code-creation,Builtin,2,227332,0x7ff7ac1f6c54,700,BitwiseOr_Baseline
code-creation,Builtin,2,227343,0x7ff7ac1f6f14,708,BitwiseXor_Baseline
code-creation,Builtin,2,227354,0x7ff7ac1f71f4,720,ShiftLeft_Baseline
code-creation,Builtin,2,227365,0x7ff7ac1f74d4,720,ShiftRight_Baseline
code-creation,Builtin,2,227376,0x7ff7ac1f77b4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,227387,0x7ff7ac1f7b14,720,Add_WithFeedback
code-creation,Builtin,2,227397,0x7ff7ac1f7df4,780,Subtract_WithFeedback
code-creation,Builtin,2,227408,0x7ff7ac1f8114,776,Multiply_WithFeedback
code-creation,Builtin,2,227419,0x7ff7ac1f8434,804,Divide_WithFeedback
code-creation,Builtin,2,227430,0x7ff7ac1f8774,724,Modulus_WithFeedback
code-creation,Builtin,2,227441,0x7ff7ac1f8a54,764,Exponentiate_WithFeedback
code-creation,Builtin,2,227452,0x7ff7ac1f8d54,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,227463,0x7ff7ac1f9014,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,227474,0x7ff7ac1f92d4,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,227495,0x7ff7ac1f9594,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,227507,0x7ff7ac1f9854,692,ShiftRight_WithFeedback
code-creation,Builtin,2,227518,0x7ff7ac1f9b14,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,227531,0x7ff7ac1f9e54,1696,Equal_Baseline
code-creation,Builtin,2,227546,0x7ff7ac1fa514,908,StrictEqual_Baseline
code-creation,Builtin,2,227562,0x7ff7ac1fa8b4,1264,LessThan_Baseline
code-creation,Builtin,2,227573,0x7ff7ac1fadb4,1264,GreaterThan_Baseline
code-creation,Builtin,2,227592,0x7ff7ac1fb2b4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,227603,0x7ff7ac1fb7b4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,227621,0x7ff7ac1fbcb4,1620,Equal_WithFeedback
code-creation,Builtin,2,227631,0x7ff7ac1fc314,940,StrictEqual_WithFeedback
code-creation,Builtin,2,227641,0x7ff7ac1fc6d4,1240,LessThan_WithFeedback
code-creation,Builtin,2,227693,0x7ff7ac1fcbb4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,227705,0x7ff7ac1fd094,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,227715,0x7ff7ac1fd574,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,227753,0x7ff7ac1fda54,332,BitwiseNot_Baseline
code-creation,Builtin,2,227764,0x7ff7ac1fdbb4,460,Decrement_Baseline
code-creation,Builtin,2,227775,0x7ff7ac1fdd94,464,Increment_Baseline
code-creation,Builtin,2,227786,0x7ff7ac1fdf74,488,Negate_Baseline
code-creation,Builtin,2,227797,0x7ff7ac1fe174,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,227808,0x7ff7ac1fe2b4,440,Decrement_WithFeedback
code-creation,Builtin,2,227820,0x7ff7ac1fe474,444,Increment_WithFeedback
code-creation,Builtin,2,227831,0x7ff7ac1fe634,472,Negate_WithFeedback
code-creation,Builtin,2,227842,0x7ff7ac1fe814,252,ObjectAssign
code-creation,Builtin,2,227852,0x7ff7ac1fe914,864,ObjectCreate
code-creation,Builtin,2,227863,0x7ff7ac1fec94,12,ObjectDefineGetter
code-creation,Builtin,2,227874,0x7ff7ac1fecb4,12,ObjectDefineProperties
code-creation,Builtin,2,227886,0x7ff7ac1fecd4,12,ObjectDefineProperty
code-creation,Builtin,2,227897,0x7ff7ac1fecf4,12,ObjectDefineSetter
code-creation,Builtin,2,227909,0x7ff7ac1fed14,1516,ObjectEntries
code-creation,Builtin,2,227919,0x7ff7ac1ff314,12,ObjectFreeze
code-creation,Builtin,2,227930,0x7ff7ac1ff334,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,227941,0x7ff7ac200934,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,227977,0x7ff7ac200954,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,227988,0x7ff7ac200bb4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,227999,0x7ff7ac200bd4,164,ObjectHasOwn
code-creation,Builtin,2,228009,0x7ff7ac200c94,388,ObjectIs
code-creation,Builtin,2,228019,0x7ff7ac200e34,12,ObjectIsFrozen
code-creation,Builtin,2,228029,0x7ff7ac200e54,12,ObjectIsSealed
code-creation,Builtin,2,228039,0x7ff7ac200e74,536,ObjectKeys
code-creation,Builtin,2,228050,0x7ff7ac201094,12,ObjectLookupGetter
code-creation,Builtin,2,228060,0x7ff7ac2010b4,12,ObjectLookupSetter
code-creation,Builtin,2,228071,0x7ff7ac2010d4,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,228082,0x7ff7ac2019d4,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,228093,0x7ff7ac201ab4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,228106,0x7ff7ac201ad4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,228116,0x7ff7ac201af4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,228127,0x7ff7ac201b14,12,ObjectSeal
code-creation,Builtin,2,228136,0x7ff7ac201b34,1108,ObjectToString
code-creation,Builtin,2,228147,0x7ff7ac201f94,1284,ObjectValues
code-creation,Builtin,2,228157,0x7ff7ac2024b4,280,OrdinaryHasInstance
code-creation,Builtin,2,228168,0x7ff7ac2025d4,344,InstanceOf
code-creation,Builtin,2,228178,0x7ff7ac202734,632,InstanceOf_WithFeedback
code-creation,Builtin,2,228188,0x7ff7ac2029b4,648,InstanceOf_Baseline
code-creation,Builtin,2,228199,0x7ff7ac202c54,268,ForInEnumerate
code-creation,Builtin,2,228209,0x7ff7ac202d74,148,ForInPrepare
code-creation,Builtin,2,228219,0x7ff7ac202e14,2584,ForInFilter
code-creation,Builtin,2,228229,0x7ff7ac203834,52,ReflectApply
code-creation,Builtin,2,228239,0x7ff7ac203874,60,ReflectConstruct
code-creation,Builtin,2,228249,0x7ff7ac2038b4,12,ReflectDefineProperty
code-creation,Builtin,2,228259,0x7ff7ac2038d4,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,228270,0x7ff7ac2038f4,12,ReflectOwnKeys
code-creation,Builtin,2,228280,0x7ff7ac203914,12,ReflectSet
code-creation,Builtin,2,228290,0x7ff7ac203934,12,RegExpCapture1Getter
code-creation,Builtin,2,228300,0x7ff7ac203954,12,RegExpCapture2Getter
code-creation,Builtin,2,228310,0x7ff7ac203974,12,RegExpCapture3Getter
code-creation,Builtin,2,228320,0x7ff7ac203994,12,RegExpCapture4Getter
code-creation,Builtin,2,228331,0x7ff7ac2039b4,12,RegExpCapture5Getter
code-creation,Builtin,2,228341,0x7ff7ac2039d4,12,RegExpCapture6Getter
code-creation,Builtin,2,228351,0x7ff7ac2039f4,12,RegExpCapture7Getter
code-creation,Builtin,2,228362,0x7ff7ac203a14,12,RegExpCapture8Getter
code-creation,Builtin,2,228376,0x7ff7ac203a34,12,RegExpCapture9Getter
code-creation,Builtin,2,228387,0x7ff7ac203a54,2212,RegExpConstructor
code-creation,Builtin,2,228398,0x7ff7ac204314,12,RegExpInputGetter
code-creation,Builtin,2,228408,0x7ff7ac204334,12,RegExpInputSetter
code-creation,Builtin,2,228419,0x7ff7ac204354,12,RegExpLastMatchGetter
code-creation,Builtin,2,228429,0x7ff7ac204374,12,RegExpLastParenGetter
code-creation,Builtin,2,228440,0x7ff7ac204394,12,RegExpLeftContextGetter
code-creation,Builtin,2,228450,0x7ff7ac2043b4,908,RegExpPrototypeCompile
code-creation,Builtin,2,228460,0x7ff7ac204754,12,RegExpPrototypeToString
code-creation,Builtin,2,228471,0x7ff7ac204774,12,RegExpRightContextGetter
code-creation,Builtin,2,228482,0x7ff7ac204794,252,RegExpExecAtom
code-creation,Builtin,2,228492,0x7ff7ac204894,1040,RegExpExecInternal
code-creation,Builtin,2,228503,0x7ff7ac204cb4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,228513,0x7ff7ac204cd4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,228524,0x7ff7ac204cf4,2684,SetConstructor
code-creation,Builtin,2,228537,0x7ff7ac205774,1284,SetPrototypeHas
code-creation,Builtin,2,228547,0x7ff7ac205c94,1736,SetPrototypeAdd
code-creation,Builtin,2,228557,0x7ff7ac206374,1476,SetPrototypeDelete
code-creation,Builtin,2,228567,0x7ff7ac206954,12,SetPrototypeClear
code-creation,Builtin,2,228577,0x7ff7ac206974,284,SetPrototypeEntries
code-creation,Builtin,2,228588,0x7ff7ac206a94,144,SetPrototypeGetSize
code-creation,Builtin,2,228631,0x7ff7ac206b34,444,SetPrototypeForEach
code-creation,Builtin,2,228650,0x7ff7ac206cf4,284,SetPrototypeValues
code-creation,Builtin,2,228675,0x7ff7ac206e14,988,SetIteratorPrototypeNext
code-creation,Builtin,2,228701,0x7ff7ac2071f4,1112,SetOrSetIteratorToList
code-creation,Builtin,2,228719,0x7ff7ac207654,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,228732,0x7ff7ac207674,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,228744,0x7ff7ac207694,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,228756,0x7ff7ac2076b4,1280,AtomicsLoad
code-creation,Builtin,2,228768,0x7ff7ac207bd4,1008,AtomicsStore
code-creation,Builtin,2,228779,0x7ff7ac207fd4,1704,AtomicsExchange
code-creation,Builtin,2,228791,0x7ff7ac208694,2092,AtomicsCompareExchange
code-creation,Builtin,2,228803,0x7ff7ac208ed4,1804,AtomicsAdd
code-creation,Builtin,2,228814,0x7ff7ac2095f4,1804,AtomicsSub
code-creation,Builtin,2,228826,0x7ff7ac209d14,1804,AtomicsAnd
code-creation,Builtin,2,228837,0x7ff7ac20a434,1804,AtomicsOr
code-creation,Builtin,2,228849,0x7ff7ac20ab54,1804,AtomicsXor
code-creation,Builtin,2,228867,0x7ff7ac20b274,12,AtomicsNotify
code-creation,Builtin,2,228883,0x7ff7ac20b294,12,AtomicsIsLockFree
code-creation,Builtin,2,228900,0x7ff7ac20b2b4,12,AtomicsWait
code-creation,Builtin,2,228912,0x7ff7ac20b2d4,12,AtomicsWaitAsync
code-creation,Builtin,2,228923,0x7ff7ac20b2f4,12,StringFromCodePoint
code-creation,Builtin,2,228976,0x7ff7ac20b314,1428,StringFromCharCode
code-creation,Builtin,2,228988,0x7ff7ac20b8b4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,229009,0x7ff7ac20b8d4,4360,StringPrototypeMatchAll
code-creation,Builtin,2,229021,0x7ff7ac20c9f4,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,229034,0x7ff7ac20ca14,1228,StringPrototypeReplace
code-creation,Builtin,2,229047,0x7ff7ac20cef4,2900,StringPrototypeSplit
code-creation,Builtin,2,229060,0x7ff7ac20da54,12,StringRaw
code-creation,Builtin,2,229071,0x7ff7ac20da74,12,SymbolConstructor
code-creation,Builtin,2,229084,0x7ff7ac20da94,12,SymbolFor
code-creation,Builtin,2,229097,0x7ff7ac20dab4,12,SymbolKeyFor
code-creation,Builtin,2,229109,0x7ff7ac20dad4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,229122,0x7ff7ac20db34,256,TypedArrayConstructor
code-creation,Builtin,2,229134,0x7ff7ac20dc54,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,229147,0x7ff7ac20dc74,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,229160,0x7ff7ac20dff4,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,229173,0x7ff7ac20e174,584,TypedArrayPrototypeLength
code-creation,Builtin,2,229190,0x7ff7ac20e3d4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,229206,0x7ff7ac20e3f4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,229221,0x7ff7ac20e414,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,229240,0x7ff7ac20e434,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,229253,0x7ff7ac20e454,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,229266,0x7ff7ac20e474,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,229279,0x7ff7ac20e494,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,229292,0x7ff7ac20e5d4,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,229304,0x7ff7ac210f94,792,GenericJSToWasmWrapper
code-creation,Builtin,2,229317,0x7ff7ac2112b4,148,WasmCompileLazy
code-creation,Builtin,2,229329,0x7ff7ac211354,168,WasmDebugBreak
code-creation,Builtin,2,229342,0x7ff7ac211414,16,WasmOnStackReplace
code-creation,Builtin,2,229381,0x7ff7ac211434,140,WasmFloat32ToNumber
code-creation,Builtin,2,229393,0x7ff7ac2114d4,152,WasmFloat64ToNumber
code-creation,Builtin,2,229405,0x7ff7ac211574,4,WasmI32AtomicWait32
code-creation,Builtin,2,229417,0x7ff7ac211594,4,WasmI64AtomicWait32
code-creation,Builtin,2,229428,0x7ff7ac2115b4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,229441,0x7ff7ac2115d4,4320,WeakMapConstructor
code-creation,Builtin,2,229452,0x7ff7ac2126d4,196,WeakMapLookupHashIndex
code-creation,Builtin,2,229464,0x7ff7ac2127b4,220,WeakMapGet
code-creation,Builtin,2,229475,0x7ff7ac212894,176,WeakMapPrototypeHas
code-creation,Builtin,2,229487,0x7ff7ac212954,204,WeakMapPrototypeSet
code-creation,Builtin,2,229498,0x7ff7ac212a34,144,WeakMapPrototypeDelete
code-creation,Builtin,2,229509,0x7ff7ac212ad4,2876,WeakSetConstructor
code-creation,Builtin,2,229521,0x7ff7ac213614,176,WeakSetPrototypeHas
code-creation,Builtin,2,229535,0x7ff7ac2136d4,204,WeakSetPrototypeAdd
code-creation,Builtin,2,229550,0x7ff7ac2137b4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,229566,0x7ff7ac213854,372,WeakCollectionDelete
code-creation,Builtin,2,229578,0x7ff7ac2139d4,764,WeakCollectionSet
code-creation,Builtin,2,229589,0x7ff7ac213cd4,296,AsyncGeneratorResolve
code-creation,Builtin,2,229601,0x7ff7ac213e14,100,AsyncGeneratorReject
code-creation,Builtin,2,229613,0x7ff7ac213e94,2760,AsyncGeneratorYield
code-creation,Builtin,2,229625,0x7ff7ac214974,2872,AsyncGeneratorReturn
code-creation,Builtin,2,229636,0x7ff7ac2154b4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,229648,0x7ff7ac2155f4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,229660,0x7ff7ac215614,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,229677,0x7ff7ac215a14,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,229688,0x7ff7ac215e34,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,229699,0x7ff7ac216254,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,229709,0x7ff7ac216d14,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,229719,0x7ff7ac2177d4,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,229730,0x7ff7ac217854,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,229741,0x7ff7ac2178f4,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,229751,0x7ff7ac217974,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,229763,0x7ff7ac2179f4,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,229773,0x7ff7ac217a74,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,229795,0x7ff7ac217b14,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,229806,0x7ff7ac218154,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,229816,0x7ff7ac218814,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,229827,0x7ff7ac218ed4,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,229837,0x7ff7ac218f54,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,229849,0x7ff7ac219054,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,229861,0x7ff7ac219154,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,229874,0x7ff7ac219234,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,229887,0x7ff7ac2193d4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,229898,0x7ff7ac219574,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,229910,0x7ff7ac219674,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,229921,0x7ff7ac219774,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,229933,0x7ff7ac219874,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,229944,0x7ff7ac219a14,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,229955,0x7ff7ac219bb4,4,DirectCEntry
code-creation,Builtin,2,229972,0x7ff7ac219bd4,1096,StringAdd_CheckNone
code-creation,Builtin,2,229987,0x7ff7ac21a034,2484,SubString
code-creation,Builtin,2,230000,0x7ff7ac21a9f4,16,StackCheck
code-creation,Builtin,2,230010,0x7ff7ac21aa14,84,DoubleToI
code-creation,Builtin,2,230020,0x7ff7ac21aa74,2236,GetProperty
code-creation,Builtin,2,230030,0x7ff7ac21b334,2308,GetPropertyWithReceiver
code-creation,Builtin,2,230040,0x7ff7ac21bc54,16004,SetProperty
code-creation,Builtin,2,230049,0x7ff7ac21faf4,13480,SetPropertyInLiteral
code-creation,Builtin,2,230059,0x7ff7ac222fb4,8,MemCopyUint8Uint8
code-creation,Builtin,2,230069,0x7ff7ac222fd4,8,MemMove
code-creation,Builtin,2,230079,0x7ff7ac222ff4,12,IsTraceCategoryEnabled
code-creation,Builtin,2,230088,0x7ff7ac223014,12,Trace
code-creation,Builtin,2,230098,0x7ff7ac223034,12,FinalizationRegistryUnregister
code-creation,Builtin,2,230108,0x7ff7ac223054,416,AsyncModuleEvaluate
code-creation,Builtin,2,230118,0x7ff7ac223214,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,230128,0x7ff7ac223234,12,CallAsyncModuleRejected
code-creation,Builtin,2,230138,0x7ff7ac223254,260,AggregateErrorConstructor
code-creation,Builtin,2,230148,0x7ff7ac223374,856,ArrayPrototypeAt
code-creation,Builtin,2,230158,0x7ff7ac2236d4,656,ArrayPrototypeConcat
code-creation,Builtin,2,230168,0x7ff7ac223974,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,230178,0x7ff7ac225054,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,230189,0x7ff7ac225134,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,230199,0x7ff7ac2253b4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,230210,0x7ff7ac2260b4,1464,ArrayEvery
code-creation,Builtin,2,230219,0x7ff7ac226674,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,230230,0x7ff7ac226794,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,230241,0x7ff7ac226b74,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,230251,0x7ff7ac227974,4260,ArrayFilter
code-creation,Builtin,2,230264,0x7ff7ac228a34,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,230281,0x7ff7ac228b14,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,230298,0x7ff7ac228b54,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,230341,0x7ff7ac228c94,528,ArrayFindLoopContinuation
code-creation,Builtin,2,230356,0x7ff7ac228eb4,1460,ArrayPrototypeFind
code-creation,Builtin,2,230371,0x7ff7ac229474,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,230387,0x7ff7ac229554,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,230403,0x7ff7ac229594,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,230421,0x7ff7ac2296d4,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,230437,0x7ff7ac2298f4,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,230452,0x7ff7ac229eb4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,230468,0x7ff7ac22a094,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,230484,0x7ff7ac22a754,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,230500,0x7ff7ac22a934,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,230516,0x7ff7ac22aff4,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,230537,0x7ff7ac22b0d4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,230558,0x7ff7ac22b1b4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,230577,0x7ff7ac22be14,1328,ArrayForEach
code-creation,Builtin,2,230592,0x7ff7ac22c354,3572,ArrayFrom
code-creation,Builtin,2,230607,0x7ff7ac22d154,148,ArrayIsArray
code-creation,Builtin,2,230622,0x7ff7ac22d1f4,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,230639,0x7ff7ac22d394,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,230655,0x7ff7ac22d3d4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,230699,0x7ff7ac22d474,312,ConvertToLocaleString
code-creation,Builtin,2,230716,0x7ff7ac22d5b4,752,JoinStackPush
code-creation,Builtin,2,230746,0x7ff7ac22d8b4,272,JoinStackPop
code-creation,Builtin,2,230762,0x7ff7ac22d9d4,6628,ArrayPrototypeJoin
code-creation,Builtin,2,230778,0x7ff7ac22f3d4,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,230796,0x7ff7ac2308d4,236,ArrayPrototypeToString
code-creation,Builtin,2,230813,0x7ff7ac2309d4,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,230830,0x7ff7ac232114,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,230848,0x7ff7ac233334,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,230866,0x7ff7ac234234,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,230896,0x7ff7ac234354,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,230913,0x7ff7ac234454,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,230931,0x7ff7ac234674,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,230948,0x7ff7ac2352f4,3912,ArrayMap
code-creation,Builtin,2,230964,0x7ff7ac236254,1000,ArrayOf
code-creation,Builtin,2,230979,0x7ff7ac236654,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,230998,0x7ff7ac236814,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,231017,0x7ff7ac2368f4,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,231035,0x7ff7ac2369d4,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,231052,0x7ff7ac237674,2000,ArrayReduceRight
code-creation,Builtin,2,231068,0x7ff7ac237e54,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,231086,0x7ff7ac237f14,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,231104,0x7ff7ac237ff4,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,231122,0x7ff7ac2380d4,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,231140,0x7ff7ac238d94,1604,ArrayReduce
code-creation,Builtin,2,231157,0x7ff7ac2393f4,3216,ArrayPrototypeReverse
code-creation,Builtin,2,231192,0x7ff7ac23a094,3592,ArrayPrototypeShift
code-creation,Builtin,2,231210,0x7ff7ac23aeb4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,231226,0x7ff7ac23c334,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,231242,0x7ff7ac23c414,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,231256,0x7ff7ac23c674,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,231267,0x7ff7ac23d374,1448,ArraySome
code-creation,Builtin,2,231277,0x7ff7ac23d934,14216,ArrayPrototypeSplice
code-creation,Builtin,2,231288,0x7ff7ac2410d4,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,231299,0x7ff7ac241db4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,231310,0x7ff7ac241f14,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,231321,0x7ff7ac242074,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,231332,0x7ff7ac242154,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,231344,0x7ff7ac2422b4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,231355,0x7ff7ac242394,96,ArrayBufferIsView
code-creation,Builtin,2,231366,0x7ff7ac242414,396,ToInteger
code-creation,Builtin,2,231376,0x7ff7ac2425b4,3084,FastCreateDataProperty
code-creation,Builtin,2,231387,0x7ff7ac2431d4,676,CheckNumberInRange
code-creation,Builtin,2,231397,0x7ff7ac243494,584,CheckSameObject
code-creation,Builtin,2,231407,0x7ff7ac2436f4,904,BooleanConstructor
code-creation,Builtin,2,231418,0x7ff7ac243a94,164,BooleanPrototypeToString
code-creation,Builtin,2,231431,0x7ff7ac243b54,156,BooleanPrototypeValueOf
code-creation,Builtin,2,231443,0x7ff7ac243bf4,1184,BigIntAddNoThrow
code-creation,Builtin,2,231454,0x7ff7ac2440b4,1280,BigIntAdd
code-creation,Builtin,2,231464,0x7ff7ac2445d4,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,231481,0x7ff7ac244a94,1280,BigIntSubtract
code-creation,Builtin,2,231491,0x7ff7ac244fb4,284,BigIntUnaryMinus
code-creation,Builtin,2,231500,0x7ff7ac2450d4,1360,ToString
code-creation,Builtin,2,231510,0x7ff7ac245634,156,StringPrototypeToString
code-creation,Builtin,2,231520,0x7ff7ac2456d4,156,StringPrototypeValueOf
code-creation,Builtin,2,231533,0x7ff7ac245774,2480,StringToList
code-creation,Builtin,2,231543,0x7ff7ac246134,1012,StringPrototypeCharAt
code-creation,Builtin,2,231553,0x7ff7ac246534,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,231563,0x7ff7ac2467f4,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,231573,0x7ff7ac246d14,400,StringPrototypeConcat
code-creation,Builtin,2,231584,0x7ff7ac246eb4,992,StringConstructor
code-creation,Builtin,2,231594,0x7ff7ac2472b4,1436,StringAddConvertLeft
code-creation,Builtin,2,231604,0x7ff7ac247854,1464,StringAddConvertRight
code-creation,Builtin,2,231614,0x7ff7ac247e14,816,StringCharAt
code-creation,Builtin,2,231624,0x7ff7ac248154,16,FastNewClosureBaseline
code-creation,Builtin,2,231634,0x7ff7ac248174,196,FastNewFunctionContextEval
code-creation,Builtin,2,231644,0x7ff7ac248254,196,FastNewFunctionContextFunction
code-creation,Builtin,2,231654,0x7ff7ac248334,248,CreateRegExpLiteral
code-creation,Builtin,2,231665,0x7ff7ac248434,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,231675,0x7ff7ac248874,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,231696,0x7ff7ac248a74,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,231732,0x7ff7ac249154,384,ObjectConstructor
code-creation,Builtin,2,231742,0x7ff7ac2492f4,176,CreateEmptyLiteralObject
code-creation,Builtin,2,231753,0x7ff7ac2493b4,536,NumberConstructor
code-creation,Builtin,2,231763,0x7ff7ac2495d4,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,231774,0x7ff7ac249634,64,StringToNumber
code-creation,Builtin,2,231785,0x7ff7ac249694,184,NonNumberToNumber
code-creation,Builtin,2,231795,0x7ff7ac249754,240,NonNumberToNumeric
code-creation,Builtin,2,231805,0x7ff7ac249854,36,ToNumeric
code-creation,Builtin,2,231815,0x7ff7ac249894,1184,NumberToString
code-creation,Builtin,2,231826,0x7ff7ac249d54,92,ToBoolean
code-creation,Builtin,2,231835,0x7ff7ac249db4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,231846,0x7ff7ac249e34,728,ToLength
code-creation,Builtin,2,231856,0x7ff7ac24a114,1312,ToName
code-creation,Builtin,2,231866,0x7ff7ac24a654,756,ToObject
code-creation,Builtin,2,231875,0x7ff7ac24a954,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,231886,0x7ff7ac24aa34,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,231897,0x7ff7ac24ab14,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,231908,0x7ff7ac24abf4,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,231919,0x7ff7ac24ad34,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,231933,0x7ff7ac24ae74,216,FastConsoleAssert
code-creation,Builtin,2,231943,0x7ff7ac24af54,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,231954,0x7ff7ac24b014,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,231965,0x7ff7ac24b174,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,231976,0x7ff7ac24b2d4,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,231987,0x7ff7ac24b514,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,231997,0x7ff7ac24b754,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,232008,0x7ff7ac24b9f4,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,232018,0x7ff7ac24bc94,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,232029,0x7ff7ac24bfd4,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,232040,0x7ff7ac24c294,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,232051,0x7ff7ac24c5f4,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,232062,0x7ff7ac24c994,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,232078,0x7ff7ac24cd74,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,232091,0x7ff7ac24d174,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,232102,0x7ff7ac24d534,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,232113,0x7ff7ac24d8f4,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,232124,0x7ff7ac24dd14,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,232135,0x7ff7ac24e134,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,232146,0x7ff7ac24e574,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,232157,0x7ff7ac24e9b4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,232167,0x7ff7ac24edd4,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,232178,0x7ff7ac24f234,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,232189,0x7ff7ac24f5f4,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,232200,0x7ff7ac24f9b4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,232211,0x7ff7ac24fcf4,1152,FinalizationRegistryRegister
code-creation,Builtin,2,232222,0x7ff7ac250194,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,232259,0x7ff7ac250434,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,232269,0x7ff7ac250594,924,FastFunctionPrototypeBind
code-creation,Builtin,2,232279,0x7ff7ac250934,88,IncBlockCounter
code-creation,Builtin,2,232289,0x7ff7ac250994,228,GetTemplateObject
code-creation,Builtin,2,232299,0x7ff7ac250a94,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,232310,0x7ff7ac250ab4,92,ForInNext
code-creation,Builtin,2,232319,0x7ff7ac250b14,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,232330,0x7ff7ac250bb4,116,GetIteratorWithFeedback
code-creation,Builtin,2,232340,0x7ff7ac250c34,100,GetIteratorBaseline
code-creation,Builtin,2,232350,0x7ff7ac250cb4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,232360,0x7ff7ac250dd4,1084,CallIteratorWithFeedback
code-creation,Builtin,2,232371,0x7ff7ac251214,288,MathAbs
code-creation,Builtin,2,232380,0x7ff7ac251354,428,MathCeil
code-creation,Builtin,2,232389,0x7ff7ac251514,432,MathFloor
code-creation,Builtin,2,232399,0x7ff7ac2516d4,488,MathRound
code-creation,Builtin,2,232408,0x7ff7ac2518d4,428,MathTrunc
code-creation,Builtin,2,232418,0x7ff7ac251a94,368,MathPow
code-creation,Builtin,2,232427,0x7ff7ac251c14,396,MathMax
code-creation,Builtin,2,232436,0x7ff7ac251db4,404,MathMin
code-creation,Builtin,2,232446,0x7ff7ac251f54,320,MathAcos
code-creation,Builtin,2,232455,0x7ff7ac2520b4,320,MathAcosh
code-creation,Builtin,2,232465,0x7ff7ac252214,320,MathAsin
code-creation,Builtin,2,232474,0x7ff7ac252374,320,MathAsinh
code-creation,Builtin,2,232483,0x7ff7ac2524d4,320,MathAtan
code-creation,Builtin,2,232493,0x7ff7ac252634,416,MathAtan2
code-creation,Builtin,2,232502,0x7ff7ac2527f4,320,MathAtanh
code-creation,Builtin,2,232512,0x7ff7ac252954,320,MathCbrt
code-creation,Builtin,2,232521,0x7ff7ac252ab4,168,MathClz32
code-creation,Builtin,2,232530,0x7ff7ac252b74,320,MathCos
code-creation,Builtin,2,232540,0x7ff7ac252cd4,320,MathCosh
code-creation,Builtin,2,232551,0x7ff7ac252e34,320,MathExp
code-creation,Builtin,2,232561,0x7ff7ac252f94,320,MathExpm1
code-creation,Builtin,2,232577,0x7ff7ac2530f4,272,MathFround
code-creation,Builtin,2,232591,0x7ff7ac253214,304,MathImul
code-creation,Builtin,2,232605,0x7ff7ac253354,320,MathLog
code-creation,Builtin,2,232620,0x7ff7ac2534b4,320,MathLog1p
code-creation,Builtin,2,232835,0x7ff7ac253614,320,MathLog10
code-creation,Builtin,2,232899,0x7ff7ac253774,320,MathLog2
code-creation,Builtin,2,232917,0x7ff7ac2538d4,320,MathSin
code-creation,Builtin,2,232934,0x7ff7ac253a34,180,MathSign
code-creation,Builtin,2,232952,0x7ff7ac253af4,320,MathSinh
code-creation,Builtin,2,232970,0x7ff7ac253c54,268,MathSqrt
code-creation,Builtin,2,232993,0x7ff7ac253d74,320,MathTan
code-creation,Builtin,2,233048,0x7ff7ac253ed4,320,MathTanh
code-creation,Builtin,2,233061,0x7ff7ac254034,1060,MathHypot
code-creation,Builtin,2,233072,0x7ff7ac254474,332,MathRandom
code-creation,Builtin,2,233084,0x7ff7ac2545d4,2956,NumberPrototypeToString
code-creation,Builtin,2,233102,0x7ff7ac255174,136,NumberIsFinite
code-creation,Builtin,2,233117,0x7ff7ac255214,340,NumberIsInteger
code-creation,Builtin,2,233129,0x7ff7ac255374,116,NumberIsNaN
code-creation,Builtin,2,233140,0x7ff7ac2553f4,372,NumberIsSafeInteger
code-creation,Builtin,2,233152,0x7ff7ac255574,156,NumberPrototypeValueOf
code-creation,Builtin,2,233163,0x7ff7ac255614,196,NumberParseFloat
tick,0x7ffdc994ce44,233177,0,0x0,6
code-creation,Builtin,2,233292,0x7ff7ac2556f4,248,ParseInt
code-creation,Builtin,2,233331,0x7ff7ac2557f4,84,NumberParseInt
code-creation,Builtin,2,233346,0x7ff7ac255854,860,Add
code-creation,Builtin,2,233362,0x7ff7ac255bb4,424,Subtract
code-creation,Builtin,2,233376,0x7ff7ac255d74,608,Multiply
code-creation,Builtin,2,233390,0x7ff7ac255ff4,532,Divide
code-creation,Builtin,2,233404,0x7ff7ac256214,592,Modulus
code-creation,Builtin,2,233417,0x7ff7ac256474,524,Exponentiate
code-creation,Builtin,2,233432,0x7ff7ac256694,344,Negate
code-creation,Builtin,2,233446,0x7ff7ac2567f4,112,BitwiseNot
code-creation,Builtin,2,233460,0x7ff7ac256874,112,Decrement
code-creation,Builtin,2,233474,0x7ff7ac2568f4,112,Increment
code-creation,Builtin,2,233488,0x7ff7ac256974,392,ShiftLeft
code-creation,Builtin,2,233502,0x7ff7ac256b14,392,ShiftRight
code-creation,Builtin,2,233543,0x7ff7ac256cb4,508,ShiftRightLogical
code-creation,Builtin,2,233561,0x7ff7ac256eb4,388,BitwiseAnd
code-creation,Builtin,2,233573,0x7ff7ac257054,388,BitwiseOr
code-creation,Builtin,2,233584,0x7ff7ac2571f4,388,BitwiseXor
code-creation,Builtin,2,233596,0x7ff7ac257394,796,LessThan
code-creation,Builtin,2,233610,0x7ff7ac2576b4,796,LessThanOrEqual
code-creation,Builtin,2,233622,0x7ff7ac2579d4,796,GreaterThan
code-creation,Builtin,2,233635,0x7ff7ac257cf4,796,GreaterThanOrEqual
code-creation,Builtin,2,233676,0x7ff7ac258014,860,Equal
code-creation,Builtin,2,233691,0x7ff7ac258374,348,StrictEqual
code-creation,Builtin,2,233708,0x7ff7ac2584d4,3132,ObjectFromEntries
code-creation,Builtin,2,233722,0x7ff7ac259114,756,CreateObjectWithoutProperties
code-creation,Builtin,2,233734,0x7ff7ac259414,144,ObjectIsExtensible
code-creation,Builtin,2,233746,0x7ff7ac2594b4,148,ObjectPreventExtensions
code-creation,Builtin,2,233758,0x7ff7ac259554,144,ObjectGetPrototypeOf
code-creation,Builtin,2,233770,0x7ff7ac2595f4,300,ObjectSetPrototypeOf
code-creation,Builtin,2,233782,0x7ff7ac259734,80,ObjectPrototypeToString
code-creation,Builtin,2,233820,0x7ff7ac259794,96,ObjectPrototypeValueOf
code-creation,Builtin,2,233832,0x7ff7ac259814,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,233844,0x7ff7ac2598d4,868,FulfillPromise
code-creation,Builtin,2,233854,0x7ff7ac259c54,988,RejectPromise
code-creation,Builtin,2,233865,0x7ff7ac25a034,2416,NewPromiseCapability
code-creation,Builtin,2,233876,0x7ff7ac25a9b4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,233899,0x7ff7ac25aa74,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,233910,0x7ff7ac25ab14,1416,PerformPromiseThen
code-creation,Builtin,2,233921,0x7ff7ac25b0b4,648,PromiseReject
code-creation,Builtin,2,233932,0x7ff7ac25b354,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,233943,0x7ff7ac25b474,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,233955,0x7ff7ac25b4f4,4560,PromiseAll
code-creation,Builtin,2,233973,0x7ff7ac25c6d4,4880,PromiseAllSettled
code-creation,Builtin,2,233991,0x7ff7ac25d9f4,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,234001,0x7ff7ac25de54,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,234012,0x7ff7ac25e3d4,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,234023,0x7ff7ac25e954,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,234033,0x7ff7ac25edf4,2368,PromiseAny
code-creation,Builtin,2,234051,0x7ff7ac25f754,2908,PromiseConstructor
code-creation,Builtin,2,234061,0x7ff7ac2602b4,296,PromisePrototypeCatch
code-creation,Builtin,2,234070,0x7ff7ac2603f4,88,PromiseValueThunkFinally
code-creation,Builtin,2,234080,0x7ff7ac260454,84,PromiseThrowerFinally
code-creation,Builtin,2,234090,0x7ff7ac2604b4,904,PromiseCatchFinally
code-creation,Builtin,2,234104,0x7ff7ac260854,904,PromiseThenFinally
code-creation,Builtin,2,234116,0x7ff7ac260bf4,1700,PromisePrototypeFinally
code-creation,Builtin,2,234126,0x7ff7ac2612b4,1336,PromiseRace
code-creation,Builtin,2,234135,0x7ff7ac2617f4,268,PromiseFulfillReactionJob
code-creation,Builtin,2,234145,0x7ff7ac261914,364,PromiseRejectReactionJob
code-creation,Builtin,2,234155,0x7ff7ac261a94,156,PromiseResolveTrampoline
code-creation,Builtin,2,234165,0x7ff7ac261b34,656,PromiseResolve
code-creation,Builtin,2,234174,0x7ff7ac261dd4,712,ResolvePromise
code-creation,Builtin,2,234184,0x7ff7ac2620b4,2224,PromisePrototypeThen
code-creation,Builtin,2,234194,0x7ff7ac262974,1144,PromiseResolveThenableJob
code-creation,Builtin,2,234204,0x7ff7ac262df4,448,ProxyConstructor
code-creation,Builtin,2,234213,0x7ff7ac262fd4,1760,ProxyDeleteProperty
code-creation,Builtin,2,234223,0x7ff7ac2636d4,2112,ProxyGetProperty
code-creation,Builtin,2,234232,0x7ff7ac263f34,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,234242,0x7ff7ac264374,1668,ProxyHasProperty
code-creation,Builtin,2,234251,0x7ff7ac264a14,760,ProxyIsExtensible
code-creation,Builtin,2,234261,0x7ff7ac264d14,800,ProxyPreventExtensions
code-creation,Builtin,2,234270,0x7ff7ac265054,1148,ProxyRevocable
code-creation,Builtin,2,234280,0x7ff7ac2654d4,120,ProxyRevoke
code-creation,Builtin,2,234289,0x7ff7ac265554,2216,ProxySetProperty
code-creation,Builtin,2,234299,0x7ff7ac265e14,1292,ProxySetPrototypeOf
code-creation,Builtin,2,234308,0x7ff7ac266334,208,ReflectIsExtensible
code-creation,Builtin,2,234318,0x7ff7ac266414,212,ReflectPreventExtensions
code-creation,Builtin,2,234328,0x7ff7ac2664f4,188,ReflectGetPrototypeOf
code-creation,Builtin,2,234337,0x7ff7ac2665b4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,234347,0x7ff7ac2666f4,284,ReflectGet
code-creation,Builtin,2,234356,0x7ff7ac266814,160,ReflectDeleteProperty
code-creation,Builtin,2,234366,0x7ff7ac2668d4,148,ReflectHas
code-creation,Builtin,2,234376,0x7ff7ac266974,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,234385,0x7ff7ac267d94,5104,RegExpPrototypeExec
code-creation,Builtin,2,234395,0x7ff7ac269194,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,234405,0x7ff7ac269ad4,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,234415,0x7ff7ac26bfb4,8840,RegExpMatchFast
code-creation,Builtin,2,234424,0x7ff7ac26e254,3600,RegExpPrototypeMatch
code-creation,Builtin,2,234433,0x7ff7ac26f074,6328,RegExpReplace
code-creation,Builtin,2,234443,0x7ff7ac270934,524,RegExpPrototypeReplace
code-creation,Builtin,2,234453,0x7ff7ac270b54,1424,RegExpSearchFast
code-creation,Builtin,2,234462,0x7ff7ac2710f4,1640,RegExpPrototypeSearch
code-creation,Builtin,2,234472,0x7ff7ac271774,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,234482,0x7ff7ac271854,5872,RegExpSplit
code-creation,Builtin,2,234500,0x7ff7ac272f54,476,RegExpPrototypeSplit
code-creation,Builtin,2,234509,0x7ff7ac273134,2252,RegExpPrototypeTest
code-creation,Builtin,2,234518,0x7ff7ac273a14,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,234528,0x7ff7ac273f74,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,234541,0x7ff7ac274074,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,234553,0x7ff7ac274174,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,234574,0x7ff7ac274274,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,234589,0x7ff7ac274374,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,234616,0x7ff7ac274474,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,234645,0x7ff7ac274574,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,234663,0x7ff7ac274694,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,234686,0x7ff7ac2747b4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,234704,0x7ff7ac275094,1500,StringPrototypeAt
code-creation,Builtin,2,234721,0x7ff7ac275674,3008,StringPrototypeEndsWith
code-creation,Builtin,2,234740,0x7ff7ac276254,480,CreateHTML
code-creation,Builtin,2,234758,0x7ff7ac276454,164,StringPrototypeAnchor
code-creation,Builtin,2,234774,0x7ff7ac276514,128,StringPrototypeBig
code-creation,Builtin,2,234800,0x7ff7ac2765b4,128,StringPrototypeBlink
code-creation,Builtin,2,234820,0x7ff7ac276654,128,StringPrototypeBold
code-creation,Builtin,2,234836,0x7ff7ac2766f4,168,StringPrototypeFontcolor
code-creation,Builtin,2,234852,0x7ff7ac2767b4,168,StringPrototypeFontsize
code-creation,Builtin,2,234929,0x7ff7ac276874,128,StringPrototypeFixed
code-creation,Builtin,2,234947,0x7ff7ac276914,128,StringPrototypeItalics
code-creation,Builtin,2,234964,0x7ff7ac2769b4,168,StringPrototypeLink
code-creation,Builtin,2,234980,0x7ff7ac276a74,128,StringPrototypeSmall
code-creation,Builtin,2,234997,0x7ff7ac276b14,128,StringPrototypeStrike
code-creation,Builtin,2,235014,0x7ff7ac276bb4,128,StringPrototypeSub
code-creation,Builtin,2,235031,0x7ff7ac276c54,128,StringPrototypeSup
code-creation,Builtin,2,235048,0x7ff7ac276cf4,1028,StringPrototypeIncludes
code-creation,Builtin,2,235066,0x7ff7ac277114,628,StringPrototypeIndexOf
code-creation,Builtin,2,235083,0x7ff7ac277394,344,StringPrototypeIterator
code-creation,Builtin,2,235100,0x7ff7ac2774f4,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,235118,0x7ff7ac277cf4,1304,StringPrototypeMatch
code-creation,Builtin,2,235135,0x7ff7ac278214,1304,StringPrototypeSearch
code-creation,Builtin,2,235151,0x7ff7ac278734,824,StringPrototypePadStart
code-creation,Builtin,2,235169,0x7ff7ac278a74,824,StringPrototypePadEnd
code-creation,Builtin,2,235186,0x7ff7ac278db4,120,StringRepeat
code-creation,Builtin,2,235203,0x7ff7ac278e34,400,StringPrototypeRepeat
code-creation,Builtin,2,235220,0x7ff7ac278fd4,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,235238,0x7ff7ac27bb94,3388,StringPrototypeSlice
code-creation,Builtin,2,235255,0x7ff7ac27c8d4,3028,StringPrototypeStartsWith
code-creation,Builtin,2,235272,0x7ff7ac27d4b4,3328,StringPrototypeSubstr
code-creation,Builtin,2,235297,0x7ff7ac27e1d4,3260,StringPrototypeSubstring
code-creation,Builtin,2,235366,0x7ff7ac27ee94,6916,StringPrototypeTrim
code-creation,Builtin,2,235381,0x7ff7ac2809b4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,235422,0x7ff7ac282274,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,235437,0x7ff7ac283954,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,235452,0x7ff7ac283a14,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,235467,0x7ff7ac283ab4,172,SymbolPrototypeToString
code-creation,Builtin,2,235483,0x7ff7ac283b74,156,SymbolPrototypeValueOf
code-creation,Builtin,2,235498,0x7ff7ac283c14,832,TypedArrayPrototypeAt
code-creation,Builtin,2,235512,0x7ff7ac283f74,10064,CreateTypedArray
code-creation,Builtin,2,235528,0x7ff7ac2866d4,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,235543,0x7ff7ac286ad4,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,235558,0x7ff7ac286c54,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,235572,0x7ff7ac287a14,996,TypedArrayPrototypeFind
code-creation,Builtin,2,235587,0x7ff7ac287e14,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,235605,0x7ff7ac288214,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,235640,0x7ff7ac2883d4,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,235657,0x7ff7ac288894,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,235673,0x7ff7ac288a54,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,235688,0x7ff7ac288f34,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,235702,0x7ff7ac2892b4,2352,TypedArrayFrom
code-creation,Builtin,2,235715,0x7ff7ac289bf4,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,235728,0x7ff7ac289d74,1028,TypedArrayOf
code-creation,Builtin,2,235739,0x7ff7ac28a194,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,235749,0x7ff7ac28a554,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,235758,0x7ff7ac28a914,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,235767,0x7ff7ac28b2f4,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,235776,0x7ff7ac28bef4,992,TypedArrayPrototypeSome
code-creation,Builtin,2,235785,0x7ff7ac28c2f4,1060,TypedArrayMergeSort
code-creation,Builtin,2,235803,0x7ff7ac28c734,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,235820,0x7ff7ac28cd94,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,235832,0x7ff7ac28d854,372,TypedArrayPrototypeValues
code-creation,Builtin,2,235842,0x7ff7ac28d9d4,952,WeakRefConstructor
code-creation,Builtin,2,235862,0x7ff7ac28dd94,184,WeakRefDeref
code-creation,Builtin,2,235921,0x7ff7ac28de54,680,NewSloppyArgumentsElements
code-creation,Builtin,2,235933,0x7ff7ac28e114,296,NewStrictArgumentsElements
code-creation,Builtin,2,235943,0x7ff7ac28e254,320,NewRestArgumentsElements
code-creation,Builtin,2,235958,0x7ff7ac28e3b4,1388,FastNewSloppyArguments
code-creation,Builtin,2,235968,0x7ff7ac28e934,524,FastNewStrictArguments
code-creation,Builtin,2,235978,0x7ff7ac28eb54,556,FastNewRestArguments
code-creation,Builtin,2,235988,0x7ff7ac28ed94,676,StringSlowFlatten
code-creation,Builtin,2,236004,0x7ff7ac28f054,2068,StringIndexOf
code-creation,Builtin,2,236013,0x7ff7ac28f874,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,236023,0x7ff7ac28f894,20,TestHelperPlus1
code-creation,Builtin,2,236032,0x7ff7ac28f8b4,20,TestHelperPlus2
code-creation,Builtin,2,236041,0x7ff7ac28f8d4,96,NewSmiBox
code-creation,Builtin,2,236049,0x7ff7ac28f954,24,ReturnTwoValues
code-creation,Builtin,2,236059,0x7ff7ac28f974,32,Load_FastSmiElements_0
code-creation,Builtin,2,236068,0x7ff7ac28f9b4,32,Load_FastObjectElements_0
code-creation,Builtin,2,236078,0x7ff7ac28f9f4,144,Load_FastDoubleElements_0
code-creation,Builtin,2,236087,0x7ff7ac28fa94,32,Store_FastSmiElements_0
code-creation,Builtin,2,236097,0x7ff7ac28fad4,96,Store_FastObjectElements_0
code-creation,Builtin,2,236107,0x7ff7ac28fb54,48,Store_FastDoubleElements_0
code-creation,Builtin,2,236116,0x7ff7ac28fb94,36,Delete_FastSmiElements_0
code-creation,Builtin,2,236126,0x7ff7ac28fbd4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,236141,0x7ff7ac28fc14,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,236155,0x7ff7ac28fc54,308,SortCompareDefault
code-creation,Builtin,2,236183,0x7ff7ac28fd94,92,SortCompareUserFn
code-creation,Builtin,2,236197,0x7ff7ac28fdf4,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,236213,0x7ff7ac28fe14,312,Copy
code-creation,Builtin,2,236226,0x7ff7ac28ff54,5776,MergeAt
code-creation,Builtin,2,236240,0x7ff7ac2915f4,792,GallopLeft
code-creation,Builtin,2,236254,0x7ff7ac291914,832,GallopRight
code-creation,Builtin,2,236268,0x7ff7ac291c74,3832,ArrayTimSort
code-creation,Builtin,2,236281,0x7ff7ac292b74,2112,ArrayPrototypeSort
code-creation,Builtin,2,236294,0x7ff7ac2933d4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,236305,0x7ff7ac293454,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,236315,0x7ff7ac2934d4,76,WasmTaggedToFloat64
code-creation,Builtin,2,236324,0x7ff7ac293534,72,WasmMemoryGrow
code-creation,Builtin,2,236333,0x7ff7ac293594,100,WasmTableInit
code-creation,Builtin,2,236342,0x7ff7ac293614,100,WasmTableCopy
code-creation,Builtin,2,236351,0x7ff7ac293694,84,WasmTableFill
code-creation,Builtin,2,236360,0x7ff7ac2936f4,72,WasmTableGrow
code-creation,Builtin,2,236391,0x7ff7ac293754,144,WasmTableGet
code-creation,Builtin,2,236400,0x7ff7ac2937f4,236,WasmTableSet
code-creation,Builtin,2,236409,0x7ff7ac2938f4,88,WasmRefFunc
code-creation,Builtin,2,236418,0x7ff7ac293954,144,WasmAllocateFixedArray
code-creation,Builtin,2,236427,0x7ff7ac2939f4,44,WasmThrow
code-creation,Builtin,2,236436,0x7ff7ac293a34,52,WasmRethrow
code-creation,Builtin,2,236445,0x7ff7ac293a74,44,WasmTriggerTierUp
code-creation,Builtin,2,236455,0x7ff7ac293ab4,32,WasmStackGuard
code-creation,Builtin,2,236464,0x7ff7ac293af4,32,WasmStackOverflow
code-creation,Builtin,2,236474,0x7ff7ac293b34,40,WasmTraceMemory
code-creation,Builtin,2,236483,0x7ff7ac293b74,32,WasmTraceEnter
code-creation,Builtin,2,236492,0x7ff7ac293bb4,40,WasmTraceExit
code-creation,Builtin,2,236502,0x7ff7ac293bf4,332,WasmAllocateJSArray
code-creation,Builtin,2,236511,0x7ff7ac293d54,104,WasmAllocatePair
code-creation,Builtin,2,236520,0x7ff7ac293dd4,64,WasmAllocateRtt
code-creation,Builtin,2,236529,0x7ff7ac293e34,72,WasmAllocateFreshRtt
code-creation,Builtin,2,236543,0x7ff7ac293e94,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,236557,0x7ff7ac293f14,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,236568,0x7ff7ac293fb4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,236577,0x7ff7ac294074,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,236587,0x7ff7ac294134,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,236597,0x7ff7ac2941b4,60,WasmArrayCopy
code-creation,Builtin,2,236607,0x7ff7ac2941f4,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,236677,0x7ff7ac2942f4,52,WasmSubtypeCheck
code-creation,Builtin,2,236732,0x7ff7ac294334,8,WasmInt32ToNumber
code-creation,Builtin,2,236806,0x7ff7ac294354,116,WasmUint32ToNumber
code-creation,Builtin,2,236818,0x7ff7ac2943d4,144,UintPtr53ToNumber
code-creation,Builtin,2,236829,0x7ff7ac294474,96,WasmAtomicNotify
code-creation,Builtin,2,236840,0x7ff7ac2944f4,116,WasmI32AtomicWait64
code-creation,Builtin,2,236859,0x7ff7ac294574,116,WasmI64AtomicWait64
code-creation,Builtin,2,236869,0x7ff7ac2945f4,580,WasmGetOwnProperty
code-creation,Builtin,2,236879,0x7ff7ac294854,40,WasmTrap
code-creation,Builtin,2,236889,0x7ff7ac294894,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,236900,0x7ff7ac2948b4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,236911,0x7ff7ac2948d4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,236921,0x7ff7ac2948f4,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,236932,0x7ff7ac294914,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,236943,0x7ff7ac294934,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,236953,0x7ff7ac294954,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,236976,0x7ff7ac294974,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,236987,0x7ff7ac294994,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,236997,0x7ff7ac2949b4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,237008,0x7ff7ac2949d4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,237019,0x7ff7ac2949f4,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,237030,0x7ff7ac294a14,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,237041,0x7ff7ac294a34,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,237051,0x7ff7ac294a54,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,237062,0x7ff7ac294a74,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,237073,0x7ff7ac294a94,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,237084,0x7ff7ac294b54,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,237095,0x7ff7ac294b74,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,237106,0x7ff7ac294bf4,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,237117,0x7ff7ac294c74,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,237129,0x7ff7ac294c94,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,237140,0x7ff7ac294d74,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,237153,0x7ff7ac294e74,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,237164,0x7ff7ac294e94,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,237175,0x7ff7ac294eb4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,237190,0x7ff7ac294ed4,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,237202,0x7ff7ac294ef4,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,237213,0x7ff7ac294f94,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,237224,0x7ff7ac294fb4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,237236,0x7ff7ac294ff4,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,237247,0x7ff7ac295034,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,237258,0x7ff7ac295074,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,237295,0x7ff7ac295af4,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,237305,0x7ff7ac295b14,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,237316,0x7ff7ac295b54,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,237326,0x7ff7ac295b74,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,237339,0x7ff7ac295c34,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,237352,0x7ff7ac295cf4,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,237362,0x7ff7ac295d74,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,237374,0x7ff7ac295db4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,237385,0x7ff7ac295e54,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,237395,0x7ff7ac295ed4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,237406,0x7ff7ac295ef4,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,237417,0x7ff7ac295f94,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,237428,0x7ff7ac295fb4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,237439,0x7ff7ac295fd4,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,237450,0x7ff7ac296254,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,237461,0x7ff7ac296334,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,237472,0x7ff7ac296374,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,237483,0x7ff7ac296454,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,237494,0x7ff7ac296554,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,237505,0x7ff7ac296594,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,237516,0x7ff7ac296674,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,237527,0x7ff7ac296694,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,237540,0x7ff7ac2966b4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,237551,0x7ff7ac296774,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,237562,0x7ff7ac296794,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,237572,0x7ff7ac2967b4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,237584,0x7ff7ac296874,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,237595,0x7ff7ac296894,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,237606,0x7ff7ac2968b4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,237627,0x7ff7ac296974,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,237638,0x7ff7ac296994,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,237648,0x7ff7ac2969b4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,237659,0x7ff7ac296a74,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,237668,0x7ff7ac296b14,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,237679,0x7ff7ac296bd4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,237690,0x7ff7ac296c94,12,CollatorConstructor
code-creation,Builtin,2,237700,0x7ff7ac296cb4,12,CollatorInternalCompare
code-creation,Builtin,2,237710,0x7ff7ac296cd4,12,CollatorPrototypeCompare
code-creation,Builtin,2,237720,0x7ff7ac296cf4,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,237732,0x7ff7ac296d14,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,237742,0x7ff7ac296d34,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,237752,0x7ff7ac296d54,12,DatePrototypeToLocaleString
code-creation,Builtin,2,237762,0x7ff7ac296d74,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,237772,0x7ff7ac296d94,12,DateTimeFormatConstructor
code-creation,Builtin,2,237782,0x7ff7ac296db4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,237792,0x7ff7ac296dd4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,237802,0x7ff7ac296df4,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,237813,0x7ff7ac296e14,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,237824,0x7ff7ac296e34,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,237834,0x7ff7ac296e54,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,237844,0x7ff7ac296e74,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,237864,0x7ff7ac296e94,12,DisplayNamesConstructor
code-creation,Builtin,2,237877,0x7ff7ac296eb4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,237889,0x7ff7ac296ed4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,237902,0x7ff7ac296ef4,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,237914,0x7ff7ac296f14,12,IntlGetCanonicalLocales
code-creation,Builtin,2,237925,0x7ff7ac296f34,12,ListFormatConstructor
code-creation,Builtin,2,237937,0x7ff7ac296f54,224,ListFormatPrototypeFormat
code-creation,Builtin,2,237948,0x7ff7ac297054,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,237971,0x7ff7ac297154,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,237983,0x7ff7ac297174,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,237994,0x7ff7ac297194,12,LocaleConstructor
code-creation,Builtin,2,238005,0x7ff7ac2971b4,12,LocalePrototypeBaseName
code-creation,Builtin,2,238016,0x7ff7ac2971d4,12,LocalePrototypeCalendar
code-creation,Builtin,2,238028,0x7ff7ac2971f4,12,LocalePrototypeCalendars
code-creation,Builtin,2,238039,0x7ff7ac297214,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,238050,0x7ff7ac297234,12,LocalePrototypeCollation
code-creation,Builtin,2,238061,0x7ff7ac297254,12,LocalePrototypeCollations
code-creation,Builtin,2,238077,0x7ff7ac297274,12,LocalePrototypeHourCycle
code-creation,Builtin,2,238095,0x7ff7ac297294,12,LocalePrototypeHourCycles
code-creation,Builtin,2,238113,0x7ff7ac2972b4,12,LocalePrototypeLanguage
code-creation,Builtin,2,238130,0x7ff7ac2972d4,12,LocalePrototypeMaximize
code-creation,Builtin,2,238148,0x7ff7ac2972f4,12,LocalePrototypeMinimize
code-creation,Builtin,2,238165,0x7ff7ac297314,12,LocalePrototypeNumeric
code-creation,Builtin,2,238207,0x7ff7ac297334,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,238223,0x7ff7ac297354,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,238240,0x7ff7ac297374,12,LocalePrototypeRegion
code-creation,Builtin,2,238256,0x7ff7ac297394,12,LocalePrototypeScript
code-creation,Builtin,2,238272,0x7ff7ac2973b4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,238288,0x7ff7ac2973d4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,238303,0x7ff7ac2973f4,12,LocalePrototypeToString
code-creation,Builtin,2,238320,0x7ff7ac297414,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,238336,0x7ff7ac297434,12,NumberFormatConstructor
code-creation,Builtin,2,238352,0x7ff7ac297454,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,238368,0x7ff7ac297474,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,238385,0x7ff7ac297494,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,238402,0x7ff7ac2974b4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,238418,0x7ff7ac2974d4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,238429,0x7ff7ac2974f4,12,PluralRulesConstructor
code-creation,Builtin,2,238439,0x7ff7ac297514,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,238449,0x7ff7ac297534,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,238460,0x7ff7ac297554,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,238470,0x7ff7ac297574,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,238481,0x7ff7ac297594,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,238492,0x7ff7ac2975b4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,238510,0x7ff7ac2975d4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,238520,0x7ff7ac2975f4,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,238530,0x7ff7ac297614,12,SegmenterConstructor
code-creation,Builtin,2,238543,0x7ff7ac297634,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,238553,0x7ff7ac297654,12,SegmenterPrototypeSegment
code-creation,Builtin,2,238563,0x7ff7ac297674,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,238572,0x7ff7ac297694,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,238582,0x7ff7ac2976b4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,238592,0x7ff7ac2976d4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,238604,0x7ff7ac2976f4,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,238615,0x7ff7ac297714,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,238625,0x7ff7ac297734,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,238635,0x7ff7ac297754,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,238645,0x7ff7ac297834,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,238656,0x7ff7ac297854,636,StringToLowerCaseIntl
code-creation,Builtin,2,238666,0x7ff7ac297ad4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,238676,0x7ff7ac297af4,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,238686,0x7ff7ac297b14,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,238696,0x7ff7ac297b34,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,238705,0x7ff7ac297b54,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,238715,0x7ff7ac297b74,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,238725,0x7ff7ac297b94,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,238761,0x7ff7ac297bb4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,238772,0x7ff7ac297bd4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,238782,0x7ff7ac297bf4,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,238792,0x7ff7ac297c14,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,238803,0x7ff7ac297c34,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,238813,0x7ff7ac297c54,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,238825,0x7ff7ac297c74,24,Wide
code-creation,BytecodeHandler,0,238835,0x7ff7ac297c94,24,ExtraWide
code-creation,BytecodeHandler,0,238845,0x7ff7ac297cb4,104,DebugBreakWide
code-creation,BytecodeHandler,0,238855,0x7ff7ac297d34,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,238866,0x7ff7ac297db4,164,DebugBreak0
code-creation,BytecodeHandler,0,238876,0x7ff7ac297e74,104,DebugBreak1
code-creation,BytecodeHandler,0,238886,0x7ff7ac297ef4,104,DebugBreak2
code-creation,BytecodeHandler,0,238897,0x7ff7ac297f74,104,DebugBreak3
code-creation,BytecodeHandler,0,238907,0x7ff7ac297ff4,104,DebugBreak4
code-creation,BytecodeHandler,0,238917,0x7ff7ac298074,104,DebugBreak5
code-creation,BytecodeHandler,0,238927,0x7ff7ac2980f4,104,DebugBreak6
code-creation,BytecodeHandler,0,238947,0x7ff7ac298174,32,Ldar
code-creation,BytecodeHandler,0,238957,0x7ff7ac2981b4,68,LdaZero
code-creation,BytecodeHandler,0,238974,0x7ff7ac298214,76,LdaSmi
code-creation,BytecodeHandler,0,238984,0x7ff7ac298274,68,LdaUndefined
code-creation,BytecodeHandler,0,238993,0x7ff7ac2982d4,68,LdaNull
code-creation,BytecodeHandler,0,239002,0x7ff7ac298334,68,LdaTheHole
code-creation,BytecodeHandler,0,239012,0x7ff7ac298394,20,LdaTrue
code-creation,BytecodeHandler,0,239021,0x7ff7ac2983b4,20,LdaFalse
code-creation,BytecodeHandler,0,239030,0x7ff7ac2983d4,76,LdaConstant
code-creation,BytecodeHandler,0,239040,0x7ff7ac298434,132,LdaContextSlot
code-creation,BytecodeHandler,0,239049,0x7ff7ac2984d4,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,239059,0x7ff7ac298574,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,239070,0x7ff7ac2985d4,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,239080,0x7ff7ac298634,32,Star
code-creation,BytecodeHandler,0,239089,0x7ff7ac298674,40,Mov
code-creation,BytecodeHandler,0,239099,0x7ff7ac2986b4,40,PushContext
code-creation,BytecodeHandler,0,239108,0x7ff7ac2986f4,36,PopContext
code-creation,BytecodeHandler,0,239117,0x7ff7ac298734,48,TestReferenceEqual
code-creation,BytecodeHandler,0,239128,0x7ff7ac298774,52,TestUndetectable
code-creation,BytecodeHandler,0,239138,0x7ff7ac2987b4,36,TestNull
code-creation,BytecodeHandler,0,239147,0x7ff7ac2987f4,36,TestUndefined
code-creation,BytecodeHandler,0,239156,0x7ff7ac298834,336,TestTypeOf
code-creation,BytecodeHandler,0,239166,0x7ff7ac298994,6036,LdaGlobal
code-creation,BytecodeHandler,0,239176,0x7ff7ac29a134,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,239186,0x7ff7ac29b2f4,168,StaGlobal
code-creation,BytecodeHandler,0,239195,0x7ff7ac29b3b4,160,StaContextSlot
code-creation,BytecodeHandler,0,239207,0x7ff7ac29b474,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,239217,0x7ff7ac29b4f4,124,LdaLookupSlot
code-creation,BytecodeHandler,0,239227,0x7ff7ac29b574,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,239237,0x7ff7ac29b674,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,239247,0x7ff7ac29c934,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,239258,0x7ff7ac29c9b4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,239295,0x7ff7ac29cab4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,239305,0x7ff7ac29dd54,220,StaLookupSlot
code-creation,BytecodeHandler,0,239314,0x7ff7ac29de34,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,239324,0x7ff7ac29f2b4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,239334,0x7ff7ac29f374,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,239343,0x7ff7ac29f454,160,LdaModuleVariable
code-creation,BytecodeHandler,0,239353,0x7ff7ac29f514,292,StaModuleVariable
code-creation,BytecodeHandler,0,239362,0x7ff7ac29f654,172,StaNamedProperty
code-creation,BytecodeHandler,0,239372,0x7ff7ac29f714,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,239381,0x7ff7ac29f7d4,164,StaKeyedProperty
code-creation,BytecodeHandler,0,239391,0x7ff7ac29f894,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,239400,0x7ff7ac29f954,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,239410,0x7ff7ac29fa34,160,CollectTypeProfile
code-creation,BytecodeHandler,0,239419,0x7ff7ac29faf4,1028,Add
code-creation,BytecodeHandler,0,239428,0x7ff7ac29ff14,1064,Sub
code-creation,BytecodeHandler,0,239437,0x7ff7ac2a0354,1024,Mul
code-creation,BytecodeHandler,0,239446,0x7ff7ac2a0774,988,Div
code-creation,BytecodeHandler,0,239455,0x7ff7ac2a0b54,912,Mod
code-creation,BytecodeHandler,0,239464,0x7ff7ac2a0ef4,964,Exp
code-creation,BytecodeHandler,0,239473,0x7ff7ac2a12d4,876,BitwiseOr
code-creation,BytecodeHandler,0,239482,0x7ff7ac2a1654,888,BitwiseXor
code-creation,BytecodeHandler,0,239491,0x7ff7ac2a19d4,888,BitwiseAnd
code-creation,BytecodeHandler,0,239500,0x7ff7ac2a1d54,900,ShiftLeft
code-creation,BytecodeHandler,0,239509,0x7ff7ac2a20f4,900,ShiftRight
code-creation,BytecodeHandler,0,239518,0x7ff7ac2a2494,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,239528,0x7ff7ac2a2894,960,AddSmi
code-creation,BytecodeHandler,0,239536,0x7ff7ac2a2c74,1000,SubSmi
code-creation,BytecodeHandler,0,239545,0x7ff7ac2a3074,916,MulSmi
code-creation,BytecodeHandler,0,239554,0x7ff7ac2a3414,920,DivSmi
code-creation,BytecodeHandler,0,239563,0x7ff7ac2a37b4,816,ModSmi
code-creation,BytecodeHandler,0,239572,0x7ff7ac2a3af4,872,ExpSmi
code-creation,BytecodeHandler,0,239589,0x7ff7ac2a3e74,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,239599,0x7ff7ac2a4074,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,239608,0x7ff7ac2a4274,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,239617,0x7ff7ac2a4474,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,239626,0x7ff7ac2a4674,488,ShiftRightSmi
code-creation,BytecodeHandler,0,239635,0x7ff7ac2a4874,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,239644,0x7ff7ac2a4b14,656,Inc
code-creation,BytecodeHandler,0,239652,0x7ff7ac2a4db4,656,Dec
code-creation,BytecodeHandler,0,239661,0x7ff7ac2a5054,640,Negate
code-creation,BytecodeHandler,0,239669,0x7ff7ac2a52f4,480,BitwiseNot
code-creation,BytecodeHandler,0,239678,0x7ff7ac2a54f4,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,239687,0x7ff7ac2a5574,36,LogicalNot
code-creation,BytecodeHandler,0,239695,0x7ff7ac2a55b4,208,TypeOf
code-creation,BytecodeHandler,0,239704,0x7ff7ac2a5694,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,239713,0x7ff7ac2a5714,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,239722,0x7ff7ac2a5794,40,GetSuperConstructor
code-creation,BytecodeHandler,0,239731,0x7ff7ac2a57d4,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,239740,0x7ff7ac2a5c54,1132,CallProperty
code-creation,BytecodeHandler,0,239749,0x7ff7ac2a60d4,1012,CallProperty0
code-creation,BytecodeHandler,0,239758,0x7ff7ac2a64d4,1028,CallProperty1
code-creation,BytecodeHandler,0,239768,0x7ff7ac2a68f4,1040,CallProperty2
code-creation,BytecodeHandler,0,239778,0x7ff7ac2a6d14,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,239787,0x7ff7ac2a7114,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,239796,0x7ff7ac2a7534,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,239805,0x7ff7ac2a7934,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,239841,0x7ff7ac2a7d54,1132,CallWithSpread
code-creation,BytecodeHandler,0,239851,0x7ff7ac2a81d4,124,CallRuntime
code-creation,BytecodeHandler,0,239868,0x7ff7ac2a8254,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,239877,0x7ff7ac2a82f4,80,CallJSRuntime
code-creation,BytecodeHandler,0,239887,0x7ff7ac2a8354,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,239897,0x7ff7ac2a8834,1020,Construct
code-creation,BytecodeHandler,0,239907,0x7ff7ac2a8c34,536,ConstructWithSpread
code-creation,BytecodeHandler,0,239916,0x7ff7ac2a8e54,1936,TestEqual
code-creation,BytecodeHandler,0,239926,0x7ff7ac2a95f4,1064,TestEqualStrict
code-creation,BytecodeHandler,0,239935,0x7ff7ac2a9a34,1624,TestLessThan
code-creation,BytecodeHandler,0,239945,0x7ff7ac2aa094,1624,TestGreaterThan
code-creation,BytecodeHandler,0,239955,0x7ff7ac2aa6f4,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,239965,0x7ff7ac2aad54,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,239975,0x7ff7ac2ab3b4,860,TestInstanceOf
code-creation,BytecodeHandler,0,239985,0x7ff7ac2ab714,156,TestIn
code-creation,BytecodeHandler,0,239995,0x7ff7ac2ab7b4,112,ToName
code-creation,BytecodeHandler,0,240004,0x7ff7ac2ab834,212,ToNumber
code-creation,BytecodeHandler,0,240013,0x7ff7ac2ab914,232,ToNumeric
code-creation,BytecodeHandler,0,240023,0x7ff7ac2aba14,112,ToObject
code-creation,BytecodeHandler,0,240032,0x7ff7ac2aba94,116,ToString
code-creation,BytecodeHandler,0,240069,0x7ff7ac2abb14,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,240079,0x7ff7ac2abcb4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,240088,0x7ff7ac2ac274,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,240098,0x7ff7ac2ac2d4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,240107,0x7ff7ac2ac5f4,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,240117,0x7ff7ac2ace54,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,240126,0x7ff7ac2acf54,168,CloneObject
code-creation,BytecodeHandler,0,240136,0x7ff7ac2ad014,212,GetTemplateObject
code-creation,BytecodeHandler,0,240145,0x7ff7ac2ad0f4,328,CreateClosure
code-creation,BytecodeHandler,0,240154,0x7ff7ac2ad254,120,CreateBlockContext
code-creation,BytecodeHandler,0,240164,0x7ff7ac2ad2d4,132,CreateCatchContext
code-creation,BytecodeHandler,0,240173,0x7ff7ac2ad374,256,CreateFunctionContext
code-creation,BytecodeHandler,0,240183,0x7ff7ac2ad494,256,CreateEvalContext
code-creation,BytecodeHandler,0,240192,0x7ff7ac2ad5b4,132,CreateWithContext
code-creation,BytecodeHandler,0,240202,0x7ff7ac2ad654,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,240212,0x7ff7ac2adc94,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,240222,0x7ff7ac2adef4,632,CreateRestParameter
code-creation,BytecodeHandler,0,240231,0x7ff7ac2ae174,424,JumpLoop
code-creation,BytecodeHandler,0,240240,0x7ff7ac2ae334,44,Jump
code-creation,BytecodeHandler,0,240249,0x7ff7ac2ae374,56,JumpConstant
code-creation,BytecodeHandler,0,240258,0x7ff7ac2ae3b4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,240267,0x7ff7ac2ae414,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,240277,0x7ff7ac2ae474,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,240286,0x7ff7ac2ae4d4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,240296,0x7ff7ac2ae534,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,240306,0x7ff7ac2ae594,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,240315,0x7ff7ac2ae5f4,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,240325,0x7ff7ac2ae654,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,240334,0x7ff7ac2ae6b4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,240346,0x7ff7ac2ae754,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,240356,0x7ff7ac2ae7f4,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,240366,0x7ff7ac2ae894,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,240375,0x7ff7ac2ae934,64,JumpIfTrue
code-creation,BytecodeHandler,0,240384,0x7ff7ac2ae994,64,JumpIfFalse
code-creation,BytecodeHandler,0,240393,0x7ff7ac2ae9f4,64,JumpIfNull
code-creation,BytecodeHandler,0,240402,0x7ff7ac2aea54,64,JumpIfNotNull
code-creation,BytecodeHandler,0,240412,0x7ff7ac2aeab4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,240421,0x7ff7ac2aeb14,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,240430,0x7ff7ac2aeb74,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,240440,0x7ff7ac2aebd4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,240456,0x7ff7ac2aec34,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,240466,0x7ff7ac2aecb4,464,ForInEnumerate
code-creation,BytecodeHandler,0,240474,0x7ff7ac2aee94,252,ForInPrepare
code-creation,BytecodeHandler,0,240483,0x7ff7ac2aef94,60,ForInContinue
code-creation,BytecodeHandler,0,240492,0x7ff7ac2aefd4,256,ForInNext
code-creation,BytecodeHandler,0,240501,0x7ff7ac2af0f4,48,ForInStep
code-creation,BytecodeHandler,0,240510,0x7ff7ac2af134,36,SetPendingMessage
code-creation,BytecodeHandler,0,240519,0x7ff7ac2af174,116,Throw
code-creation,BytecodeHandler,0,240529,0x7ff7ac2af1f4,116,ReThrow
code-creation,BytecodeHandler,0,240538,0x7ff7ac2af274,112,Return
code-creation,BytecodeHandler,0,240547,0x7ff7ac2af2f4,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,240556,0x7ff7ac2af3d4,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,240566,0x7ff7ac2af474,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,240576,0x7ff7ac2af514,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,240586,0x7ff7ac2af5b4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,240595,0x7ff7ac2af634,512,SuspendGenerator
code-creation,BytecodeHandler,0,240604,0x7ff7ac2af854,128,ResumeGenerator
code-creation,BytecodeHandler,0,240613,0x7ff7ac2af8f4,152,GetIterator
code-creation,BytecodeHandler,0,240625,0x7ff7ac2af994,116,Debugger
code-creation,BytecodeHandler,0,240634,0x7ff7ac2afa14,124,IncBlockCounter
code-creation,BytecodeHandler,0,240643,0x7ff7ac2afa94,56,Abort
code-creation,BytecodeHandler,0,240652,0x7ff7ac2afad4,32,Star0
code-creation,BytecodeHandler,0,240661,0x7ff7ac2afb14,60,Illegal
code-creation,BytecodeHandler,0,240681,0x7ff7ac2afb54,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,240691,0x7ff7ac2afbd4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,240701,0x7ff7ac2afc54,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,240710,0x7ff7ac2afcd4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,240719,0x7ff7ac2afd54,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,240728,0x7ff7ac2afdd4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,240737,0x7ff7ac2afe54,32,Ldar.Wide
code-creation,BytecodeHandler,0,240755,0x7ff7ac2afe94,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,240764,0x7ff7ac2afed4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,240774,0x7ff7ac2aff14,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,240783,0x7ff7ac2aff74,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,240793,0x7ff7ac2affd4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,240803,0x7ff7ac2b0014,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,240820,0x7ff7ac2b0054,32,Star.Wide
code-creation,BytecodeHandler,0,240840,0x7ff7ac2b0094,40,Mov.Wide
code-creation,BytecodeHandler,0,240850,0x7ff7ac2b00d4,40,PushContext.Wide
code-creation,BytecodeHandler,0,240860,0x7ff7ac2b0114,36,PopContext.Wide
code-creation,BytecodeHandler,0,240871,0x7ff7ac2b0154,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,240881,0x7ff7ac2b0194,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,240892,0x7ff7ac2b13d4,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,240902,0x7ff7ac2b25d4,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,240914,0x7ff7ac2b2694,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,240926,0x7ff7ac2b2754,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,240937,0x7ff7ac2b27d4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,240948,0x7ff7ac2b2874,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,240959,0x7ff7ac2b2974,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,240970,0x7ff7ac2b3c74,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,240981,0x7ff7ac2b3d14,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,240993,0x7ff7ac2b3e14,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,241004,0x7ff7ac2b50f4,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,241015,0x7ff7ac2b51d4,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,241025,0x7ff7ac2b6654,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,241036,0x7ff7ac2b6714,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,241047,0x7ff7ac2b67d4,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,241057,0x7ff7ac2b6894,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,241068,0x7ff7ac2b69d4,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,241079,0x7ff7ac2b6a94,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,241089,0x7ff7ac2b6b54,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,241100,0x7ff7ac2b6c14,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,241111,0x7ff7ac2b6cd4,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,241122,0x7ff7ac2b6db4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,241133,0x7ff7ac2b6e74,984,Add.Wide
code-creation,BytecodeHandler,0,241142,0x7ff7ac2b7254,1020,Sub.Wide
code-creation,BytecodeHandler,0,241152,0x7ff7ac2b7654,972,Mul.Wide
code-creation,BytecodeHandler,0,241162,0x7ff7ac2b7a34,988,Div.Wide
code-creation,BytecodeHandler,0,241172,0x7ff7ac2b7e14,916,Mod.Wide
code-creation,BytecodeHandler,0,241182,0x7ff7ac2b81b4,988,Exp.Wide
code-creation,BytecodeHandler,0,241191,0x7ff7ac2b8594,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,241202,0x7ff7ac2b8934,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,241212,0x7ff7ac2b8cd4,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,241222,0x7ff7ac2b9074,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,241232,0x7ff7ac2b9434,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,241242,0x7ff7ac2b97f4,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,241253,0x7ff7ac2b9c14,916,AddSmi.Wide
code-creation,BytecodeHandler,0,241263,0x7ff7ac2b9fb4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,241273,0x7ff7ac2ba394,912,MulSmi.Wide
code-creation,BytecodeHandler,0,241283,0x7ff7ac2ba734,920,DivSmi.Wide
code-creation,BytecodeHandler,0,241320,0x7ff7ac2baad4,816,ModSmi.Wide
code-creation,BytecodeHandler,0,241329,0x7ff7ac2bae14,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,241339,0x7ff7ac2bb194,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,241348,0x7ff7ac2bb394,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,241358,0x7ff7ac2bb594,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,241368,0x7ff7ac2bb794,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,241377,0x7ff7ac2bb994,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,241387,0x7ff7ac2bbb94,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,241397,0x7ff7ac2bbe34,616,Inc.Wide
code-creation,BytecodeHandler,0,241406,0x7ff7ac2bc0b4,616,Dec.Wide
code-creation,BytecodeHandler,0,241415,0x7ff7ac2bc334,648,Negate.Wide
code-creation,BytecodeHandler,0,241424,0x7ff7ac2bc5d4,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,241433,0x7ff7ac2bc7d4,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,241443,0x7ff7ac2bc854,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,241453,0x7ff7ac2bc8d4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,241463,0x7ff7ac2bc914,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,241472,0x7ff7ac2bcd94,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,241504,0x7ff7ac2bd214,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,241515,0x7ff7ac2bd614,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,241525,0x7ff7ac2bda34,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,241534,0x7ff7ac2bde54,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,241544,0x7ff7ac2be254,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,241554,0x7ff7ac2be674,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,241564,0x7ff7ac2bea94,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,241574,0x7ff7ac2beeb4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,241584,0x7ff7ac2bf334,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,241594,0x7ff7ac2bf3d4,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,241603,0x7ff7ac2bf494,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,241613,0x7ff7ac2bf4f4,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,241625,0x7ff7ac2bf9d4,968,Construct.Wide
code-creation,BytecodeHandler,0,241635,0x7ff7ac2bfdb4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,241645,0x7ff7ac2bff94,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,241662,0x7ff7ac2c0754,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,241672,0x7ff7ac2c0b94,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,241681,0x7ff7ac2c1194,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,241691,0x7ff7ac2c1794,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,241708,0x7ff7ac2c1d94,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,241718,0x7ff7ac2c2394,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,241793,0x7ff7ac2c2714,160,TestIn.Wide
code-creation,BytecodeHandler,0,241802,0x7ff7ac2c27d4,116,ToName.Wide
code-creation,BytecodeHandler,0,241811,0x7ff7ac2c2854,216,ToNumber.Wide
code-creation,BytecodeHandler,0,241820,0x7ff7ac2c2934,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,241829,0x7ff7ac2c2a34,116,ToObject.Wide
code-creation,BytecodeHandler,0,241838,0x7ff7ac2c2ab4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,241848,0x7ff7ac2c2c54,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,241857,0x7ff7ac2c31d4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,241868,0x7ff7ac2c34f4,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,241878,0x7ff7ac2c3cf4,172,CloneObject.Wide
code-creation,BytecodeHandler,0,241891,0x7ff7ac2c3db4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,241903,0x7ff7ac2c3e74,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,241916,0x7ff7ac2c3fd4,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,241937,0x7ff7ac2c4054,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,241952,0x7ff7ac2c40f4,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,241967,0x7ff7ac2c4214,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,241978,0x7ff7ac2c4334,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,241987,0x7ff7ac2c43d4,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,241997,0x7ff7ac2c4594,44,Jump.Wide
code-creation,BytecodeHandler,0,242006,0x7ff7ac2c45d4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,242015,0x7ff7ac2c4614,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,242025,0x7ff7ac2c4674,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,242035,0x7ff7ac2c46d4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,242045,0x7ff7ac2c4734,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,242055,0x7ff7ac2c4794,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,242066,0x7ff7ac2c47f4,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,242124,0x7ff7ac2c4854,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,242144,0x7ff7ac2c48b4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,242168,0x7ff7ac2c4914,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,242187,0x7ff7ac2c49b4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,242209,0x7ff7ac2c4a54,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,242231,0x7ff7ac2c4af4,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,242249,0x7ff7ac2c4b94,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,242266,0x7ff7ac2c4bf4,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,242283,0x7ff7ac2c4c54,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,242301,0x7ff7ac2c4cb4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,242318,0x7ff7ac2c4d14,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,242338,0x7ff7ac2c4d74,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,242356,0x7ff7ac2c4dd4,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,242375,0x7ff7ac2c4e34,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,242390,0x7ff7ac2c4e94,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,242403,0x7ff7ac2c4f14,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,242415,0x7ff7ac2c50f4,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,242427,0x7ff7ac2c51f4,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,242439,0x7ff7ac2c5234,260,ForInNext.Wide
code-creation,BytecodeHandler,0,242451,0x7ff7ac2c5354,48,ForInStep.Wide
code-creation,BytecodeHandler,0,242474,0x7ff7ac2c5394,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,242497,0x7ff7ac2c5434,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,242511,0x7ff7ac2c54f4,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,242524,0x7ff7ac2c5574,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,242543,0x7ff7ac2c5794,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,242555,0x7ff7ac2c5834,156,GetIterator.Wide
code-creation,BytecodeHandler,0,242567,0x7ff7ac2c58d4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,242579,0x7ff7ac2c5974,56,Abort.Wide
code-creation,BytecodeHandler,0,242591,0x7ff7ac2c59b4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,242603,0x7ff7ac2c5a34,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,242616,0x7ff7ac2c5ab4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,242628,0x7ff7ac2c5b34,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,242640,0x7ff7ac2c5bb4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,242652,0x7ff7ac2c5c34,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,242664,0x7ff7ac2c5cb4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,242677,0x7ff7ac2c5cf4,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,242689,0x7ff7ac2c5d14,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,242701,0x7ff7ac2c5d54,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242751,0x7ff7ac2c5db4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242762,0x7ff7ac2c5e14,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242774,0x7ff7ac2c5e54,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242786,0x7ff7ac2c5e94,28,Star.ExtraWide
code-creation,BytecodeHandler,0,242796,0x7ff7ac2c5eb4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,242807,0x7ff7ac2c5ef4,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,242818,0x7ff7ac2c5f34,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,242829,0x7ff7ac2c5f74,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,242841,0x7ff7ac2c5fb4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,242852,0x7ff7ac2c71f4,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,242864,0x7ff7ac2c83f4,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,242875,0x7ff7ac2c84b4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242887,0x7ff7ac2c8554,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242898,0x7ff7ac2c85d4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,242910,0x7ff7ac2c8674,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,242921,0x7ff7ac2c8774,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,242933,0x7ff7ac2c9a74,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,242955,0x7ff7ac2c9b14,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,242968,0x7ff7ac2c9c14,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,242979,0x7ff7ac2caef4,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,242990,0x7ff7ac2cafd4,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,243001,0x7ff7ac2cc434,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,243011,0x7ff7ac2cc4f4,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,243022,0x7ff7ac2cc594,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,243032,0x7ff7ac2cc654,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,243042,0x7ff7ac2cc794,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,243052,0x7ff7ac2cc854,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,243063,0x7ff7ac2cc914,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,243073,0x7ff7ac2cc9d4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,243083,0x7ff7ac2cca94,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,243094,0x7ff7ac2ccb74,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,243105,0x7ff7ac2ccc34,980,Add.ExtraWide
code-creation,BytecodeHandler,0,243114,0x7ff7ac2cd014,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,243124,0x7ff7ac2cd414,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,243134,0x7ff7ac2cd7f4,988,Div.ExtraWide
code-creation,BytecodeHandler,0,243143,0x7ff7ac2cdbd4,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,243153,0x7ff7ac2cdf74,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,243163,0x7ff7ac2ce354,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,243173,0x7ff7ac2ce6f4,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,243183,0x7ff7ac2cea94,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,243193,0x7ff7ac2cee34,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,243203,0x7ff7ac2cf1f4,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,243213,0x7ff7ac2cf5b4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,243224,0x7ff7ac2cf9d4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,243234,0x7ff7ac2cfd74,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,243244,0x7ff7ac2d0154,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,243254,0x7ff7ac2d04f4,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,243264,0x7ff7ac2d0894,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,243273,0x7ff7ac2d0bd4,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,243310,0x7ff7ac2d0f54,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,243319,0x7ff7ac2d1154,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,243329,0x7ff7ac2d1354,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,243339,0x7ff7ac2d1554,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,243349,0x7ff7ac2d1754,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,243359,0x7ff7ac2d1954,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,243369,0x7ff7ac2d1bf4,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,243378,0x7ff7ac2d1e74,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,243387,0x7ff7ac2d20f4,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,243396,0x7ff7ac2d2394,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,243406,0x7ff7ac2d2594,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,243416,0x7ff7ac2d2614,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,243426,0x7ff7ac2d2694,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,243436,0x7ff7ac2d26d4,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,243446,0x7ff7ac2d2b54,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,243456,0x7ff7ac2d2fd4,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,243465,0x7ff7ac2d33d4,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,243475,0x7ff7ac2d37f4,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,243486,0x7ff7ac2d3c14,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,243498,0x7ff7ac2d4014,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,243508,0x7ff7ac2d4434,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,243518,0x7ff7ac2d4834,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,243529,0x7ff7ac2d4c54,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,243539,0x7ff7ac2d50d4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,243548,0x7ff7ac2d5174,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,243558,0x7ff7ac2d5234,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,243568,0x7ff7ac2d5294,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,243578,0x7ff7ac2d5774,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,243588,0x7ff7ac2d5b54,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,243598,0x7ff7ac2d5d34,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,243635,0x7ff7ac2d64f4,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,243644,0x7ff7ac2d6934,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,243655,0x7ff7ac2d6f34,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,243672,0x7ff7ac2d7534,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,243683,0x7ff7ac2d7b34,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,243693,0x7ff7ac2d8134,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,243702,0x7ff7ac2d84b4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,243711,0x7ff7ac2d8554,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,243721,0x7ff7ac2d85d4,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,243730,0x7ff7ac2d86b4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,243739,0x7ff7ac2d87b4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,243748,0x7ff7ac2d8834,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,243759,0x7ff7ac2d89d4,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,243781,0x7ff7ac2d8f54,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,243793,0x7ff7ac2d9274,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,243803,0x7ff7ac2d9a74,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,243820,0x7ff7ac2d9b34,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,243829,0x7ff7ac2d9bf4,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,243839,0x7ff7ac2d9d54,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,243848,0x7ff7ac2d9dd4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,243858,0x7ff7ac2d9e74,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,243868,0x7ff7ac2d9f94,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,243903,0x7ff7ac2da0b4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,243915,0x7ff7ac2da154,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,243926,0x7ff7ac2da314,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,243937,0x7ff7ac2da354,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,243949,0x7ff7ac2da394,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,243961,0x7ff7ac2da3f4,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,243973,0x7ff7ac2da454,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,243986,0x7ff7ac2da4b4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,243998,0x7ff7ac2da514,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,244011,0x7ff7ac2da574,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,244023,0x7ff7ac2da5d4,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,244035,0x7ff7ac2da634,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,244047,0x7ff7ac2da694,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,244072,0x7ff7ac2da734,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,244144,0x7ff7ac2da7d4,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,244160,0x7ff7ac2da874,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,244172,0x7ff7ac2da914,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,244184,0x7ff7ac2da974,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,244196,0x7ff7ac2da9d4,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,244207,0x7ff7ac2daa34,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,244219,0x7ff7ac2daa94,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,244231,0x7ff7ac2daaf4,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,244243,0x7ff7ac2dab54,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,244279,0x7ff7ac2dabb4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,244290,0x7ff7ac2dac14,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,244301,0x7ff7ac2dac94,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,244312,0x7ff7ac2dae74,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,244323,0x7ff7ac2daf74,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,244333,0x7ff7ac2dafb4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,244344,0x7ff7ac2db0d4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,244354,0x7ff7ac2db114,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,244366,0x7ff7ac2db1b4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,244377,0x7ff7ac2db274,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,244389,0x7ff7ac2db2f4,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,244399,0x7ff7ac2db514,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,244410,0x7ff7ac2db594,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,244420,0x7ff7ac2db634,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,244431,0x7ff7ac2db6b4,56,Abort.ExtraWide
new,MemoryChunk,0x348f9980000,262144
new,MemoryChunk,0x2821ae40000,262144
new,MemoryChunk,0x20209600000,262144
tick,0x7ff7abd3ba31,248940,0,0x0,5
new,MemoryChunk,0xff01780000,262144
code-creation,Eval,10,252491,0xff017bedfe,5, node:internal/main/run_main_module:1:1,0xff017becb8,~
script-source,94,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0xff017bedfe,94,0,649,C0O0C4O649,,
code-creation,Function,10,252605,0xff017beea6,58, node:internal/main/run_main_module:1:1,0xff017bed78,~
code-source-info,0xff017beea6,94,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,253059,0xff017bf0e6,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x1ee2d48fd30,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0xff017bf0e6,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,254182,0xff017bfdf6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x1ee2d48fc60,~
code-source-info,0xff017bfdf6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
new,MemoryChunk,0x281ca100000,262144
code-creation,Eval,10,254860,0x281ca101dd6,5, node:internal/bootstrap/pre_execution:1:1,0x281ca101a40,~
script-source,95,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {}\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x281ca101dd6,95,0,16208,C0O0C4O16208,,
code-creation,Function,10,256218,0x281ca1028d6,426, node:internal/bootstrap/pre_execution:1:1,0x281ca101d50,~
code-source-info,0x281ca1028d6,95,0,16208,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O15793C324O15815C330O15838C336O15861C342O15885C348O15903C354O15922C360O15953C366O15980C372O16004C378O16035C384O16068C390O16091C396O16119C402O16143C408O16164C414O16188C420O15808C425O16207,,
code-creation,Eval,10,256668,0x281ca104216,5, node:internal/options:1:1,0x281ca104040,~
script-source,96,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x281ca104216,96,0,1892,C0O0C4O1892,,
code-creation,Function,10,256897,0x281ca1045e6,154, node:internal/options:1:1,0x281ca104190,~
code-source-info,0x281ca1045e6,96,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
code-creation,LazyCompile,10,257096,0x281ca104af6,69,internalBinding node:internal/bootstrap/loaders:164:45,0x1ee2d48f7b0,~
code-source-info,0x281ca104af6,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,257483,0x281ca105346,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0x281ca101e08,~
code-source-info,0x281ca105346,95,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,257766,0x281ca106526,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0xf81370bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x281ca106526,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,260511,0x281ca108d5e,397,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0x281ca101e58,~
code-source-info,0x281ca108d5e,95,2489,4095,C0O2524C6O2524C11O2571C19O2571C24O2605C30O2605C35O2643C40O2644C44O2672C55O2693C63O2782C69O2786C76O2672C81O2800C84O2808C94O2826C98O2816C102O2841C109O2868C116O2872C123O2887C129O2921C136O2925C143O2887C150O3005C156O3005C164O3040C167O3048C175O3063C183O3079C190O3083C194O3063C199O3056C209O3257C218O3257C223O3304C232O3304C237O3358C246O3358C251O3419C260O3419C265O3478C274O3478C279O3539C288O3539C293O3604C302O3604C307O3670C316O3670C321O3742C330O3742C335O3813C344O3813C349O3874C358O3874C363O3945C374O3945C379O4016C390O4016C396O4094,,
code-creation,LazyCompile,10,260796,0x281ca1091f6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0xf813718538,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x281ca1091f6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,262070,0x281ca10a2b6,832,resolve node:path:158:10,0x2e58b38d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x281ca10a2b
tick,0x7ff7ab7406c8,265940,0,0x0,3,0x7ff7abd74090,0x281ca108e20,0x281ca10535b,0xff017beeb5
code-creation,LazyCompile,10,266050,0x281ca10d8ce,30,validateString node:internal/validators:118:24,0x1ee2d4bc930,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x281ca10d8ce,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,266724,0x281ca10e26e,17,isPathSeparator node:path:52:25,0x2e58b38cf90,~
code-source-info,0x281ca10e26e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,266826,0x281ca10e36e,35,isWindowsDeviceRoot node:path:60:29,0x2e58b38d408,~
code-source-info,0x281ca10e36e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,266904,0x281ca10e48e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x1ee2d4be008,~
script-source,93,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x281ca10e48e,93,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,267336,0x281ca10eaf6,442,normalizeString node:path:66:25,0x2e58b38d458,~
code-source-info,0x281ca10eaf
code-creation,LazyCompile,10,267559,0x281ca10f216,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:120:33,0x281ca101ea8,~
code-source-info,0x281ca10f216,95,4131,4366,C16O4184C21O4184C26O4211C28O4229C36O4259C43O4325C49O4344C56O4229C62O4365,,
code-creation,LazyCompile,10,267636,0x281ca10f396,82,getOptionValue node:internal/options:39:24,0x281ca104338,~
code-source-info,0x281ca10f396,96,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,267708,0x281ca10f746,33,getCLIOptionsFromBinding node:internal/options:18:34,0x281ca104248,~
code-source-info,0x281ca10f746,96,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,268105,0x281ca10f8c6,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:212:33,0x281ca102150,~
code-source-info,0x281ca10f8c6,95,6691,6922,C0O6734C6O6734C11O6707C16O6807C22O6807C27O6778C32O6850C35O6875C40O6850C45O6921,,
code-creation,LazyCompile,10,268184,0x281ca10fa5e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0xf813718c58,~
code-source-info,0x281ca10fa5e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,268255,0x281ca10fc0e,42,setupPerfHooks node:internal/bootstrap/pre_execution:218:24,0x281ca1021a0,~
code-source-info,0x281ca10fc0e,95,6949,7072,C0O6957C6O6957C11O6993C16O6994C20O7018C26O7018C31O7048C36O7049C41O7071,,
code-creation,LazyCompile,10,268341,0x281ca10fd8e,42,refreshTimeOrigin node:internal/perf/performance:178:27,0xebc01eb770,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x281ca10fd8e,73,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,268690,0x281ca11049e,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x2e58b3a2148,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x281ca11049e,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,268798,0x281ca11070e,62,setupInspectorHooks node:internal/bootstrap/pre_execution:223:29,0x281ca1021f0,~
code-source-info,0x281ca11070e,95,7104,7670,C0O7453C6O7457C11O7482C17O7551C23O7551C28O7519C33O7534C38O7598C44O7598C49O7626C54O7627C61O7669,,
code-creation,Eval,10,268976,0x281ca110abe,5, node:internal/inspector_async_hook:1:1,0x281ca110908,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x281ca110abe,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,269141,0x281ca110cde,79, node:internal/inspector_async_hook:1:1,0x281ca110a38,~
code-source-info,0x281ca110cde,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,269303,0x281ca111356,69,setupWarningHandler node:internal/bootstrap/pre_execution:132:29,0x281ca101ef8,~
code-source-info,0x281ca111356,95,4398,4603,C0O4436C6O4436C11O4419C16O4476C24O4480C33O4525C38O4529C45O4546C50O4562C53O4570C61O4570C68O4602,,
code-creation,LazyCompile,10,269473,0x281ca1114b6,20,addListener node:events:616:58,0xd800a6b648,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {}\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {}\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x281ca1114b6,23,18743,18817,C0O18765C14O18772C19O18814,,
code-creation,LazyCompile,10,271723,0x281ca113b26,387,_addListener node:events:548:22,0xd800a6b5a8,~
code-source-info,0x281ca113b
code-creation,LazyCompile,10,271873,0x281ca113e5e,15,checkListener node:events:257:23,0xd800a6af08,~
code-source-info,0x281ca113e5e,23,7863,7921,C0O7879C8O7879C14O7920,,
code-creation,LazyCompile,10,271926,0x281ca113f4e,30, node:internal/validators:236:42,0x1ee2d4bcdc8,~
code-source-info,0x281ca113f4e,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,272105,0x281ca1141ce,380,emit node:events:470:44,0xd800a6b4e8,~
code-source-info,0x281ca1141ce,23,14146,16436,C0O14146C8O14181C10O14187C14O14226C19O14238C21O14271C27O14293C29O14292C34O14335C41O14340C51O14335C56O14370C60O14399C68O14431C72O14450C73O14463C74O14525C78O14549C80O14567C86O14574C91O14586C92O14595C96O14605C98O14623C100O14612C108O14670C110O14683C120O14728C126O14738C132O14683C137O14754C145O14779C157O14829C174O14829C186O14754C197O15110C199O15110C200O15165C205O15198C211O15214C219O15212C220O15249C225O15350C232O15350C238O15395C240O15407C244O15418C246O15418C247O15482C249O15488C253O15501C255O15533C256O15546C257O15552C263O15617C268O15617C275O15776C281O15830C296O15830C303O15910C308O15941C311O15941C316O15980C318O15985C320O15985C325O16021C327O16030C332O16034C337O16034C344O16303C350O16359C365O16359C370O15994C375O15967C378O16421C379O16433,,
code-creation,LazyCompile,10,272283,0x281ca114576,172,startListeningIfSignal node:internal/process/signal:22:32,0x30b03abf780,~
script-source,92,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x281ca114576,92,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,272457,0x281ca114936,19,isSignal node:internal/process/signal:17:18,0x30b03abf5c8,~
code-source-info,0x281ca114936,92,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,272522,0x281ca114ad6,75,setupDebugEnv node:internal/bootstrap/pre_execution:184:23,0x281ca102060,~
code-source-info,0x281ca114ad6,95,5913,6128,C0O5921C6O5921C11O5954C19O5982C24O5986C29O5955C34O6002C42O6006C48O6051C54O6051C59O6088C64O6101C69O6102C74O6127,,
code-creation,LazyCompile,10,272632,0x281ca114e6e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0xd800a61680,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x281ca114e6e,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x21256700000,262144
code-creation,Function,11,273054,0x21256703060,572,getOptionValue node:internal/options:39:24,0x281ca104338,^
code-source-info,0x21256703060,96,940,1190,,,
code-creation,Function,11,273100,0x21256703300,216,isPathSeparator node:path:52:25,0x2e58b38cf90,^
code-source-info,0x21256703300,41,1794,1876,,,
code-creation,Function,11,273169,0x21256703440,3076,normalizeString node:path:66:25,0x2e58b38d458,^
code-source-info,0x21256703440,41,2226,4212,,,
code-creation,LazyCompile,10,273245,0x281ca1157c6,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:163:40,0x281ca101f98,~
code-source-info,0x281ca1157c6,95,5456,5650,C0O5464C8O5469C14O5510C15O5517C16O5553C22O5553C27O5534C32O5605C38O5639C43O5639C48O5649,,
code-creation,LazyCompile,10,273330,0x281ca115a36,62,initializeReport node:internal/bootstrap/pre_execution:173:26,0x281ca101fe8,~
code-source-info,0x281ca115a36,95,5679,5887,C0O5679C8O5706C16O5706C21O5695C27O5745C42O5766C47O5841C55O5745C61O5886,,
code-creation,Eval,10,273535,0x281ca115fb6,5, node:internal/process/report:1:1,0x281ca115db0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined && typeof file !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\x0d\n    } else if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x281ca115fb6,98,0,2743,C0O0C4O2743,,
code-creation,Function,10,273755,0x281ca116ace,315, node:internal/process/report:1:1,0x281ca115f30,~
code-source-info,0x281ca116ace,98,0,2743,C0O0C51O70C54O70C59O96C64O26C70O51C76O199C79O199C84O116C90O136C96O155C102O178C108O243C111O243C115O243C117O282C123O327C128O332C136O786C290O2688C297O2710C303O2731C309O2703C314O2742,,
code-creation,LazyCompile,10,274019,0x281ca1187ae,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:192:40,0x281ca1020b0,~
code-source-info,0x281ca1187ae,95,6232,6332,C0O6269C6O6269C11O6248C16O6310C20O6331,,
code-creation,LazyCompile,10,274105,0x281ca1188f6,57,addSignalHandler node:internal/process/report:97:26,0x281ca115fe8,~
code-source-info,0x281ca1188f6,98,2318,2471,C0O2329C5O2336C10O2336C16O2367C22O2403C27O2412C32O2412C38O2432C41O2440C49O2440C56O2470,,
code-creation,LazyCompile,10,274176,0x281ca118eb6,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:198:46,0x281ca102100,~
code-source-info,0x281ca118eb6,95,6381,6655,C0O6381C8O6404C18O6404C23O6450C25O6468C26O6475C27O6481C35O6481C40O6511C45O6512C50O6573C58O6573C63O6551C69O6593C74O6601C79O6604C84O6601C91O6654,,
code-creation,LazyCompile,10,274266,0x281ca119146,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:328:37,0x281ca1022d0,~
code-source-info,0x281ca119146,95,10525,11071,C0O10533C3O10545C8O10549C14O10588C20O10588C25O10634C33O10657C38O10661C46O10634C52O10688C53O10698C57O10688C61O10782C64O10797C73O10858C76O10866C81O10870C90O10918C93O10933C102O10977C108O10977C113O11001C118O11002C124O11042C127O11057C132O11042C137O11070,,
code-creation,LazyCompile,10,274360,0x281ca1192d6,21,assert node:internal/assert:11:16,0xd800a60618,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x281ca1192d6,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,275132,0x281ca11a16e,5, node:child_process:1:1,0x281ca119c98,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x281ca11a16e,99,0,25520,C0O0C4O25520,,
code-creation,Function,10,276638,0x281ca11abce,748, node:child_process:1:1,0x281ca11a0e8,~
code-source-info,0x281ca11abce
code-creation,LazyCompile,10,276971,0x281ca11d1b6,82,debuglog node:internal/util/debuglog:71:18,0xd800a619d0,~
code-source-info,0x281ca11d1b6,22,2302,3390,C0O2302C28O2432C32O2432C34O2878C35O2878C37O2901C41O2901C43O2994C48O3231C58O3252C63O3278C74O3231C79O3373C81O3387,,
code-creation,Eval,10,278016,0x281ca120446,5, node:internal/child_process:1:1,0x281ca11fd48,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x281ca120446,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,279954,0x281ca121a66,1265, node:internal/child_process:1:1,0x281ca1203c0,~
code-source-info,0x281ca121a66,100,0,32650,C0O0C296O28C302O45C308O68C314O93C320O117C325O139C331O165C337O190C342O215C348O232C354O257C359O268C365O594C371O594C376O312C387O345C393O372C399O400C405O430C411O464C417O493C423O520C429O543C435O567C441O710C447O710C452O634C458O652C464O671C470O689C476O764C482O764C486O764C488O796C494O796C498O796C500O827C506O827C510O827C512O862C518O862C523O894C527O862C529O920C535O920C539O920C541O971C544O971C549O959C555O1119C558O1119C563O1016C569O1030C575O1052C581O1075C587O1098C593O1195C596O1195C601O1160C607O1177C613O1242C616O1242C621O1234C627O1288C630O1288C635O1280C641O1334C644O1334C649O1326C655O1383C661O1383C666O1442C672O1442C677O1473C682O1425C688O1528C694O1528C699O1492C705O1514C711O1585C717O1585C722O1563C728O1637C731O1637C735O1637C737O1694C743O1694C748O1677C754O1847C757O1847C762O1735C768O1749C774O1763C780O1777C786O1791C792O1805C798O1819C804O1833C810O1881C816O1897C822O2057C823O2057C825O2074C826O2074C828O2124C830O2124C832O2151C835O2151C839O2151C841O2201C844O2201C848O2201C850O2253C853O2253C857O2253C859O2410C864O2429C869O2470C877O2540C891O2622C896O2663C904O2741C918O2913C923O2920C931O4529C939O5300C953O5801C958O5843C966O5913C980O5997C985O6039C993O6172C1009O2410C1011O8250C1019O8274C1024O8216C1029O8287C1032O8287C1037O9335C1046O9351C1050O13291C1059O13306C1063O14018C1072O14032C1076O14110C1085O14126C1137O14213C1193O14191C1195O15263C1200O15290C1203O15263C1205O15367C1206O15367C1208O27894C1210O27894C1212O28237C1214O28237C1216O32519C1223O32541C1229O32558C1235O32577C1241O32594C1247O32612C1253O32635C1259O32534C1264O32649,,
code-creation,Function,10,280491,0x281ca1221de,35,<instance_members_initializer> node:internal/child_process:525:3,0x281ca121128,~
code-source-info,0x281ca1221de,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
tick,0x7ffdc98df25f,280535,1,0x7ff7ab7fc790,3,0x7ff7ac145970,0xff017bfe3c,0xff017bf12d,0x281ca11ae12,0xff017bfe5d,0xff017bf12d,0x281ca1191b2,0x281ca1053c6,0xff017beeb5
code-creation,Eval,10,282273,0x281ca12646e,5, node:net:1:1,0x281ca125c90,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x281ca12646e,101,0,49462,C0O0C4O49462,,
code-creation,Function,10,285227,0x281ca12933e,2513, node:net:1:1,0x281ca1263e8,~
code-source-info,0x281ca12933e,101,0,49462,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33157C1831O33185C1843O33209C1852O33157C1862O33222C1868O33222C1878O37343C1881O37350C1892O37369C1900O38873C1903O38880C1916O38897C1924O42966C1930O42994C1951O43028C1963O42966C1973O43126C1976O43133C1989O43151C1997O44273C2000O44280C2013O44305C2021O45102C2024O45109C2037O45125C2045O46036C2048O46043C2061O46073C2069O46573C2072O46580C2084O46603C2097O46627C2105O46960C2111O46985C2132O47010C2144O47051C2156O46960C2166O47101C2172O47129C2189O47156C2201O47192C2213O47101C2223O47237C2226O47244C2239O47267C2247O47522C2250O47529C2263O47543C2271O47655C2274O47662C2287O47678C2295O47795C2297O47851C2298O47851C2300O47860C2311O47884C2312O47884C2314O47910C2323O48640C2328O48922C2338O48965C2348O49004C2358O49022C2368O49290C2378O49320C2388O49332C2398O49355C2408O49372C2418O49391C2428O49402C2438O49413C2448O49432C2503O48937C2512O49461,,
code-creation,Eval,10,286126,0x281ca12eb0e,5, node:internal/net:1:1,0x281ca12e948,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x281ca12eb0e,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,286283,0x281ca12eefe,617, node:internal/net:1:1,0x281ca12ea88,~
code-source-info,0x281ca12eefe,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,286696,0x281ca130856,5, node:internal/dtrace:1:1,0x281ca130710,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x281ca130856,103,0,589,C0O0C4O589,,
code-creation,Function,10,286770,0x281ca130d2e,140, node:internal/dtrace:1:1,0x281ca1307d0,~
code-source-info,0x281ca130d2e,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,287105,0x281ca131cc6,34,protoGetter node:net:718:21,0x281ca1268b0,~
code-source-info,0x281ca131cc6,101,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
code-creation,Eval,10,288107,0x281ca13700e,5, node:dgram:1:1,0x281ca136a98,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n  // Check if the udp handle was connected and set the state accordingly\x0d\n  if (isConnected(self))\x0d\n    state.connectState = CONNECT_STATE_CONNECTED;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    // Check if the udp handle was connected and set the state accordingly\x0d\n    if (isConnected(this))\x0d\n      state.connectState = CONNECT_STATE_CONNECTED;\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\nfunction isConnected(self) {\x0d\n  try {\x0d\n    self.remoteAddress();\x0d\n    return true;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x281ca13700e,104,0,28763,C0O0C4O28763,,
code-creation,Function,10,289929,0x281ca138f76,1507, node:dgram:1:1,0x281ca136f88,~
code-source-info,0x281ca138f
code-creation,Eval,10,290542,0x281ca13c42e,5, node:internal/dgram:1:1,0x281ca13c228,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x281ca13c42e,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,290708,0x281ca13c6f6,196, node:internal/dgram:1:1,0x281ca13c3a8,~
code-source-info,0x281ca13c6f6,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0xa591c80000,262144
code-creation,LazyCompile,10,291128,0x281ca13efc6,152,deprecate node:internal/util:96:19,0xd800a457f8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x281ca13efc6,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,292635,0x212567040c0,1344,deprecate node:internal/util:96:19,0xd800a457f8,^
code-source-info,0x212567040c0,16,2503,3720,,,
code-creation,Function,11,292681,0x21256704660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x1ee2d48fd30,^
code-source-info,0x21256704660,9,10647,11000,,,
code-creation,Function,11,292754,0x21256704960,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x1ee2d48fc60,^
code-source-info,0x21256704960,9,9827,10410,,,
code-creation,Function,11,292809,0x21256704ec0,548,internalBinding node:internal/bootstrap/loaders:164:45,0x1ee2d48f7b0,^
code-source-info,0x21256704ec0,9,5278,5523,,,
code-creation,Eval,10,293199,0xa591c83896,5, node:internal/socket_list:1:1,0xa591c83740,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0xa591c83896,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,293455,0xa591c83ed6,126, node:internal/socket_list:1:1,0xa591c83810,~
code-source-info,0xa591c83ed6,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,293798,0xa591c84896,14,customPromiseExecFunction node:child_process:230:35,0x281ca11a750,~
code-source-info,0xa591c84896,99,6792,7172,C0O6792C9O6807C13O7169,,
code-creation,LazyCompile,10,293970,0xa591c868ce,129,_forkChild node:child_process:169:20,0x281ca11a1f0,~
code-source-info,0xa591c868ce,99,5047,5529,C0O5047C8O5111C19O5120C22O5134C29O5111C35O5145C40O5145C45O5160C50O5160C54O5188C72O5188C77O5188C79O5236C84O5244C97O5244C103O5379C108O5387C121O5387C128O5528,,
tick,0x7ffdc994d404,296082,1,0x7ff7ab778510,6,0x7ff7ac145970,0xa591c868f6,0x281ca1191bc,0x281ca1053c6,0xff017beeb5
code-creation,LazyCompile,10,301530,0xa591c872ce,396,setupChannel node:internal/child_process:571:22,0x281ca1206f8,~
code-source-info,0xa591c872ce
code-creation,LazyCompile,10,301729,0xa591c89aa6,72,Control node:internal/child_process:529:14,0x281ca120f30,~
code-source-info,0xa591c89aa6,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,301801,0xa591c89bde,21,EventEmitter node:events:207:22,0xd800a6adc0,~
code-source-info,0xa591c89bde,23,6453,6503,C0O6465C3O6478C8O6483C13O6483C20O6502,,
code-creation,LazyCompile,10,301926,0xa591c89d26,149,EventEmitter.init node:events:324:29,0xd800a6b1b8,~
code-source-info,0xa591c89d26,23,9839,10447,C0O9862C6O9899C13O9911C16O9911C21O9937C25O9907C30O9954C32O9969C37O9969C41O9967C45O9994C46O10012C50O10053C60O10046C64O10088C71O10096C80O10124C85O10145C93O10124C98O10199C100O10204C105O10216C108O10229C113O10216C117O10214C123O10389C125O10394C131O10419C138O10429C140O10428C143O10404C148O10446,,
code-creation,Eval,10,302453,0xa591c8a5ae,5, node:internal/child_process/serialization:1:1,0xa591c8a2c8,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0xa591c8a5ae,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,302835,0xa591c8ae16,369, node:internal/child_process/serialization:1:1,0xa591c8a528,~
code-source-info,0xa591c8ae16,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,303198,0xa591c8bac6,23,initMessageChannel node:internal/child_process/serialization:100:21,0xa591c8a810,~
code-source-info,0xa591c8bac6,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,303373,0xa591c8c11e,19,_getMaxListeners node:events:401:26,0xd800a6b388,~
code-source-info,0xa591c8c11e,23,12105,12233,C0O12126C6O12160C9O12180C13O12200C14O12216C18O12230,,
code-creation,LazyCompile,10,303445,0xa591c8c216,5,get node:events:263:16,0xd800a6afa8,~
code-source-info,0xa591c8c216,23,8022,8064,C0O8032C4O8059,,
code-creation,LazyCompile,10,303553,0xa591c8c576,322,arrayClone node:events:877:20,0xd800a6bc50,~
code-source-info,0xa591c8c576,23,25968,26433,C0O26110C42O26133C50O26144C62O26152C71O26157C72O26171C80O26182C92O26190C104O26198C113O26203C114O26217C122O26228C134O26236C146O26244C158O26252C167O26257C168O26271C176O26282C188O26290C200O26298C212O26306C224O26314C233O26319C234O26333C242O26344C254O26352C266O26360C278O26368C290O26376C302O26384C311O26389C312O26398C317O26405C321O26430,,
code-creation,LazyCompile,10,303700,0xa591c8c846,22, node:internal/child_process:706:36,0xa591c86de8,~
code-source-info,0xa591c8c846,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,303861,0xa591c8cae6,368,nextTick node:internal/process/task_queues:104:18,0xf81371a9e8,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while (tock = queue.shift()) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0xa591c8cae
code-creation,LazyCompile,10,304429,0xa591c8d356,21, node:internal/validators:222:42,0x1ee2d4bcd28,~
code-source-info,0xa591c8d356,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,304524,0xa591c8d456,15,isEmpty node:internal/fixed_queue:95:10,0xf81371fa40,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xa591c8d456,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,304901,0xa591c8d90e,13,isEmpty node:internal/fixed_queue:67:10,0xf81371f7d0,~
code-source-info,0xa591c8d90e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,304961,0xa591c8d9fe,25,setHasTickScheduled node:internal/process/task_queues:52:29,0xf81371a8f8,~
code-source-info,0xa591c8d9fe,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,305082,0xa591c8daf6,23,newAsyncId node:internal/async_hooks:417:20,0x1ee2d4b82f8,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xa591c8daf6,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,306718,0xa591c8efd6,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x1ee2d4b8398,~
code-source-info,0xa591c8efd6,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,306816,0xa591c8f0e6,13,initHooksExist node:internal/async_hooks:479:24,0x1ee2d4b8588,~
code-source-info,0xa591c8f0e6,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,306872,0xa591c8f1ce,16,hasHooks node:internal/async_hooks:471:18,0x1ee2d4b84e8,~
code-source-info,0xa591c8f1ce,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,306942,0xa591c8f2de,59,push node:internal/fixed_queue:99:7,0xf81371fa90,~
code-source-info,0xa591c8f2de,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,307038,0xa591c8f426,24,isFull node:internal/fixed_queue:71:9,0xf81371f820,~
code-source-info,0xa591c8f426,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,307101,0xa591c8f536,37,push node:internal/fixed_queue:75:7,0xf81371f888,~
code-source-info,0xa591c8f536,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,307203,0xa591c8f656,30,onNewListener node:child_process:175:51,0xa591c86788,~
code-source-info,0xa591c8f656,99,5284,5373,C0O5298C2O5307C9O5329C14O5347C19O5355C24O5355C29O5372,,
code-creation,LazyCompile,10,307446,0xa591c8f9a6,455,initializePolicy node:internal/bootstrap/pre_execution:356:26,0x281ca102370,~
code-source-info,0xa591c8f9a
code-creation,LazyCompile,10,307659,0xa591c8fd76,63,initializeClusterIPC node:internal/bootstrap/pre_execution:347:30,0x281ca102320,~
code-source-info,0xa591c8fd76,95,11104,11352,C0O11112C3O11124C10O11128C18O11143C23O11147C29O11186C35O11186C40O11219C45O11219C49O11310C52O11325C62O11351,,
code-creation,LazyCompile,10,307749,0xa591c8fee6,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:451:38,0x281ca1024b0,~
code-source-info,0xa591c8fee6,95,15007,15160,C0O15053C6O15053C11O15023C16O15105C21O15134C26O15159,,
code-creation,Eval,10,308221,0xa591c9081e,5, node:internal/source_map/source_map_cache:1:1,0xa591c904b8,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xa591c9081e,108,0,7905,C0O0C4O7905,,
code-creation,Function,10,308888,0xa591c90e96,435, node:internal/source_map/source_map_cache:1:1,0xa591c90798,~
code-source-info,0xa591c90e96,108,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,Eval,10,309357,0xa591c91ed6,5, node:internal/util/iterable_weak_map:1:1,0xa591c91c88,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0xa591c91ed6,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,309586,0xa591c92636,196, node:internal/util/iterable_weak_map:1:1,0xa591c91e50,~
code-source-info,0xa591c92636,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,309626,0xa591c927b6,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0xa591c92160,~
code-source-info,0xa591c927b6,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,310152,0xa591c933ee,5, node:internal/modules/cjs/helpers:1:1,0xa591c93138,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xa591c933ee,110,0,6975,C0O0C4O6975,,
code-creation,Function,10,310710,0xa591c9396e,536, node:internal/modules/cjs/helpers:1:1,0xa591c93368,~
code-source-info,0xa591c9396e,110,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,311060,0xa591c945ae,27,SafeSet node:internal/per_context/primordials:364:16,0x1ee2d48a1a0,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0xa591c945ae,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
tick,0x7ff7ac73ece0,312557,0,0x0,3,0x7ff7abd74090,0xa591c93b3f,0x21256704c63,0x212567048e5,0xa591c90fcd,0x21256704c63,0x212567048e5,0xa591c8feec,0x281ca1053d8,0xff017beeb5
code-creation,LazyCompile,10,312634,0xa591c953ee,27,SafeMap node:internal/per_context/primordials:351:16,0x1ee2d48a018,~
code-source-info,0xa591c953ee,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,312736,0xa591c95586,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xa591c91f58,~
code-source-info,0xa591c95586,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,312789,0xa591c9590e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x1ee2d48a0d8,~
code-source-info,0xa591c9590e,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,312850,0xa591c95a16,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x1ee2d48a328,~
code-source-info,0xa591c95a16,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,313117,0xa591c961b6,492,initializeDeprecations node:internal/bootstrap/pre_execution:241:32,0x281ca102240,~
code-source-info,0xa591c961b
code-creation,LazyCompile,10,313309,0xa591c9670e,53,initializeWASI node:internal/bootstrap/pre_execution:405:24,0x281ca1023c0,~
code-source-info,0xa591c9670e,95,13253,13464,C0O13286C6O13286C11O13269C16O13353C21O13357C29O13357C35O13373C37O13405C43O13405C47O13398C52O13463,,
code-creation,LazyCompile,10,313384,0xa591c9690e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:412:29,0x281ca102410,~
code-source-info,0xa591c9690e,95,13496,13819,C0O13522C6O13522C11O13565C16O13570C20O13590C26O13629C31O13636C36O13636C40O13735C51O13757C56O13793C60O13750C65O13818,,
code-creation,Eval,10,314988,0xa591c98876,5, node:internal/modules/cjs/loader:1:1,0xa591c97f90,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {}\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xa591c98876,111,0,41609,C0O0C4O41609,,
code-creation,Function,10,318758,0xa591c9a616,2547, node:internal/modules/cjs/loader:1:1,0xa591c987f0,~
code-source-info,0xa591c9a616,111,0,41609,C0O0C446O1183C452O1200C458O1225C464O1250C470O1277C476O1303C482O1326C488O1349C494O1373C500O1398C506O1424C512O1455C518O1467C524O1477C530O1491C535O1508C541O1533C546O1550C552O1585C558O1610C564O1625C570O1645C576O1679C582O1704C587O1714C593O1731C599O1746C605O1770C611O1794C617O1806C622O1822C628O1833C634O1859C640O1889C646O1917C652O1948C658O1975C664O2000C670O2026C676O2051C682O2076C688O2186C690O2186C695O2186C697O2262C709O2284C715O2294C721O2302C727O2314C733O2332C763O2277C767O2452C771O2452C777O2435C783O2529C787O2529C793O2503C799O2635C803O2635C809O2587C815O2602C821O2617C827O2683C831O2683C837O2669C842O2721C846O2721C850O2721C852O2752C856O2752C860O2752C862O2792C866O2792C870O2792C872O2827C876O2827C880O2827C882O2871C886O2871C890O2871C892O2905C896O2897C902O2943C910O2943C916O2920C922O2993C926O2993C930O2993C932O3066C940O3066C946O3051C952O3230C956O3230C962O3110C968O3128C974O3145C980O3166C986O3190C992O3215C998O3299C1002O3299C1008O3280C1014O3354C1022O3354C1026O3354C1028O3423C1036O3423C1040O3423C1042O3535C1050O3535C1060O3580C1067O3535C1069O3765C1070O3765C1072O3944C1076O3944C1082O3944C1088O3800C1094O3828C1100O3863C1106O3885C1112O3922C1118O4000C1122O4000C1128O3981C1134O4060C1142O4060C1147O4178C1151O4178C1157O4115C1163O4138C1169O4162C1175O4236C1179O4236C1185O4223C1191O4288C1195O4288C1199O4288C1201O4356C1205O4356C1211O4337C1217O4425C1225O4425C1231O4410C1237O4542C1241O4542C1247O4469C1253O4489C1259O4515C1265O4604C1269O4612C1277O4621C1280O4604C1282O4666C1285O4666C1289O4666C1291O4708C1292O4708C1294O4728C1295O4728C1297O4754C1298O4754C1300O5420C1302O5420C1307O5420C1309O5728C1312O5778C1316O5778C1350O5760C1381O5749C1388O5756C1397O5796C1403O5825C1407O5825C1412O5733C1483O5876C1487O5907C1493O5929C1497O5950C1504O5966C1508O5964C1512O5987C1519O6007C1527O6005C1535O6028C1542O6049C1550O6047C1558O6088C1562O6088C1564O6093C1572O6112C1580O6135C1581O6135C1583O6196C1587O6196C1589O6296C1597O6415C1606O6429C1618O6561C1635O6405C1645O6405C1647O6706C1659O6727C1668O6748C1680O6785C1692O6706C1702O6851C1714O6872C1723O6896C1735O6941C1747O6851C1757O7040C1766O7042C1781O7077C1789O7105C1806O7077C1816O7152C1824O7186C1841O7152C1851O7388C1859O7416C1884O7447C1892O7572C1907O7468C1921O7656C1931O7681C1939O7806C1954O7702C1968O7890C1976O7388C1986O7927C1990O7927C2000O7960C2020O7961C2032O7927C2034O8011C2050O8027C2060O8025C2068O8353C2072O8353C2082O8353C2084O11246C2088O11246C2098O11246C2100O13968C2107O13968C2109O14774C2116O14774C2118O14793C2126O14810C2134O17571C2141O17571C2143O17649C2147O17657C2155O17649C2157O17666C2161O17731C2169O17755C2179O19385C2187O19409C2195O20593C2203O20620C2211O22216C2223O22235C2235O22621C2249O22216C2259O22216C2261O23941C2269O23954C2277O26976C2285O27000C2293O31201C2297O31208C2311O31223C2319O32165C2323O32172C2337O32190C2345O32645C2346O32645C2348O32681C2349O32681C2351O33916C2355O33923C2369O33942C2377O35879C2381O35886C2395O35905C2403O37697C2407O37704C2421O37725C2429O38143C2433O38150C2447O38171C2455O39011C2461O39061C2467O39011C2469O39667C2475O39688C2483O39708C2491O39726C2499O40725C2507O40748C2515O41358C2523O41387C2531O41584C2537O41598C2546O41608,,
code-creation,Eval,10,319480,0xa591c9e5b6,5, node:internal/modules/package_json_reader:1:1,0xa591c9e410,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xa591c9e5b6,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,319579,0xa591c9e706,113, node:internal/modules/package_json_reader:1:1,0xa591c9e530,~
code-source-info,0xa591c9e706,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,319808,0xa591c9ef9e,5, node:internal/process/esm_loader:1:1,0xa591c9eda8,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xa591c9ef9e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,319993,0xa591c9f23e,182, node:internal/process/esm_loader:1:1,0xa591c9ef18,~
code-source-info,0xa591c9f23e,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,320529,0xa591ca049e,5, node:internal/modules/esm/loader:1:1,0xa591ca0040,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(\x0d\n        url\x2C { format\x2C importAssertions });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL\x2C\x0d\n                importAssertions = ObjectCreate(null)) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n    if (typeof url !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0xa591ca049e,114,0,16909,C0O0C4O16909,,
code-creation,Function,10,321491,0xa591ca0cde,615, node:internal/modules/esm/loader:1:1,0xa591ca0418,~
code-source-info,0xa591ca0cde,114,0,16909,C0O0C113O82C119O82C123O136C129O146C135O163C141O186C147O209C153O235C159O261C165O278C171O295C176O320C182O335C188O359C194O381C200O397C206O455C212O455C217O436C223O682C229O682C234O708C239O500C245O525C251O551C257O584C263O622C269O651C275O758C281O758C286O725C292O740C298O840C304O840C309O795C315O816C321O891C327O891C331O891C333O954C339O954C343O954C345O1056C351O1056C356O1012C362O1031C368O1135C374O1135C379O1109C385O1216C391O1216C396O1200C402O1279C408O1279C413O1263C419O1356C425O1356C430O1337C595O16856C602O16825C607O16877C609O16895C614O16908,,
code-creation,Function,10,321570,0xa591ca1146,154,<instance_members_initializer> node:internal/modules/esm/loader:64:3,0xa591ca0840,~
code-source-info,0xa591ca1146,114,1839,2722,C3O1859C17O2021C28O2028C45O2210C56O2217C73O2269C88O2368C95O2368C109O2491C119O2583C126O2583C140O2711C153O2722,,
code-creation,Eval,10,321825,0xa591ca2956,5, node:internal/modules/esm/module_map:1:1,0xa591ca2768,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0xa591ca2956,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,321928,0xa591ca2d8e,175, node:internal/modules/esm/module_map:1:1,0xa591ca28d0,~
code-source-info,0xa591ca2d8e,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,322231,0xa591ca3836,5, node:internal/modules/esm/module_job:1:1,0xa591ca3540,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {}\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0xa591ca3836,116,0,8353,C0O0C4O8353,,
code-creation,Function,10,322711,0xa591ca3d2e,343, node:internal/modules/esm/module_job:1:1,0xa591ca37b0,~
code-source-info,0xa591ca3d2e,116,0,8353,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8305C330O8274C335O8324C337O8339C342O8352,,
code-creation,Eval,10,323017,0xa591ca596e,5, node:internal/modules/esm/assert:1:1,0xa591ca5778,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0xa591ca596e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,323253,0xa591ca5c46,201, node:internal/modules/esm/assert:1:1,0xa591ca58e8,~
code-source-info,0xa591ca5c46,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,323422,0xa591ca6256,9, node:internal/modules/esm/assert:43:3,0xa591ca5a40,~
code-source-info,0xa591ca6256,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,324369,0xa591ca7c76,5, node:internal/modules/esm/resolve:1:1,0xa591ca7550,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {}\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined)\x0d\n        continue;\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    url: `${url}`\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0xa591ca7c76,118,0,37706,C0O0C4O37706,,
code-creation,Function,10,326305,0xa591ca8c7e,1110, node:internal/modules/esm/resolve:1:1,0xa591ca7bf0,~
code-source-info,0xa591ca8c7e
code-creation,Eval,10,326894,0xa591cac07e,5, node:internal/modules/esm/get_format:1:1,0xa591cabe38,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null]; // eslint-disable-line no-sparse-arrays\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  if (\x0d\n    experimentalSpecifierResolution === 'node' &&\x0d\n    !experimentalSpecifierResolutionWarned\x0d\n  ) {\x0d\n    process.emitWarning(\x0d\n      'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n      'ExperimentalWarning');\x0d\n    experimentalSpecifierResolutionWarned = true;\x0d\n  }\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nfunction getFileProtocolModuleFormat(url\x2C ignoreErrors) {\x0d\n  const ext = extname(url.pathname);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors)\x0d\n      return undefined;\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n  }\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C true);\x0d\n}\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0xa591cac07e,119,0,3433,C0O0C4O3433,,
code-creation,Function,10,327108,0xa591cac576,340, node:internal/modules/esm/get_format:1:1,0xa591cabff8,~
code-source-info,0xa591cac576,119,0,3433,C0O0C72O26C77O43C82O60C88O94C94O154C97O154C102O142C108O199C111O199C116O180C121O263C124O263C128O263C130O354C133O354C137O354C139O442C142O442C146O442C148O517C151O517C156O498C162O590C165O590C170O567C176O572C182O655C185O655C190O681C195O624C201O719C205O719C207O846C211O846C213O1034C214O1034C216O1044C220O1076C229O1140C235O1104C239O1153C243O1185C252O1249C258O1213C262O1287C264O1300C274O1325C284O1804C288O1836C296O1287C301O1287C303O3302C310O3324C316O3345C322O3379C328O3402C334O3317C339O3432,,
tick,0x7ff7abe62174,327355,1,0x7ff7ab7fc790,6,0x7ff7ac145970,0x21256704b9b,0x212567048e5,0xa591ca90c7,0x21256704c63,0x212567048e5,0xa591ca0e3d,0x21256704c63,0x212567048e5,0xa591c9f28c,0x21256704c63,0x212567048e5,0xa591c9aac1,0x21256704c63,0x212567048e5,0xa591c96914,0x281ca1053ea,0xff017beeb5
code-creation,Eval,10,327625,0xa591cacf7e,5, node:internal/modules/esm/initialize_import_meta:1:1,0xa591cacde8,~
script-source,120,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\ngetOptionValue('--experimental-import-meta-resolve');\x0d\nconst { PromisePrototypeThen\x2C PromiseReject } = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0xa591cacf7e,120,0,932,C0O0C4O932,,
code-creation,Function,10,327799,0xa591cad146,90, node:internal/modules/esm/initialize_import_meta:1:1,0xa591cacef8,~
code-source-info,0xa591cad146,120,0,932,C0O0C28O44C31O44C36O25C41O113C44O113C48O113C50O176C56O198C62O247C65O247C69O247C71O884C78O906C84O899C89O931,,
code-creation,Eval,10,328087,0xa591cad606,5, node:internal/modules/esm/load:1:1,0xa591cad490,~
script-source,121,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n  const { importAssertions } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = defaultGetFormat(url);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0xa591cad606,121,0,891,C0O0C4O891,,
code-creation,Function,10,328214,0xa591cad74e,80, node:internal/modules/esm/load:1:1,0xa591cad580,~
code-source-info,0xa591cad74e,121,0,891,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O851C68O873C74O866C79O890,,
code-creation,Eval,10,328714,0xa591cadd0e,5, node:internal/modules/esm/get_source:1:1,0xa591cadb38,~
script-source,122,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0xa591cadd0e,122,0,1394,C0O0C4O1394,,
code-creation,Function,10,328901,0xa591cade7e,169, node:internal/modules/esm/get_source:1:1,0xa591cadc88,~
code-source-info,0xa591cade7e,122,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,330200,0xa591caf1c6,5, node:internal/fs/promises:1:1,0xa591caea28,~
script-source,123,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = bufferOrOptions.length ?? buffer.byteLength;\x0d\n    position = bufferOrOptions.position ?? null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0xa591caf1c6,123,0,23741,C0O0C4O23741,,
code-creation,Function,10,332148,0xa591cb18fe,1659, node:internal/fs/promises:1:1,0xa591caf140,~
code-source-info,0xa591cb18fe
code-creation,Function,10,332446,0xa591cb22ae,27,<instance_members_initializer> node:internal/fs/promises:189:3,0xa591cb07a0,~
code-source-info,0xa591cb22ae,123,4390,5219,C0O4390C12O4398C26O5219,,
code-creation,Eval,10,333152,0xa591cb4d4e,5, node:internal/fs/rimraf:1:1,0xa591cb49e8,~
script-source,124,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0xa591cb4d4e,124,0,7392,C0O0C4O7392,,
code-creation,Function,10,333824,0xa591cb534e,409, node:internal/fs/rimraf:1:1,0xa591cb4cc8,~
code-source-info,0xa591cb534e,124,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,334312,0xa591cb61e6,188,from node:buffer:295:28,0xd800a76a68,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xa591cb61e6,24,8700,9683,C3O8739C9O8775C12O8782C17O8818C18O8824C28O8880C33O8884C39O8916C51O8923C56O8972C57O9002C63O9019C68O9019C73O9035C78O9075C95O9168C104O9175C109O9215C110O9240C113O9240C118O9264C120O9278C122O9287C123O9295C125O9312C127O9311C134O9374C136O9380C138O9379C145O9398C151O9417C155O9463C158O9470C163O9510C164O9537C182O9543C187O9537,,
code-creation,LazyCompile,10,336873,0xa591cb8bbe,110,fromString node:buffer:431:20,0xd800a76e50,~
code-source-info,0xa591cb8bbe,24,12887,13336,C0O12915C2O12923C8O12968C14O12975C19O13000C25O13007C30O13021C35O13028C40O13045C41O13051C46O13069C51O13080C56O13119C59O13125C64O13156C66O13186C73O13192C78O13186C79O13244C85O13251C90O13265C95O13272C100O13289C101O13298C104O13305C109O13333,,
code-creation,LazyCompile,10,337025,0xa591cb8d76,177,fromStringFast node:buffer:412:24,0xd800a76db0,~
code-source-info,0xa591cb8d76,24,12324,12864,C0O12362C5O12362C11O12387C14O12409C18O12418C21O12398C26O12431C31O12467C36O12438C41O12480C42O12486C44O12500C49O12511C51O12509C54O12497C59O12529C62O12529C65O12554C72O12569C77O12580C85O12554C91O12623C110O12623C116O12655C118O12666C123O12752C130O12771C135O12782C143O12756C149O12811C156O12825C162O12822C168O12836C171O12836C174O12852C176O12861,,
code-creation,LazyCompile,10,337127,0xa591cb8f66,36,FastBuffer node:internal/buffer:958:14,0xf81370bb00,~
code-source-info,0xa591cb8f66,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,337176,0xa591cb9066,23,write node:buffer:592:12,0xd800a771c0,~
code-source-info,0xa591cb9066,24,17116,17180,C0O17150C17O17150C22O17180,,
code-creation,LazyCompile,10,337232,0xa591cb9156,42,alignPool node:buffer:158:19,0xd800a767e8,~
code-source-info,0xa591cb9156,24,4155,4265,C0O4191C4O4206C9O4220C19O4231C25O4244C34O4254C41O4264,,
code-creation,LazyCompile,10,337410,0xa591cb9516,251,promisify node:internal/util:324:19,0xd800a45f48,~
code-source-info,0xa591cb9516,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,337671,0xa591cb9aa6,65,EventEmitterMixin node:internal/event_target:966:27,0x2e58b39e3a8,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0xa591cb9aa6,44,26757,27191,C0O26810C23O27001C30O27033C33O27046C38O27001C43O27061C47O27095C52O27136C57O27095C62O27163C64O27188,,
code-creation,Eval,10,340236,0xa591cbc7ce,5, node:internal/modules/esm/translators:1:1,0xa591cbc368,~
script-source,125,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {}\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {}\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0xa591cbc7ce,125,0,10933,C0O0C4O10933,,
code-creation,Function,10,341006,0xa591cbcf6e,715, node:internal/modules/esm/translators:1:1,0xa591cbc748,~
code-source-info,0xa591cbcf6e
code-creation,Eval,10,341391,0xa591cbe446,5, node:internal/modules/esm/create_dynamic_module:1:1,0xa591cbe270,~
script-source,126,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0xa591cbe446,126,0,1828,C0O0C4O1828,,
code-creation,Function,10,341544,0xa591cbe66e,111, node:internal/modules/esm/create_dynamic_module:1:1,0xa591cbe3c0,~
code-source-info,0xa591cbe66e,126,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
new,MemoryChunk,0x2968aac0000,262144
code-creation,Eval,10,342220,0xa591cbf5a6,5, node:internal/vm/module:1:1,0xa591cbf060,~
script-source,127,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0xa591cbf5a6,127,0,12768,C0O0C4O12768,,
code-creation,Function,10,343543,0x281ca13fa76,872, node:internal/vm/module:1:1,0xa591cbf520,~
code-source-info,0x281ca13fa
code-creation,Function,10,343784,0x281ca13ffb6,30,<instance_members_initializer> node:internal/vm/module:256:3,0xa591cbfb90,~
code-source-info,0x281ca13ffb6,127,7051,7088,C3O7060C29O7088,,
tick,0x7ffdc994ce44,343836,1,0x7ff7ab7fc790,3,0x7ff7ac145970,0x21256704b9b,0x212567048e5,0xa591c9f2bf,0x21256704c63,0x212567048e5,0xa591c9aac1,0x21256704c63,0x212567048e5,0xa591c96914,0x281ca1053ea,0xff017beeb5
code-creation,LazyCompile,10,344306,0x2968aac24d6,30,ESMLoader node:internal/modules/esm/loader:57:1,0xa591ca0520,~
code-source-info,0x2968aac24d6,114,1613,1613,C9O1613C29O1613,,
code-creation,LazyCompile,10,344470,0x2968aac37e6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0xa591ca29d8,~
code-source-info,0x2968aac37e6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,344561,0x2968aac3a8e,13,desc.value node:internal/per_context/primordials:325:32,0x1ee2d489f70,~
code-source-info,0x2968aac3a8e,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,344777,0x2968aac3b96,13,SafeIterator node:internal/per_context/primordials:270:16,0x1ee2d4899c0,~
code-source-info,0x2968aac3b96,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,344859,0x2968aac3cce,13,next node:internal/per_context/primordials:273:9,0x1ee2d489a88,~
code-source-info,0x2968aac3cce,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,345249,0x2968aac4346,28,getEmbedderOptions node:internal/options:32:28,0x281ca1042e8,~
code-source-info,0x2968aac4346,96,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,345550,0x2968aac45ee,315,Module._initPaths node:internal/modules/cjs/loader:1229:29,0xa591c99af8,~
code-source-info,0x2968aac45ee
code-creation,Eval,10,345977,0x2968aac74e6,5, node:internal/modules/run_main:1:1,0x2968aac72c0,~
script-source,128,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x2968aac74e6,128,0,2621,C0O0C4O2621,,
code-creation,Function,10,346252,0x2968aac77ce,178, node:internal/modules/run_main:1:1,0x2968aac7460,~
code-source-info,0x2968aac77ce,128,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,346477,0x2968aac7dbe,163,initializeESMLoader node:internal/bootstrap/pre_execution:422:29,0x281ca102460,~
code-source-info,0x2968aac7dbe,95,13851,14966,C0O13935C6O13935C13O13984C16O13980C21O13978C25O14004C30O14008C34O14028C40O14057C41O14064C42O14169C48O14169C53O14083C58O14124C63O14216C69O14216C74O14420C79O14378C83O14491C88O14452C92O14661C100O14665C106O14784C112O14784C117O14732C122O14740C127O14758C132O14831C138O14831C143O14851C145O14861C149O14876C151O14896C155O14921C157O14940C162O14965,,
code-creation,LazyCompile,10,346608,0x2968aac7fd6,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xa591c98fe8,~
code-source-info,0x2968aac7fd6,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,346682,0x2968aac80be,53,loadPreloadModules node:internal/bootstrap/pre_execution:465:28,0x281ca102550,~
code-source-info,0x2968aac80be,95,15458,15789,C0O15547C8O15547C13O15579C15O15616C21O15623C26O15704C32O15704C37O15704C42O15669C47O15749C52O15788,,
code-creation,LazyCompile,10,346756,0x2968aac82ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:457:36,0x281ca102500,~
code-source-info,0x2968aac82ae,95,15199,15427,C0O15207C8O15211C14O15257C17O15265C28O15265C34O15379C40O15379C45O15416C49O15426,,
code-creation,LazyCompile,10,346856,0x2968aac83d6,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x2968aac7658,~
code-source-info,0x2968aac83d6,128,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,346998,0x2968aac8806,68,resolveMainPath node:internal/modules/run_main:15:25,0x2968aac7518,~
code-source-info,0x2968aac8806,128,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,347276,0x2968aac8a06,436,Module._findPath node:internal/modules/cjs/loader:494:28,0xa591c99308,~
code-source-info,0x2968aac8a
code-creation,LazyCompile,10,347536,0x2968aac8db6,109,isAbsolute node:path:402:13,0x2e58b38d5d0,~
code-source-info,0x2968aac8db6,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,347796,0x2968aac9086,85,stat node:internal/modules/cjs/loader:151:14,0xa591c988a8,~
code-source-info,0x2968aac9086,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,347984,0x2968aac9296,232,toNamespacedPath node:path:618:19,0x2e58b38d6f8,~
code-source-info,0x2968aac9296,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,348299,0x2968aac94f6,42,toRealPath node:internal/modules/cjs/loader:393:20,0xa591c98b78,~
code-source-info,0x2968aac94f6,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,348919,0x2968aac990e,1036,realpathSync node:fs:2410:22,0x30b03a992f8,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch { }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2968aac990e
code-creation,LazyCompile,10,355827,0x2968aacffc6,123,getOptions node:internal/fs/utils:314:20,0x30b03aa1a60,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x2968aacffc6,81,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
code-creation,LazyCompile,10,357985,0x2968aad1f1e,48,assertEncoding node:internal/fs/utils:151:24,0x30b03aa1468,~
code-source-info,0x2968aad1f1e,81,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,358199,0x2968aad2036,20,toPathIfFileURL node:internal/url:1496:25,0xf813738e88,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x2968aad2036,39,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
tick,0x7ff7ac73ed8d,364479,0,0x0,3,0x7ff7abd74090,0x2968aac9927,0x2968aac9519,0x2968aac8b31,0x2968aac8824,0x2968aac83ef,0xff017beed9
code-creation,LazyCompile,10,364552,0x2968aad5166,17,isURLInstance node:internal/url:1492:23,0xf813738e38,~
code-source-info,0x2968aad5166,39,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
code-creation,LazyCompile,10,364724,0x2968aad52c6,81, node:internal/fs/utils:668:38,0x30b03aa2488,~
code-source-info,0x2968aad52c6,81,18830,19110,C14O18864C22O18897C25O18897C31O18924C36O18955C49O18930C54O18924C55O19023C68O19023C74O19062C76O19092C78O19092C80O19109,,
code-creation,LazyCompile,10,364905,0x2968aad54d6,110, node:internal/fs/utils:357:35,0x30b03aa1b00,~
code-source-info,0x2968aad54d6,81,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,365068,0x2968aad564e,16,isUint8Array node:internal/util/types:13:22,0xd800a47088,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2968aad564e,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,365624,0x2968aad5af6,23,splitRoot node:fs:2360:33,0x30b03a991b0,~
code-source-info,0x2968aad5af6,80,65106,65172,C0O65119C9O65146C12O65126C19O65163C22O65167,,
code-creation,LazyCompile,10,366096,0x2968aad5d1e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x30b03aa1ab0,~
code-source-info,0x2968aad5d1e,81,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,366287,0x2968aad5e96,53,nextPart node:fs:2386:31,0x30b03a992a8,~
code-source-info,0x2968aad5e96,80,65863,66114,C0O65890C4O65886C9O65923C14O65923C20O66007C22O66018C24O66014C31O66048C33O66044C38O66077C40O66086C41O65900C47O65877C50O66099C52O66109,,
code-creation,LazyCompile,10,366586,0x2968aad5ff6,34,isFileType node:fs:205:20,0x30b03a96f18,~
code-source-info,0x2968aad5ff6,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,367774,0x21256705160,6232,resolve node:path:158:10,0x2e58b38d510,^
code-source-info,0x21256705160,41,4875,9786,,,
code-creation,Function,11,367887,0x21256706a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x281ca104248,^
code-source-info,0x21256706a20,96,514,620,,,
code-creation,Function,11,367943,0x21256706c40,104,next node:internal/per_context/primordials:273:9,0x1ee2d489a88,^
code-source-info,0x21256706c40,6,8126,8173,,,
code-creation,Function,11,368015,0x21256706d20,252,SafeMap node:internal/per_context/primordials:351:16,0x1ee2d48a018,^
code-source-info,0x21256706d20,6,10550,10567,,,
code-creation,Function,11,368103,0x21256706e80,412,isWindowsDeviceRoot node:path:60:29,0x2e58b38d408,^
code-source-info,0x21256706e80,41,1991,2136,,,
code-creation,Function,11,368156,0x21256707080,272,validateString node:internal/validators:118:24,0x1ee2d4bc930,^
code-source-info,0x21256707080,15,3534,3646,,,
code-creation,Function,11,368218,0x21256707200,544,nextPart node:fs:2386:31,0x30b03a992a8,^
code-source-info,0x21256707200,80,65863,66114,,,
code-creation,LazyCompile,10,368540,0x2968aad6bc6,72,encodeRealpathResult node:fs:2373:30,0x30b03a99258,~
code-source-info,0x2968aad6bc6,80,65452,65718,C0O65475C4O65500C10O65520C17O65529C22O65546C24O65560C25O65581C30O65588C35O65588C41O65617C48O65626C53O65647C55O65663C56O65688C61O65705C66O65688C71O65715,,
code-creation,LazyCompile,10,368828,0x2968aad6d76,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x2968aac7568,~
code-source-info,0x2968aad6d76,128,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,369061,0x2968aad6f96,129,readPackageScope node:internal/modules/cjs/loader:321:26,0xa591c98a88,~
code-source-info,0x2968aad6f96,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,369316,0x2968aad72f6,234,readPackage node:internal/modules/cjs/loader:290:21,0xa591c98a38,~
code-source-info,0x2968aad72f6,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,369611,0x2968aad75fe,199,read node:internal/modules/package_json_reader:16:14,0xa591c9e5e8,~
code-source-info,0x2968aad75fe,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,370451,0x2968aad842e,70,runMainESM node:internal/modules/run_main:47:20,0x2968aac75b8,~
code-source-info,0x2968aad842e,128,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,370658,0x2968aad866e,222,loadESM node:internal/process/esm_loader:85:41,0xa591c9f100,~
code-source-info,0x2968aad866e,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,370888,0x2968aad8c8e,284,initializeLoader node:internal/process/esm_loader:50:32,0xa591c9efd0,~
code-source-info,0x2968aad8c8e,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,371120,0x2968aad8f7e,175,handleMainPromise node:internal/modules/run_main:58:33,0x2968aac7608,~
code-source-info,0x2968aad8f7e,128,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,371438,0x2968aad91be,318,processTicksAndRejections node:internal/process/task_queues:68:35,0xf81371a998,~
code-source-info,0x2968aad91be,32,1563,2529,C0O1575C2O1606C7O1614C12O1614C17O1606C19O1648C21O1653C23O1652C27O1678C34O1703C36O1702C46O1678C54O1782C59O1810C65O1843C70O1902C75O1932C110O1963C111O1976C115O1963C119O1982C121O2010C122O2023C128O2032C132O2010C137O2038C139O2066C140O2079C146O2088C152O2097C156O2066C161O2103C163O2131C164O2144C170O2153C176O2162C182O2171C186O2131C191O2177C193O2206C198O2206C215O2277C220O2281C225O2313C230O2313C245O2353C250O2353C256O2385C261O2385C264O2431C269O2421C274O2421C282O2434C285O2434C290O1584C296O2466C301O2466C305O2497C312O2497C317O2528,,
code-creation,LazyCompile,10,371678,0x2968aad949e,43,shift node:internal/fixed_queue:108:8,0xf81371fae0,~
code-source-info,0x2968aad949e,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,371795,0x2968aad95e6,54,shift node:internal/fixed_queue:80:8,0xf81371f8f0,~
code-source-info,0x2968aad95e6,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,371949,0x2968aad971e,42,emitBeforeScript node:internal/async_hooks:510:26,0x1ee2d4b8738,~
code-source-info,0x2968aad971e,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,372113,0x2968aad986e,180,pushAsyncContext node:internal/async_hooks:540:26,0x1ee2d4b88e0,~
code-source-info,0x2968aad986e,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,372353,0x2968aad9a86,125, node:internal/child_process:708:22,0xa591c8c7a0,~
code-source-info,0x2968aad9a86,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,372532,0x2968aad9c46,31,listenerCount node:events:852:23,0xd800a6bb90,~
code-source-info,0x2968aad9c46,23,25404,25686,C0O25436C5O25450C7O25502C9O25508C13O25523C17O25570C19O25579C20O25592C24O25649C28O25656C29O25674C30O25683,,
code-creation,LazyCompile,10,372631,0x2968aad9d4e,13,destroyHooksExist node:internal/async_hooks:487:27,0x1ee2d4b8648,~
code-source-info,0x2968aad9d4e,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,372714,0x2968aad9e3e,32,emitAfterScript node:internal/async_hooks:518:25,0x1ee2d4b8788,~
code-source-info,0x2968aad9e3e,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,372856,0x2968aad9fa6,167,popAsyncContext node:internal/async_hooks:554:25,0x1ee2d4b8930,~
code-source-info,0x2968aad9fa6,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,373055,0x2968aada186,13,enabledHooksExist node:internal/async_hooks:475:27,0x1ee2d4b8538,~
code-source-info,0x2968aada186,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,373230,0x2968aada2de,77, node:internal/modules/run_main:51:29,0x2968aad8368,~
code-source-info,0x2968aada2de,128,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,373444,0x2968aada55e,283,pathToFileURL node:internal/url:1455:23,0xf813738dc8,~
code-source-info,0x2968aada55e
code-creation,LazyCompile,10,373677,0x2968aada82e,117,URL node:internal/url:620:14,0xf813737be0,~
code-source-info,0x2968aada82e,39,17608,17965,C13O17676C17O17705C19O17724C23O17757C30O17772C40O17786C42O17785C46O17808C50O17813C57O17828C60O17824C65O17822C69O17847C85O17900C93O17900C110O17847C116O17964,,
code-creation,LazyCompile,10,373814,0x2968aada9fe,51,URLContext node:internal/url:160:14,0xf813737380,~
code-source-info,0x2968aada9fe,39,3859,4081,C0O3869C1O3880C5O3890C7O3902C11O3914C13O3928C17O3939C19O3953C23O3964C24O3974C28O3987C29O3997C33O4010C35O4020C39O4031C40O4042C44O4055C45O4069C50O4080,,
tick,0x7ff7ac710ce3,374177,0,0x0,3,0x7ff7abd74090,0x7ff7ab7bae80,0x2968aada89c,0x2968aada568,0x2968aada2fc,0x2968aad86ad,0x7ff7ac1db213,0x7ff7ab7c2e80,0x2968aad92c3
code-creation,LazyCompile,10,374285,0x2968aadac46,190,onParseComplete node:internal/url:532:25,0xf813737910,~
code-source-info,0x2968aadac46,39,14726,15412,C0O14842C2O14847C4O14846C8O14860C10O14870C14O14882C16O14893C20O14908C22O14932C24O14930C29O14956C43O14921C47O14982C49O15006C51O15004C56O15030C70O14995C74O15056C76O15065C80O15076C82O15096C84O15094C89O15116C101O15124C103O15085C107O15138C109O15148C113O15160C115O15173C119O15188C121O15197C125O15208C127O15218C129O15217C134O15272C136O15277C141O15297C144O15293C149O15291C153O15321C155O15326C157O15325C163O15340C168O15349C172O15365C177O15387C179O15386C183O15365C189O15411,,
code-creation,LazyCompile,10,374881,0x2968aadb0ce,889,URLSearchParams node:internal/url:182:14,0xf813737420,~
code-source-info,0x2968aadb0ce
code-creation,LazyCompile,10,375333,0x2968aadb6ae,35,initSearchParams node:internal/url:1016:26,0xf813738928,~
code-source-info,0x2968aadb6ae,39,28064,28185,C0O28081C4O28099C6O28103C11O28117C15O28128C16O28135C17O28144C19O28148C25O28164C29O28162C34O28184,,
code-creation,LazyCompile,10,375550,0x2968aadb85e,199,encodePathChars node:internal/url:1440:25,0xf813738d78,~
code-source-info,0x2968aadb85e,39,40808,41513,C0O40824C8O40828C15O40873C22O40917C31O40884C38O40999C46O41017C52O41017C59O41063C66O41107C75O41074C82O41134C90O41138C97O41184C104O41228C113O41195C120O41253C128O41257C135O41303C142O41347C151O41314C158O41379C166O41383C173O41429C180O41473C189O41440C196O41494C198O41510,,
code-creation,LazyCompile,10,375753,0x2968aadba8e,70,set pathname node:internal/url:884:15,0xf813738518,~
code-source-info,0x2968aadba8e,39,24508,24717,C0O24557C5O24580C9O24589C11O24588C16O24611C17O24618C18O24624C29O24636C38O24659C40O24658C49O24700C54O24700C63O24624C69O24716,,
code-creation,LazyCompile,10,375906,0x2968aadbbde,31, node:internal/url:636:21,0xf813737cb8,~
code-source-info,0x2968aadbbde,39,18078,18155,C0O18088C4O18101C6O18100C10O18110C19O18118C21O18116C26O18144C30O18150,,
code-creation,LazyCompile,10,376121,0x2968aadbd0e,108,onParsePathComplete node:internal/url:591:29,0xf813737af0,~
code-source-info,0x2968aadbd0e,39,16744,17226,C0O16864C2O16869C4O16868C8O16882C10O16895C12O16893C17O16915C22O16929C24O16938C28O16951C35O16964C40O16961C46O17001C48O17010C52O17021C59O17035C61O17034C66O17031C70O17117C72O17130C74O17128C79O17150C84O17164C86O17173C90O17186C97O17199C102O17196C107O17225,,
code-creation,LazyCompile,10,376294,0x2968aadbeae,18,get href node:internal/url:734:11,0xf813737e48,~
code-source-info,0x2968aadbeae,39,20841,20881,C0O20851C4O20863C6O20862C12O20871C17O20876,,
code-creation,LazyCompile,10,376485,0x2968aadc17e,393, node:internal/url:682:12,0xf813737da8,~
code-source-info,0x2968aadc17e
code-creation,LazyCompile,10,376669,0x2968aadc52e,99, node:internal/validators:154:3,0x1ee2d4bcae0,~
code-source-info,0x2968aadc52e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,376854,0x2968aadc816,308,import node:internal/modules/esm/loader:324:15,0xa591ca06b0,~
code-source-info,0x2968aadc816,114,9901,10471,C10O9901C18O9965C25O9965C30O9996C32O10009C41O10023C50O10068C55O10094C64O10094C70O10132C81O10327C90O10147C98O10137C100O10137C116O10175C123O10198C137O10175C143O10241C154O10242C160O10276C170O10277C175O10168C186O10119C201O10355C212O10376C217O10372C223O10361C235O10355C261O10409C270O10462C283O10466,,
code-creation,LazyCompile,10,377039,0x2968aadcb7e,251,getModuleJob node:internal/modules/esm/loader:242:21,0xa591ca0660,~
code-source-info,0x2968aadcb7e,114,6920,7769,C10O6920C18O6972C20O7005C22O7014C26O7023C33O7030C38O7197C49O7248C54O7248C59O7235C65O7341C82O7341C95O7330C118O7307C123O7315C128O7422C133O7432C138O7458C143O7432C150O7533C154O7578C159O7588C166O7614C176O7588C181O7636C185O7668C187O7679C208O7695C214O7753C226O7764,,
code-creation,LazyCompile,10,377228,0x2968aadcfce,411,resolve node:internal/modules/esm/loader:509:16,0xa591ca07f0,~
code-source-info,0x2968aadcfce,114,15399,16818,C10O15399C32O15466C37O15466C75O15508C79O15540C91O15611C94O15611C100O15643C120O15649C125O15643C126O15773C133O15824C135O15829C140O15839C144O15868C146O15873C150O15884C157O15891C168O15936C174O15946C178O15998C185O16035C191O16056C197O16083C207O15981C220O15975C246O16143C252O16188C270O16194C275O16188C276O16323C281O16331C286O16358C297O16438C318O16444C323O16438C324O16587C330O16625C351O16631C356O16625C357O16770C364O16786C370O16801C386O16813,,
code-creation,LazyCompile,10,377611,0x2968aadd506,577,defaultResolve node:internal/modules/esm/resolve:1037:24,0xa591ca86a8,~
code-source-info,0x2968aadd
code-creation,LazyCompile,10,377897,0x2968aadfcc6,64,getConditionsSet node:internal/modules/esm/resolve:165:26,0xa591ca7d98,~
code-source-info,0x2968aadfcc6,118,5376,5712,C0O5394C6O5441C8O5437C13O5468C18O5473C24O5508C40O5514C45O5508C46O5639C53O5646C58O5670C59O5679C63O5709,,
code-creation,LazyCompile,10,378013,0x2968aadfe36,140,moduleResolve node:internal/modules/esm/resolve:964:23,0xa591ca85b8,~
code-source-info,0x2968aadfe36,118,32350,33011,C0O32509C2O32522C5O32526C11O32585C24O32596C32O32632C33O32645C39O32649C44O32665C56O32681C62O32668C72O32764C79O32775C88O32773C89O32817C101O32828C107O32901C114O32910C119O32928C121O32944C122O32948C134O32955C139O33008,,
code-creation,LazyCompile,10,378100,0x2968aadffde,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:951:49,0xa591ca8568,~
code-source-info,0x2968aadffde,118,32009,32148,C0O32026C2O32040C7O32048C8O32061C9O32065C10O32078C16O32082C21O32091C22O32103C23O32107C26O32114C30O32145,,
code-creation,LazyCompile,10,378180,0x2968aae00f6,81,isRelativeSpecifier node:internal/modules/esm/resolve:941:29,0xa591ca8518,~
code-source-info,0x2968aae00f6,118,31706,31957,C0O31723C1O31736C7O31740C12O31770C19O31777C26O31795C32O31799C37O31808C38O31820C39O31826C41O31839C47O31843C52O31875C59O31882C66O31900C72O31904C77O31913C78O31925C79O31941C80O31954,,
code-creation,LazyCompile,10,378269,0x2968aae0276,15,get protocol node:internal/url:769:15,0xf813737f88,~
code-source-info,0x2968aae0276,39,21714,21757,C0O21724C4O21736C6O21735C10O21745C14O21752,,
code-creation,LazyCompile,10,378449,0x2968aae048e,444,finalizeResolution node:internal/modules/esm/resolve:391:28,0xa591ca8018,~
code-source-info,0x2968aae048e
code-creation,LazyCompile,10,378626,0x2968aae0876,78,get pathname node:internal/url:875:15,0xf8137384a8,~
code-source-info,0x2968aae0876,39,24290,24490,C0O24312C4O24317C6O24316C10O24332C14O24341C16O24340C21O24374C27O24378C30O24382C31O24396C36O24401C42O24408C47O24422C49O24432C50O24438C57O24449C60O24472C68O24449C77O24485,,
code-creation,LazyCompile,10,378798,0x2968aae0ace,106,fileURLToPath node:internal/url:1413:23,0xf813738d28,~
code-source-info,0x2968aae0ace,39,39672,40005,C0O39684C6O39719C13O39726C22O39749C25O39754C31O39780C49O39786C54O39780C55O39857C62O39866C67O39884C77O39890C82O39884C83O39929C92O39948C101O39976C105O40002,,
code-creation,LazyCompile,10,378926,0x2968aae0d06,150,get origin node:internal/url:746:13,0xf813737f18,~
code-source-info,0x2968aae0d06,39,21116,21696,C0O21200C4O21205C6O21204C10O21232C59O21280C64O21285C70O21292C78O21329C83O21349C89O21353C95O21337C101O21359C105O21366C110O21464C116O21485C117O21597C122O21629C127O21641C132O21651C137O21604C142O21657C143O21670C149O21691,,
code-creation,LazyCompile,10,379100,0x2968aae0fee,261,getPathFromURLWin32 node:internal/url:1360:29,0xf813738c88,~
code-source-info,0x2968aae0fee
code-creation,LazyCompile,10,379217,0x2968aae1296,19,get hostname node:internal/url:841:15,0xf8137382f8,~
code-source-info,0x2968aae1296,39,23466,23513,C0O23476C4O23488C6O23487C10O23497C18O23508,,
code-creation,LazyCompile,10,379321,0x2968aae13be,30,tryStatSync node:internal/modules/esm/resolve:184:3,0xa591ca86f8,~
code-source-info,0x2968aae13be,118,5926,5992,C0O5981C5O5945C10O5936C21O5985C24O5981C29O5992,,
code-creation,LazyCompile,10,379417,0x2968aae1576,123,statSync node:fs:1530:18,0x30b03a983f0,~
code-source-info,0x2968aae1576,80,40462,40876,C7O40462C16O40525C21O40532C26O40571C33O40573C40O40598C45O40606C52O40611C55O40622C60O40622C66O40684C76O40606C82O40724C88O40739C96O40752C102O40781C103O40798C104O40807C109O40807C113O40839C118O40846C122O40873,,
code-creation,LazyCompile,10,379586,0x2968aae1716,37, node:internal/fs/utils:680:42,0x30b03aa24d8,~
code-source-info,0x2968aae1716,81,19157,19296,C14O19213C19O19213C24O19248C29O19248C34O19281C36O19293,,
code-creation,LazyCompile,10,379826,0x2968aae1856,64,hasNoEntryError node:fs:1467:25,0x30b03a982c0,~
code-source-info,0x2968aae1856,80,38836,39038,C0O38855C6O38883C11O38899C16O38883C21O38912C27O38926C36O38930C39O38943C40O38962C46O38987C51O38993C58O38998C61O39011C62O39022C63O39035,,
code-creation,LazyCompile,10,379958,0x2968aae198e,576,getStatsFromBinding node:internal/fs/utils:530:29,0x30b03aa22a8,~
code-source-info,0x2968aae198e,81,14524,15597,C13O14549C18O14553C24O14585C31O14624C34O14621C43O14643C46O14640C55O14662C58O14659C67O14688C70O14685C79O14707C82O14704C91O14726C94O14723C103O14752C106O14749C115O14771C118O14768C127O14790C130O14787C139O14816C142O14813C154O14864C157O14860C167O14884C170O14880C174O14834C189O14933C192O14929C202O14953C205O14949C210O14903C225O15002C228O14998C239O15022C242O15018C247O14972C263O15071C266O15067C277O15091C280O15087C285O15041C294O14592C299O15109C300O15118C307O15149C310O15146C319O15168C322O15165C331O15187C334O15184C343O15211C346O15208C355O15230C358O15227C367O15249C370O15246C379O15273C382O15270C391O15292C394O15289C403O15311C406O15308C415O15335C418O15332C430O15375C433O15371C443O15395C446O15391C450O15351C465O15436C468O15432C478O15456C481O15452C486O15412C501O15497C504O15493C515O15517C518O15513C523O15473C539O15558C542O15554C553O15578C556O15574C561O15534C570O15125C575O15594,,
code-creation,LazyCompile,10,380127,0x2968aae1dbe,16,isBigUint64Array node:internal/util/types:53:26,0xd800a474f0,~
code-source-info,0x2968aae1dbe,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,380179,0x2968aae1ede,19,msFromTimeSpec node:internal/fs/utils:446:24,0x30b03aa1fd0,~
code-source-info,0x2968aae1ede,81,11451,11512,C0O11468C2O11481C4O11479C10O11500C12O11498C15O11491C18O11509,,
code-creation,LazyCompile,10,380280,0x2968aae211e,116,Stats node:internal/fs/utils:495:15,0x30b03aa21c8,~
code-source-info,0x2968aae211e,81,13243,13784,C0O13383C41O13383C46O13513C48O13526C52O13540C54O13553C58O13567C60O13580C64O13594C66O13611C70O13629C73O13642C77O13640C81O13666C84O13679C88O13677C92O13703C95O13716C99O13714C103O13740C106O13757C110O13755C115O13783,,
code-creation,LazyCompile,10,380363,0x2968aae22f6,62,StatsBase node:internal/fs/utils:400:19,0x30b03aa1ba0,~
code-source-info,0x2968aae22f6,81,10312,10613,C0O10400C2O10409C6O10419C8O10429C12O10440C14O10451C18O10463C20O10472C24O10482C26O10491C30O10501C32O10511C36O10522C38O10535C42O10549C44O10558C48O10568C50O10578C54O10589C56O10601C61O10612,,
code-creation,LazyCompile,10,380475,0x2968aae24ee,29,dateFromMs node:internal/fs/utils:460:20,0x30b03aa2070,~
code-source-info,0x2968aae24ee,81,11977,12024,C0O11987C7O12003C10O12003C17O12014C23O11994C28O12021,,
code-creation,LazyCompile,10,380542,0x2968aae25f6,16,StatsBase.isDirectory node:internal/fs/utils:414:43,0x30b03aa1bf0,~
code-source-info,0x2968aae25f6,81,10659,10710,C0O10679C7O10698C10O10679C15O10707,,
code-creation,LazyCompile,10,380605,0x2968aae270e,54,Stats._checkModeProperty node:internal/fs/utils:517:46,0x30b03aa2218,~
code-source-info,0x2968aae270e,81,14142,14370,C0O14158C8O14189C10O14185C17O14213C19O14209C26O14242C28O14238C33O14260C34O14273C35O14339C42O14346C44O14344C50O14354C53O14367,,
code-creation,LazyCompile,10,380664,0x2968aae2846,16,StatsBase.isFile node:internal/fs/utils:418:38,0x30b03aa1c80,~
code-source-info,0x2968aae2846,81,10752,10803,C0O10772C7O10791C10O10772C15O10800,,
code-creation,RegExp,3,380841,0x21256707480,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,LazyCompile,10,381590,0x2968aae2a06,37,get search node:internal/url:893:13,0xf813738588,~
code-source-info,0x2968aae2a06,39,24733,24864,C0O24761C4O24766C6O24765C10O24751C15O24781C19O24809C24O24824C26O24834C27O24840C32O24851C36O24859,,
code-creation,LazyCompile,10,381673,0x2968aae2b4e,37,get hash node:internal/url:923:11,0xf8137386d8,~
code-source-info,0x2968aae2b4e,39,25495,25638,C0O25526C4O25531C6O25530C10O25513C15O25546C19O25580C24O25595C26O25605C27O25611C32O25622C36O25633,,
code-creation,LazyCompile,10,381853,0x2968aae2cde,181,set search node:internal/url:900:13,0xf8137385f8,~
code-source-info,0x2968aae2cde,39,24880,25403,C0O24908C4O24913C6O24912C10O24928C17O24937C23O24963C25O24974C30O24991C31O25001C35O25016C44O25030C46O25029C51O25026C57O25072C58O25082C64O25086C69O25095C79O25104C86O25144C88O25154C92O25167C101O25180C106O25177C110O25208C114O25231C125O25245C134O25279C142O25279C154O25231C159O25353C168O25375C170O25374C174O25353C180O25402,,
code-creation,LazyCompile,10,381985,0x2968aae2ed6,41,toUSVString node:internal/util:59:21,0xd800a44e60,~
code-source-info,0x2968aae2ed6,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,382129,0x2968aae304e,144,set hash node:internal/url:930:11,0xf813738740,~
code-source-info,0x2968aae304e,39,25652,26099,C0O25678C4O25683C6O25682C10O25733C15O25756C17O25776C18O25789C22O25804C31O25818C33O25817C38O25814C42O25849C43O25856C44O25869C45O25877C51O25881C56O25890C66O25897C73O25933C75O25946C79O25957C88O25970C93O25967C97O25999C108O26011C117O26044C125O26044C137O25999C143O26098,,
code-creation,LazyCompile,10,382230,0x2968aae3216,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1030:39,0xa591ca8658,~
code-source-info,0x2968aae3216,118,34702,34867,C0O34721C7O34730C12O34749C19O34758C24O34784C31O34793C36O34813C43O34819C48O34813C50O34866,,
code-creation,LazyCompile,10,382300,0x2968aae333e,18,toString node:internal/url:730:11,0xf813737df8,~
code-source-info,0x2968aae333e,39,20787,20827,C0O20797C4O20809C6O20808C12O20817C17O20822,,
code-creation,LazyCompile,10,382412,0x2968aae349e,59,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:92:39,0xa591cac150,~
code-source-info,0x2968aae349e,119,2872,3074,C0O2907C7O2907C13O2924C20O2959C23O2984C28O2929C35O3000C36O3012C37O3016C42O3047C46O3039C52O3056C58O3071,,
code-creation,LazyCompile,10,382567,0x2968aae39ae,119,getFileProtocolModuleFormat node:internal/modules/esm/get_format:75:37,0xa591cac100,~
code-source-info,0x2968aae39ae,119,2291,2830,C0O2328C5O2340C10O2328C15O2354C17O2362C22O2380C27O2387C34O2407C45O2444C46O2470C53O2488C57O2498C59O2510C61O2524C62O2528C69O2564C74O2663C78O2688C79O2705C80O2711C87O2753C90O2753C100O2717C105O2711C106O2782C109O2789C118O2827,,
code-creation,LazyCompile,10,382744,0x2968aae3bee,275,extname node:path:836:10,0x2e58b38d838,~
code-source-info,0x2968aae3bee
code-creation,LazyCompile,10,382890,0x2968aae3e7e,13,getPackageType node:internal/modules/esm/resolve:824:24,0xa591ca83d8,~
code-source-info,0x2968aae3e7e,118,27894,27987,C0O27927C3O27927C8O27979C12O27984,,
code-creation,LazyCompile,10,383011,0x2968aae40d6,173,getPackageScopeConfig node:internal/modules/esm/resolve:248:31,0xa591ca7e38,~
code-source-info,0x2968aae40d6,118,7630,8729,C0O7667C13O7667C19O7766C24O7781C32O7785C39O7863C41O7897C46O7914C49O7914C54O7897C60O8023C66O8031C68O8052C69O8087C72O8108C85O8125C91O8334C96O8366C100O8343C105O8376C107O7707C110O8415C115O8415C120O8471C127O8489C132O8537C137O8559C142O8603C147O8628C154O8648C159O8665C164O8665C170O8705C172O8726,,
code-creation,Function,11,383258,0x21256707b20,1916,getPathFromURLWin32 node:internal/url:1360:29,0xf813738c88,^
code-source-info,0x21256707b20,39,37724,39122,,,
code-creation,Function,11,383327,0x21256708300,1936,toNamespacedPath node:path:618:19,0x2e58b38d6f8,^
code-source-info,0x21256708300,41,20086,21201,,,
code-creation,Function,11,383366,0x21256708b00,152,hasHooks node:internal/async_hooks:471:18,0x1ee2d4b84e8,^
code-source-info,0x21256708b00,13,16531,16579,,,
code-creation,Function,11,383400,0x21256708c00,320,isFileType node:fs:205:20,0x30b03a96f18,^
code-source-info,0x21256708c00,80,5489,5737,,,
code-creation,Function,11,383432,0x21256708da0,280, node:internal/url:636:21,0xf813737cb8,^
code-source-info,0x21256708da0,39,18078,18155,,,
code-creation,LazyCompile,10,383630,0x2968aae4a86,331,getPackageConfig node:internal/modules/esm/resolve:192:26,0xa591ca7de8,~
code-source-info,0x2968aae4a86,118,6159,7522,C0O6205C5O6222C10O6222C16O6236C18O6271C20O6287C21O6311C26O6329C31O6329C37O6339C42O6351C44O6406C51O6426C56O6467C61O6491C66O6539C71O6566C78O6590C83O6607C88O6607C94O6638C96O6659C97O6674C102O6701C107O6715C115O6713C125O6760C137O6819C144O6830C163O6857C168O6871C174O6857C178O6855C185O6904C192O6766C197O6760C198O6936C203O6945C208O6951C213O6957C218O6990C223O7018C233O7071C235O7095C241O7125C243O7146C249O7176C251O7251C253O7260C260O7281C265O7297C268O7339C275O7357C281O7387C287O7398C293O7409C299O7420C305O7434C312O7452C317O7469C322O7469C328O7498C330O7519,,
code-creation,Function,11,383964,0x21256708f20,620,get pathname node:internal/url:875:15,0xf8137384a8,^
code-source-info,0x21256708f20,39,24290,24490,,,
code-creation,Function,11,384027,0x21256709200,340,URLContext node:internal/url:160:14,0xf813737380,^
code-source-info,0x21256709200,39,3859,4081,,,
code-creation,Function,11,384090,0x212567093c0,1468,onParseComplete node:internal/url:532:25,0xf813737910,^
code-source-info,0x212567093c0,39,14726,15412,,,
code-creation,Function,11,384140,0x212567099e0,828,URL node:internal/url:620:14,0xf813737be0,^
code-source-info,0x212567099e0,39,17608,17965,,,
code-creation,LazyCompile,10,384298,0x2968aae54c6,3, node:internal/per_context/primordials:276:21,0x1ee2d489b30,~
code-source-info,0x2968aae54c6,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,384407,0x2968aae55ae,78,get node:internal/modules/esm/module_map:18:6,0xa591ca2a28,~
code-source-info,0x2968aae55ae,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,384525,0x2968aae57a6,111,#createModuleJob node:internal/modules/esm/loader:278:19,0xa591ca04d0,~
code-source-info,0x2968aae57a6,114,8436,9240,C0O8436C17O8509C22O8909C31O8952C37O8952C42O9011C70O9011C76O9164C79O9169C84O9179C92O9205C103O9179C108O9224C110O9235,,
code-creation,LazyCompile,10,384695,0x2968aae5ace,196,ModuleJob node:internal/modules/esm/module_job:56:14,0xa591ca38b8,~
code-source-info,0x2968aae5ace,116,1367,3214,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2890C152O2904C155O2902C159O3014C169O3041C178O3049C181O3014C186O3179C190O3197C195O3213,,
code-creation,LazyCompile,10,384869,0x2968aae652e,187,moduleProvider node:internal/modules/esm/loader:279:28,0x2968aae56d0,~
code-source-info,0x2968aae652e,114,8509,8881,C10O8509C18O8581C21O8592C26O8607C33O8614C39O8622C43O8592C57O8581C80O8557C85O8570C90O8671C97O8683C102O8683C108O8710C110O8738C119O8744C124O8738C125O8806C147O8813C162O8874,,
code-creation,LazyCompile,10,385071,0x2968aae697e,410,load node:internal/modules/esm/loader:353:13,0xa591ca0700,~
code-source-info,0x2968aae697e,114,10849,12157,C10O10849C60O10898C62O10903C67O10911C71O10938C73O10943C77O10952C84O10959C95O11002C101O11010C105O11035C114O11041C127O11035C153O11085C159O11126C177O11132C182O11126C183O11261C188O11276C193O11308C198O11353C210O11353C216O11462C228O11525C235O11575C255O11468C260O11462C261O11611C267O11652C288O11658C293O11652C294O11803C309O11878C312O11878C322O11914C325O11914C331O11947C350O11953C355O11947C356O12106C363O12122C369O12137C385O12152,,
code-creation,LazyCompile,10,385234,0x2968aae6d76,201,defaultLoad node:internal/modules/esm/load:13:27,0xa591cad638,~
code-source-info,0x2968aae6d76,121,380,847,C10O380C18O411C23O424C28O459C33O494C38O521C43O530C48O563C62O563C67O619C69O636C76O665C81O692C85O717C90O744C95O776C102O783C106O759C119O753C147O804C154O818C160O831C176O844,,
code-creation,LazyCompile,10,385357,0x2968aae70de,150,validateAssertions node:internal/modules/esm/assert:55:28,0xa591ca59a0,~
code-source-info,0x2968aae70de,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,385536,0x2968aae741e,338,defaultGetSource node:internal/modules/esm/get_source:25:32,0xa591cadd40,~
code-source-info,0x2968aae741e,122,686,1346,C10O686C31O694C70O747C77O747C83O768C85O790C92O799C97O819C102O834C114O828C144O878C151O887C156O921C163O941C166O966C171O921C177O982C179O1003C186O1009C191O1003C192O1058C199O1069C206O1090C211O1106C218O1111C221O1111C228O1137C237O1106C246O1183C258O1189C263O1183C264O1243C271O1253C280O1272C285O1279C290O1288C295O1288C301O1329C313O1343,,
code-creation,LazyCompile,10,385792,0x2968aae7956,196,readFile node:internal/fs/promises:786:24,0xa591caffb8,~
code-source-info,0x2968aae7956,123,22911,23257,C10O22911C18O22932C23O22953C28O22942C35O23002C44O23020C46O23040C48O23029C53O23057C56O23064C71O23094C72O23100C75O23121C80O23100C84O23146C98O23152C111O23146C137O23180C145O23215C151O23247C156O23187C171O23254,,
code-creation,LazyCompile,10,385888,0x2968aae96ce,29,checkAborted node:internal/fs/promises:319:22,0xa591caf2e8,~
code-source-info,0x2968aae96ce,123,7466,7532,C0O7480C7O7490C16O7506C21O7512C26O7506C28O7531,,
code-creation,LazyCompile,10,385971,0x2968aae9876,182,open node:internal/fs/promises:449:20,0xa591caf4c8,~
code-source-info,0x2968aae9876,123,11749,12062,C10O11749C18O11774C23O11781C29O11828C34O11828C39O11853C55O11860C62O11899C69O11933C72O11941C79O11956C82O11967C87O11967C95O12044C104O11941C117O11927C142O11906C157O12059,,
code-creation,LazyCompile,10,386197,0x2968aae9d8e,515,stringToFlags node:internal/fs/utils:555:23,0x30b03aa22f8,~
code-source-info,0x2968aae9d8e
code-creation,LazyCompile,10,386419,0x2968aaea17e,97,parseFileMode node:internal/validators:59:23,0x1ee2d4bc7d0,~
code-source-info,0x2968aaea17e,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,386526,0x2968aaea34e,206, node:internal/validators:84:3,0x1ee2d4bc890,~
code-source-info,0x2968aaea34e,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,386603,0x2968aaea516,9,isInt32 node:internal/validators:36:17,0x1ee2d4bc270,~
code-source-info,0x2968aaea516,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,387946,0x2968aaea7c6,263,link node:internal/modules/esm/module_job:69:18,0x2968aae5950,~
code-source-info,0x2968aaea7c6,116,1937,2831,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2670C140O2707C151O2728C156O2724C162O2713C174O2707C199O2767C210O2789C218O2785C224O2774C238O2824,,
code-creation,LazyCompile,10,388111,0x2968aaeaa4e,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:397:37,0x1ee2d48a4b8,~
code-source-info,0x2968aaeaa4e,6,11842,11930,C0O11874C13O11874C18O11930,,
code-creation,LazyCompile,10,388275,0x2968aaeac26,216,set node:internal/modules/esm/module_map:23:6,0xa591ca2a78,~
code-source-info,0x2968aaeac26,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,388484,0x2968aaeae26,104,logger node:internal/util/debuglog:96:18,0xd800a61c20,~
code-source-info,0x2968aaeae26,22,2994,3226,C0O2994C3O3027C30O3052C35O3059C38O3067C39O3083C45O3100C49O3090C53O3105C54O3121C60O3138C66O3147C70O3128C75O3152C76O3169C80O3176C87O3189C92O3185C98O3176C103O3214,,
code-creation,LazyCompile,10,388717,0x2968aaeafa6,155,debug node:internal/util/debuglog:76:15,0xd800a61b80,~
code-source-info,0x2968aaeafa6,22,2432,2869,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C81O2695C86O2702C89O2710C90O2726C96O2743C100O2733C104O2748C105O2764C111O2781C117O2790C121O2771C126O2795C127O2812C131O2819C138O2832C143O2828C149O2819C154O2857,,
code-creation,LazyCompile,10,388904,0x2968aaeb176,41,init node:internal/util/debuglog:72:16,0xd800a61b30,~
code-source-info,0x2968aaeb176,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,389011,0x2968aaeb266,2,testEnabled node:internal/util/debuglog:32:19,0x281ca114d48,~
code-source-info,0x2968aaeb266,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,389224,0x2968aaeb3fe,116,debuglogImpl node:internal/util/debuglog:49:22,0xd800a61980,~
code-source-info,0x2968aaeb3fe,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,389380,0x2968aaeb5b6,10, node:internal/modules/esm/module_map:9:63,0xa591ca2988,~
code-source-info,0x2968aaeb5b6,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,389459,0x2968aaeb666,2,noop node:internal/util/debuglog:47:14,0xd800a61930,~
code-source-info,0x2968aaeb666,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,389546,0x2968aaeb71e,10, node:internal/modules/esm/loader:333:15,0x2968aadc680,~
code-source-info,0x2968aaeb71e,114,10247,10265,C0O10260C5O10260C9O10265,,
code-creation,LazyCompile,10,389800,0x2968aaebb76,433,run node:internal/modules/esm/module_job:190:12,0xa591ca39a8,~
code-source-info,0x2968aaebb76,116,7065,8269,C10O7065C18O7086C23O7086C35O7075C58O7122C61O7153C66O7189C71O7196C76O7196C90O7178C128O7256C133O7261C143O7268C152O7303C158O7341C163O7303C169O7362C182O7372C186O7409C196O7441C204O7413C211O7476C224O7486C228O7576C235O7607C240O7614C248O7576C259O7646C267O7696C272O7703C277O7646C292O7724C297O7779C302O7807C307O7814C312O7780C318O7847C325O7852C330O7879C344O8028C358O7970C364O8051C370O8131C376O7889C380O8212C382O8212C383O8233C388O8255C408O8264,,
code-creation,LazyCompile,10,390059,0x2968aaebea6,24,instantiate node:internal/modules/esm/module_job:101:14,0xa591ca3908,~
code-source-info,0x2968aaebea6,116,3231,3370,C0O3250C6O3312C11O3312C15O3305C19O3352C23O3365,,
tick,0x7ff7abdeb267,390227,0,0x0,2,0x7ff7abd74090,0x2968aaebeb1,0x2968aaebb8d,0x2968aaeb723,0x7ff7ab7c2e80,0x2968aad92c3
code-creation,LazyCompile,10,390597,0x2968aaec5ae,935,_instantiate node:internal/modules/esm/module_job:108:21,0xa591ca3958,~
code-source-info,0x2968aaec5ae
code-creation,LazyCompile,10,390910,0x2968aaecc26,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:110:38,0x2968aaec2f0,~
code-source-info,0x2968aaecc26,116,3477,3782,C10O3477C18O3507C23O3523C28O3523C35O3550C46O3557C47O3574C52O3586C57O3586C62O3648C74O3632C100O3663C111O3685C118O3713C123O3747C126O3713C134O3681C140O3670C154O3775,,
code-creation,LazyCompile,10,391408,0x2968aaecfc6,625,processPromiseRejections node:internal/process/promises:197:34,0xf81371e1f8,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (reason instanceof Error) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {}\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = reason instanceof Error ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = reason instanceof Error ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x2968aaecfc
code-creation,LazyCompile,10,392583,0x2968aaedea6,25,setHasRejectionToWarn node:internal/process/promises:74:31,0xf81371d7f8,~
code-source-info,0x2968aaedea6,33,2135,2197,C0O2148C7O2157C12O2180C19O2178C24O2196,,
code-creation,LazyCompile,10,392747,0x2968aaedfc6,112,FileHandle node:internal/fs/promises:116:14,0xa591cb0008,~
code-source-info,0x2968aaedfc6,123,2962,3135,C3O2982C11O2982C40O2996C45O3001C50O3010C54O3029C59O3034C67O3041C69O3065C77O3039C81O3081C86O3086C91O3093C95O3103C100O3108C104O3123C111O3134,,
code-creation,LazyCompile,10,392844,0x2968aaee146,63,MixedEventEmitter node:internal/event_target:968:16,0xa591cb98a0,~
code-source-info,0x2968aaee146,44,26839,26973,C0O26839C8O26858C15O26865C21O26901C25O26910C29O26901C41O26924C48O26946C54O26924C62O26972,,
code-creation,LazyCompile,10,393169,0x2968aaee466,601,readFileHandle node:internal/fs/promises:359:30,0xa591caf388,~
code-source-info,0x2968aaee
code-creation,LazyCompile,10,393456,0x2968aaee8ae,8,get fd node:internal/fs/promises:129:9,0xa591cb00c0,~
code-source-info,0x2968aaee8ae,123,3212,3244,C0O3222C2O3234C4O3233C7O3239,,
code-creation,LazyCompile,10,393590,0x2968aaeea2e,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:409:43,0x1ee2d48a570,~
code-source-info,0x2968aaeea2e,6,12438,12718,C0O12438C13O12574C27O12574C32O12718,,
code-creation,LazyCompile,10,393678,0x2968aaeebbe,46, node:internal/per_context/primordials:412:15,0x2968aaee980,~
code-source-info,0x2968aaeebbe,6,12586,12713,C0O12703C14O12601C20O12676C28O12683C34O12702C39O12703C45O12713,,
code-creation,LazyCompile,10,393743,0x2968aaeed06,27,SafePromise node:internal/per_context/primordials:393:16,0x1ee2d48a468,~
code-source-info,0x2968aaeed06,6,11762,11793,C3O11775C7O11781C11O11775C26O11792,,
code-creation,LazyCompile,10,393808,0x2968aaeedfe,22, node:internal/per_context/primordials:413:21,0x2968aaeeb08,~
code-source-info,0x2968aaeedfe,6,12617,12666,C0O12627C16O12627C21O12666,,
code-creation,LazyCompile,10,393914,0x2968aaeeef6,19,allocUnsafeSlow node:buffer:382:50,0xd800a76c80,~
code-source-info,0x2968aaeeef6,24,11572,11640,C0O11584C5O11584C9O11605C14O11612C18O11637,,
code-creation,LazyCompile,10,394002,0x2968aaef006,54, node:buffer:348:36,0xd800a76b58,~
code-source-info,0x2968aaef006,24,10516,10676,C0O10531C8O10531C13O10564C14O10575C21O10591C23O10588C28O10611C33O10643C46O10617C51O10611C53O10675,,
code-creation,LazyCompile,10,394083,0x2968aaef12e,30,validateNumber node:internal/validators:123:24,0x1ee2d4bc9d0,~
code-source-info,0x2968aaef12e,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,394199,0x2968aaef25e,71,createUnsafeBuffer node:internal/buffer:1059:28,0xf81370bd18,~
code-source-info,0x2968aaef25e,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,394666,0x2968aaef54e,248,close node:internal/fs/promises:189:11,0xa591cb2200,~
code-source-info,0x2968aaef54e,123,4398,5219,C0O4411C7O4420C9O4419C15O4425C20O4442C27O4449C30O4466C31O4481C38O4490C40O4489C45O4515C52O4527C54O4526C57O4542C58O4557C65O4562C73O4568C77O4577C84O4586C86O4585C91O4593C96O4609C103O4614C108O4619C112O4632C119O4637C126O4654C136O4697C138O4696C142O4706C147O4706C157O4654C162O4652C168O4798C175O4803C182O4820C189O4862C199O4858C210O4820C215O4818C219O5162C222O5167C230O5167C235O5187C242O5199C244O5198C247O5214,,
code-creation,LazyCompile,10,394954,0x2968aaef8b6,17, node:internal/fs/promises:203:9,0x2968aaef338,~
code-source-info,0x2968aaef8b6,123,4724,4766,C0O4732C7O4737C11O4752C16O4765,,
code-creation,LazyCompile,10,395202,0x2968aaefc4e,193,moduleStrategy node:internal/modules/esm/translators:110:56,0xa591cbcad0,~
code-source-info,0x2968aaefc4e,125,3150,3602,C0O3150C23O3177C36O3177C41O3222C46O3231C52O3253C59O3253C64O3290C76O3326C81O3290C85O3352C106O3352C112O3401C119O3412C124O3424C129O3428C134O3465C146O3550C150O3424C156O3585C168O3599,,
code-creation,LazyCompile,10,395338,0x2968aaf0996,83,assertBufferSource node:internal/modules/esm/translators:74:28,0xa591cbc8a0,~
code-source-info,0x2968aaf0996,125,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,395428,0x2968aaf0aee,31,lazyTypes node:internal/modules/esm/translators:22:19,0xa591cbc800,~
code-source-info,0x2968aaf0aee,125,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,395511,0x2968aaf0c06,72,stringify node:internal/modules/esm/translators:90:19,0xa591cbc8f0,~
code-source-info,0x2968aaf0c06,125,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,395721,0x2968aaf0df6,206,TextDecoder node:internal/encoding:379:16,0xf813713f88,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': { enumerable: true }\x2C\x0d\n    'encodeInto': { enumerable: true }\x2C\x0d\n    'encoding': { enumerable: true }\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: { enumerable: true }\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x2968aaf0df6,27,10677,11487,C15O10677C21O10721C25O10754C35O10769C43O10754C48O10905C53O10905C58O10944C60O10976C69O10982C74O10976C75O11045C77O11055C81O11105C94O11113C103O11166C116O11178C125O11243C130O11243C136O11276C138O11311C147O11317C152O11311C153O11368C157O11373C161O11383C165O11398C169O11403C174O11412C178O11429C182O11434C187O11442C191O11458C195O11463C200O11474C205O11486,,
code-creation,LazyCompile,10,397496,0x2968aaf2276,55,getEncodingFromLabel node:internal/encoding:313:30,0xf813713cc0,~
code-source-info,0x2968aaf2276,27,8957,9111,C0O8982C5O8992C10O8992C16O9007C18O9030C20O9041C21O9045C26O9062C34O9092C39O9092C44O9066C49O9062C54O9108,,
code-creation,LazyCompile,10,397699,0x2968aaf2586,227,decode node:internal/encoding:408:11,0xf8137140a8,~
code-source-info,0x2968aaf2586,27,11503,12349,C8O11512C25O11542C30O11542C34O11572C41O11576C47O11612C52O11620C56O11632C61O11633C69O11660C76O11665C82O11702C102O11708C107O11702C108O11882C118O11897C126O11882C131O12033C133O12043C137O12091C153O12104C159O12148C168O12161C170O12160C180O12148C186O12193C190O12233C197O12282C207O12239C212O12233C213O12325C221O12325C226O12342,,
code-creation,LazyCompile,10,397828,0x2968aaf27ae,37,validateDecoder node:internal/encoding:64:25,0xf813713c20,~
code-source-info,0x2968aaf27ae,27,1332,1436,C0O1343C7O1366C9O1365C14O1376C19O1391C29O1397C34O1391C36O1435,,
code-creation,LazyCompile,10,397978,0x2968aaf29a6,162,toString node:buffer:782:46,0xd800a78a98,~
code-source-info,0x2968aaf29a6,24,24045,24637,C0O24045C2O24087C8O24094C13O24120C20O24138C25O24120C31O24146C32O24174C37O24187C38O24197C43O24208C48O24227C50O24237C55O24250C57O24260C58O24274C65O24291C71O24320C76O24332C83O24356C90O24371C92O24379C97O24394C99O24404C100O24410C104O24455C109O24455C115O24477C116O24495C119O24495C124O24524C126O24552C133O24558C138O24552C139O24610C156O24610C161O24634,,
code-creation,LazyCompile,10,398196,0x2968aaf2c66,499,getEncodingOps node:buffer:678:24,0xd800a788f0,~
code-source-info,0x2968aaf2c
code-creation,LazyCompile,10,398453,0x2968aaf304e,12,slice node:buffer:602:12,0xd800a775a0,~
code-source-info,0x2968aaf304e,24,17572,17618,C0O17597C5O17597C11O17618,,
code-creation,LazyCompile,10,398616,0x2968aaf3306,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0xa591c90940,~
code-source-info,0x2968aaf3306,108,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,398740,0x2968aaf3d66,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0xa591c908a0,~
code-source-info,0x2968aaf3d66,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,398834,0x2968aaf3ede,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0xa591c908f0,~
code-source-info,0x2968aaf3ede,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,399014,0x2968aaf4056,30,validateBoolean node:internal/validators:139:25,0x1ee2d4bca70,~
code-source-info,0x2968aaf4056,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,399099,0x2968aaf414e,10, node:internal/modules/esm/translators:42:63,0xa591cbca80,~
code-source-info,0x2968aaf414e,125,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,399251,0x2968aaf441e,72, file:///C:/Users/Seran/Documents/Backend/Loggers_Gzip/src/api/child.js:1:1,0x2968aaf4280,~
script-source,129,file:///C:/Users/Seran/Documents/Backend/Loggers_Gzip/src/api/child.js,let contador = 0\x0d\n\x0d\nprocess.on('message'\x2Cmsg => {\x0d\n    console.log('Mensaje del padre: '\x2C msg)\x0d\n    setInterval(() => {\x0d\n        console.log('contador: ' + contador++)\x0d\n    }\x2C1000)\x0d\n})\x0d\n
code-source-info,0x2968aaf441e,129,0,186,C10O0C20O0C40O0C44O15C45O15C47O20C51O28C64O28C71O186,,
code-creation,LazyCompile,10,399506,0x2968aaf47a6,5,get node:internal/bootstrap/pre_execution:305:8,0xa591c95d10,~
code-source-info,0x2968aaf47a6,95,10116,10151,C0O10128C4O10144,,
code-creation,LazyCompile,10,399631,0x2968aaf48c6,44,refCounted node:internal/child_process:539:13,0x281ca120f80,~
code-source-info,0x2968aaf48c6,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,399743,0x2968aaf49e6,15, node:internal/modules/esm/loader:334:15,0x2968aadc6d0,~
code-source-info,0x2968aaf49e6,114,10282,10319,C0O10285C5O10305C10O10305C14O10319,,
code-creation,LazyCompile,10,399954,0x2968aaf4b56,307,removeListener node:events:687:28,0xd800a6b8e8,~
code-source-info,0x2968aaf4b
code-creation,LazyCompile,10,400162,0x2968aaf4e3e,64,stopListeningIfSignal node:internal/process/signal:43:31,0x30b03abf848,~
code-source-info,0x2968aaf4e3e,92,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,400240,0x2968aaf4f86,30,onRemoveListener node:child_process:178:57,0xa591c867d8,~
code-source-info,0x2968aaf4f86,99,5433,5524,C0O5447C2O5456C9O5478C14O5496C19O5504C24O5504C29O5523,,
tick,0x7ffdc994fb34,406262,0,0x0,8
tick,0x7ffdc994fb34,422237,0,0x0,8
tick,0x7ffdc994fb34,437377,0,0x0,8
tick,0x7ffdc994fb34,453276,0,0x0,8
tick,0x7ffdc994fb34,468334,0,0x0,8
tick,0x7ffdc994fb34,483850,0,0x0,8
tick,0x7ffdc994fb34,499198,0,0x0,8
tick,0x7ffdc994fb34,515263,0,0x0,8
tick,0x7ffdc994fb34,531217,0,0x0,8
tick,0x7ffdc994fb34,546735,0,0x0,8
tick,0x7ffdc994fb34,562691,0,0x0,8
tick,0x7ffdc994fb34,578551,0,0x0,8
tick,0x7ffdc994fb34,594480,0,0x0,8
tick,0x7ffdc994fb34,610054,0,0x0,8
tick,0x7ffdc994fb34,625611,0,0x0,8
tick,0x7ffdc994fb34,641465,0,0x0,8
tick,0x7ffdc994fb34,657534,0,0x0,8
tick,0x7ffdc994fb34,673388,0,0x0,8
tick,0x7ffdc994fb34,689728,0,0x0,8
tick,0x7ffdc994fb34,705492,0,0x0,8
tick,0x7ffdc994fb34,721485,0,0x0,8
tick,0x7ffdc994fb34,736680,0,0x0,8
tick,0x7ffdc994fb34,752123,0,0x0,8
tick,0x7ffdc994fb34,767471,0,0x0,8
tick,0x7ffdc994fb34,783342,0,0x0,8
tick,0x7ffdc994fb34,799804,0,0x0,8
tick,0x7ffdc994fb34,814551,0,0x0,8
tick,0x7ffdc994fb34,829712,0,0x0,8
tick,0x7ffdc994fb34,845888,0,0x0,8
tick,0x7ffdc994fb34,861753,0,0x0,8
tick,0x7ffdc994fb34,877832,0,0x0,8
tick,0x7ffdc994fb34,893688,0,0x0,8
tick,0x7ffdc994fb34,908921,0,0x0,8
tick,0x7ffdc994fb34,924352,0,0x0,8
tick,0x7ffdc994fb34,940147,0,0x0,8
tick,0x7ffdc994fb34,955358,0,0x0,8
tick,0x7ffdc994fb34,971197,0,0x0,8
tick,0x7ffdc994fb34,986630,0,0x0,8
tick,0x7ffdc994fb34,1002114,0,0x0,8
tick,0x7ffdc994fb34,1018175,0,0x0,8
tick,0x7ffdc994fb34,1033966,0,0x0,8
tick,0x7ffdc994fb34,1049315,0,0x0,8
tick,0x7ffdc994fb34,1065103,0,0x0,8
tick,0x7ffdc994fb34,1081073,0,0x0,8
tick,0x7ffdc994fb34,1096710,0,0x0,8
tick,0x7ffdc994fb34,1112747,0,0x0,8
tick,0x7ffdc994fb34,1128149,0,0x0,8
tick,0x7ffdc994fb34,1143866,0,0x0,8
tick,0x7ffdc994fb34,1159212,0,0x0,8
tick,0x7ffdc994fb34,1175415,0,0x0,8
tick,0x7ffdc994fb34,1190536,0,0x0,8
tick,0x7ffdc994fb34,1205697,0,0x0,8
tick,0x7ffdc994fb34,1221419,0,0x0,8
tick,0x7ffdc994fb34,1236575,0,0x0,8
tick,0x7ffdc994fb34,1252269,0,0x0,8
tick,0x7ffdc994fb34,1267528,0,0x0,8
tick,0x7ffdc994fb34,1282717,0,0x0,8
tick,0x7ffdc994fb34,1298870,0,0x0,8
tick,0x7ffdc994fb34,1314758,0,0x0,8
tick,0x7ffdc994fb34,1329943,0,0x0,8
tick,0x7ffdc994fb34,1346170,0,0x0,8
tick,0x7ffdc994fb34,1361485,0,0x0,8
tick,0x7ffdc994fb34,1376732,0,0x0,8
tick,0x7ffdc994fb34,1392803,0,0x0,8
tick,0x7ffdc994fb34,1408941,0,0x0,8
tick,0x7ffdc994fb34,1424832,0,0x0,8
tick,0x7ffdc994fb34,1440330,0,0x0,8
tick,0x7ffdc994fb34,1455887,0,0x0,8
tick,0x7ffdc994fb34,1471388,0,0x0,8
tick,0x7ffdc994fb34,1487124,0,0x0,8
tick,0x7ffdc994fb34,1502062,0,0x0,8
tick,0x7ffdc994fb34,1517491,0,0x0,8
tick,0x7ffdc994fb34,1533533,0,0x0,8
tick,0x7ffdc994fb34,1548105,0,0x0,8
tick,0x7ffdc994fb34,1563875,0,0x0,8
tick,0x7ffdc994fb34,1579184,0,0x0,8
tick,0x7ffdc994fb34,1595155,0,0x0,8
tick,0x7ffdc994fb34,1610318,0,0x0,8
tick,0x7ffdc994fb34,1625849,0,0x0,8
tick,0x7ffdc994fb34,1641714,0,0x0,8
tick,0x7ffdc994fb34,1656729,0,0x0,8
tick,0x7ffdc994fb34,1671724,0,0x0,8
tick,0x7ffdc994fb34,1687481,0,0x0,8
tick,0x7ffdc994fb34,1702285,0,0x0,8
tick,0x7ffdc994fb34,1718039,0,0x0,8
tick,0x7ffdc994fb34,1733428,0,0x0,8
tick,0x7ffdc994fb34,1748587,0,0x0,8
tick,0x7ffdc994fb34,1764199,0,0x0,8
tick,0x7ffdc994fb34,1779819,0,0x0,8
tick,0x7ffdc994fb34,1795816,0,0x0,8
tick,0x7ffdc994fb34,1811914,0,0x0,8
tick,0x7ffdc994fb34,1827509,0,0x0,8
tick,0x7ffdc994fb34,1843687,0,0x0,8
tick,0x7ffdc994fb34,1859694,0,0x0,8
tick,0x7ffdc994fb34,1875606,0,0x0,8
tick,0x7ffdc994fb34,1891156,0,0x0,8
tick,0x7ffdc994fb34,1907116,0,0x0,8
tick,0x7ffdc994fb34,1922957,0,0x0,8
tick,0x7ffdc994fb34,1938412,0,0x0,8
tick,0x7ffdc994fb34,1954549,0,0x0,8
tick,0x7ffdc994fb34,1970173,0,0x0,8
tick,0x7ffdc994fb34,1985484,0,0x0,8
tick,0x7ffdc994fb34,2001512,0,0x0,8
tick,0x7ffdc994fb34,2016968,0,0x0,8
tick,0x7ffdc994fb34,2033103,0,0x0,8
tick,0x7ffdc994fb34,2048325,0,0x0,8
tick,0x7ffdc994fb34,2063818,0,0x0,8
tick,0x7ffdc994fb34,2079570,0,0x0,8
tick,0x7ffdc994fb34,2095117,0,0x0,8
tick,0x7ffdc994fb34,2110480,0,0x0,8
tick,0x7ffdc994fb34,2126504,0,0x0,8
tick,0x7ffdc994fb34,2142177,0,0x0,8
tick,0x7ffdc994fb34,2157203,0,0x0,8
tick,0x7ffdc994fb34,2173208,0,0x0,8
tick,0x7ffdc994fb34,2188493,0,0x0,8
tick,0x7ffdc994fb34,2204595,0,0x0,8
tick,0x7ffdc994fb34,2220495,0,0x0,8
tick,0x7ffdc994fb34,2236027,0,0x0,8
tick,0x7ffdc994fb34,2252160,0,0x0,8
tick,0x7ffdc994fb34,2268150,0,0x0,8
tick,0x7ffdc994fb34,2283370,0,0x0,8
tick,0x7ffdc994fb34,2299481,0,0x0,8
tick,0x7ffdc994fb34,2314702,0,0x0,8
tick,0x7ffdc994fb34,2329819,0,0x0,8
tick,0x7ffdc994fb34,2344909,0,0x0,8
tick,0x7ffdc994fb34,2360535,0,0x0,8
tick,0x7ffdc994fb34,2376809,0,0x0,8
tick,0x7ffdc994fb34,2391363,0,0x0,8
tick,0x7ffdc994fb34,2406860,0,0x0,8
tick,0x7ffdc994fb34,2422590,0,0x0,8
tick,0x7ffdc994fb34,2438064,0,0x0,8
tick,0x7ffdc994fb34,2453315,0,0x0,8
tick,0x7ffdc994fb34,2469000,0,0x0,8
tick,0x7ffdc994fb34,2484969,0,0x0,8
tick,0x7ffdc994fb34,2500558,0,0x0,8
tick,0x7ffdc994fb34,2516407,0,0x0,8
tick,0x7ffdc994fb34,2532046,0,0x0,8
tick,0x7ffdc994fb34,2547325,0,0x0,8
tick,0x7ffdc994fb34,2562230,0,0x0,8
tick,0x7ffdc994fb34,2578090,0,0x0,8
tick,0x7ffdc994fb34,2593647,0,0x0,8
tick,0x7ffdc994fb34,2608800,0,0x0,8
tick,0x7ffdc994fb34,2624541,0,0x0,8
tick,0x7ffdc994fb34,2640315,0,0x0,8
tick,0x7ffdc994fb34,2656164,0,0x0,8
tick,0x7ffdc994fb34,2671528,0,0x0,8
tick,0x7ffdc994fb34,2686813,0,0x0,8
tick,0x7ffdc994fb34,2702312,0,0x0,8
tick,0x7ffdc994fb34,2717869,0,0x0,8
tick,0x7ffdc994fb34,2733681,0,0x0,8
tick,0x7ffdc994fb34,2749108,0,0x0,8
tick,0x7ffdc994fb34,2764969,0,0x0,8
tick,0x7ffdc994fb34,2780693,0,0x0,8
tick,0x7ffdc994fb34,2796696,0,0x0,8
tick,0x7ffdc994fb34,2812189,0,0x0,8
tick,0x7ffdc994fb34,2828467,0,0x0,8
tick,0x7ffdc994fb34,2844346,0,0x0,8
tick,0x7ffdc994fb34,2859556,0,0x0,8
tick,0x7ffdc994fb34,2874903,0,0x0,8
tick,0x7ffdc994fb34,2890292,0,0x0,8
tick,0x7ffdc994fb34,2905751,0,0x0,8
tick,0x7ffdc994fb34,2921478,0,0x0,8
tick,0x7ffdc994fb34,2936986,0,0x0,8
tick,0x7ffdc994fb34,2952722,0,0x0,8
tick,0x7ffdc994fb34,2968435,0,0x0,8
tick,0x7ffdc994fb34,2983297,0,0x0,8
tick,0x7ffdc994fb34,2999041,0,0x0,8
tick,0x7ffdc994fb34,3015968,0,0x0,8
tick,0x7ffdc994fb34,3030215,0,0x0,8
tick,0x7ffdc994fb34,3046146,0,0x0,8
tick,0x7ffdc994fb34,3061807,0,0x0,8
tick,0x7ffdc994fb34,3077176,0,0x0,8
tick,0x7ffdc994fb34,3092626,0,0x0,8
tick,0x7ffdc994fb34,3107917,0,0x0,8
tick,0x7ffdc994fb34,3123059,0,0x0,8
tick,0x7ffdc994fb34,3138627,0,0x0,8
tick,0x7ffdc994fb34,3153683,0,0x0,8
tick,0x7ffdc994fb34,3169451,0,0x0,8
tick,0x7ffdc994fb34,3184669,0,0x0,8
tick,0x7ffdc994fb34,3200655,0,0x0,8
tick,0x7ffdc994fb34,3216869,0,0x0,8
tick,0x7ffdc994fb34,3232222,0,0x0,8
tick,0x7ffdc994fb34,3248674,0,0x0,8
tick,0x7ffdc994fb34,3263680,0,0x0,8
tick,0x7ffdc994fb34,3279958,0,0x0,8
tick,0x7ffdc994fb34,3294878,0,0x0,8
tick,0x7ffdc994fb34,3310955,0,0x0,8
tick,0x7ffdc994fb34,3326688,0,0x0,8
tick,0x7ffdc994fb34,3342139,0,0x0,8
tick,0x7ffdc994fb34,3357614,0,0x0,8
tick,0x7ffdc994fb34,3373248,0,0x0,8
tick,0x7ffdc994fb34,3388548,0,0x0,8
tick,0x7ffdc994fb34,3404974,0,0x0,8
tick,0x7ffdc994fb34,3420017,0,0x0,8
tick,0x7ffdc994fb34,3435663,0,0x0,8
tick,0x7ffdc994fb34,3451135,0,0x0,8
tick,0x7ffdc994fb34,3466600,0,0x0,8
tick,0x7ffdc994fb34,3482808,0,0x0,8
tick,0x7ffdc994fb34,3499053,0,0x0,8
tick,0x7ffdc994fb34,3514228,0,0x0,8
tick,0x7ffdc994fb34,3529820,0,0x0,8
tick,0x7ffdc994fb34,3545430,0,0x0,8
tick,0x7ffdc994fb34,3561086,0,0x0,8
tick,0x7ffdc994fb34,3576630,0,0x0,8
tick,0x7ffdc994fb34,3591990,0,0x0,8
tick,0x7ffdc994fb34,3606918,0,0x0,8
tick,0x7ffdc994fb34,3623093,0,0x0,8
tick,0x7ffdc994fb34,3638847,0,0x0,8
tick,0x7ffdc994fb34,3653530,0,0x0,8
tick,0x7ffdc994fb34,3669369,0,0x0,8
tick,0x7ffdc994fb34,3685042,0,0x0,8
tick,0x7ffdc994fb34,3700612,0,0x0,8
tick,0x7ffdc994fb34,3716226,0,0x0,8
tick,0x7ffdc994fb34,3731540,0,0x0,8
tick,0x7ffdc994fb34,3746980,0,0x0,8
tick,0x7ffdc994fb34,3762590,0,0x0,8
tick,0x7ffdc994fb34,3777927,0,0x0,8
tick,0x7ffdc994fb34,3793095,0,0x0,8
tick,0x7ffdc994fb34,3808403,0,0x0,8
tick,0x7ffdc994fb34,3823507,0,0x0,8
tick,0x7ffdc994fb34,3839259,0,0x0,8
tick,0x7ffdc994fb34,3855277,0,0x0,8
tick,0x7ffdc994fb34,3870438,0,0x0,8
tick,0x7ffdc994fb34,3886564,0,0x0,8
tick,0x7ffdc994fb34,3901913,0,0x0,8
tick,0x7ffdc994fb34,3918090,0,0x0,8
tick,0x7ffdc994fb34,3933035,0,0x0,8
tick,0x7ffdc994fb34,3949245,0,0x0,8
tick,0x7ffdc994fb34,3964338,0,0x0,8
tick,0x7ffdc994fb34,3980330,0,0x0,8
tick,0x7ffdc994fb34,3996302,0,0x0,8
tick,0x7ffdc994fb34,4012137,0,0x0,8
tick,0x7ffdc994fb34,4027967,0,0x0,8
tick,0x7ffdc994fb34,4044151,0,0x0,8
tick,0x7ffdc994fb34,4059199,0,0x0,8
tick,0x7ffdc994fb34,4074330,0,0x0,8
tick,0x7ffdc994fb34,4090186,0,0x0,8
tick,0x7ffdc994fb34,4105315,0,0x0,8
tick,0x7ffdc994fb34,4120860,0,0x0,8
tick,0x7ffdc994fb34,4136144,0,0x0,8
tick,0x7ffdc994fb34,4151650,0,0x0,8
tick,0x7ffdc994fb34,4166626,0,0x0,8
tick,0x7ffdc994fb34,4182768,0,0x0,8
tick,0x7ffdc994fb34,4198189,0,0x0,8
tick,0x7ffdc994fb34,4214060,0,0x0,8
tick,0x7ffdc994fb34,4230177,0,0x0,8
tick,0x7ffdc994fb34,4245717,0,0x0,8
tick,0x7ffdc994fb34,4261450,0,0x0,8
tick,0x7ffdc994fb34,4277417,0,0x0,8
tick,0x7ffdc994fb34,4293542,0,0x0,8
tick,0x7ffdc994fb34,4309294,0,0x0,8
tick,0x7ffdc994fb34,4324610,0,0x0,8
tick,0x7ffdc994fb34,4339833,0,0x0,8
tick,0x7ffdc994fb34,4355120,0,0x0,8
tick,0x7ffdc994fb34,4375151,0,0x0,8
tick,0x7ffdc994fb34,4408845,0,0x0,8
tick,0x7ffdc994fb34,4415609,0,0x0,8
tick,0x7ffdc994fb34,4417264,0,0x0,8
tick,0x7ffdc994fb34,4431816,0,0x0,8
tick,0x7ffdc994fb34,4446720,0,0x0,8
tick,0x7ffdc994fb34,4462188,0,0x0,8
tick,0x7ffdc994fb34,4478350,0,0x0,8
tick,0x7ffdc994fb34,4497403,0,0x0,8
tick,0x7ffdc994fb34,4514142,0,0x0,8
tick,0x7ffdc994fb34,4526874,0,0x0,8
tick,0x7ffdc994fb34,4548730,0,0x0,8
tick,0x7ffdc994fb34,4566456,0,0x0,8
tick,0x7ffdc994fb34,4571685,0,0x0,8
tick,0x7ffdc994fb34,4588328,0,0x0,8
tick,0x7ffdc994fb34,4602009,0,0x0,8
tick,0x7ffdc994fb34,4618125,0,0x0,8
tick,0x7ffdc994fb34,4633251,0,0x0,8
tick,0x7ffdc994fb34,4649115,0,0x0,8
tick,0x7ffdc994fb34,4665666,0,0x0,8
tick,0x7ffdc994fb34,4681577,0,0x0,8
tick,0x7ffdc994fb34,4697404,0,0x0,8
tick,0x7ffdc994fb34,4712598,0,0x0,8
tick,0x7ffdc994fb34,4728808,0,0x0,8
tick,0x7ffdc994fb34,4744598,0,0x0,8
tick,0x7ffdc994fb34,4759686,0,0x0,8
tick,0x7ffdc994fb34,4776826,0,0x0,8
tick,0x7ffdc994fb34,4790827,0,0x0,8
tick,0x7ffdc994fb34,4806259,0,0x0,8
tick,0x7ffdc994fb34,4822001,0,0x0,8
tick,0x7ffdc994fb34,4836741,0,0x0,8
tick,0x7ffdc994fb34,4852384,0,0x0,8
tick,0x7ffdc994fb34,4867697,0,0x0,8
tick,0x7ffdc994fb34,4883400,0,0x0,8
tick,0x7ffdc994fb34,4898727,0,0x0,8
tick,0x7ffdc994fb34,4913840,0,0x0,8
tick,0x7ffdc994fb34,4929515,0,0x0,8
tick,0x7ffdc994fb34,4945281,0,0x0,8
tick,0x7ffdc994fb34,4961447,0,0x0,8
tick,0x7ffdc994fb34,4977469,0,0x0,8
tick,0x7ffdc994fb34,4992320,0,0x0,8
tick,0x7ffdc994fb34,5007867,0,0x0,8
tick,0x7ffdc994fb34,5023086,0,0x0,8
tick,0x7ffdc994fb34,5038991,0,0x0,8
tick,0x7ffdc994fb34,5054184,0,0x0,8
tick,0x7ffdc994fb34,5069415,0,0x0,8
tick,0x7ffdc994fb34,5084628,0,0x0,8
tick,0x7ffdc994fb34,5100346,0,0x0,8
tick,0x7ffdc994fb34,5115943,0,0x0,8
tick,0x7ffdc994fb34,5131212,0,0x0,8
tick,0x7ffdc994fb34,5146568,0,0x0,8
tick,0x7ffdc994fb34,5162614,0,0x0,8
tick,0x7ffdc994fb34,5177795,0,0x0,8
tick,0x7ffdc994fb34,5193167,0,0x0,8
tick,0x7ffdc994fb34,5208473,0,0x0,8
tick,0x7ffdc994fb34,5223583,0,0x0,8
tick,0x7ffdc994fb34,5238771,0,0x0,8
tick,0x7ffdc994fb34,5253776,0,0x0,8
tick,0x7ffdc994fb34,5269184,0,0x0,8
tick,0x7ffdc994fb34,5285122,0,0x0,8
tick,0x7ffdc994fb34,5301464,0,0x0,8
tick,0x7ffdc994fb34,5317398,0,0x0,8
tick,0x7ffdc994fb34,5333447,0,0x0,8
tick,0x7ffdc994fb34,5348761,0,0x0,8
tick,0x7ffdc994fb34,5364119,0,0x0,8
tick,0x7ffdc994fb34,5379529,0,0x0,8
tick,0x7ffdc994fb34,5395117,0,0x0,8
tick,0x7ffdc994fb34,5411016,0,0x0,8
tick,0x7ffdc994fb34,5426536,0,0x0,8
tick,0x7ffdc994fb34,5441759,0,0x0,8
tick,0x7ffdc994fb34,5457219,0,0x0,8
tick,0x7ffdc994fb34,5472406,0,0x0,8
tick,0x7ffdc994fb34,5487873,0,0x0,8
tick,0x7ffdc994fb34,5503743,0,0x0,8
tick,0x7ffdc994fb34,5519479,0,0x0,8
tick,0x7ffdc994fb34,5534880,0,0x0,8
tick,0x7ffdc994fb34,5550805,0,0x0,8
tick,0x7ffdc994fb34,5565686,0,0x0,8
tick,0x7ffdc994fb34,5581150,0,0x0,8
tick,0x7ffdc994fb34,5597342,0,0x0,8
tick,0x7ffdc994fb34,5612533,0,0x0,8
tick,0x7ffdc994fb34,5627906,0,0x0,8
tick,0x7ffdc994fb34,5643352,0,0x0,8
tick,0x7ffdc994fb34,5659399,0,0x0,8
tick,0x7ffdc994fb34,5675639,0,0x0,8
tick,0x7ffdc994fb34,5690999,0,0x0,8
tick,0x7ffdc994fb34,5706362,0,0x0,8
tick,0x7ffdc994fb34,5722291,0,0x0,8
tick,0x7ffdc994fb34,5737115,0,0x0,8
tick,0x7ffdc994fb34,5752416,0,0x0,8
tick,0x7ffdc994fb34,5768082,0,0x0,8
tick,0x7ffdc994fb34,5783162,0,0x0,8
tick,0x7ffdc994fb34,5798576,0,0x0,8
tick,0x7ffdc994fb34,5814414,0,0x0,8
tick,0x7ffdc994fb34,5830195,0,0x0,8
tick,0x7ffdc994fb34,5845724,0,0x0,8
tick,0x7ffdc994fb34,5861283,0,0x0,8
tick,0x7ffdc994fb34,5876897,0,0x0,8
tick,0x7ffdc994fb34,5892394,0,0x0,8
tick,0x7ffdc994fb34,5908093,0,0x0,8
tick,0x7ffdc994fb34,5923317,0,0x0,8
tick,0x7ffdc994fb34,5939110,0,0x0,8
tick,0x7ffdc994fb34,5954552,0,0x0,8
tick,0x7ffdc994fb34,5970130,0,0x0,8
tick,0x7ffdc994fb34,5985583,0,0x0,8
tick,0x7ffdc994fb34,6001064,0,0x0,8
tick,0x7ffdc994fb34,6016401,0,0x0,8
tick,0x7ffdc994fb34,6032153,0,0x0,8
tick,0x7ffdc994fb34,6047982,0,0x0,8
tick,0x7ffdc994fb34,6063626,0,0x0,8
tick,0x7ffdc994fb34,6079473,0,0x0,8
tick,0x7ffdc994fb34,6095559,0,0x0,8
tick,0x7ffdc994fb34,6110831,0,0x0,8
tick,0x7ffdc994fb34,6125963,0,0x0,8
tick,0x7ffdc994fb34,6141648,0,0x0,8
tick,0x7ffdc994fb34,6157373,0,0x0,8
tick,0x7ffdc994fb34,6173035,0,0x0,8
tick,0x7ffdc994fb34,6188322,0,0x0,8
tick,0x7ffdc994fb34,6203570,0,0x0,8
tick,0x7ffdc994fb34,6218555,0,0x0,8
tick,0x7ffdc994fb34,6234591,0,0x0,8
tick,0x7ffdc994fb34,6249860,0,0x0,8
tick,0x7ffdc994fb34,6265286,0,0x0,8
tick,0x7ffdc994fb34,6280850,0,0x0,8
tick,0x7ffdc994fb34,6295747,0,0x0,8
tick,0x7ffdc994fb34,6311347,0,0x0,8
tick,0x7ffdc994fb34,6327044,0,0x0,8
tick,0x7ffdc994fb34,6343029,0,0x0,8
tick,0x7ffdc994fb34,6358630,0,0x0,8
tick,0x7ffdc994fb34,6373892,0,0x0,8
tick,0x7ffdc994fb34,6389597,0,0x0,8
tick,0x7ffdc994fb34,6404877,0,0x0,8
tick,0x7ffdc994fb34,6420610,0,0x0,8
tick,0x7ffdc994fb34,6436051,0,0x0,8
tick,0x7ffdc994fb34,6451716,0,0x0,8
tick,0x7ffdc994fb34,6466854,0,0x0,8
tick,0x7ffdc994fb34,6482583,0,0x0,8
tick,0x7ffdc994fb34,6497964,0,0x0,8
tick,0x7ffdc994fb34,6513192,0,0x0,8
tick,0x7ffdc994fb34,6528671,0,0x0,8
tick,0x7ffdc994fb34,6544647,0,0x0,8
tick,0x7ffdc994fb34,6560245,0,0x0,8
tick,0x7ffdc994fb34,6575747,0,0x0,8
tick,0x7ffdc994fb34,6591589,0,0x0,8
tick,0x7ffdc994fb34,6607387,0,0x0,8
tick,0x7ffdc994fb34,6623411,0,0x0,8
tick,0x7ffdc994fb34,6639130,0,0x0,8
tick,0x7ffdc994fb34,6654377,0,0x0,8
tick,0x7ffdc994fb34,6669760,0,0x0,8
tick,0x7ffdc994fb34,6685537,0,0x0,8
tick,0x7ffdc994fb34,6701093,0,0x0,8
tick,0x7ffdc994fb34,6716463,0,0x0,8
tick,0x7ffdc994fb34,6731802,0,0x0,8
tick,0x7ffdc994fb34,6747426,0,0x0,8
tick,0x7ffdc994fb34,6763131,0,0x0,8
tick,0x7ffdc994fb34,6778575,0,0x0,8
tick,0x7ffdc994fb34,6793433,0,0x0,8
tick,0x7ffdc994fb34,6809590,0,0x0,8
tick,0x7ffdc994fb34,6824577,0,0x0,8
tick,0x7ffdc994fb34,6840125,0,0x0,8
tick,0x7ffdc994fb34,6855446,0,0x0,8
tick,0x7ffdc994fb34,6870820,0,0x0,8
tick,0x7ffdc994fb34,6886575,0,0x0,8
tick,0x7ffdc994fb34,6901955,0,0x0,8
tick,0x7ffdc994fb34,6917179,0,0x0,8
tick,0x7ffdc994fb34,6933075,0,0x0,8
tick,0x7ffdc994fb34,6948497,0,0x0,8
tick,0x7ffdc994fb34,6963896,0,0x0,8
tick,0x7ffdc994fb34,6979468,0,0x0,8
tick,0x7ffdc994fb34,6995489,0,0x0,8
tick,0x7ffdc994fb34,7011115,0,0x0,8
tick,0x7ffdc994fb34,7026183,0,0x0,8
tick,0x7ffdc994fb34,7042433,0,0x0,8
tick,0x7ffdc994fb34,7058359,0,0x0,8
tick,0x7ffdc994fb34,7074471,0,0x0,8
tick,0x7ffdc994fb34,7090312,0,0x0,8
tick,0x7ffdc994fb34,7105465,0,0x0,8
tick,0x7ffdc994fb34,7121116,0,0x0,8
tick,0x7ffdc994fb34,7136526,0,0x0,8
tick,0x7ffdc994fb34,7152532,0,0x0,8
tick,0x7ffdc994fb34,7167697,0,0x0,8
tick,0x7ffdc994fb34,7183333,0,0x0,8
tick,0x7ffdc994fb34,7198992,0,0x0,8
tick,0x7ffdc994fb34,7214569,0,0x0,8
tick,0x7ffdc994fb34,7230168,0,0x0,8
tick,0x7ffdc994fb34,7245815,0,0x0,8
tick,0x7ffdc994fb34,7261693,0,0x0,8
tick,0x7ffdc994fb34,7276939,0,0x0,8
tick,0x7ffdc994fb34,7292553,0,0x0,8
tick,0x7ffdc994fb34,7308778,0,0x0,8
tick,0x7ffdc994fb34,7324786,0,0x0,8
tick,0x7ffdc994fb34,7339911,0,0x0,8
tick,0x7ffdc994fb34,7355183,0,0x0,8
tick,0x7ffdc994fb34,7370417,0,0x0,8
tick,0x7ffdc994fb34,7386387,0,0x0,8
tick,0x7ffdc994fb34,7401598,0,0x0,8
tick,0x7ffdc994fb34,7417237,0,0x0,8
tick,0x7ffdc994fb34,7433140,0,0x0,8
tick,0x7ffdc994fb34,7448763,0,0x0,8
tick,0x7ffdc994fb34,7464334,0,0x0,8
tick,0x7ffdc994fb34,7479594,0,0x0,8
tick,0x7ffdc994fb34,7494311,0,0x0,8
tick,0x7ffdc994fb34,7509595,0,0x0,8
tick,0x7ffdc994fb34,7525618,0,0x0,8
tick,0x7ffdc994fb34,7541449,0,0x0,8
tick,0x7ffdc994fb34,7557047,0,0x0,8
tick,0x7ffdc994fb34,7572532,0,0x0,8
tick,0x7ffdc994fb34,7588401,0,0x0,8
tick,0x7ffdc994fb34,7604163,0,0x0,8
tick,0x7ffdc994fb34,7619346,0,0x0,8
tick,0x7ffdc994fb34,7635104,0,0x0,8
tick,0x7ffdc994fb34,7650169,0,0x0,8
tick,0x7ffdc994fb34,7666010,0,0x0,8
tick,0x7ffdc994fb34,7682092,0,0x0,8
tick,0x7ffdc994fb34,7697538,0,0x0,8
tick,0x7ffdc994fb34,7712550,0,0x0,8
tick,0x7ffdc994fb34,7727952,0,0x0,8
tick,0x7ffdc994fb34,7743486,0,0x0,8
tick,0x7ffdc994fb34,7759274,0,0x0,8
tick,0x7ffdc994fb34,7774881,0,0x0,8
tick,0x7ffdc994fb34,7790276,0,0x0,8
tick,0x7ffdc994fb34,7805744,0,0x0,8
tick,0x7ffdc994fb34,7821271,0,0x0,8
tick,0x7ffdc994fb34,7836659,0,0x0,8
tick,0x7ffdc994fb34,7852257,0,0x0,8
tick,0x7ffdc994fb34,7867698,0,0x0,8
tick,0x7ffdc994fb34,7883441,0,0x0,8
tick,0x7ffdc994fb34,7899243,0,0x0,8
tick,0x7ffdc994fb34,7914602,0,0x0,8
tick,0x7ffdc994fb34,7930644,0,0x0,8
tick,0x7ffdc994fb34,7946826,0,0x0,8
tick,0x7ffdc994fb34,7962316,0,0x0,8
tick,0x7ffdc994fb34,7978184,0,0x0,8
tick,0x7ffdc994fb34,7993425,0,0x0,8
tick,0x7ffdc994fb34,8009054,0,0x0,8
tick,0x7ffdc994fb34,8025078,0,0x0,8
tick,0x7ffdc994fb34,8040585,0,0x0,8
tick,0x7ffdc994fb34,8056341,0,0x0,8
tick,0x7ffdc994fb34,8071383,0,0x0,8
tick,0x7ffdc994fb34,8087067,0,0x0,8
tick,0x7ffdc994fb34,8102432,0,0x0,8
tick,0x7ffdc994fb34,8118007,0,0x0,8
tick,0x7ffdc994fb34,8133524,0,0x0,8
tick,0x7ffdc994fb34,8148860,0,0x0,8
tick,0x7ffdc994fb34,8164963,0,0x0,8
tick,0x7ffdc994fb34,8180743,0,0x0,8
tick,0x7ffdc994fb34,8196239,0,0x0,8
tick,0x7ffdc994fb34,8211971,0,0x0,8
tick,0x7ffdc994fb34,8228160,0,0x0,8
tick,0x7ffdc994fb34,8243563,0,0x0,8
tick,0x7ffdc994fb34,8259244,0,0x0,8
tick,0x7ffdc994fb34,8275844,0,0x0,8
tick,0x7ffdc994fb34,8290913,0,0x0,8
tick,0x7ffdc994fb34,8306355,0,0x0,8
tick,0x7ffdc994fb34,8321644,0,0x0,8
tick,0x7ffdc994fb34,8337181,0,0x0,8
tick,0x7ffdc994fb34,8352788,0,0x0,8
tick,0x7ffdc994fb34,8367900,0,0x0,8
tick,0x7ffdc994fb34,8383590,0,0x0,8
tick,0x7ffdc994fb34,8398871,0,0x0,8
tick,0x7ffdc994fb34,8415204,0,0x0,8
tick,0x7ffdc994fb34,8431277,0,0x0,8
tick,0x7ffdc994fb34,8447227,0,0x0,8
tick,0x7ffdc994fb34,8463051,0,0x0,8
tick,0x7ffdc994fb34,8478662,0,0x0,8
tick,0x7ffdc994fb34,8494459,0,0x0,8
tick,0x7ffdc994fb34,8510254,0,0x0,8
tick,0x7ffdc994fb34,8525983,0,0x0,8
tick,0x7ffdc994fb34,8541014,0,0x0,8
tick,0x7ffdc994fb34,8556576,0,0x0,8
tick,0x7ffdc994fb34,8572420,0,0x0,8
tick,0x7ffdc994fb34,8587866,0,0x0,8
tick,0x7ffdc994fb34,8603730,0,0x0,8
tick,0x7ffdc994fb34,8619586,0,0x0,8
tick,0x7ffdc994fb34,8635297,0,0x0,8
tick,0x7ffdc994fb34,8651188,0,0x0,8
tick,0x7ffdc994fb34,8666770,0,0x0,8
tick,0x7ffdc994fb34,8682574,0,0x0,8
tick,0x7ffdc994fb34,8697864,0,0x0,8
tick,0x7ffdc994fb34,8713092,0,0x0,8
tick,0x7ffdc994fb34,8728979,0,0x0,8
tick,0x7ffdc994fb34,8744277,0,0x0,8
tick,0x7ffdc994fb34,8759979,0,0x0,8
tick,0x7ffdc994fb34,8775906,0,0x0,8
tick,0x7ffdc994fb34,8791521,0,0x0,8
tick,0x7ffdc994fb34,8807683,0,0x0,8
tick,0x7ffdc994fb34,8823416,0,0x0,8
tick,0x7ffdc994fb34,8839233,0,0x0,8
tick,0x7ffdc994fb34,8854571,0,0x0,8
tick,0x7ffdc994fb34,8870507,0,0x0,8
tick,0x7ffdc994fb34,8886555,0,0x0,8
tick,0x7ffdc994fb34,8901802,0,0x0,8
tick,0x7ffdc994fb34,8917736,0,0x0,8
tick,0x7ffdc994fb34,8933420,0,0x0,8
tick,0x7ffdc994fb34,8948737,0,0x0,8
tick,0x7ffdc994fb34,8964173,0,0x0,8
tick,0x7ffdc994fb34,8979874,0,0x0,8
tick,0x7ffdc994fb34,8995714,0,0x0,8
tick,0x7ffdc994fb34,9010895,0,0x0,8
tick,0x7ffdc994fb34,9027046,0,0x0,8
tick,0x7ffdc994fb34,9042612,0,0x0,8
tick,0x7ffdc994fb34,9058183,0,0x0,8
tick,0x7ffdc994fb34,9073463,0,0x0,8
tick,0x7ffdc994fb34,9088921,0,0x0,8
tick,0x7ffdc994fb34,9104144,0,0x0,8
tick,0x7ffdc994fb34,9119485,0,0x0,8
tick,0x7ffdc994fb34,9134925,0,0x0,8
tick,0x7ffdc994fb34,9150764,0,0x0,8
tick,0x7ffdc994fb34,9165906,0,0x0,8
tick,0x7ffdc994fb34,9181440,0,0x0,8
tick,0x7ffdc994fb34,9196822,0,0x0,8
tick,0x7ffdc994fb34,9211916,0,0x0,8
tick,0x7ffdc994fb34,9226836,0,0x0,8
tick,0x7ffdc994fb34,9242460,0,0x0,8
tick,0x7ffdc994fb34,9258420,0,0x0,8
tick,0x7ffdc994fb34,9274230,0,0x0,8
tick,0x7ffdc994fb34,9289646,0,0x0,8
tick,0x7ffdc994fb34,9304945,0,0x0,8
tick,0x7ffdc994fb34,9320505,0,0x0,8
tick,0x7ffdc994fb34,9336332,0,0x0,8
tick,0x7ffdc994fb34,9352200,0,0x0,8
tick,0x7ffdc994fb34,9367862,0,0x0,8
tick,0x7ffdc994fb34,9383594,0,0x0,8
tick,0x7ffdc994fb34,9399688,0,0x0,8
tick,0x7ffdc994fb34,9415657,0,0x0,8
tick,0x7ffdc994fb34,9431484,0,0x0,8
tick,0x7ffdc994fb34,9447248,0,0x0,8
tick,0x7ffdc994fb34,9462290,0,0x0,8
tick,0x7ffdc994fb34,9477635,0,0x0,8
tick,0x7ffdc994fb34,9492827,0,0x0,8
tick,0x7ffdc994fb34,9508300,0,0x0,8
tick,0x7ffdc994fb34,9524277,0,0x0,8
tick,0x7ffdc994fb34,9539844,0,0x0,8
tick,0x7ffdc994fb34,9555782,0,0x0,8
tick,0x7ffdc994fb34,9571047,0,0x0,8
tick,0x7ffdc994fb34,9586278,0,0x0,8
tick,0x7ffdc994fb34,9601847,0,0x0,8
tick,0x7ffdc994fb34,9618003,0,0x0,8
tick,0x7ffdc994fb34,9633882,0,0x0,8
tick,0x7ffdc994fb34,9650219,0,0x0,8
tick,0x7ffdc994fb34,9665211,0,0x0,8
tick,0x7ffdc994fb34,9681124,0,0x0,8
tick,0x7ffdc994fb34,9696784,0,0x0,8
tick,0x7ffdc994fb34,9711988,0,0x0,8
tick,0x7ffdc994fb34,9727849,0,0x0,8
tick,0x7ffdc994fb34,9744021,0,0x0,8
tick,0x7ffdc994fb34,9759639,0,0x0,8
tick,0x7ffdc994fb34,9775381,0,0x0,8
tick,0x7ffdc994fb34,9791070,0,0x0,8
tick,0x7ffdc994fb34,9806995,0,0x0,8
tick,0x7ffdc994fb34,9822762,0,0x0,8
tick,0x7ffdc994fb34,9837703,0,0x0,8
tick,0x7ffdc994fb34,9853204,0,0x0,8
tick,0x7ffdc994fb34,9869184,0,0x0,8
tick,0x7ffdc994fb34,9884512,0,0x0,8
tick,0x7ffdc994fb34,9900667,0,0x0,8
tick,0x7ffdc994fb34,9916409,0,0x0,8
tick,0x7ffdc994fb34,9932201,0,0x0,8
tick,0x7ffdc994fb34,9948174,0,0x0,8
tick,0x7ffdc994fb34,9963501,0,0x0,8
tick,0x7ffdc994fb34,9979127,0,0x0,8
tick,0x7ffdc994fb34,9994782,0,0x0,8
tick,0x7ffdc994fb34,10010770,0,0x0,8
tick,0x7ffdc994fb34,10026248,0,0x0,8
tick,0x7ffdc994fb34,10041358,0,0x0,8
tick,0x7ffdc994fb34,10056738,0,0x0,8
tick,0x7ffdc994fb34,10072476,0,0x0,8
tick,0x7ffdc994fb34,10087808,0,0x0,8
tick,0x7ffdc994fb34,10103351,0,0x0,8
tick,0x7ffdc994fb34,10119199,0,0x0,8
tick,0x7ffdc994fb34,10134605,0,0x0,8
tick,0x7ffdc994fb34,10150128,0,0x0,8
tick,0x7ffdc994fb34,10165571,0,0x0,8
tick,0x7ffdc994fb34,10180987,0,0x0,8
tick,0x7ffdc994fb34,10197300,0,0x0,8
tick,0x7ffdc994fb34,10213058,0,0x0,8
tick,0x7ffdc994fb34,10228670,0,0x0,8
tick,0x7ffdc994fb34,10243794,0,0x0,8
tick,0x7ffdc994fb34,10259356,0,0x0,8
tick,0x7ffdc994fb34,10274544,0,0x0,8
tick,0x7ffdc994fb34,10290026,0,0x0,8
tick,0x7ffdc994fb34,10306113,0,0x0,8
tick,0x7ffdc994fb34,10321191,0,0x0,8
tick,0x7ffdc994fb34,10336388,0,0x0,8
tick,0x7ffdc994fb34,10351761,0,0x0,8
tick,0x7ffdc994fb34,10367382,0,0x0,8
tick,0x7ffdc994fb34,10383207,0,0x0,8
tick,0x7ffdc994fb34,10398366,0,0x0,8
tick,0x7ffdc994fb34,10413823,0,0x0,8
tick,0x7ffdc994fb34,10429462,0,0x0,8
tick,0x7ffdc994fb34,10445534,0,0x0,8
tick,0x7ffdc994fb34,10461029,0,0x0,8
tick,0x7ffdc994fb34,10476819,0,0x0,8
tick,0x7ffdc994fb34,10492130,0,0x0,8
tick,0x7ffdc994fb34,10507476,0,0x0,8
tick,0x7ffdc994fb34,10522815,0,0x0,8
tick,0x7ffdc994fb34,10538222,0,0x0,8
tick,0x7ffdc994fb34,10553797,0,0x0,8
tick,0x7ffdc994fb34,10569957,0,0x0,8
tick,0x7ffdc994fb34,10585051,0,0x0,8
tick,0x7ffdc994fb34,10600454,0,0x0,8
tick,0x7ffdc994fb34,10615958,0,0x0,8
tick,0x7ffdc994fb34,10631391,0,0x0,8
tick,0x7ffdc994fb34,10646686,0,0x0,8
tick,0x7ffdc994fb34,10662650,0,0x0,8
tick,0x7ffdc994fb34,10678503,0,0x0,8
tick,0x7ffdc994fb34,10694787,0,0x0,8
tick,0x7ffdc994fb34,10710361,0,0x0,8
tick,0x7ffdc994fb34,10725593,0,0x0,8
tick,0x7ffdc994fb34,10740750,0,0x0,8
tick,0x7ffdc994fb34,10756105,0,0x0,8
tick,0x7ffdc994fb34,10771936,0,0x0,8
tick,0x7ffdc994fb34,10787746,0,0x0,8
tick,0x7ffdc994fb34,10803410,0,0x0,8
tick,0x7ffdc994fb34,10819193,0,0x0,8
tick,0x7ffdc994fb34,10835126,0,0x0,8
tick,0x7ffdc994fb34,10851106,0,0x0,8
tick,0x7ffdc994fb34,10867016,0,0x0,8
tick,0x7ffdc994fb34,10883157,0,0x0,8
tick,0x7ffdc994fb34,10899169,0,0x0,8
tick,0x7ffdc994fb34,10914614,0,0x0,8
tick,0x7ffdc994fb34,10930558,0,0x0,8
tick,0x7ffdc994fb34,10945746,0,0x0,8
tick,0x7ffdc994fb34,10961482,0,0x0,8
tick,0x7ffdc994fb34,10977484,0,0x0,8
tick,0x7ffdc994fb34,10993521,0,0x0,8
tick,0x7ffdc994fb34,11009652,0,0x0,8
tick,0x7ffdc994fb34,11024428,0,0x0,8
tick,0x7ffdc994fb34,11040567,0,0x0,8
tick,0x7ffdc994fb34,11056562,0,0x0,8
tick,0x7ffdc994fb34,11072225,0,0x0,8
tick,0x7ffdc994fb34,11087604,0,0x0,8
tick,0x7ffdc994fb34,11103225,0,0x0,8
tick,0x7ffdc994fb34,11118885,0,0x0,8
tick,0x7ffdc994fb34,11134034,0,0x0,8
tick,0x7ffdc994fb34,11149569,0,0x0,8
tick,0x7ffdc994fb34,11165012,0,0x0,8
tick,0x7ffdc994fb34,11180347,0,0x0,8
tick,0x7ffdc994fb34,11195192,0,0x0,8
tick,0x7ffdc994fb34,11211385,0,0x0,8
tick,0x7ffdc994fb34,11227285,0,0x0,8
tick,0x7ffdc994fb34,11243087,0,0x0,8
tick,0x7ffdc994fb34,11259391,0,0x0,8
tick,0x7ffdc994fb34,11274184,0,0x0,8
tick,0x7ffdc994fb34,11289406,0,0x0,8
tick,0x7ffdc994fb34,11304992,0,0x0,8
tick,0x7ffdc994fb34,11320349,0,0x0,8
tick,0x7ffdc994fb34,11335571,0,0x0,8
tick,0x7ffdc994fb34,11351109,0,0x0,8
tick,0x7ffdc994fb34,11366189,0,0x0,8
tick,0x7ffdc994fb34,11381771,0,0x0,8
tick,0x7ffdc994fb34,11397584,0,0x0,8
tick,0x7ffdc994fb34,11413023,0,0x0,8
tick,0x7ffdc994fb34,11428179,0,0x0,8
tick,0x7ffdc994fb34,11443641,0,0x0,8
tick,0x7ffdc994fb34,11459696,0,0x0,8
tick,0x7ffdc994fb34,11475350,0,0x0,8
tick,0x7ffdc994fb34,11490998,0,0x0,8
tick,0x7ffdc994fb34,11506960,0,0x0,8
tick,0x7ffdc994fb34,11522306,0,0x0,8
tick,0x7ffdc994fb34,11538524,0,0x0,8
tick,0x7ffdc994fb34,11554428,0,0x0,8
tick,0x7ffdc994fb34,11570299,0,0x0,8
tick,0x7ffdc994fb34,11585468,0,0x0,8
tick,0x7ffdc994fb34,11600882,0,0x0,8
tick,0x7ffdc994fb34,11616526,0,0x0,8
tick,0x7ffdc994fb34,11631939,0,0x0,8
tick,0x7ffdc994fb34,11647842,0,0x0,8
tick,0x7ffdc994fb34,11663118,0,0x0,8
tick,0x7ffdc994fb34,11678712,0,0x0,8
tick,0x7ffdc994fb34,11694185,0,0x0,8
tick,0x7ffdc994fb34,11710146,0,0x0,8
tick,0x7ffdc994fb34,11725326,0,0x0,8
tick,0x7ffdc994fb34,11741545,0,0x0,8
tick,0x7ffdc994fb34,11757952,0,0x0,8
tick,0x7ffdc994fb34,11772829,0,0x0,8
tick,0x7ffdc994fb34,11788979,0,0x0,8
tick,0x7ffdc994fb34,11805111,0,0x0,8
tick,0x7ffdc994fb34,11820891,0,0x0,8
tick,0x7ffdc994fb34,11837064,0,0x0,8
tick,0x7ffdc994fb34,11852954,0,0x0,8
tick,0x7ffdc994fb34,11868276,0,0x0,8
tick,0x7ffdc994fb34,11883624,0,0x0,8
tick,0x7ffdc994fb34,11899334,0,0x0,8
tick,0x7ffdc994fb34,11914893,0,0x0,8
tick,0x7ffdc994fb34,11931110,0,0x0,8
tick,0x7ffdc994fb34,11946773,0,0x0,8
tick,0x7ffdc994fb34,11962041,0,0x0,8
tick,0x7ffdc994fb34,11978334,0,0x0,8
tick,0x7ffdc994fb34,11993783,0,0x0,8
tick,0x7ffdc994fb34,12009193,0,0x0,8
tick,0x7ffdc994fb34,12025196,0,0x0,8
tick,0x7ffdc994fb34,12040910,0,0x0,8
tick,0x7ffdc994fb34,12056518,0,0x0,8
tick,0x7ffdc994fb34,12072446,0,0x0,8
tick,0x7ffdc994fb34,12088129,0,0x0,8
tick,0x7ffdc994fb34,12103518,0,0x0,8
tick,0x7ffdc994fb34,12118851,0,0x0,8
tick,0x7ffdc994fb34,12134064,0,0x0,8
tick,0x7ffdc994fb34,12149752,0,0x0,8
tick,0x7ffdc994fb34,12165115,0,0x0,8
tick,0x7ffdc994fb34,12181028,0,0x0,8
tick,0x7ffdc994fb34,12196834,0,0x0,8
tick,0x7ffdc994fb34,12212126,0,0x0,8
tick,0x7ffdc994fb34,12227646,0,0x0,8
tick,0x7ffdc994fb34,12243230,0,0x0,8
tick,0x7ffdc994fb34,12259161,0,0x0,8
tick,0x7ffdc994fb34,12275414,0,0x0,8
tick,0x7ffdc994fb34,12290928,0,0x0,8
tick,0x7ffdc994fb34,12307298,0,0x0,8
tick,0x7ffdc994fb34,12323076,0,0x0,8
tick,0x7ffdc994fb34,12339318,0,0x0,8
tick,0x7ffdc994fb34,12354363,0,0x0,8
tick,0x7ffdc994fb34,12369744,0,0x0,8
tick,0x7ffdc994fb34,12385711,0,0x0,8
tick,0x7ffdc994fb34,12401140,0,0x0,8
tick,0x7ffdc994fb34,12416161,0,0x0,8
tick,0x7ffdc994fb34,12431688,0,0x0,8
tick,0x7ffdc994fb34,12447596,0,0x0,8
tick,0x7ffdc994fb34,12462670,0,0x0,8
tick,0x7ffdc994fb34,12478604,0,0x0,8
tick,0x7ffdc994fb34,12494315,0,0x0,8
tick,0x7ffdc994fb34,12510226,0,0x0,8
tick,0x7ffdc994fb34,12525686,0,0x0,8
tick,0x7ffdc994fb34,12540608,0,0x0,8
tick,0x7ffdc994fb34,12556369,0,0x0,8
tick,0x7ffdc994fb34,12571545,0,0x0,8
tick,0x7ffdc994fb34,12586718,0,0x0,8
tick,0x7ffdc994fb34,12601860,0,0x0,8
tick,0x7ffdc994fb34,12617230,0,0x0,8
tick,0x7ffdc994fb34,12632541,0,0x0,8
tick,0x7ffdc994fb34,12648085,0,0x0,8
tick,0x7ffdc994fb34,12663317,0,0x0,8
tick,0x7ffdc994fb34,12679176,0,0x0,8
tick,0x7ffdc994fb34,12694410,0,0x0,8
tick,0x7ffdc994fb34,12710142,0,0x0,8
tick,0x7ffdc994fb34,12725401,0,0x0,8
tick,0x7ffdc994fb34,12740680,0,0x0,8
tick,0x7ffdc994fb34,12756031,0,0x0,8
tick,0x7ffdc994fb34,12771051,0,0x0,8
tick,0x7ffdc994fb34,12786646,0,0x0,8
tick,0x7ffdc994fb34,12802017,0,0x0,8
tick,0x7ffdc994fb34,12816628,0,0x0,8
tick,0x7ffdc994fb34,12831947,0,0x0,8
tick,0x7ffdc994fb34,12847600,0,0x0,8
tick,0x7ffdc994fb34,12863421,0,0x0,8
tick,0x7ffdc994fb34,12879473,0,0x0,8
tick,0x7ffdc994fb34,12894870,0,0x0,8
tick,0x7ffdc994fb34,12910686,0,0x0,8
tick,0x7ffdc994fb34,12926299,0,0x0,8
tick,0x7ffdc994fb34,12941395,0,0x0,8
tick,0x7ffdc994fb34,12957692,0,0x0,8
tick,0x7ffdc994fb34,12973075,0,0x0,8
tick,0x7ffdc994fb34,12988566,0,0x0,8
tick,0x7ffdc994fb34,13003859,0,0x0,8
tick,0x7ffdc994fb34,13019153,0,0x0,8
tick,0x7ffdc994fb34,13034374,0,0x0,8
tick,0x7ffdc994fb34,13050043,0,0x0,8
tick,0x7ffdc994fb34,13066123,0,0x0,8
tick,0x7ffdc994fb34,13082282,0,0x0,8
tick,0x7ffdc994fb34,13096947,0,0x0,8
tick,0x7ffdc994fb34,13112678,0,0x0,8
tick,0x7ffdc994fb34,13128392,0,0x0,8
tick,0x7ffdc994fb34,13144238,0,0x0,8
tick,0x7ffdc994fb34,13159769,0,0x0,8
tick,0x7ffdc994fb34,13175244,0,0x0,8
tick,0x7ffdc994fb34,13190823,0,0x0,8
tick,0x7ffdc994fb34,13206289,0,0x0,8
tick,0x7ffdc994fb34,13222014,0,0x0,8
tick,0x7ffdc994fb34,13237846,0,0x0,8
tick,0x7ffdc994fb34,13252788,0,0x0,8
tick,0x7ffdc994fb34,13268474,0,0x0,8
tick,0x7ffdc994fb34,13283967,0,0x0,8
tick,0x7ffdc994fb34,13299305,0,0x0,8
tick,0x7ffdc994fb34,13314550,0,0x0,8
tick,0x7ffdc994fb34,13330313,0,0x0,8
tick,0x7ffdc994fb34,13345512,0,0x0,8
tick,0x7ffdc994fb34,13360768,0,0x0,8
tick,0x7ffdc994fb34,13376932,0,0x0,8
tick,0x7ffdc994fb34,13392360,0,0x0,8
tick,0x7ffdc994fb34,13407597,0,0x0,8
tick,0x7ffdc994fb34,13423793,0,0x0,8
tick,0x7ffdc994fb34,13439454,0,0x0,8
tick,0x7ffdc994fb34,13454748,0,0x0,8
tick,0x7ffdc994fb34,13470065,0,0x0,8
tick,0x7ffdc994fb34,13485584,0,0x0,8
tick,0x7ffdc994fb34,13501486,0,0x0,8
tick,0x7ffdc994fb34,13517201,0,0x0,8
tick,0x7ffdc994fb34,13533160,0,0x0,8
tick,0x7ffdc994fb34,13548952,0,0x0,8
tick,0x7ffdc994fb34,13564930,0,0x0,8
tick,0x7ffdc994fb34,13579980,0,0x0,8
tick,0x7ffdc994fb34,13595948,0,0x0,8
tick,0x7ffdc994fb34,13611930,0,0x0,8
tick,0x7ffdc994fb34,13627933,0,0x0,8
tick,0x7ffdc994fb34,13643874,0,0x0,8
tick,0x7ffdc994fb34,13662370,0,0x0,8
tick,0x7ffdc994fb34,13675369,0,0x0,8
tick,0x7ffdc994fb34,13690828,0,0x0,8
tick,0x7ffdc994fb34,13707873,0,0x0,8
tick,0x7ffdc994fb34,13722237,0,0x0,8
tick,0x7ffdc994fb34,13737951,0,0x0,8
tick,0x7ffdc994fb34,13753202,0,0x0,8
tick,0x7ffdc994fb34,13769576,0,0x0,8
tick,0x7ffdc994fb34,13784748,0,0x0,8
tick,0x7ffdc994fb34,13800280,0,0x0,8
tick,0x7ffdc994fb34,13816182,0,0x0,8
tick,0x7ffdc994fb34,13832273,0,0x0,8
tick,0x7ffdc994fb34,13847716,0,0x0,8
tick,0x7ffdc994fb34,13862826,0,0x0,8
tick,0x7ffdc994fb34,13878151,0,0x0,8
tick,0x7ffdc994fb34,13894615,0,0x0,8
tick,0x7ffdc994fb34,13909428,0,0x0,8
tick,0x7ffdc994fb34,13925106,0,0x0,8
tick,0x7ffdc994fb34,13940295,0,0x0,8
tick,0x7ffdc994fb34,13955537,0,0x0,8
tick,0x7ffdc994fb34,13970707,0,0x0,8
tick,0x7ffdc994fb34,13986528,0,0x0,8
tick,0x7ffdc994fb34,14001906,0,0x0,8
tick,0x7ffdc994fb34,14017800,0,0x0,8
tick,0x7ffdc994fb34,14033084,0,0x0,8
tick,0x7ffdc994fb34,14048398,0,0x0,8
tick,0x7ffdc994fb34,14063673,0,0x0,8
tick,0x7ffdc994fb34,14079715,0,0x0,8
tick,0x7ffdc994fb34,14094944,0,0x0,8
tick,0x7ffdc994fb34,14110825,0,0x0,8
tick,0x7ffdc994fb34,14125528,0,0x0,8
tick,0x7ffdc994fb34,14141436,0,0x0,8
tick,0x7ffdc994fb34,14156784,0,0x0,8
tick,0x7ffdc994fb34,14172288,0,0x0,8
tick,0x7ffdc994fb34,14187144,0,0x0,8
tick,0x7ffdc994fb34,14202280,0,0x0,8
tick,0x7ffdc994fb34,14217832,0,0x0,8
tick,0x7ffdc994fb34,14233743,0,0x0,8
tick,0x7ffdc994fb34,14249594,0,0x0,8
tick,0x7ffdc994fb34,14266891,0,0x0,8
tick,0x7ffdc994fb34,14280875,0,0x0,8
tick,0x7ffdc994fb34,14296896,0,0x0,8
tick,0x7ffdc994fb34,14313784,0,0x0,8
tick,0x7ffdc994fb34,14327361,0,0x0,8
tick,0x7ffdc994fb34,14342492,0,0x0,8
tick,0x7ffdc994fb34,14358319,0,0x0,8
tick,0x7ffdc994fb34,14374516,0,0x0,8
tick,0x7ffdc994fb34,14389857,0,0x0,8
tick,0x7ffdc994fb34,14405752,0,0x0,8
tick,0x7ffdc994fb34,14421334,0,0x0,8
tick,0x7ffdc994fb34,14436836,0,0x0,8
tick,0x7ffdc994fb34,14452512,0,0x0,8
tick,0x7ffdc994fb34,14468320,0,0x0,8
tick,0x7ffdc994fb34,14483716,0,0x0,8
tick,0x7ffdc994fb34,14499586,0,0x0,8
tick,0x7ffdc994fb34,14514581,0,0x0,8
tick,0x7ffdc994fb34,14530135,0,0x0,8
tick,0x7ffdc994fb34,14546182,0,0x0,8
tick,0x7ffdc994fb34,14561883,0,0x0,8
tick,0x7ffdc994fb34,14577181,0,0x0,8
tick,0x7ffdc994fb34,14593066,0,0x0,8
tick,0x7ffdc994fb34,14608908,0,0x0,8
tick,0x7ffdc994fb34,14624579,0,0x0,8
tick,0x7ffdc994fb34,14639762,0,0x0,8
tick,0x7ffdc994fb34,14654957,0,0x0,8
tick,0x7ffdc994fb34,14670284,0,0x0,8
tick,0x7ffdc994fb34,14685781,0,0x0,8
tick,0x7ffdc994fb34,14701852,0,0x0,8
tick,0x7ffdc994fb34,14717376,0,0x0,8
tick,0x7ffdc994fb34,14733502,0,0x0,8
tick,0x7ffdc994fb34,14749018,0,0x0,8
tick,0x7ffdc994fb34,14764004,0,0x0,8
tick,0x7ffdc994fb34,14779484,0,0x0,8
tick,0x7ffdc994fb34,14794247,0,0x0,8
tick,0x7ffdc994fb34,14809421,0,0x0,8
tick,0x7ffdc994fb34,14824740,0,0x0,8
tick,0x7ffdc994fb34,14840779,0,0x0,8
tick,0x7ffdc994fb34,14856404,0,0x0,8
tick,0x7ffdc994fb34,14872248,0,0x0,8
tick,0x7ffdc994fb34,14887797,0,0x0,8
tick,0x7ffdc994fb34,14903268,0,0x0,8
tick,0x7ffdc994fb34,14918751,0,0x0,8
tick,0x7ffdc994fb34,14933939,0,0x0,8
tick,0x7ffdc994fb34,14949458,0,0x0,8
tick,0x7ffdc994fb34,14964374,0,0x0,8
tick,0x7ffdc994fb34,14979891,0,0x0,8
tick,0x7ffdc994fb34,14996139,0,0x0,8
tick,0x7ffdc994fb34,15010972,0,0x0,8
tick,0x7ffdc994fb34,15027347,0,0x0,8
tick,0x7ffdc994fb34,15042187,0,0x0,8
tick,0x7ffdc994fb34,15058229,0,0x0,8
tick,0x7ffdc994fb34,15074181,0,0x0,8
tick,0x7ffdc994fb34,15089595,0,0x0,8
tick,0x7ffdc994fb34,15104912,0,0x0,8
tick,0x7ffdc994fb34,15120094,0,0x0,8
tick,0x7ffdc994fb34,15135449,0,0x0,8
tick,0x7ffdc994fb34,15151560,0,0x0,8
tick,0x7ffdc994fb34,15167604,0,0x0,8
tick,0x7ffdc994fb34,15183135,0,0x0,8
tick,0x7ffdc994fb34,15200671,0,0x0,8
tick,0x7ffdc994fb34,15214597,0,0x0,8
tick,0x7ffdc994fb34,15230414,0,0x0,8
tick,0x7ffdc994fb34,15246270,0,0x0,8
tick,0x7ffdc994fb34,15261547,0,0x0,8
tick,0x7ffdc994fb34,15276951,0,0x0,8
tick,0x7ffdc994fb34,15293037,0,0x0,8
tick,0x7ffdc994fb34,15308442,0,0x0,8
tick,0x7ffdc994fb34,15323462,0,0x0,8
tick,0x7ffdc994fb34,15338774,0,0x0,8
tick,0x7ffdc994fb34,15354816,0,0x0,8
tick,0x7ffdc994fb34,15369973,0,0x0,8
tick,0x7ffdc994fb34,15385671,0,0x0,8
tick,0x7ffdc994fb34,15401821,0,0x0,8
tick,0x7ffdc994fb34,15416897,0,0x0,8
tick,0x7ffdc994fb34,15432212,0,0x0,8
tick,0x7ffdc994fb34,15447633,0,0x0,8
tick,0x7ffdc994fb34,15462864,0,0x0,8
tick,0x7ffdc994fb34,15479088,0,0x0,8
tick,0x7ffdc994fb34,15495006,0,0x0,8
tick,0x7ffdc994fb34,15510364,0,0x0,8
tick,0x7ffdc994fb34,15525703,0,0x0,8
tick,0x7ffdc994fb34,15541166,0,0x0,8
tick,0x7ffdc994fb34,15556072,0,0x0,8
tick,0x7ffdc994fb34,15572319,0,0x0,8
tick,0x7ffdc994fb34,15588253,0,0x0,8
tick,0x7ffdc994fb34,15603798,0,0x0,8
tick,0x7ffdc994fb34,15619162,0,0x0,8
tick,0x7ffdc994fb34,15634038,0,0x0,8
tick,0x7ffdc994fb34,15649401,0,0x0,8
tick,0x7ffdc994fb34,15665604,0,0x0,8
tick,0x7ffdc994fb34,15681692,0,0x0,8
tick,0x7ffdc994fb34,15697078,0,0x0,8
tick,0x7ffdc994fb34,15712196,0,0x0,8
tick,0x7ffdc994fb34,15727619,0,0x0,8
tick,0x7ffdc994fb34,15743518,0,0x0,8
tick,0x7ffdc994fb34,15759186,0,0x0,8
tick,0x7ffdc994fb34,15774940,0,0x0,8
tick,0x7ffdc994fb34,15791171,0,0x0,8
tick,0x7ffdc994fb34,15806135,0,0x0,8
tick,0x7ffdc994fb34,15821336,0,0x0,8
tick,0x7ffdc994fb34,15837147,0,0x0,8
tick,0x7ffdc994fb34,15852310,0,0x0,8
tick,0x7ffdc994fb34,15867596,0,0x0,8
tick,0x7ffdc994fb34,15882888,0,0x0,8
tick,0x7ffdc994fb34,15898077,0,0x0,8
tick,0x7ffdc994fb34,15913910,0,0x0,8
tick,0x7ffdc994fb34,15929494,0,0x0,8
tick,0x7ffdc994fb34,15945054,0,0x0,8
tick,0x7ffdc994fb34,15960985,0,0x0,8
tick,0x7ffdc994fb34,15976065,0,0x0,8
tick,0x7ffdc994fb34,15991551,0,0x0,8
tick,0x7ffdc994fb34,16006799,0,0x0,8
tick,0x7ffdc994fb34,16022086,0,0x0,8
tick,0x7ffdc994fb34,16037659,0,0x0,8
tick,0x7ffdc994fb34,16052848,0,0x0,8
tick,0x7ffdc994fb34,16068281,0,0x0,8
tick,0x7ffdc994fb34,16084025,0,0x0,8
tick,0x7ffdc994fb34,16099703,0,0x0,8
tick,0x7ffdc994fb34,16115056,0,0x0,8
tick,0x7ffdc994fb34,16130818,0,0x0,8
tick,0x7ffdc994fb34,16146674,0,0x0,8
tick,0x7ffdc994fb34,16162896,0,0x0,8
tick,0x7ffdc994fb34,16178548,0,0x0,8
tick,0x7ffdc994fb34,16193925,0,0x0,8
tick,0x7ffdc994fb34,16209666,0,0x0,8
tick,0x7ffdc994fb34,16224979,0,0x0,8
tick,0x7ffdc994fb34,16240589,0,0x0,8
tick,0x7ffdc994fb34,16256299,0,0x0,8
tick,0x7ffdc994fb34,16272161,0,0x0,8
tick,0x7ffdc994fb34,16288428,0,0x0,8
tick,0x7ffdc994fb34,16303847,0,0x0,8
tick,0x7ffdc994fb34,16319650,0,0x0,8
tick,0x7ffdc994fb34,16334876,0,0x0,8
tick,0x7ffdc994fb34,16350411,0,0x0,8
tick,0x7ffdc994fb34,16365939,0,0x0,8
tick,0x7ffdc994fb34,16381707,0,0x0,8
tick,0x7ffdc994fb34,16397206,0,0x0,8
tick,0x7ffdc994fb34,16413603,0,0x0,8
tick,0x7ffdc994fb34,16429296,0,0x0,8
tick,0x7ffdc994fb34,16444252,0,0x0,8
tick,0x7ffdc994fb34,16460026,0,0x0,8
tick,0x7ffdc994fb34,16475630,0,0x0,8
tick,0x7ffdc994fb34,16491479,0,0x0,8
tick,0x7ffdc994fb34,16506987,0,0x0,8
tick,0x7ffdc994fb34,16522486,0,0x0,8
tick,0x7ffdc994fb34,16538235,0,0x0,8
tick,0x7ffdc994fb34,16553424,0,0x0,8
tick,0x7ffdc994fb34,16569370,0,0x0,8
tick,0x7ffdc994fb34,16584598,0,0x0,8
tick,0x7ffdc994fb34,16600099,0,0x0,8
tick,0x7ffdc994fb34,16616593,0,0x0,8
tick,0x7ffdc994fb34,16631833,0,0x0,8
tick,0x7ffdc994fb34,16647354,0,0x0,8
tick,0x7ffdc994fb34,16662893,0,0x0,8
tick,0x7ffdc994fb34,16678456,0,0x0,8
tick,0x7ffdc994fb34,16693949,0,0x0,8
tick,0x7ffdc994fb34,16708922,0,0x0,8
tick,0x7ffdc994fb34,16724797,0,0x0,8
tick,0x7ffdc994fb34,16740711,0,0x0,8
tick,0x7ffdc994fb34,16755961,0,0x0,8
tick,0x7ffdc994fb34,16771117,0,0x0,8
tick,0x7ffdc994fb34,16786745,0,0x0,8
tick,0x7ffdc994fb34,16802139,0,0x0,8
tick,0x7ffdc994fb34,16817203,0,0x0,8
tick,0x7ffdc994fb34,16832601,0,0x0,8
tick,0x7ffdc994fb34,16848580,0,0x0,8
tick,0x7ffdc994fb34,16864672,0,0x0,8
tick,0x7ffdc994fb34,16879824,0,0x0,8
tick,0x7ffdc994fb34,16895278,0,0x0,8
tick,0x7ffdc994fb34,16911255,0,0x0,8
tick,0x7ffdc994fb34,16926619,0,0x0,8
tick,0x7ffdc994fb34,16941777,0,0x0,8
tick,0x7ffdc994fb34,16956747,0,0x0,8
tick,0x7ffdc994fb34,16972950,0,0x0,8
tick,0x7ffdc994fb34,16988958,0,0x0,8
tick,0x7ffdc994fb34,17004318,0,0x0,8
tick,0x7ffdc994fb34,17019621,0,0x0,8
tick,0x7ffdc994fb34,17035167,0,0x0,8
tick,0x7ffdc994fb34,17051081,0,0x0,8
tick,0x7ffdc994fb34,17066719,0,0x0,8
tick,0x7ffdc994fb34,17081848,0,0x0,8
tick,0x7ffdc994fb34,17097702,0,0x0,8
tick,0x7ffdc994fb34,17113448,0,0x0,8
tick,0x7ffdc994fb34,17129427,0,0x0,8
tick,0x7ffdc994fb34,17145506,0,0x0,8
tick,0x7ffdc994fb34,17160909,0,0x0,8
tick,0x7ffdc994fb34,17176251,0,0x0,8
tick,0x7ffdc994fb34,17192211,0,0x0,8
tick,0x7ffdc994fb34,17207734,0,0x0,8
tick,0x7ffdc994fb34,17222756,0,0x0,8
tick,0x7ffdc994fb34,17238360,0,0x0,8
tick,0x7ffdc994fb34,17254556,0,0x0,8
tick,0x7ffdc994fb34,17270363,0,0x0,8
tick,0x7ffdc994fb34,17286228,0,0x0,8
tick,0x7ffdc994fb34,17302127,0,0x0,8
tick,0x7ffdc994fb34,17317426,0,0x0,8
tick,0x7ffdc994fb34,17333497,0,0x0,8
tick,0x7ffdc994fb34,17349793,0,0x0,8
tick,0x7ffdc994fb34,17365749,0,0x0,8
tick,0x7ffdc994fb34,17381575,0,0x0,8
tick,0x7ffdc994fb34,17397164,0,0x0,8
tick,0x7ffdc994fb34,17413141,0,0x0,8
tick,0x7ffdc994fb34,17428404,0,0x0,8
tick,0x7ffdc994fb34,17443953,0,0x0,8
tick,0x7ffdc994fb34,17459940,0,0x0,8
tick,0x7ffdc994fb34,17475082,0,0x0,8
tick,0x7ffdc994fb34,17490750,0,0x0,8
tick,0x7ffdc994fb34,17506198,0,0x0,8
tick,0x7ffdc994fb34,17520996,0,0x0,8
tick,0x7ffdc994fb34,17536672,0,0x0,8
tick,0x7ffdc994fb34,17552050,0,0x0,8
tick,0x7ffdc994fb34,17567703,0,0x0,8
tick,0x7ffdc994fb34,17583728,0,0x0,8
tick,0x7ffdc994fb34,17599257,0,0x0,8
tick,0x7ffdc994fb34,17614984,0,0x0,8
tick,0x7ffdc994fb34,17630938,0,0x0,8
tick,0x7ffdc994fb34,17646608,0,0x0,8
tick,0x7ffdc994fb34,17661799,0,0x0,8
tick,0x7ffdc994fb34,17677544,0,0x0,8
tick,0x7ffdc994fb34,17692925,0,0x0,8
tick,0x7ffdc994fb34,17708596,0,0x0,8
tick,0x7ffdc994fb34,17723669,0,0x0,8
tick,0x7ffdc994fb34,17739558,0,0x0,8
tick,0x7ffdc994fb34,17754970,0,0x0,8
tick,0x7ffdc994fb34,17770833,0,0x0,8
tick,0x7ffdc994fb34,17786194,0,0x0,8
tick,0x7ffdc994fb34,17801346,0,0x0,8
tick,0x7ffdc994fb34,17816883,0,0x0,8
tick,0x7ffdc994fb34,17832324,0,0x0,8
tick,0x7ffdc994fb34,17847680,0,0x0,8
tick,0x7ffdc994fb34,17863451,0,0x0,8
tick,0x7ffdc994fb34,17878580,0,0x0,8
tick,0x7ffdc994fb34,17894684,0,0x0,8
tick,0x7ffdc994fb34,17910336,0,0x0,8
tick,0x7ffdc994fb34,17926270,0,0x0,8
tick,0x7ffdc994fb34,17942426,0,0x0,8
tick,0x7ffdc994fb34,17957691,0,0x0,8
tick,0x7ffdc994fb34,17972885,0,0x0,8
tick,0x7ffdc994fb34,17988794,0,0x0,8
tick,0x7ffdc994fb34,18005061,0,0x0,8
tick,0x7ffdc994fb34,18020396,0,0x0,8
tick,0x7ffdc994fb34,18035745,0,0x0,8
tick,0x7ffdc994fb34,18051528,0,0x0,8
tick,0x7ffdc994fb34,18066650,0,0x0,8
tick,0x7ffdc994fb34,18082675,0,0x0,8
tick,0x7ffdc994fb34,18098910,0,0x0,8
tick,0x7ffdc994fb34,18114544,0,0x0,8
tick,0x7ffdc994fb34,18129927,0,0x0,8
tick,0x7ffdc994fb34,18145731,0,0x0,8
tick,0x7ffdc994fb34,18161831,0,0x0,8
tick,0x7ffdc994fb34,18177901,0,0x0,8
tick,0x7ffdc994fb34,18193048,0,0x0,8
tick,0x7ffdc994fb34,18208912,0,0x0,8
tick,0x7ffdc994fb34,18224122,0,0x0,8
tick,0x7ffdc994fb34,18240236,0,0x0,8
tick,0x7ffdc994fb34,18256140,0,0x0,8
tick,0x7ffdc994fb34,18271429,0,0x0,8
tick,0x7ffdc994fb34,18287124,0,0x0,8
tick,0x7ffdc994fb34,18302609,0,0x0,8
tick,0x7ffdc994fb34,18317813,0,0x0,8
tick,0x7ffdc994fb34,18333515,0,0x0,8
tick,0x7ffdc994fb34,18348909,0,0x0,8
tick,0x7ffdc994fb34,18364309,0,0x0,8
tick,0x7ffdc994fb34,18379513,0,0x0,8
tick,0x7ffdc994fb34,18395275,0,0x0,8
tick,0x7ffdc994fb34,18410943,0,0x0,8
tick,0x7ffdc994fb34,18426517,0,0x0,8
tick,0x7ffdc994fb34,18441810,0,0x0,8
tick,0x7ffdc994fb34,18457714,0,0x0,8
tick,0x7ffdc994fb34,18473151,0,0x0,8
tick,0x7ffdc994fb34,18488673,0,0x0,8
tick,0x7ffdc994fb34,18504467,0,0x0,8
tick,0x7ffdc994fb34,18519752,0,0x0,8
tick,0x7ffdc994fb34,18535499,0,0x0,8
tick,0x7ffdc994fb34,18551062,0,0x0,8
tick,0x7ffdc994fb34,18566128,0,0x0,8
tick,0x7ffdc994fb34,18581419,0,0x0,8
tick,0x7ffdc994fb34,18596836,0,0x0,8
tick,0x7ffdc994fb34,18613171,0,0x0,8
tick,0x7ffdc994fb34,18629111,0,0x0,8
tick,0x7ffdc994fb34,18645081,0,0x0,8
tick,0x7ffdc994fb34,18660108,0,0x0,8
tick,0x7ffdc994fb34,18676166,0,0x0,8
tick,0x7ffdc994fb34,18691572,0,0x0,8
tick,0x7ffdc994fb34,18707264,0,0x0,8
tick,0x7ffdc994fb34,18723155,0,0x0,8
tick,0x7ffdc994fb34,18739162,0,0x0,8
tick,0x7ffdc994fb34,18754518,0,0x0,8
tick,0x7ffdc994fb34,18770067,0,0x0,8
tick,0x7ffdc994fb34,18785931,0,0x0,8
tick,0x7ffdc994fb34,18801583,0,0x0,8
tick,0x7ffdc994fb34,18817656,0,0x0,8
tick,0x7ffdc994fb34,18833058,0,0x0,8
tick,0x7ffdc994fb34,18848681,0,0x0,8
tick,0x7ffdc994fb34,18863961,0,0x0,8
tick,0x7ffdc994fb34,18879322,0,0x0,8
tick,0x7ffdc994fb34,18894432,0,0x0,8
tick,0x7ffdc994fb34,18910318,0,0x0,8
tick,0x7ffdc994fb34,18925363,0,0x0,8
tick,0x7ffdc994fb34,18941328,0,0x0,8
tick,0x7ffdc994fb34,18957186,0,0x0,8
tick,0x7ffdc994fb34,18972885,0,0x0,8
tick,0x7ffdc994fb34,18987853,0,0x0,8
tick,0x7ffdc994fb34,19003888,0,0x0,8
tick,0x7ffdc994fb34,19019628,0,0x0,8
tick,0x7ffdc994fb34,19035055,0,0x0,8
tick,0x7ffdc994fb34,19050822,0,0x0,8
tick,0x7ffdc994fb34,19065849,0,0x0,8
tick,0x7ffdc994fb34,19081448,0,0x0,8
tick,0x7ffdc994fb34,19096657,0,0x0,8
tick,0x7ffdc994fb34,19111698,0,0x0,8
tick,0x7ffdc994fb34,19127136,0,0x0,8
tick,0x7ffdc994fb34,19143152,0,0x0,8
tick,0x7ffdc994fb34,19158318,0,0x0,8
tick,0x7ffdc994fb34,19173946,0,0x0,8
tick,0x7ffdc994fb34,19189678,0,0x0,8
tick,0x7ffdc994fb34,19205604,0,0x0,8
tick,0x7ffdc994fb34,19221412,0,0x0,8
tick,0x7ffdc994fb34,19236805,0,0x0,8
tick,0x7ffdc994fb34,19252745,0,0x0,8
tick,0x7ffdc994fb34,19268025,0,0x0,8
tick,0x7ffdc994fb34,19283790,0,0x0,8
tick,0x7ffdc994fb34,19299574,0,0x0,8
tick,0x7ffdc994fb34,19315430,0,0x0,8
tick,0x7ffdc994fb34,19331127,0,0x0,8
tick,0x7ffdc994fb34,19346380,0,0x0,8
tick,0x7ffdc994fb34,19361535,0,0x0,8
tick,0x7ffdc994fb34,19377001,0,0x0,8
tick,0x7ffdc994fb34,19393092,0,0x0,8
tick,0x7ffdc994fb34,19408344,0,0x0,8
tick,0x7ffdc994fb34,19423762,0,0x0,8
tick,0x7ffdc994fb34,19439293,0,0x0,8
tick,0x7ffdc994fb34,19454512,0,0x0,8
tick,0x7ffdc994fb34,19469744,0,0x0,8
tick,0x7ffdc994fb34,19485474,0,0x0,8
tick,0x7ffdc994fb34,19500871,0,0x0,8
tick,0x7ffdc994fb34,19517019,0,0x0,8
tick,0x7ffdc994fb34,19532966,0,0x0,8
tick,0x7ffdc994fb34,19548474,0,0x0,8
tick,0x7ffdc994fb34,19564023,0,0x0,8
tick,0x7ffdc994fb34,19579830,0,0x0,8
tick,0x7ffdc994fb34,19595611,0,0x0,8
tick,0x7ffdc994fb34,19611407,0,0x0,8
tick,0x7ffdc994fb34,19626929,0,0x0,8
tick,0x7ffdc994fb34,19642868,0,0x0,8
tick,0x7ffdc994fb34,19658242,0,0x0,8
tick,0x7ffdc994fb34,19673257,0,0x0,8
tick,0x7ffdc994fb34,19688945,0,0x0,8
tick,0x7ffdc994fb34,19704491,0,0x0,8
tick,0x7ffdc994fb34,19719879,0,0x0,8
tick,0x7ffdc994fb34,19735998,0,0x0,8
tick,0x7ffdc994fb34,19752179,0,0x0,8
tick,0x7ffdc994fb34,19767731,0,0x0,8
tick,0x7ffdc994fb34,19782876,0,0x0,8
tick,0x7ffdc994fb34,19798004,0,0x0,8
tick,0x7ffdc994fb34,19813009,0,0x0,8
tick,0x7ffdc994fb34,19828650,0,0x0,8
tick,0x7ffdc994fb34,19844254,0,0x0,8
tick,0x7ffdc994fb34,19859600,0,0x0,8
tick,0x7ffdc994fb34,19875251,0,0x0,8
tick,0x7ffdc994fb34,19891055,0,0x0,8
tick,0x7ffdc994fb34,19906803,0,0x0,8
tick,0x7ffdc994fb34,19922631,0,0x0,8
tick,0x7ffdc994fb34,19937355,0,0x0,8
tick,0x7ffdc994fb34,19953538,0,0x0,8
tick,0x7ffdc994fb34,19968729,0,0x0,8
tick,0x7ffdc994fb34,19984599,0,0x0,8
tick,0x7ffdc994fb34,19999640,0,0x0,8
tick,0x7ffdc994fb34,20014740,0,0x0,8
tick,0x7ffdc994fb34,20031047,0,0x0,8
tick,0x7ffdc994fb34,20047081,0,0x0,8
tick,0x7ffdc994fb34,20063173,0,0x0,8
tick,0x7ffdc994fb34,20078651,0,0x0,8
tick,0x7ffdc994fb34,20093831,0,0x0,8
tick,0x7ffdc994fb34,20109145,0,0x0,8
tick,0x7ffdc994fb34,20124569,0,0x0,8
tick,0x7ffdc994fb34,20140531,0,0x0,8
tick,0x7ffdc994fb34,20156300,0,0x0,8
tick,0x7ffdc994fb34,20171898,0,0x0,8
tick,0x7ffdc994fb34,20187930,0,0x0,8
tick,0x7ffdc994fb34,20203265,0,0x0,8
tick,0x7ffdc994fb34,20218825,0,0x0,8
tick,0x7ffdc994fb34,20234169,0,0x0,8
tick,0x7ffdc994fb34,20249193,0,0x0,8
tick,0x7ffdc994fb34,20264305,0,0x0,8
tick,0x7ffdc994fb34,20280090,0,0x0,8
tick,0x7ffdc994fb34,20295391,0,0x0,8
tick,0x7ffdc994fb34,20310882,0,0x0,8
tick,0x7ffdc994fb34,20326886,0,0x0,8
tick,0x7ffdc994fb34,20342653,0,0x0,8
tick,0x7ffdc994fb34,20357846,0,0x0,8
tick,0x7ffdc994fb34,20373460,0,0x0,8
tick,0x7ffdc994fb34,20388821,0,0x0,8
tick,0x7ffdc994fb34,20404374,0,0x0,8
tick,0x7ffdc994fb34,20420465,0,0x0,8
tick,0x7ffdc994fb34,20436361,0,0x0,8
tick,0x7ffdc994fb34,20451710,0,0x0,8
tick,0x7ffdc994fb34,20466955,0,0x0,8
tick,0x7ffdc994fb34,20482535,0,0x0,8
tick,0x7ffdc994fb34,20498019,0,0x0,8
tick,0x7ffdc994fb34,20513424,0,0x0,8
tick,0x7ffdc994fb34,20529202,0,0x0,8
tick,0x7ffdc994fb34,20544805,0,0x0,8
tick,0x7ffdc994fb34,20559935,0,0x0,8
tick,0x7ffdc994fb34,20575244,0,0x0,8
tick,0x7ffdc994fb34,20590410,0,0x0,8
tick,0x7ffdc994fb34,20606423,0,0x0,8
tick,0x7ffdc994fb34,20622237,0,0x0,8
tick,0x7ffdc994fb34,20637692,0,0x0,8
tick,0x7ffdc994fb34,20653475,0,0x0,8
tick,0x7ffdc994fb34,20669417,0,0x0,8
tick,0x7ffdc994fb34,20684441,0,0x0,8
tick,0x7ffdc994fb34,20699725,0,0x0,8
tick,0x7ffdc994fb34,20715430,0,0x0,8
tick,0x7ffdc994fb34,20731130,0,0x0,8
tick,0x7ffdc994fb34,20746518,0,0x0,8
tick,0x7ffdc994fb34,20761483,0,0x0,8
tick,0x7ffdc994fb34,20776974,0,0x0,8
tick,0x7ffdc994fb34,20791971,0,0x0,8
tick,0x7ffdc994fb34,20807161,0,0x0,8
tick,0x7ffdc994fb34,20822861,0,0x0,8
tick,0x7ffdc994fb34,20838496,0,0x0,8
tick,0x7ffdc994fb34,20854632,0,0x0,8
tick,0x7ffdc994fb34,20869820,0,0x0,8
tick,0x7ffdc994fb34,20885984,0,0x0,8
tick,0x7ffdc994fb34,20901869,0,0x0,8
tick,0x7ffdc994fb34,20917518,0,0x0,8
tick,0x7ffdc994fb34,20933485,0,0x0,8
tick,0x7ffdc994fb34,20948354,0,0x0,8
tick,0x7ffdc994fb34,20963724,0,0x0,8
tick,0x7ffdc994fb34,20978812,0,0x0,8
tick,0x7ffdc994fb34,20994898,0,0x0,8
tick,0x7ffdc994fb34,21010609,0,0x0,8
tick,0x7ffdc994fb34,21025618,0,0x0,8
tick,0x7ffdc994fb34,21040947,0,0x0,8
tick,0x7ffdc994fb34,21056181,0,0x0,8
tick,0x7ffdc994fb34,21072131,0,0x0,8
tick,0x7ffdc994fb34,21088199,0,0x0,8
tick,0x7ffdc994fb34,21103831,0,0x0,8
tick,0x7ffdc994fb34,21119657,0,0x0,8
tick,0x7ffdc994fb34,21134696,0,0x0,8
tick,0x7ffdc994fb34,21150441,0,0x0,8
tick,0x7ffdc994fb34,21166489,0,0x0,8
tick,0x7ffdc994fb34,21181909,0,0x0,8
tick,0x7ffdc994fb34,21197579,0,0x0,8
tick,0x7ffdc994fb34,21213324,0,0x0,8
tick,0x7ffdc994fb34,21229309,0,0x0,8
tick,0x7ffdc994fb34,21244768,0,0x0,8
tick,0x7ffdc994fb34,21260396,0,0x0,8
tick,0x7ffdc994fb34,21275830,0,0x0,8
tick,0x7ffdc994fb34,21291835,0,0x0,8
tick,0x7ffdc994fb34,21307504,0,0x0,8
tick,0x7ffdc994fb34,21322134,0,0x0,8
tick,0x7ffdc994fb34,21337393,0,0x0,8
tick,0x7ffdc994fb34,21352910,0,0x0,8
tick,0x7ffdc994fb34,21368160,0,0x0,8
tick,0x7ffdc994fb34,21383779,0,0x0,8
tick,0x7ffdc994fb34,21400031,0,0x0,8
tick,0x7ffdc994fb34,21416129,0,0x0,8
tick,0x7ffdc994fb34,21431571,0,0x0,8
tick,0x7ffdc994fb34,21446598,0,0x0,8
tick,0x7ffdc994fb34,21461950,0,0x0,8
tick,0x7ffdc994fb34,21477725,0,0x0,8
tick,0x7ffdc994fb34,21493217,0,0x0,8
tick,0x7ffdc994fb34,21508796,0,0x0,8
tick,0x7ffdc994fb34,21524013,0,0x0,8
tick,0x7ffdc994fb34,21539858,0,0x0,8
tick,0x7ffdc994fb34,21555087,0,0x0,8
tick,0x7ffdc994fb34,21570681,0,0x0,8
tick,0x7ffdc994fb34,21586146,0,0x0,8
tick,0x7ffdc994fb34,21601182,0,0x0,8
tick,0x7ffdc994fb34,21616752,0,0x0,8
tick,0x7ffdc994fb34,21632176,0,0x0,8
tick,0x7ffdc994fb34,21648058,0,0x0,8
tick,0x7ffdc994fb34,21663573,0,0x0,8
tick,0x7ffdc994fb34,21679208,0,0x0,8
tick,0x7ffdc994fb34,21694647,0,0x0,8
tick,0x7ffdc994fb34,21709910,0,0x0,8
tick,0x7ffdc994fb34,21725983,0,0x0,8
tick,0x7ffdc994fb34,21741874,0,0x0,8
tick,0x7ffdc994fb34,21757445,0,0x0,8
tick,0x7ffdc994fb34,21772852,0,0x0,8
tick,0x7ffdc994fb34,21788760,0,0x0,8
tick,0x7ffdc994fb34,21804041,0,0x0,8
tick,0x7ffdc994fb34,21819387,0,0x0,8
tick,0x7ffdc994fb34,21834819,0,0x0,8
tick,0x7ffdc994fb34,21850685,0,0x0,8
tick,0x7ffdc994fb34,21866414,0,0x0,8
tick,0x7ffdc994fb34,21882000,0,0x0,8
tick,0x7ffdc994fb34,21897474,0,0x0,8
tick,0x7ffdc994fb34,21912728,0,0x0,8
tick,0x7ffdc994fb34,21928293,0,0x0,8
tick,0x7ffdc994fb34,21943750,0,0x0,8
tick,0x7ffdc994fb34,21959346,0,0x0,8
tick,0x7ffdc994fb34,21974703,0,0x0,8
tick,0x7ffdc994fb34,21990367,0,0x0,8
tick,0x7ffdc994fb34,22006424,0,0x0,8
tick,0x7ffdc994fb34,22022310,0,0x0,8
tick,0x7ffdc994fb34,22037839,0,0x0,8
tick,0x7ffdc994fb34,22053695,0,0x0,8
tick,0x7ffdc994fb34,22069629,0,0x0,8
tick,0x7ffdc994fb34,22085142,0,0x0,8
tick,0x7ffdc994fb34,22100261,0,0x0,8
tick,0x7ffdc994fb34,22116384,0,0x0,8
tick,0x7ffdc994fb34,22131242,0,0x0,8
tick,0x7ffdc994fb34,22147176,0,0x0,8
tick,0x7ffdc994fb34,22162687,0,0x0,8
tick,0x7ffdc994fb34,22177808,0,0x0,8
tick,0x7ffdc994fb34,22192967,0,0x0,8
tick,0x7ffdc994fb34,22208905,0,0x0,8
tick,0x7ffdc994fb34,22224608,0,0x0,8
tick,0x7ffdc994fb34,22239980,0,0x0,8
tick,0x7ffdc994fb34,22255754,0,0x0,8
tick,0x7ffdc994fb34,22271075,0,0x0,8
tick,0x7ffdc994fb34,22286067,0,0x0,8
tick,0x7ffdc994fb34,22301980,0,0x0,8
tick,0x7ffdc994fb34,22317514,0,0x0,8
tick,0x7ffdc994fb34,22332954,0,0x0,8
tick,0x7ffdc994fb34,22348042,0,0x0,8
tick,0x7ffdc994fb34,22363461,0,0x0,8
tick,0x7ffdc994fb34,22379116,0,0x0,8
tick,0x7ffdc994fb34,22394693,0,0x0,8
tick,0x7ffdc994fb34,22410446,0,0x0,8
tick,0x7ffdc994fb34,22426412,0,0x0,8
tick,0x7ffdc994fb34,22441932,0,0x0,8
tick,0x7ffdc994fb34,22457350,0,0x0,8
tick,0x7ffdc994fb34,22472769,0,0x0,8
tick,0x7ffdc994fb34,22488668,0,0x0,8
tick,0x7ffdc994fb34,22504049,0,0x0,8
tick,0x7ffdc994fb34,22519444,0,0x0,8
tick,0x7ffdc994fb34,22534896,0,0x0,8
tick,0x7ffdc994fb34,22550042,0,0x0,8
tick,0x7ffdc994fb34,22565436,0,0x0,8
tick,0x7ffdc994fb34,22580239,0,0x0,8
tick,0x7ffdc994fb34,22595675,0,0x0,8
tick,0x7ffdc994fb34,22611617,0,0x0,8
tick,0x7ffdc994fb34,22626954,0,0x0,8
tick,0x7ffdc994fb34,22642433,0,0x0,8
tick,0x7ffdc994fb34,22657746,0,0x0,8
tick,0x7ffdc994fb34,22673177,0,0x0,8
tick,0x7ffdc994fb34,22689219,0,0x0,8
tick,0x7ffdc994fb34,22704652,0,0x0,8
tick,0x7ffdc994fb34,22720002,0,0x0,8
tick,0x7ffdc994fb34,22735294,0,0x0,8
tick,0x7ffdc994fb34,22750570,0,0x0,8
tick,0x7ffdc994fb34,22765660,0,0x0,8
tick,0x7ffdc994fb34,22781361,0,0x0,8
tick,0x7ffdc994fb34,22796605,0,0x0,8
tick,0x7ffdc994fb34,22812474,0,0x0,8
tick,0x7ffdc994fb34,22828766,0,0x0,8
tick,0x7ffdc994fb34,22843933,0,0x0,8
tick,0x7ffdc994fb34,22859673,0,0x0,8
tick,0x7ffdc994fb34,22875657,0,0x0,8
tick,0x7ffdc994fb34,22891559,0,0x0,8
tick,0x7ffdc994fb34,22906962,0,0x0,8
tick,0x7ffdc994fb34,22922817,0,0x0,8
tick,0x7ffdc994fb34,22938524,0,0x0,8
tick,0x7ffdc994fb34,22953275,0,0x0,8
tick,0x7ffdc994fb34,22968781,0,0x0,8
tick,0x7ffdc994fb34,22984917,0,0x0,8
tick,0x7ffdc994fb34,23000342,0,0x0,8
tick,0x7ffdc994fb34,23015677,0,0x0,8
tick,0x7ffdc994fb34,23030799,0,0x0,8
tick,0x7ffdc994fb34,23046553,0,0x0,8
tick,0x7ffdc994fb34,23062286,0,0x0,8
tick,0x7ffdc994fb34,23077372,0,0x0,8
tick,0x7ffdc994fb34,23093549,0,0x0,8
tick,0x7ffdc994fb34,23108964,0,0x0,8
tick,0x7ffdc994fb34,23124063,0,0x0,8
tick,0x7ffdc994fb34,23140276,0,0x0,8
tick,0x7ffdc994fb34,23155706,0,0x0,8
tick,0x7ffdc994fb34,23171318,0,0x0,8
tick,0x7ffdc994fb34,23186485,0,0x0,8
tick,0x7ffdc994fb34,23202711,0,0x0,8
tick,0x7ffdc994fb34,23217811,0,0x0,8
tick,0x7ffdc994fb34,23233582,0,0x0,8
tick,0x7ffdc994fb34,23249304,0,0x0,8
tick,0x7ffdc994fb34,23264753,0,0x0,8
tick,0x7ffdc994fb34,23280133,0,0x0,8
tick,0x7ffdc994fb34,23295579,0,0x0,8
tick,0x7ffdc994fb34,23311636,0,0x0,8
tick,0x7ffdc994fb34,23327499,0,0x0,8
tick,0x7ffdc994fb34,23342662,0,0x0,8
tick,0x7ffdc994fb34,23358590,0,0x0,8
tick,0x7ffdc994fb34,23373417,0,0x0,8
tick,0x7ffdc994fb34,23389724,0,0x0,8
tick,0x7ffdc994fb34,23405764,0,0x0,8
tick,0x7ffdc994fb34,23421857,0,0x0,8
tick,0x7ffdc994fb34,23437714,0,0x0,8
tick,0x7ffdc994fb34,23452704,0,0x0,8
tick,0x7ffdc994fb34,23468286,0,0x0,8
tick,0x7ffdc994fb34,23483458,0,0x0,8
tick,0x7ffdc994fb34,23499095,0,0x0,8
tick,0x7ffdc994fb34,23514598,0,0x0,8
tick,0x7ffdc994fb34,23530625,0,0x0,8
tick,0x7ffdc994fb34,23546630,0,0x0,8
tick,0x7ffdc994fb34,23562378,0,0x0,8
tick,0x7ffdc994fb34,23577778,0,0x0,8
tick,0x7ffdc994fb34,23593306,0,0x0,8
tick,0x7ffdc994fb34,23608167,0,0x0,8
tick,0x7ffdc994fb34,23624512,0,0x0,8
tick,0x7ffdc994fb34,23639617,0,0x0,8
tick,0x7ffdc994fb34,23655624,0,0x0,8
tick,0x7ffdc994fb34,23674764,0,0x0,8
tick,0x7ffdc994fb34,23685420,0,0x0,8
tick,0x7ffdc994fb34,23701303,0,0x0,8
tick,0x7ffdc994fb34,23716551,0,0x0,8
tick,0x7ffdc994fb34,23732284,0,0x0,8
tick,0x7ffdc994fb34,23747779,0,0x0,8
tick,0x7ffdc994fb34,23762890,0,0x0,8
tick,0x7ffdc994fb34,23778788,0,0x0,8
tick,0x7ffdc994fb34,23794842,0,0x0,8
tick,0x7ffdc994fb34,23810257,0,0x0,8
tick,0x7ffdc994fb34,23825898,0,0x0,8
tick,0x7ffdc994fb34,23841952,0,0x0,8
tick,0x7ffdc994fb34,23857937,0,0x0,8
tick,0x7ffdc994fb34,23874066,0,0x0,8
tick,0x7ffdc994fb34,23889342,0,0x0,8
tick,0x7ffdc994fb34,23904646,0,0x0,8
tick,0x7ffdc994fb34,23920383,0,0x0,8
tick,0x7ffdc994fb34,23936316,0,0x0,8
tick,0x7ffdc994fb34,23951906,0,0x0,8
tick,0x7ffdc994fb34,23967408,0,0x0,8
tick,0x7ffdc994fb34,23983006,0,0x0,8
tick,0x7ffdc994fb34,23998568,0,0x0,8
tick,0x7ffdc994fb34,24013128,0,0x0,8
tick,0x7ffdc994fb34,24028445,0,0x0,8
tick,0x7ffdc994fb34,24043871,0,0x0,8
tick,0x7ffdc994fb34,24059120,0,0x0,8
tick,0x7ffdc994fb34,24074231,0,0x0,8
tick,0x7ffdc994fb34,24089691,0,0x0,8
tick,0x7ffdc994fb34,24105078,0,0x0,8
tick,0x7ffdc994fb34,24120754,0,0x0,8
tick,0x7ffdc994fb34,24136125,0,0x0,8
tick,0x7ffdc994fb34,24152034,0,0x0,8
tick,0x7ffdc994fb34,24168154,0,0x0,8
tick,0x7ffdc994fb34,24183349,0,0x0,8
tick,0x7ffdc994fb34,24199081,0,0x0,8
tick,0x7ffdc994fb34,24214643,0,0x0,8
tick,0x7ffdc994fb34,24229916,0,0x0,8
tick,0x7ffdc994fb34,24245596,0,0x0,8
tick,0x7ffdc994fb34,24261623,0,0x0,8
tick,0x7ffdc994fb34,24277060,0,0x0,8
tick,0x7ffdc994fb34,24293125,0,0x0,8
tick,0x7ffdc994fb34,24308583,0,0x0,8
tick,0x7ffdc994fb34,24323781,0,0x0,8
tick,0x7ffdc994fb34,24339332,0,0x0,8
tick,0x7ffdc994fb34,24354437,0,0x0,8
tick,0x7ffdc994fb34,24370329,0,0x0,8
tick,0x7ffdc994fb34,24385706,0,0x0,8
tick,0x7ffdc994fb34,24400897,0,0x0,8
tick,0x7ffdc994fb34,24416829,0,0x0,8
tick,0x7ffdc994fb34,24432437,0,0x0,8
tick,0x7ffdc994fb34,24448251,0,0x0,8
tick,0x7ffdc994fb34,24463964,0,0x0,8
tick,0x7ffdc994fb34,24479622,0,0x0,8
tick,0x7ffdc994fb34,24495005,0,0x0,8
tick,0x7ffdc994fb34,24510644,0,0x0,8
tick,0x7ffdc994fb34,24526566,0,0x0,8
tick,0x7ffdc994fb34,24542973,0,0x0,8
tick,0x7ffdc994fb34,24558784,0,0x0,8
tick,0x7ffdc994fb34,24574019,0,0x0,8
tick,0x7ffdc994fb34,24589743,0,0x0,8
tick,0x7ffdc994fb34,24604714,0,0x0,8
tick,0x7ffdc994fb34,24619954,0,0x0,8
tick,0x7ffdc994fb34,24635274,0,0x0,8
tick,0x7ffdc994fb34,24650944,0,0x0,8
tick,0x7ffdc994fb34,24666359,0,0x0,8
tick,0x7ffdc994fb34,24681866,0,0x0,8
tick,0x7ffdc994fb34,24697251,0,0x0,8
tick,0x7ffdc994fb34,24713259,0,0x0,8
tick,0x7ffdc994fb34,24728712,0,0x0,8
tick,0x7ffdc994fb34,24744245,0,0x0,8
tick,0x7ffdc994fb34,24760022,0,0x0,8
tick,0x7ffdc994fb34,24775497,0,0x0,8
tick,0x7ffdc994fb34,24790511,0,0x0,8
tick,0x7ffdc994fb34,24806635,0,0x0,8
tick,0x7ffdc994fb34,24822576,0,0x0,8
tick,0x7ffdc994fb34,24838571,0,0x0,8
tick,0x7ffdc994fb34,24854244,0,0x0,8
tick,0x7ffdc994fb34,24869597,0,0x0,8
tick,0x7ffdc994fb34,24884954,0,0x0,8
tick,0x7ffdc994fb34,24900500,0,0x0,8
tick,0x7ffdc994fb34,24915798,0,0x0,8
tick,0x7ffdc994fb34,24931133,0,0x0,8
tick,0x7ffdc994fb34,24946673,0,0x0,8
tick,0x7ffdc994fb34,24962196,0,0x0,8
tick,0x7ffdc994fb34,24977598,0,0x0,8
tick,0x7ffdc994fb34,24993208,0,0x0,8
tick,0x7ffdc994fb34,25008630,0,0x0,8
tick,0x7ffdc994fb34,25023761,0,0x0,8
tick,0x7ffdc994fb34,25039414,0,0x0,8
tick,0x7ffdc994fb34,25054783,0,0x0,8
tick,0x7ffdc994fb34,25070087,0,0x0,8
tick,0x7ffdc994fb34,25086190,0,0x0,8
tick,0x7ffdc994fb34,25102516,0,0x0,8
tick,0x7ffdc994fb34,25118229,0,0x0,8
tick,0x7ffdc994fb34,25134260,0,0x0,8
tick,0x7ffdc994fb34,25150092,0,0x0,8
tick,0x7ffdc994fb34,25165515,0,0x0,8
tick,0x7ffdc994fb34,25180607,0,0x0,8
tick,0x7ffdc994fb34,25196533,0,0x0,8
tick,0x7ffdc994fb34,25212487,0,0x0,8
tick,0x7ffdc994fb34,25228638,0,0x0,8
tick,0x7ffdc994fb34,25244357,0,0x0,8
tick,0x7ffdc994fb34,25259685,0,0x0,8
tick,0x7ffdc994fb34,25275200,0,0x0,8
tick,0x7ffdc994fb34,25290407,0,0x0,8
tick,0x7ffdc994fb34,25305963,0,0x0,8
tick,0x7ffdc994fb34,25321673,0,0x0,8
tick,0x7ffdc994fb34,25337773,0,0x0,8
tick,0x7ffdc994fb34,25353037,0,0x0,8
tick,0x7ffdc994fb34,25368926,0,0x0,8
tick,0x7ffdc994fb34,25384037,0,0x0,8
tick,0x7ffdc994fb34,25399605,0,0x0,8
tick,0x7ffdc994fb34,25414963,0,0x0,8
tick,0x7ffdc994fb34,25430951,0,0x0,8
tick,0x7ffdc994fb34,25446176,0,0x0,8
tick,0x7ffdc994fb34,25461680,0,0x0,8
tick,0x7ffdc994fb34,25476992,0,0x0,8
tick,0x7ffdc994fb34,25492325,0,0x0,8
tick,0x7ffdc994fb34,25507650,0,0x0,8
tick,0x7ffdc994fb34,25523306,0,0x0,8
tick,0x7ffdc994fb34,25538942,0,0x0,8
tick,0x7ffdc994fb34,25554679,0,0x0,8
tick,0x7ffdc994fb34,25570526,0,0x0,8
tick,0x7ffdc994fb34,25585777,0,0x0,8
tick,0x7ffdc994fb34,25601507,0,0x0,8
tick,0x7ffdc994fb34,25616983,0,0x0,8
tick,0x7ffdc994fb34,25632647,0,0x0,8
tick,0x7ffdc994fb34,25647715,0,0x0,8
tick,0x7ffdc994fb34,25662855,0,0x0,8
tick,0x7ffdc994fb34,25678747,0,0x0,8
tick,0x7ffdc994fb34,25694188,0,0x0,8
tick,0x7ffdc994fb34,25710121,0,0x0,8
tick,0x7ffdc994fb34,25725831,0,0x0,8
tick,0x7ffdc994fb34,25741626,0,0x0,8
tick,0x7ffdc994fb34,25756911,0,0x0,8
tick,0x7ffdc994fb34,25772777,0,0x0,8
tick,0x7ffdc994fb34,25788138,0,0x0,8
tick,0x7ffdc994fb34,25803486,0,0x0,8
tick,0x7ffdc994fb34,25819141,0,0x0,8
tick,0x7ffdc994fb34,25835261,0,0x0,8
tick,0x7ffdc994fb34,25851431,0,0x0,8
tick,0x7ffdc994fb34,25867553,0,0x0,8
tick,0x7ffdc994fb34,25883615,0,0x0,8
tick,0x7ffdc994fb34,25898755,0,0x0,8
tick,0x7ffdc994fb34,25914509,0,0x0,8
tick,0x7ffdc994fb34,25930116,0,0x0,8
tick,0x7ffdc994fb34,25945463,0,0x0,8
tick,0x7ffdc994fb34,25961181,0,0x0,8
tick,0x7ffdc994fb34,25976646,0,0x0,8
tick,0x7ffdc994fb34,25992160,0,0x0,8
tick,0x7ffdc994fb34,26007746,0,0x0,8
tick,0x7ffdc994fb34,26022873,0,0x0,8
tick,0x7ffdc994fb34,26038638,0,0x0,8
tick,0x7ffdc994fb34,26053930,0,0x0,8
tick,0x7ffdc994fb34,26069870,0,0x0,8
tick,0x7ffdc994fb34,26085088,0,0x0,8
tick,0x7ffdc994fb34,26100423,0,0x0,8
tick,0x7ffdc994fb34,26115817,0,0x0,8
tick,0x7ffdc994fb34,26131569,0,0x0,8
tick,0x7ffdc994fb34,26146891,0,0x0,8
tick,0x7ffdc994fb34,26162514,0,0x0,8
tick,0x7ffdc994fb34,26178084,0,0x0,8
tick,0x7ffdc994fb34,26193529,0,0x0,8
tick,0x7ffdc994fb34,26209040,0,0x0,8
tick,0x7ffdc994fb34,26224487,0,0x0,8
tick,0x7ffdc994fb34,26240050,0,0x0,8
tick,0x7ffdc994fb34,26255293,0,0x0,8
tick,0x7ffdc994fb34,26271053,0,0x0,8
tick,0x7ffdc994fb34,26286668,0,0x0,8
tick,0x7ffdc994fb34,26302107,0,0x0,8
tick,0x7ffdc994fb34,26317986,0,0x0,8
tick,0x7ffdc994fb34,26333265,0,0x0,8
tick,0x7ffdc994fb34,26349294,0,0x0,8
tick,0x7ffdc994fb34,26364962,0,0x0,8
tick,0x7ffdc994fb34,26380593,0,0x0,8
tick,0x7ffdc994fb34,26396455,0,0x0,8
tick,0x7ffdc994fb34,26411715,0,0x0,8
tick,0x7ffdc994fb34,26427218,0,0x0,8
tick,0x7ffdc994fb34,26443179,0,0x0,8
tick,0x7ffdc994fb34,26459066,0,0x0,8
tick,0x7ffdc994fb34,26474469,0,0x0,8
tick,0x7ffdc994fb34,26490011,0,0x0,8
tick,0x7ffdc994fb34,26505548,0,0x0,8
tick,0x7ffdc994fb34,26521326,0,0x0,8
tick,0x7ffdc994fb34,26536792,0,0x0,8
tick,0x7ffdc994fb34,26552247,0,0x0,8
tick,0x7ffdc994fb34,26567951,0,0x0,8
tick,0x7ffdc994fb34,26583460,0,0x0,8
tick,0x7ffdc994fb34,26599006,0,0x0,8
tick,0x7ffdc994fb34,26614936,0,0x0,8
tick,0x7ffdc994fb34,26630487,0,0x0,8
tick,0x7ffdc994fb34,26645808,0,0x0,8
tick,0x7ffdc994fb34,26661689,0,0x0,8
tick,0x7ffdc994fb34,26676973,0,0x0,8
tick,0x7ffdc994fb34,26692739,0,0x0,8
tick,0x7ffdc994fb34,26708104,0,0x0,8
tick,0x7ffdc994fb34,26723315,0,0x0,8
tick,0x7ffdc994fb34,26739119,0,0x0,8
tick,0x7ffdc994fb34,26754570,0,0x0,8
tick,0x7ffdc994fb34,26770441,0,0x0,8
tick,0x7ffdc994fb34,26786204,0,0x0,8
tick,0x7ffdc994fb34,26801381,0,0x0,8
tick,0x7ffdc994fb34,26817500,0,0x0,8
tick,0x7ffdc994fb34,26833087,0,0x0,8
tick,0x7ffdc994fb34,26847929,0,0x0,8
tick,0x7ffdc994fb34,26863127,0,0x0,8
tick,0x7ffdc994fb34,26878688,0,0x0,8
tick,0x7ffdc994fb34,26894547,0,0x0,8
tick,0x7ffdc994fb34,26909667,0,0x0,8
tick,0x7ffdc994fb34,26925355,0,0x0,8
tick,0x7ffdc994fb34,26941812,0,0x0,8
tick,0x7ffdc994fb34,26957627,0,0x0,8
tick,0x7ffdc994fb34,26973405,0,0x0,8
tick,0x7ffdc994fb34,26989409,0,0x0,8
tick,0x7ffdc994fb34,27005196,0,0x0,8
tick,0x7ffdc994fb34,27021236,0,0x0,8
tick,0x7ffdc994fb34,27036996,0,0x0,8
tick,0x7ffdc994fb34,27052273,0,0x0,8
tick,0x7ffdc994fb34,27067691,0,0x0,8
tick,0x7ffdc994fb34,27082875,0,0x0,8
tick,0x7ffdc994fb34,27097684,0,0x0,8
tick,0x7ffdc994fb34,27112840,0,0x0,8
tick,0x7ffdc994fb34,27128924,0,0x0,8
tick,0x7ffdc994fb34,27144186,0,0x0,8
tick,0x7ffdc994fb34,27159829,0,0x0,8
tick,0x7ffdc994fb34,27175496,0,0x0,8
tick,0x7ffdc994fb34,27191369,0,0x0,8
tick,0x7ffdc994fb34,27206678,0,0x0,8
tick,0x7ffdc994fb34,27222299,0,0x0,8
tick,0x7ffdc994fb34,27237662,0,0x0,8
tick,0x7ffdc994fb34,27253325,0,0x0,8
tick,0x7ffdc994fb34,27269376,0,0x0,8
tick,0x7ffdc994fb34,27284499,0,0x0,8
tick,0x7ffdc994fb34,27299941,0,0x0,8
tick,0x7ffdc994fb34,27315610,0,0x0,8
tick,0x7ffdc994fb34,27330723,0,0x0,8
tick,0x7ffdc994fb34,27346452,0,0x0,8
tick,0x7ffdc994fb34,27361754,0,0x0,8
tick,0x7ffdc994fb34,27377625,0,0x0,8
tick,0x7ffdc994fb34,27392887,0,0x0,8
tick,0x7ffdc994fb34,27408627,0,0x0,8
tick,0x7ffdc994fb34,27423995,0,0x0,8
tick,0x7ffdc994fb34,27439593,0,0x0,8
tick,0x7ffdc994fb34,27454676,0,0x0,8
tick,0x7ffdc994fb34,27470240,0,0x0,8
tick,0x7ffdc994fb34,27485751,0,0x0,8
tick,0x7ffdc994fb34,27501783,0,0x0,8
tick,0x7ffdc994fb34,27517230,0,0x0,8
tick,0x7ffdc994fb34,27532681,0,0x0,8
tick,0x7ffdc994fb34,27548541,0,0x0,8
tick,0x7ffdc994fb34,27564097,0,0x0,8
tick,0x7ffdc994fb34,27579685,0,0x0,8
tick,0x7ffdc994fb34,27594880,0,0x0,8
tick,0x7ffdc994fb34,27610536,0,0x0,8
tick,0x7ffdc994fb34,27625927,0,0x0,8
tick,0x7ffdc994fb34,27641396,0,0x0,8
tick,0x7ffdc994fb34,27656716,0,0x0,8
tick,0x7ffdc994fb34,27672454,0,0x0,8
tick,0x7ffdc994fb34,27688224,0,0x0,8
tick,0x7ffdc994fb34,27702632,0,0x0,8
tick,0x7ffdc994fb34,27717739,0,0x0,8
tick,0x7ffdc994fb34,27733590,0,0x0,8
tick,0x7ffdc994fb34,27749113,0,0x0,8
tick,0x7ffdc994fb34,27764603,0,0x0,8
tick,0x7ffdc994fb34,27780102,0,0x0,8
tick,0x7ffdc994fb34,27795654,0,0x0,8
tick,0x7ffdc994fb34,27811400,0,0x0,8
tick,0x7ffdc994fb34,27826945,0,0x0,8
tick,0x7ffdc994fb34,27842647,0,0x0,8
tick,0x7ffdc994fb34,27857503,0,0x0,8
tick,0x7ffdc994fb34,27873501,0,0x0,8
tick,0x7ffdc994fb34,27888980,0,0x0,8
tick,0x7ffdc994fb34,27903869,0,0x0,8
tick,0x7ffdc994fb34,27919530,0,0x0,8
tick,0x7ffdc994fb34,27934926,0,0x0,8
tick,0x7ffdc994fb34,27950516,0,0x0,8
tick,0x7ffdc994fb34,27966448,0,0x0,8
tick,0x7ffdc994fb34,27982058,0,0x0,8
tick,0x7ffdc994fb34,27997790,0,0x0,8
tick,0x7ffdc994fb34,28013283,0,0x0,8
tick,0x7ffdc994fb34,28028918,0,0x0,8
tick,0x7ffdc994fb34,28044085,0,0x0,8
tick,0x7ffdc994fb34,28059337,0,0x0,8
tick,0x7ffdc994fb34,28075375,0,0x0,8
tick,0x7ffdc994fb34,28090796,0,0x0,8
tick,0x7ffdc994fb34,28106928,0,0x0,8
tick,0x7ffdc994fb34,28122218,0,0x0,8
tick,0x7ffdc994fb34,28137884,0,0x0,8
tick,0x7ffdc994fb34,28153220,0,0x0,8
tick,0x7ffdc994fb34,28168373,0,0x0,8
tick,0x7ffdc994fb34,28184393,0,0x0,8
tick,0x7ffdc994fb34,28200196,0,0x0,8
tick,0x7ffdc994fb34,28215825,0,0x0,8
tick,0x7ffdc994fb34,28231409,0,0x0,8
tick,0x7ffdc994fb34,28246648,0,0x0,8
tick,0x7ffdc994fb34,28262009,0,0x0,8
tick,0x7ffdc994fb34,28277994,0,0x0,8
tick,0x7ffdc994fb34,28293171,0,0x0,8
tick,0x7ffdc994fb34,28308583,0,0x0,8
tick,0x7ffdc994fb34,28323878,0,0x0,8
tick,0x7ffdc994fb34,28339623,0,0x0,8
tick,0x7ffdc994fb34,28354786,0,0x0,8
tick,0x7ffdc994fb34,28370493,0,0x0,8
tick,0x7ffdc994fb34,28386340,0,0x0,8
tick,0x7ffdc994fb34,28401741,0,0x0,8
tick,0x7ffdc994fb34,28417562,0,0x0,8
tick,0x7ffdc994fb34,28433591,0,0x0,8
tick,0x7ffdc994fb34,28449243,0,0x0,8
tick,0x7ffdc994fb34,28464620,0,0x0,8
tick,0x7ffdc994fb34,28479715,0,0x0,8
tick,0x7ffdc994fb34,28495502,0,0x0,8
tick,0x7ffdc994fb34,28512179,0,0x0,8
tick,0x7ffdc994fb34,28528057,0,0x0,8
tick,0x7ffdc994fb34,28543081,0,0x0,8
tick,0x7ffdc994fb34,28558864,0,0x0,8
tick,0x7ffdc994fb34,28574305,0,0x0,8
tick,0x7ffdc994fb34,28589859,0,0x0,8
tick,0x7ffdc994fb34,28605291,0,0x0,8
tick,0x7ffdc994fb34,28620531,0,0x0,8
tick,0x7ffdc994fb34,28636461,0,0x0,8
tick,0x7ffdc994fb34,28651941,0,0x0,8
tick,0x7ffdc994fb34,28667253,0,0x0,8
tick,0x7ffdc994fb34,28682605,0,0x0,8
tick,0x7ffdc994fb34,28697969,0,0x0,8
tick,0x7ffdc994fb34,28713628,0,0x0,8
tick,0x7ffdc994fb34,28729245,0,0x0,8
tick,0x7ffdc994fb34,28744584,0,0x0,8
tick,0x7ffdc994fb34,28760494,0,0x0,8
tick,0x7ffdc994fb34,28775936,0,0x0,8
tick,0x7ffdc994fb34,28791910,0,0x0,8
tick,0x7ffdc994fb34,28806900,0,0x0,8
tick,0x7ffdc994fb34,28822848,0,0x0,8
tick,0x7ffdc994fb34,28838518,0,0x0,8
tick,0x7ffdc994fb34,28854010,0,0x0,8
tick,0x7ffdc994fb34,28869638,0,0x0,8
tick,0x7ffdc994fb34,28885075,0,0x0,8
tick,0x7ffdc994fb34,28900899,0,0x0,8
tick,0x7ffdc994fb34,28916507,0,0x0,8
tick,0x7ffdc994fb34,28932453,0,0x0,8
tick,0x7ffdc994fb34,28948067,0,0x0,8
tick,0x7ffdc994fb34,28963121,0,0x0,8
tick,0x7ffdc994fb34,28978421,0,0x0,8
tick,0x7ffdc994fb34,28994462,0,0x0,8
tick,0x7ffdc994fb34,29010086,0,0x0,8
tick,0x7ffdc994fb34,29025034,0,0x0,8
tick,0x7ffdc994fb34,29040486,0,0x0,8
tick,0x7ffdc994fb34,29055753,0,0x0,8
tick,0x7ffdc994fb34,29071607,0,0x0,8
tick,0x7ffdc994fb34,29086852,0,0x0,8
tick,0x7ffdc994fb34,29102480,0,0x0,8
tick,0x7ffdc994fb34,29118202,0,0x0,8
tick,0x7ffdc994fb34,29133709,0,0x0,8
tick,0x7ffdc994fb34,29149255,0,0x0,8
tick,0x7ffdc994fb34,29165283,0,0x0,8
tick,0x7ffdc994fb34,29180763,0,0x0,8
tick,0x7ffdc994fb34,29196740,0,0x0,8
tick,0x7ffdc994fb34,29212824,0,0x0,8
tick,0x7ffdc994fb34,29228636,0,0x0,8
tick,0x7ffdc994fb34,29243772,0,0x0,8
tick,0x7ffdc994fb34,29259503,0,0x0,8
tick,0x7ffdc994fb34,29274922,0,0x0,8
tick,0x7ffdc994fb34,29290195,0,0x0,8
tick,0x7ffdc994fb34,29306102,0,0x0,8
tick,0x7ffdc994fb34,29322454,0,0x0,8
tick,0x7ffdc994fb34,29337319,0,0x0,8
tick,0x7ffdc994fb34,29353464,0,0x0,8
tick,0x7ffdc994fb34,29369004,0,0x0,8
tick,0x7ffdc994fb34,29384103,0,0x0,8
tick,0x7ffdc994fb34,29399396,0,0x0,8
tick,0x7ffdc994fb34,29415215,0,0x0,8
tick,0x7ffdc994fb34,29430590,0,0x0,8
tick,0x7ffdc994fb34,29446519,0,0x0,8
tick,0x7ffdc994fb34,29461699,0,0x0,8
tick,0x7ffdc994fb34,29477352,0,0x0,8
tick,0x7ffdc994fb34,29492845,0,0x0,8
tick,0x7ffdc994fb34,29508240,0,0x0,8
tick,0x7ffdc994fb34,29523447,0,0x0,8
tick,0x7ffdc994fb34,29538929,0,0x0,8
tick,0x7ffdc994fb34,29554537,0,0x0,8
tick,0x7ffdc994fb34,29570123,0,0x0,8
tick,0x7ffdc994fb34,29585528,0,0x0,8
tick,0x7ffdc994fb34,29600993,0,0x0,8
tick,0x7ffdc994fb34,29616809,0,0x0,8
tick,0x7ffdc994fb34,29632148,0,0x0,8
tick,0x7ffdc994fb34,29647566,0,0x0,8
tick,0x7ffdc994fb34,29662999,0,0x0,8
tick,0x7ffdc994fb34,29678920,0,0x0,8
tick,0x7ffdc994fb34,29694174,0,0x0,8
tick,0x7ffdc994fb34,29710145,0,0x0,8
tick,0x7ffdc994fb34,29725445,0,0x0,8
tick,0x7ffdc994fb34,29740999,0,0x0,8
tick,0x7ffdc994fb34,29756663,0,0x0,8
tick,0x7ffdc994fb34,29772050,0,0x0,8
tick,0x7ffdc994fb34,29787811,0,0x0,8
tick,0x7ffdc994fb34,29803695,0,0x0,8
tick,0x7ffdc994fb34,29819646,0,0x0,8
tick,0x7ffdc994fb34,29835094,0,0x0,8
tick,0x7ffdc994fb34,29850674,0,0x0,8
tick,0x7ffdc994fb34,29866250,0,0x0,8
tick,0x7ffdc994fb34,29881685,0,0x0,8
tick,0x7ffdc994fb34,29897298,0,0x0,8
tick,0x7ffdc994fb34,29912636,0,0x0,8
tick,0x7ffdc994fb34,29928369,0,0x0,8
tick,0x7ffdc994fb34,29944283,0,0x0,8
tick,0x7ffdc994fb34,29959923,0,0x0,8
tick,0x7ffdc994fb34,29975805,0,0x0,8
tick,0x7ffdc994fb34,29991499,0,0x0,8
tick,0x7ffdc994fb34,30007588,0,0x0,8
tick,0x7ffdc994fb34,30023625,0,0x0,8
tick,0x7ffdc994fb34,30039612,0,0x0,8
tick,0x7ffdc994fb34,30055691,0,0x0,8
tick,0x7ffdc994fb34,30071070,0,0x0,8
tick,0x7ffdc994fb34,30086475,0,0x0,8
tick,0x7ffdc994fb34,30102572,0,0x0,8
tick,0x7ffdc994fb34,30118000,0,0x0,8
tick,0x7ffdc994fb34,30133112,0,0x0,8
tick,0x7ffdc994fb34,30148738,0,0x0,8
tick,0x7ffdc994fb34,30164059,0,0x0,8
tick,0x7ffdc994fb34,30179635,0,0x0,8
tick,0x7ffdc994fb34,30195662,0,0x0,8
tick,0x7ffdc994fb34,30211181,0,0x0,8
tick,0x7ffdc994fb34,30226697,0,0x0,8
tick,0x7ffdc994fb34,30242233,0,0x0,8
tick,0x7ffdc994fb34,30257476,0,0x0,8
tick,0x7ffdc994fb34,30272813,0,0x0,8
tick,0x7ffdc994fb34,30288631,0,0x0,8
tick,0x7ffdc994fb34,30303789,0,0x0,8
tick,0x7ffdc994fb34,30318976,0,0x0,8
tick,0x7ffdc994fb34,30334301,0,0x0,8
tick,0x7ffdc994fb34,30349929,0,0x0,8
tick,0x7ffdc994fb34,30365592,0,0x0,8
tick,0x7ffdc994fb34,30381152,0,0x0,8
tick,0x7ffdc994fb34,30396608,0,0x0,8
tick,0x7ffdc994fb34,30412423,0,0x0,8
tick,0x7ffdc994fb34,30428225,0,0x0,8
tick,0x7ffdc994fb34,30444185,0,0x0,8
tick,0x7ffdc994fb34,30459156,0,0x0,8
tick,0x7ffdc994fb34,30474457,0,0x0,8
tick,0x7ffdc994fb34,30490715,0,0x0,8
tick,0x7ffdc994fb34,30506639,0,0x0,8
tick,0x7ffdc994fb34,30522124,0,0x0,8
tick,0x7ffdc994fb34,30537533,0,0x0,8
tick,0x7ffdc994fb34,30553085,0,0x0,8
tick,0x7ffdc994fb34,30568660,0,0x0,8
tick,0x7ffdc994fb34,30584105,0,0x0,8
tick,0x7ffdc994fb34,30599926,0,0x0,8
tick,0x7ffdc994fb34,30615472,0,0x0,8
tick,0x7ffdc994fb34,30630793,0,0x0,8
tick,0x7ffdc994fb34,30646090,0,0x0,8
tick,0x7ffdc994fb34,30661878,0,0x0,8
tick,0x7ffdc994fb34,30677347,0,0x0,8
tick,0x7ffdc994fb34,30692809,0,0x0,8
tick,0x7ffdc994fb34,30708448,0,0x0,8
tick,0x7ffdc994fb34,30724319,0,0x0,8
tick,0x7ffdc994fb34,30739819,0,0x0,8
tick,0x7ffdc994fb34,30755748,0,0x0,8
tick,0x7ffdc994fb34,30770895,0,0x0,8
tick,0x7ffdc994fb34,30786613,0,0x0,8
tick,0x7ffdc994fb34,30802072,0,0x0,8
tick,0x7ffdc994fb34,30817843,0,0x0,8
tick,0x7ffdc994fb34,30832917,0,0x0,8
tick,0x7ffdc994fb34,30848313,0,0x0,8
tick,0x7ffdc994fb34,30863368,0,0x0,8
tick,0x7ffdc994fb34,30878644,0,0x0,8
tick,0x7ffdc994fb34,30894860,0,0x0,8
tick,0x7ffdc994fb34,30910146,0,0x0,8
tick,0x7ffdc994fb34,30925266,0,0x0,8
tick,0x7ffdc994fb34,30941609,0,0x0,8
tick,0x7ffdc994fb34,30957177,0,0x0,8
tick,0x7ffdc994fb34,30972712,0,0x0,8
tick,0x7ffdc994fb34,30987958,0,0x0,8
tick,0x7ffdc994fb34,31003546,0,0x0,8
tick,0x7ffdc994fb34,31019134,0,0x0,8
tick,0x7ffdc994fb34,31034404,0,0x0,8
tick,0x7ffdc994fb34,31050279,0,0x0,8
tick,0x7ffdc994fb34,31065051,0,0x0,8
tick,0x7ffdc994fb34,31080696,0,0x0,8
tick,0x7ffdc994fb34,31096502,0,0x0,8
tick,0x7ffdc994fb34,31111787,0,0x0,8
tick,0x7ffdc994fb34,31127250,0,0x0,8
tick,0x7ffdc994fb34,31142938,0,0x0,8
tick,0x7ffdc994fb34,31158111,0,0x0,8
tick,0x7ffdc994fb34,31173650,0,0x0,8
tick,0x7ffdc994fb34,31189416,0,0x0,8
tick,0x7ffdc994fb34,31204656,0,0x0,8
tick,0x7ffdc994fb34,31220198,0,0x0,8
tick,0x7ffdc994fb34,31235852,0,0x0,8
tick,0x7ffdc994fb34,31252165,0,0x0,8
tick,0x7ffdc994fb34,31268164,0,0x0,8
tick,0x7ffdc994fb34,31283414,0,0x0,8
tick,0x7ffdc994fb34,31299093,0,0x0,8
tick,0x7ffdc994fb34,31314429,0,0x0,8
tick,0x7ffdc994fb34,31330016,0,0x0,8
tick,0x7ffdc994fb34,31345508,0,0x0,8
tick,0x7ffdc994fb34,31361282,0,0x0,8
tick,0x7ffdc994fb34,31376697,0,0x0,8
tick,0x7ffdc994fb34,31392463,0,0x0,8
tick,0x7ffdc994fb34,31407919,0,0x0,8
tick,0x7ffdc994fb34,31422845,0,0x0,8
tick,0x7ffdc994fb34,31438277,0,0x0,8
tick,0x7ffdc994fb34,31453648,0,0x0,8
tick,0x7ffdc994fb34,31469541,0,0x0,8
tick,0x7ffdc994fb34,31484913,0,0x0,8
tick,0x7ffdc994fb34,31500539,0,0x0,8
tick,0x7ffdc994fb34,31516347,0,0x0,8
tick,0x7ffdc994fb34,31532697,0,0x0,8
tick,0x7ffdc994fb34,31548120,0,0x0,8
tick,0x7ffdc994fb34,31563141,0,0x0,8
tick,0x7ffdc994fb34,31578754,0,0x0,8
tick,0x7ffdc994fb34,31594209,0,0x0,8
tick,0x7ffdc994fb34,31609825,0,0x0,8
tick,0x7ffdc994fb34,31625716,0,0x0,8
tick,0x7ffdc994fb34,31641438,0,0x0,8
tick,0x7ffdc994fb34,31656970,0,0x0,8
tick,0x7ffdc994fb34,31672437,0,0x0,8
tick,0x7ffdc994fb34,31688087,0,0x0,8
tick,0x7ffdc994fb34,31703435,0,0x0,8
tick,0x7ffdc994fb34,31718672,0,0x0,8
tick,0x7ffdc994fb34,31734491,0,0x0,8
tick,0x7ffdc994fb34,31750575,0,0x0,8
tick,0x7ffdc994fb34,31765894,0,0x0,8
tick,0x7ffdc994fb34,31780881,0,0x0,8
tick,0x7ffdc994fb34,31796897,0,0x0,8
tick,0x7ffdc994fb34,31812597,0,0x0,8
tick,0x7ffdc994fb34,31827734,0,0x0,8
tick,0x7ffdc994fb34,31843105,0,0x0,8
tick,0x7ffdc994fb34,31859060,0,0x0,8
tick,0x7ffdc994fb34,31874852,0,0x0,8
tick,0x7ffdc994fb34,31890772,0,0x0,8
tick,0x7ffdc994fb34,31906723,0,0x0,8
tick,0x7ffdc994fb34,31922030,0,0x0,8
tick,0x7ffdc994fb34,31938099,0,0x0,8
tick,0x7ffdc994fb34,31953723,0,0x0,8
tick,0x7ffdc994fb34,31969065,0,0x0,8
tick,0x7ffdc994fb34,31984537,0,0x0,8
tick,0x7ffdc994fb34,32000094,0,0x0,8
tick,0x7ffdc994fb34,32015248,0,0x0,8
tick,0x7ffdc994fb34,32030955,0,0x0,8
tick,0x7ffdc994fb34,32046020,0,0x0,8
tick,0x7ffdc994fb34,32061495,0,0x0,8
tick,0x7ffdc994fb34,32076741,0,0x0,8
tick,0x7ffdc994fb34,32091851,0,0x0,8
tick,0x7ffdc994fb34,32107914,0,0x0,8
tick,0x7ffdc994fb34,32123161,0,0x0,8
tick,0x7ffdc994fb34,32139023,0,0x0,8
tick,0x7ffdc994fb34,32154127,0,0x0,8
tick,0x7ffdc994fb34,32169792,0,0x0,8
tick,0x7ffdc994fb34,32184826,0,0x0,8
tick,0x7ffdc994fb34,32200406,0,0x0,8
tick,0x7ffdc994fb34,32215747,0,0x0,8
tick,0x7ffdc994fb34,32231493,0,0x0,8
tick,0x7ffdc994fb34,32247583,0,0x0,8
tick,0x7ffdc994fb34,32262929,0,0x0,8
tick,0x7ffdc994fb34,32278440,0,0x0,8
tick,0x7ffdc994fb34,32293743,0,0x0,8
tick,0x7ffdc994fb34,32308986,0,0x0,8
tick,0x7ffdc994fb34,32324461,0,0x0,8
tick,0x7ffdc994fb34,32339750,0,0x0,8
tick,0x7ffdc994fb34,32355486,0,0x0,8
tick,0x7ffdc994fb34,32370902,0,0x0,8
tick,0x7ffdc994fb34,32386638,0,0x0,8
tick,0x7ffdc994fb34,32401926,0,0x0,8
tick,0x7ffdc994fb34,32417882,0,0x0,8
tick,0x7ffdc994fb34,32432886,0,0x0,8
tick,0x7ffdc994fb34,32448441,0,0x0,8
tick,0x7ffdc994fb34,32463795,0,0x0,8
tick,0x7ffdc994fb34,32479810,0,0x0,8
tick,0x7ffdc994fb34,32495040,0,0x0,8
tick,0x7ffdc994fb34,32510767,0,0x0,8
tick,0x7ffdc994fb34,32526246,0,0x0,8
tick,0x7ffdc994fb34,32541763,0,0x0,8
tick,0x7ffdc994fb34,32557381,0,0x0,8
tick,0x7ffdc994fb34,32573048,0,0x0,8
tick,0x7ffdc994fb34,32588534,0,0x0,8
tick,0x7ffdc994fb34,32603814,0,0x0,8
tick,0x7ffdc994fb34,32619552,0,0x0,8
tick,0x7ffdc994fb34,32634122,0,0x0,8
tick,0x7ffdc994fb34,32649752,0,0x0,8
tick,0x7ffdc994fb34,32664901,0,0x0,8
tick,0x7ffdc994fb34,32680754,0,0x0,8
tick,0x7ffdc994fb34,32696718,0,0x0,8
tick,0x7ffdc994fb34,32712518,0,0x0,8
tick,0x7ffdc994fb34,32728090,0,0x0,8
tick,0x7ffdc994fb34,32743702,0,0x0,8
tick,0x7ffdc994fb34,32759367,0,0x0,8
tick,0x7ffdc994fb34,32774793,0,0x0,8
tick,0x7ffdc994fb34,32790262,0,0x0,8
tick,0x7ffdc994fb34,32805643,0,0x0,8
tick,0x7ffdc994fb34,32821475,0,0x0,8
tick,0x7ffdc994fb34,32836936,0,0x0,8
tick,0x7ffdc994fb34,32852246,0,0x0,8
tick,0x7ffdc994fb34,32867978,0,0x0,8
tick,0x7ffdc994fb34,32883238,0,0x0,8
tick,0x7ffdc994fb34,32898865,0,0x0,8
tick,0x7ffdc994fb34,32914089,0,0x0,8
tick,0x7ffdc994fb34,32929463,0,0x0,8
tick,0x7ffdc994fb34,32944530,0,0x0,8
tick,0x7ffdc994fb34,32960130,0,0x0,8
tick,0x7ffdc994fb34,32975808,0,0x0,8
tick,0x7ffdc994fb34,32991235,0,0x0,8
tick,0x7ffdc994fb34,33007035,0,0x0,8
tick,0x7ffdc994fb34,33022041,0,0x0,8
tick,0x7ffdc994fb34,33036980,0,0x0,8
tick,0x7ffdc994fb34,33053088,0,0x0,8
tick,0x7ffdc994fb34,33068813,0,0x0,8
tick,0x7ffdc994fb34,33084135,0,0x0,8
tick,0x7ffdc994fb34,33099637,0,0x0,8
tick,0x7ffdc994fb34,33115038,0,0x0,8
tick,0x7ffdc994fb34,33131086,0,0x0,8
tick,0x7ffdc994fb34,33146857,0,0x0,8
tick,0x7ffdc994fb34,33162512,0,0x0,8
tick,0x7ffdc994fb34,33178000,0,0x0,8
tick,0x7ffdc994fb34,33193564,0,0x0,8
tick,0x7ffdc994fb34,33208912,0,0x0,8
tick,0x7ffdc994fb34,33224152,0,0x0,8
tick,0x7ffdc994fb34,33239811,0,0x0,8
tick,0x7ffdc994fb34,33254868,0,0x0,8
tick,0x7ffdc994fb34,33270247,0,0x0,8
tick,0x7ffdc994fb34,33286127,0,0x0,8
tick,0x7ffdc994fb34,33301686,0,0x0,8
tick,0x7ffdc994fb34,33317613,0,0x0,8
tick,0x7ffdc994fb34,33332758,0,0x0,8
tick,0x7ffdc994fb34,33348386,0,0x0,8
tick,0x7ffdc994fb34,33363900,0,0x0,8
tick,0x7ffdc994fb34,33379682,0,0x0,8
tick,0x7ffdc994fb34,33395037,0,0x0,8
tick,0x7ffdc994fb34,33410818,0,0x0,8
tick,0x7ffdc994fb34,33426049,0,0x0,8
tick,0x7ffdc994fb34,33441836,0,0x0,8
tick,0x7ffdc994fb34,33457043,0,0x0,8
tick,0x7ffdc994fb34,33472692,0,0x0,8
tick,0x7ffdc994fb34,33488301,0,0x0,8
tick,0x7ffdc994fb34,33503837,0,0x0,8
tick,0x7ffdc994fb34,33519394,0,0x0,8
tick,0x7ffdc994fb34,33534787,0,0x0,8
tick,0x7ffdc994fb34,33550573,0,0x0,8
tick,0x7ffdc994fb34,33565602,0,0x0,8
tick,0x7ffdc994fb34,33581426,0,0x0,8
tick,0x7ffdc994fb34,33596901,0,0x0,8
tick,0x7ffdc994fb34,33612703,0,0x0,8
tick,0x7ffdc994fb34,33627981,0,0x0,8
tick,0x7ffdc994fb34,33643477,0,0x0,8
tick,0x7ffdc994fb34,33659826,0,0x0,8
tick,0x7ffdc994fb34,33674855,0,0x0,8
tick,0x7ffdc994fb34,33690968,0,0x0,8
tick,0x7ffdc994fb34,33706736,0,0x0,8
tick,0x7ffdc994fb34,33722732,0,0x0,8
tick,0x7ffdc994fb34,33737952,0,0x0,8
tick,0x7ffdc994fb34,33752985,0,0x0,8
tick,0x7ffdc994fb34,33768841,0,0x0,8
tick,0x7ffdc994fb34,33784490,0,0x0,8
tick,0x7ffdc994fb34,33799972,0,0x0,8
tick,0x7ffdc994fb34,33815505,0,0x0,8
tick,0x7ffdc994fb34,33831246,0,0x0,8
tick,0x7ffdc994fb34,33846519,0,0x0,8
tick,0x7ffdc994fb34,33862232,0,0x0,8
tick,0x7ffdc994fb34,33877841,0,0x0,8
tick,0x7ffdc994fb34,33892970,0,0x0,8
tick,0x7ffdc994fb34,33909196,0,0x0,8
tick,0x7ffdc994fb34,33924339,0,0x0,8
tick,0x7ffdc994fb34,33939979,0,0x0,8
tick,0x7ffdc994fb34,33955566,0,0x0,8
tick,0x7ffdc994fb34,33971690,0,0x0,8
tick,0x7ffdc994fb34,33987415,0,0x0,8
tick,0x7ffdc994fb34,34003564,0,0x0,8
tick,0x7ffdc994fb34,34019177,0,0x0,8
tick,0x7ffdc994fb34,34034669,0,0x0,8
tick,0x7ffdc994fb34,34050010,0,0x0,8
tick,0x7ffdc994fb34,34066054,0,0x0,8
tick,0x7ffdc994fb34,34081319,0,0x0,8
tick,0x7ffdc994fb34,34096936,0,0x0,8
tick,0x7ffdc994fb34,34112405,0,0x0,8
tick,0x7ffdc994fb34,34127768,0,0x0,8
tick,0x7ffdc994fb34,34143629,0,0x0,8
tick,0x7ffdc994fb34,34159593,0,0x0,8
tick,0x7ffdc994fb34,34175407,0,0x0,8
tick,0x7ffdc994fb34,34190847,0,0x0,8
tick,0x7ffdc994fb34,34206401,0,0x0,8
tick,0x7ffdc994fb34,34221770,0,0x0,8
tick,0x7ffdc994fb34,34237506,0,0x0,8
tick,0x7ffdc994fb34,34252634,0,0x0,8
tick,0x7ffdc994fb34,34268240,0,0x0,8
tick,0x7ffdc994fb34,34283409,0,0x0,8
tick,0x7ffdc994fb34,34298866,0,0x0,8
tick,0x7ffdc994fb34,34314116,0,0x0,8
tick,0x7ffdc994fb34,34329439,0,0x0,8
tick,0x7ffdc994fb34,34344910,0,0x0,8
tick,0x7ffdc994fb34,34360504,0,0x0,8
tick,0x7ffdc994fb34,34376025,0,0x0,8
tick,0x7ffdc994fb34,34391362,0,0x0,8
tick,0x7ffdc994fb34,34407069,0,0x0,8
tick,0x7ffdc994fb34,34422289,0,0x0,8
tick,0x7ffdc994fb34,34437053,0,0x0,8
tick,0x7ffdc994fb34,34452605,0,0x0,8
tick,0x7ffdc994fb34,34468257,0,0x0,8
tick,0x7ffdc994fb34,34483671,0,0x0,8
tick,0x7ffdc994fb34,34499387,0,0x0,8
tick,0x7ffdc994fb34,34514855,0,0x0,8
tick,0x7ffdc994fb34,34530679,0,0x0,8
tick,0x7ffdc994fb34,34546260,0,0x0,8
tick,0x7ffdc994fb34,34561294,0,0x0,8
tick,0x7ffdc994fb34,34577089,0,0x0,8
tick,0x7ffdc994fb34,34592383,0,0x0,8
tick,0x7ffdc994fb34,34608266,0,0x0,8
tick,0x7ffdc994fb34,34623357,0,0x0,8
tick,0x7ffdc994fb34,34639092,0,0x0,8
tick,0x7ffdc994fb34,34654865,0,0x0,8
tick,0x7ffdc994fb34,34670180,0,0x0,8
tick,0x7ffdc994fb34,34685923,0,0x0,8
tick,0x7ffdc994fb34,34701589,0,0x0,8
tick,0x7ffdc994fb34,34717115,0,0x0,8
tick,0x7ffdc994fb34,34732665,0,0x0,8
tick,0x7ffdc994fb34,34748464,0,0x0,8
tick,0x7ffdc994fb34,34763935,0,0x0,8
tick,0x7ffdc994fb34,34779813,0,0x0,8
tick,0x7ffdc994fb34,34795207,0,0x0,8
tick,0x7ffdc994fb34,34811006,0,0x0,8
tick,0x7ffdc994fb34,34826450,0,0x0,8
tick,0x7ffdc994fb34,34841848,0,0x0,8
tick,0x7ffdc994fb34,34857662,0,0x0,8
tick,0x7ffdc994fb34,34872928,0,0x0,8
tick,0x7ffdc994fb34,34888912,0,0x0,8
tick,0x7ffdc994fb34,34904158,0,0x0,8
tick,0x7ffdc994fb34,34919680,0,0x0,8
tick,0x7ffdc994fb34,34935437,0,0x0,8
tick,0x7ffdc994fb34,34951193,0,0x0,8
tick,0x7ffdc994fb34,34966452,0,0x0,8
tick,0x7ffdc994fb34,34982102,0,0x0,8
tick,0x7ffdc994fb34,34998581,0,0x0,8
tick,0x7ffdc994fb34,35013943,0,0x0,8
tick,0x7ffdc994fb34,35029594,0,0x0,8
tick,0x7ffdc994fb34,35044871,0,0x0,8
tick,0x7ffdc994fb34,35060329,0,0x0,8
tick,0x7ffdc994fb34,35075222,0,0x0,8
tick,0x7ffdc994fb34,35091287,0,0x0,8
tick,0x7ffdc994fb34,35107074,0,0x0,8
tick,0x7ffdc994fb34,35122465,0,0x0,8
tick,0x7ffdc994fb34,35137947,0,0x0,8
tick,0x7ffdc994fb34,35153745,0,0x0,8
tick,0x7ffdc994fb34,35169437,0,0x0,8
tick,0x7ffdc994fb34,35184558,0,0x0,8
tick,0x7ffdc994fb34,35199867,0,0x0,8
tick,0x7ffdc994fb34,35215535,0,0x0,8
tick,0x7ffdc994fb34,35231172,0,0x0,8
tick,0x7ffdc994fb34,35246729,0,0x0,8
tick,0x7ffdc994fb34,35262491,0,0x0,8
tick,0x7ffdc994fb34,35277705,0,0x0,8
tick,0x7ffdc994fb34,35293214,0,0x0,8
tick,0x7ffdc994fb34,35308606,0,0x0,8
tick,0x7ffdc994fb34,35324285,0,0x0,8
tick,0x7ffdc994fb34,35340033,0,0x0,8
tick,0x7ffdc994fb34,35355334,0,0x0,8
tick,0x7ffdc994fb34,35371491,0,0x0,8
tick,0x7ffdc994fb34,35386892,0,0x0,8
tick,0x7ffdc994fb34,35402605,0,0x0,8
tick,0x7ffdc994fb34,35418220,0,0x0,8
tick,0x7ffdc994fb34,35433730,0,0x0,8
tick,0x7ffdc994fb34,35449895,0,0x0,8
tick,0x7ffdc994fb34,35465344,0,0x0,8
tick,0x7ffdc994fb34,35480822,0,0x0,8
tick,0x7ffdc994fb34,35496665,0,0x0,8
tick,0x7ffdc994fb34,35512082,0,0x0,8
tick,0x7ffdc994fb34,35527609,0,0x0,8
tick,0x7ffdc994fb34,35543179,0,0x0,8
tick,0x7ffdc994fb34,35558813,0,0x0,8
tick,0x7ffdc994fb34,35573961,0,0x0,8
tick,0x7ffdc994fb34,35589616,0,0x0,8
tick,0x7ffdc994fb34,35605167,0,0x0,8
tick,0x7ffdc994fb34,35620796,0,0x0,8
tick,0x7ffdc994fb34,35636541,0,0x0,8
tick,0x7ffdc994fb34,35651993,0,0x0,8
tick,0x7ffdc994fb34,35667663,0,0x0,8
tick,0x7ffdc994fb34,35682919,0,0x0,8
tick,0x7ffdc994fb34,35698271,0,0x0,8
tick,0x7ffdc994fb34,35713782,0,0x0,8
tick,0x7ffdc994fb34,35729440,0,0x0,8
tick,0x7ffdc994fb34,35744514,0,0x0,8
tick,0x7ffdc994fb34,35760567,0,0x0,8
tick,0x7ffdc994fb34,35775626,0,0x0,8
tick,0x7ffdc994fb34,35791379,0,0x0,8
tick,0x7ffdc994fb34,35806505,0,0x0,8
tick,0x7ffdc994fb34,35822236,0,0x0,8
tick,0x7ffdc994fb34,35837268,0,0x0,8
tick,0x7ffdc994fb34,35852875,0,0x0,8
tick,0x7ffdc994fb34,35868308,0,0x0,8
tick,0x7ffdc994fb34,35883827,0,0x0,8
tick,0x7ffdc994fb34,35899473,0,0x0,8
tick,0x7ffdc994fb34,35914683,0,0x0,8
tick,0x7ffdc994fb34,35930339,0,0x0,8
tick,0x7ffdc994fb34,35946080,0,0x0,8
tick,0x7ffdc994fb34,35961380,0,0x0,8
tick,0x7ffdc994fb34,35977251,0,0x0,8
tick,0x7ffdc994fb34,35992415,0,0x0,8
tick,0x7ffdc994fb34,36007997,0,0x0,8
tick,0x7ffdc994fb34,36023776,0,0x0,8
tick,0x7ffdc994fb34,36039116,0,0x0,8
tick,0x7ffdc994fb34,36055282,0,0x0,8
tick,0x7ffdc994fb34,36070839,0,0x0,8
tick,0x7ffdc994fb34,36086075,0,0x0,8
tick,0x7ffdc994fb34,36101674,0,0x0,8
tick,0x7ffdc994fb34,36117793,0,0x0,8
tick,0x7ffdc994fb34,36133098,0,0x0,8
tick,0x7ffdc994fb34,36148843,0,0x0,8
tick,0x7ffdc994fb34,36164037,0,0x0,8
tick,0x7ffdc994fb34,36179668,0,0x0,8
tick,0x7ffdc994fb34,36195344,0,0x0,8
tick,0x7ffdc994fb34,36210788,0,0x0,8
tick,0x7ffdc994fb34,36226248,0,0x0,8
tick,0x7ffdc994fb34,36241421,0,0x0,8
tick,0x7ffdc994fb34,36257313,0,0x0,8
tick,0x7ffdc994fb34,36272942,0,0x0,8
tick,0x7ffdc994fb34,36288847,0,0x0,8
tick,0x7ffdc994fb34,36303983,0,0x0,8
tick,0x7ffdc994fb34,36319647,0,0x0,8
tick,0x7ffdc994fb34,36334896,0,0x0,8
tick,0x7ffdc994fb34,36350897,0,0x0,8
tick,0x7ffdc994fb34,36365967,0,0x0,8
tick,0x7ffdc994fb34,36382118,0,0x0,8
tick,0x7ffdc994fb34,36397989,0,0x0,8
tick,0x7ffdc994fb34,36413727,0,0x0,8
tick,0x7ffdc994fb34,36428858,0,0x0,8
tick,0x7ffdc994fb34,36444106,0,0x0,8
tick,0x7ffdc994fb34,36460275,0,0x0,8
tick,0x7ffdc994fb34,36475437,0,0x0,8
tick,0x7ffdc994fb34,36491024,0,0x0,8
tick,0x7ffdc994fb34,36506704,0,0x0,8
tick,0x7ffdc994fb34,36522193,0,0x0,8
tick,0x7ffdc994fb34,36537660,0,0x0,8
tick,0x7ffdc994fb34,36553432,0,0x0,8
tick,0x7ffdc994fb34,36569525,0,0x0,8
tick,0x7ffdc994fb34,36585056,0,0x0,8
tick,0x7ffdc994fb34,36600820,0,0x0,8
tick,0x7ffdc994fb34,36616029,0,0x0,8
tick,0x7ffdc994fb34,36631812,0,0x0,8
tick,0x7ffdc994fb34,36646897,0,0x0,8
tick,0x7ffdc994fb34,36662978,0,0x0,8
tick,0x7ffdc994fb34,36678161,0,0x0,8
tick,0x7ffdc994fb34,36693727,0,0x0,8
tick,0x7ffdc994fb34,36709373,0,0x0,8
tick,0x7ffdc994fb34,36724609,0,0x0,8
tick,0x7ffdc994fb34,36740051,0,0x0,8
tick,0x7ffdc994fb34,36755808,0,0x0,8
tick,0x7ffdc994fb34,36771237,0,0x0,8
tick,0x7ffdc994fb34,36787299,0,0x0,8
tick,0x7ffdc994fb34,36802626,0,0x0,8
tick,0x7ffdc994fb34,36817820,0,0x0,8
tick,0x7ffdc994fb34,36833043,0,0x0,8
tick,0x7ffdc994fb34,36848454,0,0x0,8
tick,0x7ffdc994fb34,36863817,0,0x0,8
tick,0x7ffdc994fb34,36879535,0,0x0,8
tick,0x7ffdc994fb34,36894956,0,0x0,8
tick,0x7ffdc994fb34,36910638,0,0x0,8
tick,0x7ffdc994fb34,36925728,0,0x0,8
tick,0x7ffdc994fb34,36941268,0,0x0,8
tick,0x7ffdc994fb34,36956618,0,0x0,8
tick,0x7ffdc994fb34,36971822,0,0x0,8
tick,0x7ffdc994fb34,36987228,0,0x0,8
tick,0x7ffdc994fb34,37002957,0,0x0,8
tick,0x7ffdc994fb34,37018265,0,0x0,8
tick,0x7ffdc994fb34,37033722,0,0x0,8
tick,0x7ffdc994fb34,37049356,0,0x0,8
tick,0x7ffdc994fb34,37065165,0,0x0,8
tick,0x7ffdc994fb34,37080567,0,0x0,8
tick,0x7ffdc994fb34,37096506,0,0x0,8
tick,0x7ffdc994fb34,37111756,0,0x0,8
tick,0x7ffdc994fb34,37127549,0,0x0,8
tick,0x7ffdc994fb34,37142361,0,0x0,8
tick,0x7ffdc994fb34,37157642,0,0x0,8
tick,0x7ffdc994fb34,37173119,0,0x0,8
tick,0x7ffdc994fb34,37189020,0,0x0,8
tick,0x7ffdc994fb34,37204886,0,0x0,8
tick,0x7ffdc994fb34,37220583,0,0x0,8
tick,0x7ffdc994fb34,37235890,0,0x0,8
tick,0x7ffdc994fb34,37251413,0,0x0,8
tick,0x7ffdc994fb34,37266758,0,0x0,8
tick,0x7ffdc994fb34,37282786,0,0x0,8
tick,0x7ffdc994fb34,37298496,0,0x0,8
tick,0x7ffdc994fb34,37313984,0,0x0,8
tick,0x7ffdc994fb34,37329512,0,0x0,8
tick,0x7ffdc994fb34,37345039,0,0x0,8
tick,0x7ffdc994fb34,37360529,0,0x0,8
tick,0x7ffdc994fb34,37376290,0,0x0,8
tick,0x7ffdc994fb34,37391764,0,0x0,8
tick,0x7ffdc994fb34,37407370,0,0x0,8
tick,0x7ffdc994fb34,37422693,0,0x0,8
tick,0x7ffdc994fb34,37438525,0,0x0,8
tick,0x7ffdc994fb34,37453663,0,0x0,8
tick,0x7ffdc994fb34,37469413,0,0x0,8
tick,0x7ffdc994fb34,37484997,0,0x0,8
tick,0x7ffdc994fb34,37500654,0,0x0,8
tick,0x7ffdc994fb34,37516197,0,0x0,8
tick,0x7ffdc994fb34,37531800,0,0x0,8
tick,0x7ffdc994fb34,37547310,0,0x0,8
tick,0x7ffdc994fb34,37562800,0,0x0,8
tick,0x7ffdc994fb34,37578288,0,0x0,8
tick,0x7ffdc994fb34,37594048,0,0x0,8
tick,0x7ffdc994fb34,37609231,0,0x0,8
tick,0x7ffdc994fb34,37624738,0,0x0,8
tick,0x7ffdc994fb34,37640003,0,0x0,8
tick,0x7ffdc994fb34,37655536,0,0x0,8
tick,0x7ffdc994fb34,37670631,0,0x0,8
tick,0x7ffdc994fb34,37685977,0,0x0,8
tick,0x7ffdc994fb34,37701334,0,0x0,8
tick,0x7ffdc994fb34,37717252,0,0x0,8
tick,0x7ffdc994fb34,37732795,0,0x0,8
tick,0x7ffdc994fb34,37748406,0,0x0,8
tick,0x7ffdc994fb34,37764346,0,0x0,8
tick,0x7ffdc994fb34,37779986,0,0x0,8
tick,0x7ffdc994fb34,37795417,0,0x0,8
tick,0x7ffdc994fb34,37811182,0,0x0,8
tick,0x7ffdc994fb34,37827114,0,0x0,8
tick,0x7ffdc994fb34,37842488,0,0x0,8
tick,0x7ffdc994fb34,37857635,0,0x0,8
tick,0x7ffdc994fb34,37873887,0,0x0,8
tick,0x7ffdc994fb34,37889553,0,0x0,8
tick,0x7ffdc994fb34,37904913,0,0x0,8
tick,0x7ffdc994fb34,37920417,0,0x0,8
tick,0x7ffdc994fb34,37936190,0,0x0,8
tick,0x7ffdc994fb34,37951950,0,0x0,8
tick,0x7ffdc994fb34,37967393,0,0x0,8
tick,0x7ffdc994fb34,37983466,0,0x0,8
tick,0x7ffdc994fb34,37999235,0,0x0,8
tick,0x7ffdc994fb34,38014512,0,0x0,8
tick,0x7ffdc994fb34,38029870,0,0x0,8
tick,0x7ffdc994fb34,38045144,0,0x0,8
tick,0x7ffdc994fb34,38060431,0,0x0,8
tick,0x7ffdc994fb34,38076486,0,0x0,8
tick,0x7ffdc994fb34,38091928,0,0x0,8
tick,0x7ffdc994fb34,38107465,0,0x0,8
tick,0x7ffdc994fb34,38122786,0,0x0,8
tick,0x7ffdc994fb34,38138613,0,0x0,8
tick,0x7ffdc994fb34,38153954,0,0x0,8
tick,0x7ffdc994fb34,38170212,0,0x0,8
tick,0x7ffdc994fb34,38185507,0,0x0,8
tick,0x7ffdc994fb34,38201310,0,0x0,8
tick,0x7ffdc994fb34,38216522,0,0x0,8
tick,0x7ffdc994fb34,38232351,0,0x0,8
tick,0x7ffdc994fb34,38248167,0,0x0,8
tick,0x7ffdc994fb34,38263355,0,0x0,8
tick,0x7ffdc994fb34,38279295,0,0x0,8
tick,0x7ffdc994fb34,38294629,0,0x0,8
tick,0x7ffdc994fb34,38310095,0,0x0,8
tick,0x7ffdc994fb34,38325338,0,0x0,8
tick,0x7ffdc994fb34,38340963,0,0x0,8
tick,0x7ffdc994fb34,38356361,0,0x0,8
tick,0x7ffdc994fb34,38371475,0,0x0,8
tick,0x7ffdc994fb34,38386994,0,0x0,8
tick,0x7ffdc994fb34,38402444,0,0x0,8
tick,0x7ffdc994fb34,38417955,0,0x0,8
tick,0x7ffdc994fb34,38433420,0,0x0,8
tick,0x7ffdc994fb34,38449109,0,0x0,8
tick,0x7ffdc994fb34,38464537,0,0x0,8
tick,0x7ffdc994fb34,38480334,0,0x0,8
tick,0x7ffdc994fb34,38495471,0,0x0,8
tick,0x7ffdc994fb34,38511660,0,0x0,8
tick,0x7ffdc994fb34,38527108,0,0x0,8
tick,0x7ffdc994fb34,38543048,0,0x0,8
tick,0x7ffdc994fb34,38559095,0,0x0,8
tick,0x7ffdc994fb34,38574335,0,0x0,8
tick,0x7ffdc994fb34,38589721,0,0x0,8
tick,0x7ffdc994fb34,38604708,0,0x0,8
tick,0x7ffdc994fb34,38620199,0,0x0,8
tick,0x7ffdc994fb34,38635671,0,0x0,8
tick,0x7ffdc994fb34,38651822,0,0x0,8
tick,0x7ffdc994fb34,38667132,0,0x0,8
tick,0x7ffdc994fb34,38682789,0,0x0,8
tick,0x7ffdc994fb34,38699247,0,0x0,8
tick,0x7ffdc994fb34,38714356,0,0x0,8
tick,0x7ffdc994fb34,38729670,0,0x0,8
tick,0x7ffdc994fb34,38745272,0,0x0,8
tick,0x7ffdc994fb34,38760757,0,0x0,8
tick,0x7ffdc994fb34,38775862,0,0x0,8
tick,0x7ffdc994fb34,38791165,0,0x0,8
tick,0x7ffdc994fb34,38806328,0,0x0,8
tick,0x7ffdc994fb34,38822009,0,0x0,8
tick,0x7ffdc994fb34,38837482,0,0x0,8
tick,0x7ffdc994fb34,38852957,0,0x0,8
tick,0x7ffdc994fb34,38868110,0,0x0,8
tick,0x7ffdc994fb34,38883895,0,0x0,8
tick,0x7ffdc994fb34,38899394,0,0x0,8
tick,0x7ffdc994fb34,38914536,0,0x0,8
tick,0x7ffdc994fb34,38930318,0,0x0,8
tick,0x7ffdc994fb34,38945399,0,0x0,8
tick,0x7ffdc994fb34,38961011,0,0x0,8
tick,0x7ffdc994fb34,38976666,0,0x0,8
tick,0x7ffdc994fb34,38992883,0,0x0,8
tick,0x7ffdc994fb34,39007942,0,0x0,8
tick,0x7ffdc994fb34,39023069,0,0x0,8
tick,0x7ffdc994fb34,39038535,0,0x0,8
tick,0x7ffdc994fb34,39054742,0,0x0,8
tick,0x7ffdc994fb34,39070130,0,0x0,8
tick,0x7ffdc994fb34,39085853,0,0x0,8
tick,0x7ffdc994fb34,39100884,0,0x0,8
tick,0x7ffdc994fb34,39116611,0,0x0,8
tick,0x7ffdc994fb34,39132176,0,0x0,8
tick,0x7ffdc994fb34,39148401,0,0x0,8
tick,0x7ffdc994fb34,39163555,0,0x0,8
tick,0x7ffdc994fb34,39178664,0,0x0,8
tick,0x7ffdc994fb34,39194592,0,0x0,8
tick,0x7ffdc994fb34,39210161,0,0x0,8
tick,0x7ffdc994fb34,39225699,0,0x0,8
tick,0x7ffdc994fb34,39241372,0,0x0,8
tick,0x7ffdc994fb34,39257111,0,0x0,8
tick,0x7ffdc994fb34,39273349,0,0x0,8
tick,0x7ffdc994fb34,39288736,0,0x0,8
tick,0x7ffdc994fb34,39304344,0,0x0,8
tick,0x7ffdc994fb34,39319803,0,0x0,8
tick,0x7ffdc994fb34,39335337,0,0x0,8
tick,0x7ffdc994fb34,39350536,0,0x0,8
tick,0x7ffdc994fb34,39366211,0,0x0,8
tick,0x7ffdc994fb34,39381878,0,0x0,8
tick,0x7ffdc994fb34,39396867,0,0x0,8
tick,0x7ffdc994fb34,39413098,0,0x0,8
tick,0x7ffdc994fb34,39428667,0,0x0,8
tick,0x7ffdc994fb34,39443686,0,0x0,8
tick,0x7ffdc994fb34,39459735,0,0x0,8
tick,0x7ffdc994fb34,39474891,0,0x0,8
tick,0x7ffdc994fb34,39490713,0,0x0,8
tick,0x7ffdc994fb34,39505992,0,0x0,8
tick,0x7ffdc994fb34,39521944,0,0x0,8
tick,0x7ffdc994fb34,39537407,0,0x0,8
tick,0x7ffdc994fb34,39553051,0,0x0,8
tick,0x7ffdc994fb34,39568457,0,0x0,8
tick,0x7ffdc994fb34,39583161,0,0x0,8
tick,0x7ffdc994fb34,39598523,0,0x0,8
tick,0x7ffdc994fb34,39613886,0,0x0,8
tick,0x7ffdc994fb34,39629785,0,0x0,8
tick,0x7ffdc994fb34,39644986,0,0x0,8
tick,0x7ffdc994fb34,39660984,0,0x0,8
tick,0x7ffdc994fb34,39676400,0,0x0,8
tick,0x7ffdc994fb34,39691830,0,0x0,8
tick,0x7ffdc994fb34,39707609,0,0x0,8
tick,0x7ffdc994fb34,39722943,0,0x0,8
tick,0x7ffdc994fb34,39738856,0,0x0,8
tick,0x7ffdc994fb34,39754185,0,0x0,8
tick,0x7ffdc994fb34,39769888,0,0x0,8
tick,0x7ffdc994fb34,39785525,0,0x0,8
tick,0x7ffdc994fb34,39800974,0,0x0,8
tick,0x7ffdc994fb34,39816725,0,0x0,8
tick,0x7ffdc994fb34,39831987,0,0x0,8
tick,0x7ffdc994fb34,39847647,0,0x0,8
tick,0x7ffdc994fb34,39863252,0,0x0,8
tick,0x7ffdc994fb34,39879382,0,0x0,8
tick,0x7ffdc994fb34,39894750,0,0x0,8
tick,0x7ffdc994fb34,39910316,0,0x0,8
tick,0x7ffdc994fb34,39925909,0,0x0,8
tick,0x7ffdc994fb34,39941444,0,0x0,8
tick,0x7ffdc994fb34,39957226,0,0x0,8
tick,0x7ffdc994fb34,39972504,0,0x0,8
tick,0x7ffdc994fb34,39988223,0,0x0,8
tick,0x7ffdc994fb34,40003442,0,0x0,8
tick,0x7ffdc994fb34,40019121,0,0x0,8
tick,0x7ffdc994fb34,40034544,0,0x0,8
tick,0x7ffdc994fb34,40050295,0,0x0,8
tick,0x7ffdc994fb34,40065650,0,0x0,8
tick,0x7ffdc994fb34,40081191,0,0x0,8
tick,0x7ffdc994fb34,40096719,0,0x0,8
tick,0x7ffdc994fb34,40112218,0,0x0,8
tick,0x7ffdc994fb34,40127622,0,0x0,8
tick,0x7ffdc994fb34,40143498,0,0x0,8
tick,0x7ffdc994fb34,40158707,0,0x0,8
tick,0x7ffdc994fb34,40174394,0,0x0,8
tick,0x7ffdc994fb34,40189801,0,0x0,8
tick,0x7ffdc994fb34,40205834,0,0x0,8
tick,0x7ffdc994fb34,40221887,0,0x0,8
tick,0x7ffdc994fb34,40237697,0,0x0,8
tick,0x7ffdc994fb34,40252914,0,0x0,8
tick,0x7ffdc994fb34,40267733,0,0x0,8
tick,0x7ffdc994fb34,40282739,0,0x0,8
tick,0x7ffdc994fb34,40298832,0,0x0,8
tick,0x7ffdc994fb34,40314721,0,0x0,8
tick,0x7ffdc994fb34,40330608,0,0x0,8
tick,0x7ffdc994fb34,40346309,0,0x0,8
tick,0x7ffdc994fb34,40361745,0,0x0,8
tick,0x7ffdc994fb34,40377411,0,0x0,8
tick,0x7ffdc994fb34,40392943,0,0x0,8
tick,0x7ffdc994fb34,40408456,0,0x0,8
tick,0x7ffdc994fb34,40424346,0,0x0,8
tick,0x7ffdc994fb34,40439466,0,0x0,8
tick,0x7ffdc994fb34,40455407,0,0x0,8
tick,0x7ffdc994fb34,40470839,0,0x0,8
tick,0x7ffdc994fb34,40486417,0,0x0,8
tick,0x7ffdc994fb34,40502189,0,0x0,8
tick,0x7ffdc994fb34,40517605,0,0x0,8
tick,0x7ffdc994fb34,40533306,0,0x0,8
tick,0x7ffdc994fb34,40549168,0,0x0,8
tick,0x7ffdc994fb34,40565273,0,0x0,8
tick,0x7ffdc994fb34,40581416,0,0x0,8
tick,0x7ffdc994fb34,40596551,0,0x0,8
tick,0x7ffdc994fb34,40612522,0,0x0,8
tick,0x7ffdc994fb34,40627559,0,0x0,8
tick,0x7ffdc994fb34,40642824,0,0x0,8
tick,0x7ffdc994fb34,40659008,0,0x0,8
tick,0x7ffdc994fb34,40674714,0,0x0,8
tick,0x7ffdc994fb34,40690124,0,0x0,8
tick,0x7ffdc994fb34,40705728,0,0x0,8
tick,0x7ffdc994fb34,40721085,0,0x0,8
tick,0x7ffdc994fb34,40736651,0,0x0,8
tick,0x7ffdc994fb34,40752031,0,0x0,8
tick,0x7ffdc994fb34,40767232,0,0x0,8
tick,0x7ffdc994fb34,40783209,0,0x0,8
tick,0x7ffdc994fb34,40798194,0,0x0,8
tick,0x7ffdc994fb34,40813820,0,0x0,8
tick,0x7ffdc994fb34,40829653,0,0x0,8
tick,0x7ffdc994fb34,40844993,0,0x0,8
tick,0x7ffdc994fb34,40860419,0,0x0,8
tick,0x7ffdc994fb34,40875701,0,0x0,8
tick,0x7ffdc994fb34,40891588,0,0x0,8
tick,0x7ffdc994fb34,40907118,0,0x0,8
tick,0x7ffdc994fb34,40922585,0,0x0,8
tick,0x7ffdc994fb34,40938097,0,0x0,8
tick,0x7ffdc994fb34,40953817,0,0x0,8
tick,0x7ffdc994fb34,40969017,0,0x0,8
tick,0x7ffdc994fb34,40984326,0,0x0,8
tick,0x7ffdc994fb34,40999618,0,0x0,8
tick,0x7ffdc994fb34,41014919,0,0x0,8
tick,0x7ffdc994fb34,41030494,0,0x0,8
tick,0x7ffdc994fb34,41045932,0,0x0,8
tick,0x7ffdc994fb34,41061701,0,0x0,8
tick,0x7ffdc994fb34,41076994,0,0x0,8
tick,0x7ffdc994fb34,41093203,0,0x0,8
tick,0x7ffdc994fb34,41109034,0,0x0,8
tick,0x7ffdc994fb34,41124500,0,0x0,8
tick,0x7ffdc994fb34,41139962,0,0x0,8
tick,0x7ffdc994fb34,41155551,0,0x0,8
tick,0x7ffdc994fb34,41171028,0,0x0,8
tick,0x7ffdc994fb34,41186341,0,0x0,8
tick,0x7ffdc994fb34,41202532,0,0x0,8
tick,0x7ffdc994fb34,41217881,0,0x0,8
tick,0x7ffdc994fb34,41233022,0,0x0,8
tick,0x7ffdc994fb34,41248687,0,0x0,8
tick,0x7ffdc994fb34,41264592,0,0x0,8
tick,0x7ffdc994fb34,41279775,0,0x0,8
tick,0x7ffdc994fb34,41295303,0,0x0,8
tick,0x7ffdc994fb34,41310803,0,0x0,8
tick,0x7ffdc994fb34,41326377,0,0x0,8
tick,0x7ffdc994fb34,41341958,0,0x0,8
tick,0x7ffdc994fb34,41357323,0,0x0,8
tick,0x7ffdc994fb34,41372555,0,0x0,8
tick,0x7ffdc994fb34,41388110,0,0x0,8
tick,0x7ffdc994fb34,41403271,0,0x0,8
tick,0x7ffdc994fb34,41419011,0,0x0,8
tick,0x7ffdc994fb34,41434767,0,0x0,8
tick,0x7ffdc994fb34,41449912,0,0x0,8
tick,0x7ffdc994fb34,41465848,0,0x0,8
tick,0x7ffdc994fb34,41481979,0,0x0,8
tick,0x7ffdc994fb34,41497441,0,0x0,8
tick,0x7ffdc994fb34,41513070,0,0x0,8
tick,0x7ffdc994fb34,41528181,0,0x0,8
tick,0x7ffdc994fb34,41543818,0,0x0,8
tick,0x7ffdc994fb34,41559468,0,0x0,8
tick,0x7ffdc994fb34,41574748,0,0x0,8
tick,0x7ffdc994fb34,41590485,0,0x0,8
tick,0x7ffdc994fb34,41606276,0,0x0,8
tick,0x7ffdc994fb34,41621909,0,0x0,8
tick,0x7ffdc994fb34,41637401,0,0x0,8
tick,0x7ffdc994fb34,41653221,0,0x0,8
tick,0x7ffdc994fb34,41668664,0,0x0,8
tick,0x7ffdc994fb34,41684164,0,0x0,8
tick,0x7ffdc994fb34,41700411,0,0x0,8
tick,0x7ffdc994fb34,41716387,0,0x0,8
tick,0x7ffdc994fb34,41732633,0,0x0,8
tick,0x7ffdc994fb34,41748616,0,0x0,8
tick,0x7ffdc994fb34,41764055,0,0x0,8
tick,0x7ffdc994fb34,41779517,0,0x0,8
tick,0x7ffdc994fb34,41794927,0,0x0,8
tick,0x7ffdc994fb34,41810557,0,0x0,8
tick,0x7ffdc994fb34,41826209,0,0x0,8
tick,0x7ffdc994fb34,41841773,0,0x0,8
tick,0x7ffdc994fb34,41857419,0,0x0,8
tick,0x7ffdc994fb34,41873262,0,0x0,8
tick,0x7ffdc994fb34,41888880,0,0x0,8
tick,0x7ffdc994fb34,41904619,0,0x0,8
tick,0x7ffdc994fb34,41920267,0,0x0,8
tick,0x7ffdc994fb34,41936012,0,0x0,8
tick,0x7ffdc994fb34,41951676,0,0x0,8
tick,0x7ffdc994fb34,41967782,0,0x0,8
tick,0x7ffdc994fb34,41983524,0,0x0,8
tick,0x7ffdc994fb34,41999094,0,0x0,8
tick,0x7ffdc994fb34,42014698,0,0x0,8
tick,0x7ffdc994fb34,42030369,0,0x0,8
tick,0x7ffdc994fb34,42046278,0,0x0,8
tick,0x7ffdc994fb34,42061523,0,0x0,8
tick,0x7ffdc994fb34,42076976,0,0x0,8
tick,0x7ffdc994fb34,42092318,0,0x0,8
tick,0x7ffdc994fb34,42107528,0,0x0,8
tick,0x7ffdc994fb34,42123149,0,0x0,8
tick,0x7ffdc994fb34,42138535,0,0x0,8
tick,0x7ffdc994fb34,42154387,0,0x0,8
tick,0x7ffdc994fb34,42169802,0,0x0,8
tick,0x7ffdc994fb34,42185313,0,0x0,8
tick,0x7ffdc994fb34,42200628,0,0x0,8
tick,0x7ffdc994fb34,42216469,0,0x0,8
tick,0x7ffdc994fb34,42231846,0,0x0,8
tick,0x7ffdc994fb34,42247279,0,0x0,8
tick,0x7ffdc994fb34,42263157,0,0x0,8
tick,0x7ffdc994fb34,42279374,0,0x0,8
tick,0x7ffdc994fb34,42294610,0,0x0,8
tick,0x7ffdc994fb34,42309766,0,0x0,8
tick,0x7ffdc994fb34,42325105,0,0x0,8
tick,0x7ffdc994fb34,42340876,0,0x0,8
tick,0x7ffdc994fb34,42356419,0,0x0,8
tick,0x7ffdc994fb34,42371733,0,0x0,8
tick,0x7ffdc994fb34,42387326,0,0x0,8
tick,0x7ffdc994fb34,42402741,0,0x0,8
tick,0x7ffdc994fb34,42418056,0,0x0,8
tick,0x7ffdc994fb34,42434077,0,0x0,8
tick,0x7ffdc994fb34,42449573,0,0x0,8
tick,0x7ffdc994fb34,42465065,0,0x0,8
tick,0x7ffdc994fb34,42480324,0,0x0,8
tick,0x7ffdc994fb34,42495921,0,0x0,8
tick,0x7ffdc994fb34,42511422,0,0x0,8
tick,0x7ffdc994fb34,42527473,0,0x0,8
tick,0x7ffdc994fb34,42542593,0,0x0,8
tick,0x7ffdc994fb34,42558364,0,0x0,8
tick,0x7ffdc994fb34,42573556,0,0x0,8
tick,0x7ffdc994fb34,42588752,0,0x0,8
tick,0x7ffdc994fb34,42604227,0,0x0,8
tick,0x7ffdc994fb34,42619628,0,0x0,8
tick,0x7ffdc994fb34,42635206,0,0x0,8
tick,0x7ffdc994fb34,42650690,0,0x0,8
tick,0x7ffdc994fb34,42666072,0,0x0,8
tick,0x7ffdc994fb34,42681334,0,0x0,8
tick,0x7ffdc994fb34,42697284,0,0x0,8
tick,0x7ffdc994fb34,42713102,0,0x0,8
tick,0x7ffdc994fb34,42728557,0,0x0,8
tick,0x7ffdc994fb34,42744397,0,0x0,8
tick,0x7ffdc994fb34,42760208,0,0x0,8
tick,0x7ffdc994fb34,42775898,0,0x0,8
tick,0x7ffdc994fb34,42791440,0,0x0,8
tick,0x7ffdc994fb34,42806902,0,0x0,8
tick,0x7ffdc994fb34,42822361,0,0x0,8
tick,0x7ffdc994fb34,42838091,0,0x0,8
tick,0x7ffdc994fb34,42853328,0,0x0,8
tick,0x7ffdc994fb34,42869105,0,0x0,8
tick,0x7ffdc994fb34,42884282,0,0x0,8
tick,0x7ffdc994fb34,42900040,0,0x0,8
tick,0x7ffdc994fb34,42916046,0,0x0,8
tick,0x7ffdc994fb34,42931340,0,0x0,8
tick,0x7ffdc994fb34,42947048,0,0x0,8
tick,0x7ffdc994fb34,42961770,0,0x0,8
tick,0x7ffdc994fb34,42977522,0,0x0,8
tick,0x7ffdc994fb34,42993858,0,0x0,8
tick,0x7ffdc994fb34,43009596,0,0x0,8
tick,0x7ffdc994fb34,43024723,0,0x0,8
tick,0x7ffdc994fb34,43041110,0,0x0,8
tick,0x7ffdc994fb34,43056200,0,0x0,8
tick,0x7ffdc994fb34,43071883,0,0x0,8
tick,0x7ffdc994fb34,43087410,0,0x0,8
tick,0x7ffdc994fb34,43103001,0,0x0,8
tick,0x7ffdc994fb34,43118996,0,0x0,8
tick,0x7ffdc994fb34,43134413,0,0x0,8
tick,0x7ffdc994fb34,43150293,0,0x0,8
tick,0x7ffdc994fb34,43165847,0,0x0,8
tick,0x7ffdc994fb34,43181575,0,0x0,8
tick,0x7ffdc994fb34,43196814,0,0x0,8
tick,0x7ffdc994fb34,43212648,0,0x0,8
tick,0x7ffdc994fb34,43227862,0,0x0,8
tick,0x7ffdc994fb34,43243438,0,0x0,8
tick,0x7ffdc994fb34,43258878,0,0x0,8
tick,0x7ffdc994fb34,43274614,0,0x0,8
tick,0x7ffdc994fb34,43289883,0,0x0,8
tick,0x7ffdc994fb34,43306090,0,0x0,8
tick,0x7ffdc994fb34,43321451,0,0x0,8
tick,0x7ffdc994fb34,43336821,0,0x0,8
tick,0x7ffdc994fb34,43352541,0,0x0,8
tick,0x7ffdc994fb34,43368127,0,0x0,8
tick,0x7ffdc994fb34,43383249,0,0x0,8
tick,0x7ffdc994fb34,43398888,0,0x0,8
tick,0x7ffdc994fb34,43414310,0,0x0,8
tick,0x7ffdc994fb34,43429882,0,0x0,8
tick,0x7ffdc994fb34,43445414,0,0x0,8
tick,0x7ffdc994fb34,43460928,0,0x0,8
tick,0x7ffdc994fb34,43476341,0,0x0,8
tick,0x7ffdc994fb34,43492641,0,0x0,8
tick,0x7ffdc994fb34,43507711,0,0x0,8
tick,0x7ffdc994fb34,43522822,0,0x0,8
tick,0x7ffdc994fb34,43538302,0,0x0,8
tick,0x7ffdc994fb34,43553562,0,0x0,8
tick,0x7ffdc994fb34,43569254,0,0x0,8
tick,0x7ffdc994fb34,43584368,0,0x0,8
tick,0x7ffdc994fb34,43600001,0,0x0,8
tick,0x7ffdc994fb34,43615584,0,0x0,8
tick,0x7ffdc994fb34,43631055,0,0x0,8
tick,0x7ffdc994fb34,43646583,0,0x0,8
tick,0x7ffdc994fb34,43662036,0,0x0,8
tick,0x7ffdc994fb34,43677937,0,0x0,8
tick,0x7ffdc994fb34,43692890,0,0x0,8
tick,0x7ffdc994fb34,43708512,0,0x0,8
tick,0x7ffdc994fb34,43723914,0,0x0,8
tick,0x7ffdc994fb34,43739680,0,0x0,8
tick,0x7ffdc994fb34,43755507,0,0x0,8
tick,0x7ffdc994fb34,43770802,0,0x0,8
tick,0x7ffdc994fb34,43786341,0,0x0,8
tick,0x7ffdc994fb34,43801934,0,0x0,8
tick,0x7ffdc994fb34,43817318,0,0x0,8
tick,0x7ffdc994fb34,43833608,0,0x0,8
tick,0x7ffdc994fb34,43849500,0,0x0,8
tick,0x7ffdc994fb34,43865153,0,0x0,8
tick,0x7ffdc994fb34,43880452,0,0x0,8
tick,0x7ffdc994fb34,43896008,0,0x0,8
tick,0x7ffdc994fb34,43911882,0,0x0,8
tick,0x7ffdc994fb34,43927240,0,0x0,8
tick,0x7ffdc994fb34,43942499,0,0x0,8
tick,0x7ffdc994fb34,43958055,0,0x0,8
tick,0x7ffdc994fb34,43974047,0,0x0,8
tick,0x7ffdc994fb34,43989598,0,0x0,8
tick,0x7ffdc994fb34,44005181,0,0x0,8
tick,0x7ffdc994fb34,44020916,0,0x0,8
tick,0x7ffdc994fb34,44036506,0,0x0,8
tick,0x7ffdc994fb34,44052634,0,0x0,8
tick,0x7ffdc994fb34,44067986,0,0x0,8
tick,0x7ffdc994fb34,44083303,0,0x0,8
tick,0x7ffdc994fb34,44098813,0,0x0,8
tick,0x7ffdc994fb34,44113953,0,0x0,8
tick,0x7ffdc994fb34,44129514,0,0x0,8
tick,0x7ffdc994fb34,44144712,0,0x0,8
tick,0x7ffdc994fb34,44160177,0,0x0,8
tick,0x7ffdc994fb34,44175677,0,0x0,8
tick,0x7ffdc994fb34,44191044,0,0x0,8
tick,0x7ffdc994fb34,44206508,0,0x0,8
tick,0x7ffdc994fb34,44221990,0,0x0,8
tick,0x7ffdc994fb34,44236968,0,0x0,8
tick,0x7ffdc994fb34,44252754,0,0x0,8
tick,0x7ffdc994fb34,44268230,0,0x0,8
tick,0x7ffdc994fb34,44283670,0,0x0,8
tick,0x7ffdc994fb34,44299304,0,0x0,8
tick,0x7ffdc994fb34,44314441,0,0x0,8
tick,0x7ffdc994fb34,44329230,0,0x0,8
tick,0x7ffdc994fb34,44345187,0,0x0,8
tick,0x7ffdc994fb34,44360609,0,0x0,8
tick,0x7ffdc994fb34,44376249,0,0x0,8
tick,0x7ffdc994fb34,44391747,0,0x0,8
tick,0x7ffdc994fb34,44407016,0,0x0,8
tick,0x7ffdc994fb34,44422551,0,0x0,8
tick,0x7ffdc994fb34,44437970,0,0x0,8
tick,0x7ffdc994fb34,44453430,0,0x0,8
tick,0x7ffdc994fb34,44469406,0,0x0,8
tick,0x7ffdc994fb34,44484793,0,0x0,8
tick,0x7ffdc994fb34,44500450,0,0x0,8
tick,0x7ffdc994fb34,44516397,0,0x0,8
tick,0x7ffdc994fb34,44531822,0,0x0,8
tick,0x7ffdc994fb34,44547520,0,0x0,8
tick,0x7ffdc994fb34,44563594,0,0x0,8
tick,0x7ffdc994fb34,44578159,0,0x0,8
tick,0x7ffdc994fb34,44593930,0,0x0,8
tick,0x7ffdc994fb34,44609748,0,0x0,8
tick,0x7ffdc994fb34,44625089,0,0x0,8
tick,0x7ffdc994fb34,44640886,0,0x0,8
tick,0x7ffdc994fb34,44657139,0,0x0,8
tick,0x7ffdc994fb34,44672713,0,0x0,8
tick,0x7ffdc994fb34,44687877,0,0x0,8
tick,0x7ffdc994fb34,44703347,0,0x0,8
tick,0x7ffdc994fb34,44718624,0,0x0,8
tick,0x7ffdc994fb34,44734096,0,0x0,8
tick,0x7ffdc994fb34,44749444,0,0x0,8
tick,0x7ffdc994fb34,44764912,0,0x0,8
tick,0x7ffdc994fb34,44780435,0,0x0,8
tick,0x7ffdc994fb34,44795623,0,0x0,8
tick,0x7ffdc994fb34,44811252,0,0x0,8
tick,0x7ffdc994fb34,44826903,0,0x0,8
tick,0x7ffdc994fb34,44842204,0,0x0,8
tick,0x7ffdc994fb34,44857878,0,0x0,8
tick,0x7ffdc994fb34,44873676,0,0x0,8
tick,0x7ffdc994fb34,44889287,0,0x0,8
tick,0x7ffdc994fb34,44904652,0,0x0,8
tick,0x7ffdc994fb34,44920025,0,0x0,8
tick,0x7ffdc994fb34,44935922,0,0x0,8
tick,0x7ffdc994fb34,44951298,0,0x0,8
tick,0x7ffdc994fb34,44967000,0,0x0,8
tick,0x7ffdc994fb34,44982538,0,0x0,8
tick,0x7ffdc994fb34,44997900,0,0x0,8
tick,0x7ffdc994fb34,45013362,0,0x0,8
tick,0x7ffdc994fb34,45029124,0,0x0,8
tick,0x7ffdc994fb34,45044214,0,0x0,8
tick,0x7ffdc994fb34,45059803,0,0x0,8
tick,0x7ffdc994fb34,45074721,0,0x0,8
tick,0x7ffdc994fb34,45090999,0,0x0,8
tick,0x7ffdc994fb34,45106570,0,0x0,8
tick,0x7ffdc994fb34,45121821,0,0x0,8
tick,0x7ffdc994fb34,45137367,0,0x0,8
tick,0x7ffdc994fb34,45152728,0,0x0,8
tick,0x7ffdc994fb34,45168797,0,0x0,8
tick,0x7ffdc994fb34,45184163,0,0x0,8
tick,0x7ffdc994fb34,45200221,0,0x0,8
tick,0x7ffdc994fb34,45215690,0,0x0,8
tick,0x7ffdc994fb34,45231183,0,0x0,8
tick,0x7ffdc994fb34,45246305,0,0x0,8
tick,0x7ffdc994fb34,45262203,0,0x0,8
tick,0x7ffdc994fb34,45277622,0,0x0,8
tick,0x7ffdc994fb34,45293248,0,0x0,8
tick,0x7ffdc994fb34,45308713,0,0x0,8
tick,0x7ffdc994fb34,45324234,0,0x0,8
tick,0x7ffdc994fb34,45339728,0,0x0,8
tick,0x7ffdc994fb34,45355557,0,0x0,8
tick,0x7ffdc994fb34,45370839,0,0x0,8
tick,0x7ffdc994fb34,45387080,0,0x0,8
tick,0x7ffdc994fb34,45402597,0,0x0,8
tick,0x7ffdc994fb34,45418352,0,0x0,8
tick,0x7ffdc994fb34,45433878,0,0x0,8
tick,0x7ffdc994fb34,45449384,0,0x0,8
tick,0x7ffdc994fb34,45465145,0,0x0,8
tick,0x7ffdc994fb34,45480413,0,0x0,8
tick,0x7ffdc994fb34,45496475,0,0x0,8
tick,0x7ffdc994fb34,45512025,0,0x0,8
tick,0x7ffdc994fb34,45527180,0,0x0,8
tick,0x7ffdc994fb34,45542917,0,0x0,8
tick,0x7ffdc994fb34,45558260,0,0x0,8
tick,0x7ffdc994fb34,45573694,0,0x0,8
tick,0x7ffdc994fb34,45589229,0,0x0,8
tick,0x7ffdc994fb34,45604608,0,0x0,8
tick,0x7ffdc994fb34,45620123,0,0x0,8
tick,0x7ffdc994fb34,45635295,0,0x0,8
tick,0x7ffdc994fb34,45650903,0,0x0,8
tick,0x7ffdc994fb34,45666481,0,0x0,8
tick,0x7ffdc994fb34,45682375,0,0x0,8
tick,0x7ffdc994fb34,45698604,0,0x0,8
tick,0x7ffdc994fb34,45714402,0,0x0,8
tick,0x7ffdc994fb34,45729701,0,0x0,8
tick,0x7ffdc994fb34,45745329,0,0x0,8
tick,0x7ffdc994fb34,45760995,0,0x0,8
tick,0x7ffdc994fb34,45776643,0,0x0,8
tick,0x7ffdc994fb34,45792107,0,0x0,8
tick,0x7ffdc994fb34,45807343,0,0x0,8
tick,0x7ffdc994fb34,45822752,0,0x0,8
tick,0x7ffdc994fb34,45838172,0,0x0,8
tick,0x7ffdc994fb34,45853848,0,0x0,8
tick,0x7ffdc994fb34,45869473,0,0x0,8
tick,0x7ffdc994fb34,45884659,0,0x0,8
tick,0x7ffdc994fb34,45900609,0,0x0,8
tick,0x7ffdc994fb34,45915792,0,0x0,8
tick,0x7ffdc994fb34,45932028,0,0x0,8
tick,0x7ffdc994fb34,45947063,0,0x0,8
tick,0x7ffdc994fb34,45963217,0,0x0,8
tick,0x7ffdc994fb34,45978911,0,0x0,8
tick,0x7ffdc994fb34,45994241,0,0x0,8
tick,0x7ffdc994fb34,46009588,0,0x0,8
tick,0x7ffdc994fb34,46024990,0,0x0,8
tick,0x7ffdc994fb34,46040389,0,0x0,8
tick,0x7ffdc994fb34,46056096,0,0x0,8
tick,0x7ffdc994fb34,46071498,0,0x0,8
tick,0x7ffdc994fb34,46087108,0,0x0,8
tick,0x7ffdc994fb34,46103155,0,0x0,8
tick,0x7ffdc994fb34,46118867,0,0x0,8
tick,0x7ffdc994fb34,46134123,0,0x0,8
tick,0x7ffdc994fb34,46149699,0,0x0,8
tick,0x7ffdc994fb34,46165080,0,0x0,8
tick,0x7ffdc994fb34,46180889,0,0x0,8
tick,0x7ffdc994fb34,46196225,0,0x0,8
tick,0x7ffdc994fb34,46211849,0,0x0,8
tick,0x7ffdc994fb34,46227281,0,0x0,8
tick,0x7ffdc994fb34,46243013,0,0x0,8
tick,0x7ffdc994fb34,46258316,0,0x0,8
tick,0x7ffdc994fb34,46273954,0,0x0,8
tick,0x7ffdc994fb34,46288909,0,0x0,8
tick,0x7ffdc994fb34,46304316,0,0x0,8
tick,0x7ffdc994fb34,46319669,0,0x0,8
tick,0x7ffdc994fb34,46335420,0,0x0,8
tick,0x7ffdc994fb34,46350705,0,0x0,8
tick,0x7ffdc994fb34,46366055,0,0x0,8
tick,0x7ffdc994fb34,46382329,0,0x0,8
tick,0x7ffdc994fb34,46397690,0,0x0,8
tick,0x7ffdc994fb34,46412971,0,0x0,8
tick,0x7ffdc994fb34,46428814,0,0x0,8
tick,0x7ffdc994fb34,46444416,0,0x0,8
tick,0x7ffdc994fb34,46459993,0,0x0,8
tick,0x7ffdc994fb34,46475955,0,0x0,8
tick,0x7ffdc994fb34,46491558,0,0x0,8
tick,0x7ffdc994fb34,46507497,0,0x0,8
tick,0x7ffdc994fb34,46523004,0,0x0,8
tick,0x7ffdc994fb34,46538723,0,0x0,8
tick,0x7ffdc994fb34,46554077,0,0x0,8
tick,0x7ffdc994fb34,46569949,0,0x0,8
tick,0x7ffdc994fb34,46585543,0,0x0,8
tick,0x7ffdc994fb34,46600940,0,0x0,8
tick,0x7ffdc994fb34,46616719,0,0x0,8
tick,0x7ffdc994fb34,46632066,0,0x0,8
tick,0x7ffdc994fb34,46647634,0,0x0,8
tick,0x7ffdc994fb34,46663119,0,0x0,8
tick,0x7ffdc994fb34,46678593,0,0x0,8
tick,0x7ffdc994fb34,46693662,0,0x0,8
tick,0x7ffdc994fb34,46710090,0,0x0,8
tick,0x7ffdc994fb34,46725962,0,0x0,8
tick,0x7ffdc994fb34,46741423,0,0x0,8
tick,0x7ffdc994fb34,46756717,0,0x0,8
tick,0x7ffdc994fb34,46772128,0,0x0,8
tick,0x7ffdc994fb34,46787792,0,0x0,8
tick,0x7ffdc994fb34,46803927,0,0x0,8
tick,0x7ffdc994fb34,46819914,0,0x0,8
tick,0x7ffdc994fb34,46835187,0,0x0,8
tick,0x7ffdc994fb34,46850031,0,0x0,8
tick,0x7ffdc994fb34,46865374,0,0x0,8
tick,0x7ffdc994fb34,46880670,0,0x0,8
tick,0x7ffdc994fb34,46896864,0,0x0,8
tick,0x7ffdc994fb34,46912395,0,0x0,8
tick,0x7ffdc994fb34,46928126,0,0x0,8
tick,0x7ffdc994fb34,46943545,0,0x0,8
tick,0x7ffdc994fb34,46959203,0,0x0,8
tick,0x7ffdc994fb34,46974464,0,0x0,8
tick,0x7ffdc994fb34,46990328,0,0x0,8
tick,0x7ffdc994fb34,47005694,0,0x0,8
tick,0x7ffdc994fb34,47021247,0,0x0,8
tick,0x7ffdc994fb34,47036774,0,0x0,8
tick,0x7ffdc994fb34,47052425,0,0x0,8
tick,0x7ffdc994fb34,47068227,0,0x0,8
tick,0x7ffdc994fb34,47083484,0,0x0,8
tick,0x7ffdc994fb34,47099995,0,0x0,8
tick,0x7ffdc994fb34,47115647,0,0x0,8
tick,0x7ffdc994fb34,47131772,0,0x0,8
tick,0x7ffdc994fb34,47147866,0,0x0,8
tick,0x7ffdc994fb34,47163016,0,0x0,8
tick,0x7ffdc994fb34,47178573,0,0x0,8
tick,0x7ffdc994fb34,47194138,0,0x0,8
tick,0x7ffdc994fb34,47209575,0,0x0,8
tick,0x7ffdc994fb34,47224905,0,0x0,8
tick,0x7ffdc994fb34,47240284,0,0x0,8
tick,0x7ffdc994fb34,47256381,0,0x0,8
tick,0x7ffdc994fb34,47271660,0,0x0,8
tick,0x7ffdc994fb34,47287339,0,0x0,8
tick,0x7ffdc994fb34,47303137,0,0x0,8
tick,0x7ffdc994fb34,47319164,0,0x0,8
tick,0x7ffdc994fb34,47334183,0,0x0,8
tick,0x7ffdc994fb34,47349797,0,0x0,8
tick,0x7ffdc994fb34,47365154,0,0x0,8
tick,0x7ffdc994fb34,47380885,0,0x0,8
tick,0x7ffdc994fb34,47397280,0,0x0,8
tick,0x7ffdc994fb34,47412612,0,0x0,8
tick,0x7ffdc994fb34,47428046,0,0x0,8
tick,0x7ffdc994fb34,47443221,0,0x0,8
tick,0x7ffdc994fb34,47458933,0,0x0,8
tick,0x7ffdc994fb34,47474168,0,0x0,8
tick,0x7ffdc994fb34,47489311,0,0x0,8
tick,0x7ffdc994fb34,47505437,0,0x0,8
tick,0x7ffdc994fb34,47521217,0,0x0,8
tick,0x7ffdc994fb34,47536416,0,0x0,8
tick,0x7ffdc994fb34,47552176,0,0x0,8
tick,0x7ffdc994fb34,47567288,0,0x0,8
tick,0x7ffdc994fb34,47582989,0,0x0,8
tick,0x7ffdc994fb34,47598755,0,0x0,8
tick,0x7ffdc994fb34,47614430,0,0x0,8
tick,0x7ffdc994fb34,47629671,0,0x0,8
tick,0x7ffdc994fb34,47645165,0,0x0,8
tick,0x7ffdc994fb34,47660457,0,0x0,8
tick,0x7ffdc994fb34,47676484,0,0x0,8
tick,0x7ffdc994fb34,47691908,0,0x0,8
tick,0x7ffdc994fb34,47707250,0,0x0,8
tick,0x7ffdc994fb34,47722752,0,0x0,8
tick,0x7ffdc994fb34,47738213,0,0x0,8
tick,0x7ffdc994fb34,47753353,0,0x0,8
tick,0x7ffdc994fb34,47768766,0,0x0,8
tick,0x7ffdc994fb34,47784577,0,0x0,8
tick,0x7ffdc994fb34,47800449,0,0x0,8
tick,0x7ffdc994fb34,47815811,0,0x0,8
tick,0x7ffdc994fb34,47831690,0,0x0,8
tick,0x7ffdc994fb34,47847109,0,0x0,8
tick,0x7ffdc994fb34,47862800,0,0x0,8
tick,0x7ffdc994fb34,47878566,0,0x0,8
tick,0x7ffdc994fb34,47893961,0,0x0,8
tick,0x7ffdc994fb34,47910075,0,0x0,8
tick,0x7ffdc994fb34,47925771,0,0x0,8
tick,0x7ffdc994fb34,47941487,0,0x0,8
tick,0x7ffdc994fb34,47957413,0,0x0,8
tick,0x7ffdc994fb34,47973571,0,0x0,8
tick,0x7ffdc994fb34,47988871,0,0x0,8
tick,0x7ffdc994fb34,48004171,0,0x0,8
tick,0x7ffdc994fb34,48019812,0,0x0,8
tick,0x7ffdc994fb34,48035254,0,0x0,8
tick,0x7ffdc994fb34,48050694,0,0x0,8
tick,0x7ffdc994fb34,48066442,0,0x0,8
tick,0x7ffdc994fb34,48082298,0,0x0,8
tick,0x7ffdc994fb34,48098039,0,0x0,8
tick,0x7ffdc994fb34,48113095,0,0x0,8
tick,0x7ffdc994fb34,48128754,0,0x0,8
tick,0x7ffdc994fb34,48144402,0,0x0,8
tick,0x7ffdc994fb34,48159932,0,0x0,8
tick,0x7ffdc994fb34,48174971,0,0x0,8
tick,0x7ffdc994fb34,48190245,0,0x0,8
tick,0x7ffdc994fb34,48205951,0,0x0,8
tick,0x7ffdc994fb34,48220985,0,0x0,8
tick,0x7ffdc994fb34,48236693,0,0x0,8
tick,0x7ffdc994fb34,48251604,0,0x0,8
tick,0x7ffdc994fb34,48267422,0,0x0,8
tick,0x7ffdc994fb34,48282711,0,0x0,8
tick,0x7ffdc994fb34,48298748,0,0x0,8
tick,0x7ffdc994fb34,48314185,0,0x0,8
tick,0x7ffdc994fb34,48329768,0,0x0,8
tick,0x7ffdc994fb34,48345180,0,0x0,8
tick,0x7ffdc994fb34,48360807,0,0x0,8
tick,0x7ffdc994fb34,48376406,0,0x0,8
tick,0x7ffdc994fb34,48391975,0,0x0,8
tick,0x7ffdc994fb34,48407311,0,0x0,8
tick,0x7ffdc994fb34,48423553,0,0x0,8
tick,0x7ffdc994fb34,48438759,0,0x0,8
tick,0x7ffdc994fb34,48454312,0,0x0,8
tick,0x7ffdc994fb34,48469877,0,0x0,8
tick,0x7ffdc994fb34,48485152,0,0x0,8
tick,0x7ffdc994fb34,48500678,0,0x0,8
tick,0x7ffdc994fb34,48515724,0,0x0,8
tick,0x7ffdc994fb34,48531473,0,0x0,8
tick,0x7ffdc994fb34,48546839,0,0x0,8
tick,0x7ffdc994fb34,48562532,0,0x0,8
tick,0x7ffdc994fb34,48578174,0,0x0,8
tick,0x7ffdc994fb34,48594140,0,0x0,8
tick,0x7ffdc994fb34,48610095,0,0x0,8
tick,0x7ffdc994fb34,48625326,0,0x0,8
tick,0x7ffdc994fb34,48641221,0,0x0,8
tick,0x7ffdc994fb34,48656336,0,0x0,8
tick,0x7ffdc994fb34,48671964,0,0x0,8
tick,0x7ffdc994fb34,48687187,0,0x0,8
tick,0x7ffdc994fb34,48702165,0,0x0,8
tick,0x7ffdc994fb34,48718528,0,0x0,8
tick,0x7ffdc994fb34,48734014,0,0x0,8
tick,0x7ffdc994fb34,48748987,0,0x0,8
tick,0x7ffdc994fb34,48764398,0,0x0,8
tick,0x7ffdc994fb34,48779955,0,0x0,8
tick,0x7ffdc994fb34,48795338,0,0x0,8
tick,0x7ffdc994fb34,48810940,0,0x0,8
tick,0x7ffdc994fb34,48826633,0,0x0,8
tick,0x7ffdc994fb34,48842065,0,0x0,8
tick,0x7ffdc994fb34,48857535,0,0x0,8
tick,0x7ffdc994fb34,48873404,0,0x0,8
tick,0x7ffdc994fb34,48889301,0,0x0,8
tick,0x7ffdc994fb34,48904790,0,0x0,8
tick,0x7ffdc994fb34,48920409,0,0x0,8
tick,0x7ffdc994fb34,48935773,0,0x0,8
tick,0x7ffdc994fb34,48951686,0,0x0,8
tick,0x7ffdc994fb34,48967069,0,0x0,8
tick,0x7ffdc994fb34,48982852,0,0x0,8
tick,0x7ffdc994fb34,48998326,0,0x0,8
tick,0x7ffdc994fb34,49013611,0,0x0,8
tick,0x7ffdc994fb34,49029433,0,0x0,8
tick,0x7ffdc994fb34,49045329,0,0x0,8
tick,0x7ffdc994fb34,49060535,0,0x0,8
tick,0x7ffdc994fb34,49075481,0,0x0,8
tick,0x7ffdc994fb34,49091272,0,0x0,8
tick,0x7ffdc994fb34,49106686,0,0x0,8
tick,0x7ffdc994fb34,49122251,0,0x0,8
tick,0x7ffdc994fb34,49137976,0,0x0,8
tick,0x7ffdc994fb34,49153882,0,0x0,8
tick,0x7ffdc994fb34,49169979,0,0x0,8
tick,0x7ffdc994fb34,49186005,0,0x0,8
tick,0x7ffdc994fb34,49201859,0,0x0,8
tick,0x7ffdc994fb34,49217906,0,0x0,8
tick,0x7ffdc994fb34,49233745,0,0x0,8
tick,0x7ffdc994fb34,49249234,0,0x0,8
tick,0x7ffdc994fb34,49264303,0,0x0,8
tick,0x7ffdc994fb34,49279837,0,0x0,8
tick,0x7ffdc994fb34,49295400,0,0x0,8
tick,0x7ffdc994fb34,49310935,0,0x0,8
tick,0x7ffdc994fb34,49326642,0,0x0,8
tick,0x7ffdc994fb34,49343006,0,0x0,8
tick,0x7ffdc994fb34,49358651,0,0x0,8
tick,0x7ffdc994fb34,49373589,0,0x0,8
tick,0x7ffdc994fb34,49389409,0,0x0,8
tick,0x7ffdc994fb34,49404561,0,0x0,8
tick,0x7ffdc994fb34,49420562,0,0x0,8
tick,0x7ffdc994fb34,49435865,0,0x0,8
tick,0x7ffdc994fb34,49452077,0,0x0,8
tick,0x7ffdc994fb34,49467709,0,0x0,8
tick,0x7ffdc994fb34,49482945,0,0x0,8
tick,0x7ffdc994fb34,49498629,0,0x0,8
tick,0x7ffdc994fb34,49513870,0,0x0,8
tick,0x7ffdc994fb34,49529598,0,0x0,8
tick,0x7ffdc994fb34,49545167,0,0x0,8
tick,0x7ffdc994fb34,49560852,0,0x0,8
tick,0x7ffdc994fb34,49576258,0,0x0,8
tick,0x7ffdc994fb34,49591723,0,0x0,8
tick,0x7ffdc994fb34,49607237,0,0x0,8
tick,0x7ffdc994fb34,49622815,0,0x0,8
tick,0x7ffdc994fb34,49638177,0,0x0,8
tick,0x7ffdc994fb34,49653342,0,0x0,8
tick,0x7ffdc994fb34,49669009,0,0x0,8
tick,0x7ffdc994fb34,49684654,0,0x0,8
tick,0x7ffdc994fb34,49700845,0,0x0,8
tick,0x7ffdc994fb34,49716236,0,0x0,8
tick,0x7ffdc994fb34,49731378,0,0x0,8
tick,0x7ffdc994fb34,49747085,0,0x0,8
tick,0x7ffdc994fb34,49762474,0,0x0,8
tick,0x7ffdc994fb34,49778735,0,0x0,8
tick,0x7ffdc994fb34,49794337,0,0x0,8
tick,0x7ffdc994fb34,49810054,0,0x0,8
tick,0x7ffdc994fb34,49825766,0,0x0,8
tick,0x7ffdc994fb34,49841018,0,0x0,8
tick,0x7ffdc994fb34,49856789,0,0x0,8
tick,0x7ffdc994fb34,49872291,0,0x0,8
tick,0x7ffdc994fb34,49887750,0,0x0,8
tick,0x7ffdc994fb34,49902929,0,0x0,8
tick,0x7ffdc994fb34,49918359,0,0x0,8
tick,0x7ffdc994fb34,49933790,0,0x0,8
tick,0x7ffdc994fb34,49949311,0,0x0,8
tick,0x7ffdc994fb34,49964566,0,0x0,8
tick,0x7ffdc994fb34,49979912,0,0x0,8
tick,0x7ffdc994fb34,49995633,0,0x0,8
tick,0x7ffdc994fb34,50010885,0,0x0,8
tick,0x7ffdc994fb34,50026643,0,0x0,8
tick,0x7ffdc994fb34,50042234,0,0x0,8
tick,0x7ffdc994fb34,50057847,0,0x0,8
tick,0x7ffdc994fb34,50073298,0,0x0,8
tick,0x7ffdc994fb34,50088978,0,0x0,8
tick,0x7ffdc994fb34,50104277,0,0x0,8
tick,0x7ffdc994fb34,50119757,0,0x0,8
tick,0x7ffdc994fb34,50135286,0,0x0,8
tick,0x7ffdc994fb34,50150851,0,0x0,8
tick,0x7ffdc994fb34,50166375,0,0x0,8
tick,0x7ffdc994fb34,50181903,0,0x0,8
tick,0x7ffdc994fb34,50197650,0,0x0,8
tick,0x7ffdc994fb34,50212747,0,0x0,8
tick,0x7ffdc994fb34,50228861,0,0x0,8
tick,0x7ffdc994fb34,50244114,0,0x0,8
tick,0x7ffdc994fb34,50259913,0,0x0,8
tick,0x7ffdc994fb34,50275364,0,0x0,8
tick,0x7ffdc994fb34,50290971,0,0x0,8
tick,0x7ffdc994fb34,50306538,0,0x0,8
tick,0x7ffdc994fb34,50322507,0,0x0,8
tick,0x7ffdc994fb34,50337834,0,0x0,8
tick,0x7ffdc994fb34,50353501,0,0x0,8
tick,0x7ffdc994fb34,50369230,0,0x0,8
tick,0x7ffdc994fb34,50384372,0,0x0,8
tick,0x7ffdc994fb34,50400009,0,0x0,8
tick,0x7ffdc994fb34,50415630,0,0x0,8
tick,0x7ffdc994fb34,50431021,0,0x0,8
tick,0x7ffdc994fb34,50446609,0,0x0,8
tick,0x7ffdc994fb34,50462133,0,0x0,8
tick,0x7ffdc994fb34,50477177,0,0x0,8
tick,0x7ffdc994fb34,50492594,0,0x0,8
tick,0x7ffdc994fb34,50508365,0,0x0,8
tick,0x7ffdc994fb34,50523827,0,0x0,8
tick,0x7ffdc994fb34,50539764,0,0x0,8
tick,0x7ffdc994fb34,50554806,0,0x0,8
tick,0x7ffdc994fb34,50570666,0,0x0,8
tick,0x7ffdc994fb34,50585587,0,0x0,8
tick,0x7ffdc994fb34,50601017,0,0x0,8
tick,0x7ffdc994fb34,50616465,0,0x0,8
tick,0x7ffdc994fb34,50632172,0,0x0,8
tick,0x7ffdc994fb34,50647386,0,0x0,8
tick,0x7ffdc994fb34,50663628,0,0x0,8
tick,0x7ffdc994fb34,50679050,0,0x0,8
tick,0x7ffdc994fb34,50694845,0,0x0,8
tick,0x7ffdc994fb34,50710177,0,0x0,8
tick,0x7ffdc994fb34,50725773,0,0x0,8
tick,0x7ffdc994fb34,50741307,0,0x0,8
tick,0x7ffdc994fb34,50756588,0,0x0,8
tick,0x7ffdc994fb34,50772412,0,0x0,8
tick,0x7ffdc994fb34,50788028,0,0x0,8
tick,0x7ffdc994fb34,50803951,0,0x0,8
tick,0x7ffdc994fb34,50819352,0,0x0,8
tick,0x7ffdc994fb34,50834750,0,0x0,8
tick,0x7ffdc994fb34,50850124,0,0x0,8
tick,0x7ffdc994fb34,50866088,0,0x0,8
tick,0x7ffdc994fb34,50881387,0,0x0,8
tick,0x7ffdc994fb34,50896440,0,0x0,8
tick,0x7ffdc994fb34,50912386,0,0x0,8
tick,0x7ffdc994fb34,50927713,0,0x0,8
tick,0x7ffdc994fb34,50943474,0,0x0,8
tick,0x7ffdc994fb34,50958905,0,0x0,8
tick,0x7ffdc994fb34,50974673,0,0x0,8
tick,0x7ffdc994fb34,50990025,0,0x0,8
tick,0x7ffdc994fb34,51005847,0,0x0,8
tick,0x7ffdc994fb34,51021405,0,0x0,8
tick,0x7ffdc994fb34,51037203,0,0x0,8
tick,0x7ffdc994fb34,51052510,0,0x0,8
tick,0x7ffdc994fb34,51068114,0,0x0,8
tick,0x7ffdc994fb34,51083336,0,0x0,8
tick,0x7ffdc994fb34,51099184,0,0x0,8
tick,0x7ffdc994fb34,51114575,0,0x0,8
tick,0x7ffdc994fb34,51130120,0,0x0,8
tick,0x7ffdc994fb34,51145511,0,0x0,8
tick,0x7ffdc994fb34,51161392,0,0x0,8
tick,0x7ffdc994fb34,51176854,0,0x0,8
tick,0x7ffdc994fb34,51192608,0,0x0,8
tick,0x7ffdc994fb34,51207256,0,0x0,8
tick,0x7ffdc994fb34,51223155,0,0x0,8
tick,0x7ffdc994fb34,51238984,0,0x0,8
tick,0x7ffdc994fb34,51254617,0,0x0,8
tick,0x7ffdc994fb34,51270361,0,0x0,8
tick,0x7ffdc994fb34,51285359,0,0x0,8
tick,0x7ffdc994fb34,51300838,0,0x0,8
tick,0x7ffdc994fb34,51316092,0,0x0,8
tick,0x7ffdc994fb34,51331852,0,0x0,8
tick,0x7ffdc994fb34,51346958,0,0x0,8
tick,0x7ffdc994fb34,51362664,0,0x0,8
tick,0x7ffdc994fb34,51378074,0,0x0,8
tick,0x7ffdc994fb34,51393998,0,0x0,8
tick,0x7ffdc994fb34,51409271,0,0x0,8
tick,0x7ffdc994fb34,51424651,0,0x0,8
tick,0x7ffdc994fb34,51439643,0,0x0,8
tick,0x7ffdc994fb34,51455805,0,0x0,8
tick,0x7ffdc994fb34,51471175,0,0x0,8
tick,0x7ffdc994fb34,51486776,0,0x0,8
tick,0x7ffdc994fb34,51501838,0,0x0,8
tick,0x7ffdc994fb34,51517596,0,0x0,8
tick,0x7ffdc994fb34,51532675,0,0x0,8
tick,0x7ffdc994fb34,51548548,0,0x0,8
tick,0x7ffdc994fb34,51563910,0,0x0,8
tick,0x7ffdc994fb34,51579320,0,0x0,8
tick,0x7ffdc994fb34,51594667,0,0x0,8
tick,0x7ffdc994fb34,51610338,0,0x0,8
tick,0x7ffdc994fb34,51625771,0,0x0,8
tick,0x7ffdc994fb34,51641725,0,0x0,8
tick,0x7ffdc994fb34,51656892,0,0x0,8
tick,0x7ffdc994fb34,51672480,0,0x0,8
tick,0x7ffdc994fb34,51687967,0,0x0,8
tick,0x7ffdc994fb34,51703698,0,0x0,8
tick,0x7ffdc994fb34,51718911,0,0x0,8
tick,0x7ffdc994fb34,51734529,0,0x0,8
tick,0x7ffdc994fb34,51750545,0,0x0,8
tick,0x7ffdc994fb34,51766780,0,0x0,8
tick,0x7ffdc994fb34,51782532,0,0x0,8
tick,0x7ffdc994fb34,51797293,0,0x0,8
tick,0x7ffdc994fb34,51813490,0,0x0,8
tick,0x7ffdc994fb34,51828957,0,0x0,8
tick,0x7ffdc994fb34,51844222,0,0x0,8
tick,0x7ffdc994fb34,51860033,0,0x0,8
tick,0x7ffdc994fb34,51875700,0,0x0,8
tick,0x7ffdc994fb34,51891195,0,0x0,8
tick,0x7ffdc994fb34,51906723,0,0x0,8
tick,0x7ffdc994fb34,51922513,0,0x0,8
tick,0x7ffdc994fb34,51938396,0,0x0,8
tick,0x7ffdc994fb34,51953691,0,0x0,8
tick,0x7ffdc994fb34,51969742,0,0x0,8
tick,0x7ffdc994fb34,51984796,0,0x0,8
tick,0x7ffdc994fb34,52000532,0,0x0,8
tick,0x7ffdc994fb34,52016007,0,0x0,8
tick,0x7ffdc994fb34,52031942,0,0x0,8
tick,0x7ffdc994fb34,52047349,0,0x0,8
tick,0x7ffdc994fb34,52063107,0,0x0,8
tick,0x7ffdc994fb34,52078322,0,0x0,8
tick,0x7ffdc994fb34,52094099,0,0x0,8
tick,0x7ffdc994fb34,52109356,0,0x0,8
tick,0x7ffdc994fb34,52124536,0,0x0,8
tick,0x7ffdc994fb34,52140109,0,0x0,8
tick,0x7ffdc994fb34,52155693,0,0x0,8
tick,0x7ffdc994fb34,52170993,0,0x0,8
tick,0x7ffdc994fb34,52186282,0,0x0,8
tick,0x7ffdc994fb34,52201923,0,0x0,8
tick,0x7ffdc994fb34,52217251,0,0x0,8
tick,0x7ffdc994fb34,52232974,0,0x0,8
tick,0x7ffdc994fb34,52248193,0,0x0,8
tick,0x7ffdc994fb34,52263433,0,0x0,8
tick,0x7ffdc994fb34,52279446,0,0x0,8
tick,0x7ffdc994fb34,52294637,0,0x0,8
tick,0x7ffdc994fb34,52310386,0,0x0,8
tick,0x7ffdc994fb34,52325872,0,0x0,8
tick,0x7ffdc994fb34,52341270,0,0x0,8
tick,0x7ffdc994fb34,52356309,0,0x0,8
tick,0x7ffdc994fb34,52372323,0,0x0,8
tick,0x7ffdc994fb34,52387601,0,0x0,8
tick,0x7ffdc994fb34,52402999,0,0x0,8
tick,0x7ffdc994fb34,52418870,0,0x0,8
tick,0x7ffdc994fb34,52434593,0,0x0,8
tick,0x7ffdc994fb34,52450237,0,0x0,8
tick,0x7ffdc994fb34,52465250,0,0x0,8
tick,0x7ffdc994fb34,52481407,0,0x0,8
tick,0x7ffdc994fb34,52496687,0,0x0,8
tick,0x7ffdc994fb34,52512202,0,0x0,8
tick,0x7ffdc994fb34,52528070,0,0x0,8
tick,0x7ffdc994fb34,52543911,0,0x0,8
tick,0x7ffdc994fb34,52559007,0,0x0,8
tick,0x7ffdc994fb34,52574197,0,0x0,8
tick,0x7ffdc994fb34,52589666,0,0x0,8
tick,0x7ffdc994fb34,52604930,0,0x0,8
tick,0x7ffdc994fb34,52620650,0,0x0,8
tick,0x7ffdc994fb34,52635976,0,0x0,8
tick,0x7ffdc994fb34,52651253,0,0x0,8
tick,0x7ffdc994fb34,52666779,0,0x0,8
tick,0x7ffdc994fb34,52682317,0,0x0,8
tick,0x7ffdc994fb34,52697860,0,0x0,8
tick,0x7ffdc994fb34,52713215,0,0x0,8
tick,0x7ffdc994fb34,52728593,0,0x0,8
tick,0x7ffdc994fb34,52744204,0,0x0,8
tick,0x7ffdc994fb34,52759982,0,0x0,8
tick,0x7ffdc994fb34,52775082,0,0x0,8
tick,0x7ffdc994fb34,52791465,0,0x0,8
tick,0x7ffdc994fb34,52806711,0,0x0,8
tick,0x7ffdc994fb34,52822136,0,0x0,8
tick,0x7ffdc994fb34,52837628,0,0x0,8
tick,0x7ffdc994fb34,52852970,0,0x0,8
tick,0x7ffdc994fb34,52868299,0,0x0,8
tick,0x7ffdc994fb34,52883927,0,0x0,8
tick,0x7ffdc994fb34,52899556,0,0x0,8
tick,0x7ffdc994fb34,52914609,0,0x0,8
tick,0x7ffdc994fb34,52930839,0,0x0,8
tick,0x7ffdc994fb34,52945901,0,0x0,8
tick,0x7ffdc994fb34,52961942,0,0x0,8
tick,0x7ffdc994fb34,52977303,0,0x0,8
tick,0x7ffdc994fb34,52993227,0,0x0,8
tick,0x7ffdc994fb34,53009139,0,0x0,8
tick,0x7ffdc994fb34,53024430,0,0x0,8
tick,0x7ffdc994fb34,53039804,0,0x0,8
tick,0x7ffdc994fb34,53055594,0,0x0,8
tick,0x7ffdc994fb34,53071592,0,0x0,8
tick,0x7ffdc994fb34,53087506,0,0x0,8
tick,0x7ffdc994fb34,53102898,0,0x0,8
tick,0x7ffdc994fb34,53118653,0,0x0,8
tick,0x7ffdc994fb34,53133679,0,0x0,8
tick,0x7ffdc994fb34,53149557,0,0x0,8
tick,0x7ffdc994fb34,53164866,0,0x0,8
tick,0x7ffdc994fb34,53180491,0,0x0,8
tick,0x7ffdc994fb34,53195373,0,0x0,8
tick,0x7ffdc994fb34,53211010,0,0x0,8
tick,0x7ffdc994fb34,53226428,0,0x0,8
tick,0x7ffdc994fb34,53242274,0,0x0,8
tick,0x7ffdc994fb34,53258225,0,0x0,8
tick,0x7ffdc994fb34,53274410,0,0x0,8
tick,0x7ffdc994fb34,53289948,0,0x0,8
tick,0x7ffdc994fb34,53305395,0,0x0,8
tick,0x7ffdc994fb34,53321438,0,0x0,8
tick,0x7ffdc994fb34,53337204,0,0x0,8
tick,0x7ffdc994fb34,53352747,0,0x0,8
tick,0x7ffdc994fb34,53368265,0,0x0,8
tick,0x7ffdc994fb34,53383883,0,0x0,8
tick,0x7ffdc994fb34,53398966,0,0x0,8
tick,0x7ffdc994fb34,53414407,0,0x0,8
tick,0x7ffdc994fb34,53430112,0,0x0,8
tick,0x7ffdc994fb34,53445684,0,0x0,8
tick,0x7ffdc994fb34,53461264,0,0x0,8
tick,0x7ffdc994fb34,53476802,0,0x0,8
tick,0x7ffdc994fb34,53491996,0,0x0,8
tick,0x7ffdc994fb34,53507666,0,0x0,8
tick,0x7ffdc994fb34,53523053,0,0x0,8
tick,0x7ffdc994fb34,53538552,0,0x0,8
tick,0x7ffdc994fb34,53554708,0,0x0,8
tick,0x7ffdc994fb34,53570228,0,0x0,8
tick,0x7ffdc994fb34,53585775,0,0x0,8
tick,0x7ffdc994fb34,53601013,0,0x0,8
tick,0x7ffdc994fb34,53616645,0,0x0,8
tick,0x7ffdc994fb34,53631795,0,0x0,8
tick,0x7ffdc994fb34,53647547,0,0x0,8
tick,0x7ffdc994fb34,53663235,0,0x0,8
tick,0x7ffdc994fb34,53679079,0,0x0,8
tick,0x7ffdc994fb34,53694937,0,0x0,8
tick,0x7ffdc994fb34,53710120,0,0x0,8
tick,0x7ffdc994fb34,53725773,0,0x0,8
tick,0x7ffdc994fb34,53741182,0,0x0,8
tick,0x7ffdc994fb34,53756247,0,0x0,8
tick,0x7ffdc994fb34,53771414,0,0x0,8
tick,0x7ffdc994fb34,53786685,0,0x0,8
tick,0x7ffdc994fb34,53802441,0,0x0,8
tick,0x7ffdc994fb34,53817788,0,0x0,8
tick,0x7ffdc994fb34,53834031,0,0x0,8
tick,0x7ffdc994fb34,53849573,0,0x0,8
tick,0x7ffdc994fb34,53864998,0,0x0,8
tick,0x7ffdc994fb34,53880517,0,0x0,8
tick,0x7ffdc994fb34,53896189,0,0x0,8
tick,0x7ffdc994fb34,53911965,0,0x0,8
tick,0x7ffdc994fb34,53927634,0,0x0,8
tick,0x7ffdc994fb34,53942932,0,0x0,8
tick,0x7ffdc994fb34,53958983,0,0x0,8
tick,0x7ffdc994fb34,53974434,0,0x0,8
tick,0x7ffdc994fb34,53990253,0,0x0,8
tick,0x7ffdc994fb34,54006317,0,0x0,8
tick,0x7ffdc994fb34,54021507,0,0x0,8
tick,0x7ffdc994fb34,54037158,0,0x0,8
tick,0x7ffdc994fb34,54052394,0,0x0,8
tick,0x7ffdc994fb34,54068328,0,0x0,8
tick,0x7ffdc994fb34,54084054,0,0x0,8
tick,0x7ffdc994fb34,54100614,0,0x0,8
tick,0x7ffdc994fb34,54115700,0,0x0,8
tick,0x7ffdc994fb34,54131436,0,0x0,8
tick,0x7ffdc994fb34,54147028,0,0x0,8
tick,0x7ffdc994fb34,54163185,0,0x0,8
tick,0x7ffdc994fb34,54178736,0,0x0,8
tick,0x7ffdc994fb34,54194587,0,0x0,8
tick,0x7ffdc994fb34,54209947,0,0x0,8
tick,0x7ffdc994fb34,54225600,0,0x0,8
tick,0x7ffdc994fb34,54241344,0,0x0,8
tick,0x7ffdc994fb34,54257184,0,0x0,8
tick,0x7ffdc994fb34,54272828,0,0x0,8
tick,0x7ffdc994fb34,54288121,0,0x0,8
tick,0x7ffdc994fb34,54303855,0,0x0,8
tick,0x7ffdc994fb34,54319619,0,0x0,8
tick,0x7ffdc994fb34,54335373,0,0x0,8
tick,0x7ffdc994fb34,54350726,0,0x0,8
tick,0x7ffdc994fb34,54366593,0,0x0,8
tick,0x7ffdc994fb34,54381874,0,0x0,8
tick,0x7ffdc994fb34,54397068,0,0x0,8
tick,0x7ffdc994fb34,54412585,0,0x0,8
tick,0x7ffdc994fb34,54428181,0,0x0,8
tick,0x7ffdc994fb34,54443314,0,0x0,8
tick,0x7ffdc994fb34,54459511,0,0x0,8
tick,0x7ffdc994fb34,54475022,0,0x0,8
tick,0x7ffdc994fb34,54490390,0,0x0,8
tick,0x7ffdc994fb34,54506129,0,0x0,8
tick,0x7ffdc994fb34,54521431,0,0x0,8
tick,0x7ffdc994fb34,54537076,0,0x0,8
tick,0x7ffdc994fb34,54552652,0,0x0,8
tick,0x7ffdc994fb34,54567321,0,0x0,8
tick,0x7ffdc994fb34,54582394,0,0x0,8
tick,0x7ffdc994fb34,54598252,0,0x0,8
tick,0x7ffdc994fb34,54613550,0,0x0,8
tick,0x7ffdc994fb34,54629565,0,0x0,8
tick,0x7ffdc994fb34,54645523,0,0x0,8
tick,0x7ffdc994fb34,54661413,0,0x0,8
tick,0x7ffdc994fb34,54677222,0,0x0,8
tick,0x7ffdc994fb34,54692935,0,0x0,8
tick,0x7ffdc994fb34,54708232,0,0x0,8
tick,0x7ffdc994fb34,54723537,0,0x0,8
tick,0x7ffdc994fb34,54739034,0,0x0,8
tick,0x7ffdc994fb34,54754630,0,0x0,8
tick,0x7ffdc994fb34,54769909,0,0x0,8
tick,0x7ffdc994fb34,54785920,0,0x0,8
tick,0x7ffdc994fb34,54801630,0,0x0,8
tick,0x7ffdc994fb34,54816907,0,0x0,8
tick,0x7ffdc994fb34,54832373,0,0x0,8
tick,0x7ffdc994fb34,54847745,0,0x0,8
tick,0x7ffdc994fb34,54863413,0,0x0,8
tick,0x7ffdc994fb34,54878903,0,0x0,8
tick,0x7ffdc994fb34,54894305,0,0x0,8
tick,0x7ffdc994fb34,54910089,0,0x0,8
tick,0x7ffdc994fb34,54925384,0,0x0,8
tick,0x7ffdc994fb34,54940818,0,0x0,8
tick,0x7ffdc994fb34,54956198,0,0x0,8
tick,0x7ffdc994fb34,54972027,0,0x0,8
tick,0x7ffdc994fb34,54987735,0,0x0,8
tick,0x7ffdc994fb34,55003170,0,0x0,8
tick,0x7ffdc994fb34,55018787,0,0x0,8
tick,0x7ffdc994fb34,55034495,0,0x0,8
tick,0x7ffdc994fb34,55050352,0,0x0,8
tick,0x7ffdc994fb34,55065756,0,0x0,8
tick,0x7ffdc994fb34,55081900,0,0x0,8
tick,0x7ffdc994fb34,55097559,0,0x0,8
tick,0x7ffdc994fb34,55113550,0,0x0,8
tick,0x7ffdc994fb34,55129227,0,0x0,8
tick,0x7ffdc994fb34,55144478,0,0x0,8
tick,0x7ffdc994fb34,55160731,0,0x0,8
tick,0x7ffdc994fb34,55176406,0,0x0,8
tick,0x7ffdc994fb34,55192701,0,0x0,8
tick,0x7ffdc994fb34,55207974,0,0x0,8
tick,0x7ffdc994fb34,55223445,0,0x0,8
tick,0x7ffdc994fb34,55238266,0,0x0,8
tick,0x7ffdc994fb34,55253326,0,0x0,8
tick,0x7ffdc994fb34,55268978,0,0x0,8
tick,0x7ffdc994fb34,55284981,0,0x0,8
tick,0x7ffdc994fb34,55300583,0,0x0,8
tick,0x7ffdc994fb34,55316269,0,0x0,8
tick,0x7ffdc994fb34,55331749,0,0x0,8
tick,0x7ffdc994fb34,55347481,0,0x0,8
tick,0x7ffdc994fb34,55362594,0,0x0,8
tick,0x7ffdc994fb34,55378378,0,0x0,8
tick,0x7ffdc994fb34,55393881,0,0x0,8
tick,0x7ffdc994fb34,55409779,0,0x0,8
tick,0x7ffdc994fb34,55425454,0,0x0,8
tick,0x7ffdc994fb34,55440921,0,0x0,8
tick,0x7ffdc994fb34,55456406,0,0x0,8
tick,0x7ffdc994fb34,55472174,0,0x0,8
tick,0x7ffdc994fb34,55487389,0,0x0,8
tick,0x7ffdc994fb34,55503217,0,0x0,8
tick,0x7ffdc994fb34,55518404,0,0x0,8
tick,0x7ffdc994fb34,55534696,0,0x0,8
tick,0x7ffdc994fb34,55550431,0,0x0,8
tick,0x7ffdc994fb34,55565771,0,0x0,8
tick,0x7ffdc994fb34,55581558,0,0x0,8
tick,0x7ffdc994fb34,55596740,0,0x0,8
tick,0x7ffdc994fb34,55612741,0,0x0,8
tick,0x7ffdc994fb34,55628076,0,0x0,8
tick,0x7ffdc994fb34,55643639,0,0x0,8
tick,0x7ffdc994fb34,55658842,0,0x0,8
tick,0x7ffdc994fb34,55674036,0,0x0,8
tick,0x7ffdc994fb34,55690089,0,0x0,8
tick,0x7ffdc994fb34,55705172,0,0x0,8
tick,0x7ffdc994fb34,55721162,0,0x0,8
tick,0x7ffdc994fb34,55736305,0,0x0,8
tick,0x7ffdc994fb34,55752184,0,0x0,8
tick,0x7ffdc994fb34,55768109,0,0x0,8
tick,0x7ffdc994fb34,55783928,0,0x0,8
tick,0x7ffdc994fb34,55799665,0,0x0,8
tick,0x7ffdc994fb34,55815015,0,0x0,8
tick,0x7ffdc994fb34,55830445,0,0x0,8
tick,0x7ffdc994fb34,55845976,0,0x0,8
tick,0x7ffdc994fb34,55862216,0,0x0,8
tick,0x7ffdc994fb34,55878303,0,0x0,8
tick,0x7ffdc994fb34,55893390,0,0x0,8
tick,0x7ffdc994fb34,55909380,0,0x0,8
tick,0x7ffdc994fb34,55924420,0,0x0,8
tick,0x7ffdc994fb34,55940009,0,0x0,8
tick,0x7ffdc994fb34,55955376,0,0x0,8
tick,0x7ffdc994fb34,55971360,0,0x0,8
tick,0x7ffdc994fb34,55986816,0,0x0,8
tick,0x7ffdc994fb34,56002404,0,0x0,8
tick,0x7ffdc994fb34,56017924,0,0x0,8
tick,0x7ffdc994fb34,56033079,0,0x0,8
tick,0x7ffdc994fb34,56049032,0,0x0,8
tick,0x7ffdc994fb34,56064193,0,0x0,8
tick,0x7ffdc994fb34,56079939,0,0x0,8
tick,0x7ffdc994fb34,56095035,0,0x0,8
tick,0x7ffdc994fb34,56111010,0,0x0,8
tick,0x7ffdc994fb34,56126858,0,0x0,8
tick,0x7ffdc994fb34,56142086,0,0x0,8
tick,0x7ffdc994fb34,56157622,0,0x0,8
tick,0x7ffdc994fb34,56173080,0,0x0,8
tick,0x7ffdc994fb34,56189018,0,0x0,8
tick,0x7ffdc994fb34,56204865,0,0x0,8
tick,0x7ffdc994fb34,56220437,0,0x0,8
tick,0x7ffdc994fb34,56236019,0,0x0,8
tick,0x7ffdc994fb34,56251811,0,0x0,8
tick,0x7ffdc994fb34,56267856,0,0x0,8
tick,0x7ffdc994fb34,56283383,0,0x0,8
tick,0x7ffdc994fb34,56299228,0,0x0,8
tick,0x7ffdc994fb34,56314378,0,0x0,8
tick,0x7ffdc994fb34,56329688,0,0x0,8
tick,0x7ffdc994fb34,56345064,0,0x0,8
tick,0x7ffdc994fb34,56360505,0,0x0,8
tick,0x7ffdc994fb34,56375925,0,0x0,8
tick,0x7ffdc994fb34,56391779,0,0x0,8
tick,0x7ffdc994fb34,56407190,0,0x0,8
tick,0x7ffdc994fb34,56422781,0,0x0,8
tick,0x7ffdc994fb34,56437773,0,0x0,8
tick,0x7ffdc994fb34,56453136,0,0x0,8
tick,0x7ffdc994fb34,56468783,0,0x0,8
tick,0x7ffdc994fb34,56484288,0,0x0,8
tick,0x7ffdc994fb34,56499576,0,0x0,8
tick,0x7ffdc994fb34,56515369,0,0x0,8
tick,0x7ffdc994fb34,56531054,0,0x0,8
tick,0x7ffdc994fb34,56546269,0,0x0,8
tick,0x7ffdc994fb34,56561879,0,0x0,8
tick,0x7ffdc994fb34,56577412,0,0x0,8
tick,0x7ffdc994fb34,56592408,0,0x0,8
tick,0x7ffdc994fb34,56608311,0,0x0,8
tick,0x7ffdc994fb34,56623373,0,0x0,8
tick,0x7ffdc994fb34,56638443,0,0x0,8
tick,0x7ffdc994fb34,56654284,0,0x0,8
tick,0x7ffdc994fb34,56669747,0,0x0,8
tick,0x7ffdc994fb34,56685671,0,0x0,8
tick,0x7ffdc994fb34,56701914,0,0x0,8
tick,0x7ffdc994fb34,56717715,0,0x0,8
tick,0x7ffdc994fb34,56733209,0,0x0,8
tick,0x7ffdc994fb34,56748280,0,0x0,8
tick,0x7ffdc994fb34,56763389,0,0x0,8
tick,0x7ffdc994fb34,56778986,0,0x0,8
tick,0x7ffdc994fb34,56794432,0,0x0,8
tick,0x7ffdc994fb34,56810147,0,0x0,8
tick,0x7ffdc994fb34,56825377,0,0x0,8
tick,0x7ffdc994fb34,56840661,0,0x0,8
tick,0x7ffdc994fb34,56856286,0,0x0,8
tick,0x7ffdc994fb34,56872185,0,0x0,8
tick,0x7ffdc994fb34,56887327,0,0x0,8
tick,0x7ffdc994fb34,56903093,0,0x0,8
tick,0x7ffdc994fb34,56918490,0,0x0,8
tick,0x7ffdc994fb34,56933777,0,0x0,8
tick,0x7ffdc994fb34,56949529,0,0x0,8
tick,0x7ffdc994fb34,56964852,0,0x0,8
tick,0x7ffdc994fb34,56980583,0,0x0,8
tick,0x7ffdc994fb34,56995887,0,0x0,8
tick,0x7ffdc994fb34,57011464,0,0x0,8
tick,0x7ffdc994fb34,57027450,0,0x0,8
tick,0x7ffdc994fb34,57042994,0,0x0,8
tick,0x7ffdc994fb34,57058582,0,0x0,8
tick,0x7ffdc994fb34,57073770,0,0x0,8
tick,0x7ffdc994fb34,57089528,0,0x0,8
tick,0x7ffdc994fb34,57105202,0,0x0,8
tick,0x7ffdc994fb34,57120622,0,0x0,8
tick,0x7ffdc994fb34,57136281,0,0x0,8
tick,0x7ffdc994fb34,57151562,0,0x0,8
tick,0x7ffdc994fb34,57166960,0,0x0,8
tick,0x7ffdc994fb34,57182508,0,0x0,8
tick,0x7ffdc994fb34,57197655,0,0x0,8
tick,0x7ffdc994fb34,57213569,0,0x0,8
tick,0x7ffdc994fb34,57229293,0,0x0,8
tick,0x7ffdc994fb34,57244540,0,0x0,8
tick,0x7ffdc994fb34,57260331,0,0x0,8
tick,0x7ffdc994fb34,57276454,0,0x0,8
tick,0x7ffdc994fb34,57292279,0,0x0,8
tick,0x7ffdc994fb34,57308072,0,0x0,8
tick,0x7ffdc994fb34,57323517,0,0x0,8
tick,0x7ffdc994fb34,57339128,0,0x0,8
tick,0x7ffdc994fb34,57354515,0,0x0,8
tick,0x7ffdc994fb34,57370265,0,0x0,8
tick,0x7ffdc994fb34,57384944,0,0x0,8
tick,0x7ffdc994fb34,57401128,0,0x0,8
tick,0x7ffdc994fb34,57417187,0,0x0,8
tick,0x7ffdc994fb34,57432417,0,0x0,8
tick,0x7ffdc994fb34,57447909,0,0x0,8
tick,0x7ffdc994fb34,57463748,0,0x0,8
tick,0x7ffdc994fb34,57479367,0,0x0,8
tick,0x7ffdc994fb34,57494843,0,0x0,8
tick,0x7ffdc994fb34,57510486,0,0x0,8
tick,0x7ffdc994fb34,57526125,0,0x0,8
tick,0x7ffdc994fb34,57541581,0,0x0,8
tick,0x7ffdc994fb34,57557294,0,0x0,8
tick,0x7ffdc994fb34,57572814,0,0x0,8
tick,0x7ffdc994fb34,57588803,0,0x0,8
tick,0x7ffdc994fb34,57604042,0,0x0,8
tick,0x7ffdc994fb34,57619612,0,0x0,8
tick,0x7ffdc994fb34,57635074,0,0x0,8
tick,0x7ffdc994fb34,57650495,0,0x0,8
tick,0x7ffdc994fb34,57665507,0,0x0,8
tick,0x7ffdc994fb34,57681415,0,0x0,8
tick,0x7ffdc994fb34,57697564,0,0x0,8
tick,0x7ffdc994fb34,57713239,0,0x0,8
tick,0x7ffdc994fb34,57729217,0,0x0,8
tick,0x7ffdc994fb34,57744198,0,0x0,8
tick,0x7ffdc994fb34,57759932,0,0x0,8
tick,0x7ffdc994fb34,57775545,0,0x0,8
tick,0x7ffdc994fb34,57790811,0,0x0,8
tick,0x7ffdc994fb34,57806439,0,0x0,8
tick,0x7ffdc994fb34,57821852,0,0x0,8
tick,0x7ffdc994fb34,57837276,0,0x0,8
tick,0x7ffdc994fb34,57853116,0,0x0,8
tick,0x7ffdc994fb34,57868398,0,0x0,8
tick,0x7ffdc994fb34,57883850,0,0x0,8
tick,0x7ffdc994fb34,57899705,0,0x0,8
tick,0x7ffdc994fb34,57914882,0,0x0,8
tick,0x7ffdc994fb34,57930365,0,0x0,8
tick,0x7ffdc994fb34,57945878,0,0x0,8
tick,0x7ffdc994fb34,57961533,0,0x0,8
tick,0x7ffdc994fb34,57976968,0,0x0,8
tick,0x7ffdc994fb34,57992244,0,0x0,8
tick,0x7ffdc994fb34,58007572,0,0x0,8
tick,0x7ffdc994fb34,58022889,0,0x0,8
tick,0x7ffdc994fb34,58038174,0,0x0,8
tick,0x7ffdc994fb34,58053597,0,0x0,8
tick,0x7ffdc994fb34,58069590,0,0x0,8
tick,0x7ffdc994fb34,58084714,0,0x0,8
tick,0x7ffdc994fb34,58100431,0,0x0,8
tick,0x7ffdc994fb34,58115829,0,0x0,8
tick,0x7ffdc994fb34,58131250,0,0x0,8
tick,0x7ffdc994fb34,58146794,0,0x0,8
tick,0x7ffdc994fb34,58163087,0,0x0,8
tick,0x7ffdc994fb34,58178820,0,0x0,8
tick,0x7ffdc994fb34,58193731,0,0x0,8
tick,0x7ffdc994fb34,58209562,0,0x0,8
tick,0x7ffdc994fb34,58225139,0,0x0,8
tick,0x7ffdc994fb34,58240514,0,0x0,8
tick,0x7ffdc994fb34,58255883,0,0x0,8
tick,0x7ffdc994fb34,58271548,0,0x0,8
tick,0x7ffdc994fb34,58287097,0,0x0,8
tick,0x7ffdc994fb34,58303452,0,0x0,8
tick,0x7ffdc994fb34,58318835,0,0x0,8
tick,0x7ffdc994fb34,58334898,0,0x0,8
tick,0x7ffdc994fb34,58350248,0,0x0,8
tick,0x7ffdc994fb34,58365832,0,0x0,8
tick,0x7ffdc994fb34,58381150,0,0x0,8
tick,0x7ffdc994fb34,58396696,0,0x0,8
tick,0x7ffdc994fb34,58412130,0,0x0,8
tick,0x7ffdc994fb34,58428014,0,0x0,8
tick,0x7ffdc994fb34,58443114,0,0x0,8
tick,0x7ffdc994fb34,58458769,0,0x0,8
tick,0x7ffdc994fb34,58473910,0,0x0,8
tick,0x7ffdc994fb34,58489654,0,0x0,8
tick,0x7ffdc994fb34,58505310,0,0x0,8
tick,0x7ffdc994fb34,58520775,0,0x0,8
tick,0x7ffdc994fb34,58536138,0,0x0,8
tick,0x7ffdc994fb34,58551832,0,0x0,8
tick,0x7ffdc994fb34,58567147,0,0x0,8
tick,0x7ffdc994fb34,58582522,0,0x0,8
tick,0x7ffdc994fb34,58597984,0,0x0,8
tick,0x7ffdc994fb34,58613615,0,0x0,8
tick,0x7ffdc994fb34,58629173,0,0x0,8
tick,0x7ffdc994fb34,58644883,0,0x0,8
tick,0x7ffdc994fb34,58660289,0,0x0,8
tick,0x7ffdc994fb34,58675026,0,0x0,8
tick,0x7ffdc994fb34,58690972,0,0x0,8
tick,0x7ffdc994fb34,58707257,0,0x0,8
tick,0x7ffdc994fb34,58723220,0,0x0,8
tick,0x7ffdc994fb34,58739138,0,0x0,8
tick,0x7ffdc994fb34,58754344,0,0x0,8
tick,0x7ffdc994fb34,58770081,0,0x0,8
tick,0x7ffdc994fb34,58785887,0,0x0,8
tick,0x7ffdc994fb34,58801197,0,0x0,8
tick,0x7ffdc994fb34,58816661,0,0x0,8
tick,0x7ffdc994fb34,58831724,0,0x0,8
tick,0x7ffdc994fb34,58847574,0,0x0,8
tick,0x7ffdc994fb34,58862875,0,0x0,8
tick,0x7ffdc994fb34,58878527,0,0x0,8
tick,0x7ffdc994fb34,58893835,0,0x0,8
tick,0x7ffdc994fb34,58909891,0,0x0,8
tick,0x7ffdc994fb34,58925153,0,0x0,8
tick,0x7ffdc994fb34,58941223,0,0x0,8
tick,0x7ffdc994fb34,58956636,0,0x0,8
tick,0x7ffdc994fb34,58971734,0,0x0,8
tick,0x7ffdc994fb34,58987377,0,0x0,8
tick,0x7ffdc994fb34,59003537,0,0x0,8
tick,0x7ffdc994fb34,59019207,0,0x0,8
tick,0x7ffdc994fb34,59034570,0,0x0,8
tick,0x7ffdc994fb34,59049901,0,0x0,8
tick,0x7ffdc994fb34,59065251,0,0x0,8
tick,0x7ffdc994fb34,59080385,0,0x0,8
tick,0x7ffdc994fb34,59096160,0,0x0,8
tick,0x7ffdc994fb34,59112031,0,0x0,8
tick,0x7ffdc994fb34,59127671,0,0x0,8
tick,0x7ffdc994fb34,59142651,0,0x0,8
tick,0x7ffdc994fb34,59158396,0,0x0,8
tick,0x7ffdc994fb34,59173930,0,0x0,8
tick,0x7ffdc994fb34,59189245,0,0x0,8
tick,0x7ffdc994fb34,59204528,0,0x0,8
tick,0x7ffdc994fb34,59220076,0,0x0,8
tick,0x7ffdc994fb34,59235771,0,0x0,8
tick,0x7ffdc994fb34,59250800,0,0x0,8
tick,0x7ffdc994fb34,59266316,0,0x0,8
tick,0x7ffdc994fb34,59281816,0,0x0,8
tick,0x7ffdc994fb34,59296632,0,0x0,8
tick,0x7ffdc994fb34,59312259,0,0x0,8
tick,0x7ffdc994fb34,59327668,0,0x0,8
tick,0x7ffdc994fb34,59343427,0,0x0,8
tick,0x7ffdc994fb34,59359288,0,0x0,8
tick,0x7ffdc994fb34,59375064,0,0x0,8
tick,0x7ffdc994fb34,59390848,0,0x0,8
tick,0x7ffdc994fb34,59406519,0,0x0,8
tick,0x7ffdc994fb34,59422143,0,0x0,8
tick,0x7ffdc994fb34,59437449,0,0x0,8
tick,0x7ffdc994fb34,59453029,0,0x0,8
tick,0x7ffdc994fb34,59468535,0,0x0,8
tick,0x7ffdc994fb34,59483546,0,0x0,8
tick,0x7ffdc994fb34,59499358,0,0x0,8
tick,0x7ffdc994fb34,59514774,0,0x0,8
tick,0x7ffdc994fb34,59530571,0,0x0,8
tick,0x7ffdc994fb34,59545852,0,0x0,8
tick,0x7ffdc994fb34,59561902,0,0x0,8
tick,0x7ffdc994fb34,59577302,0,0x0,8
tick,0x7ffdc994fb34,59593093,0,0x0,8
tick,0x7ffdc994fb34,59608709,0,0x0,8
tick,0x7ffdc994fb34,59624035,0,0x0,8
tick,0x7ffdc994fb34,59639632,0,0x0,8
tick,0x7ffdc994fb34,59654897,0,0x0,8
tick,0x7ffdc994fb34,59670778,0,0x0,8
tick,0x7ffdc994fb34,59685684,0,0x0,8
tick,0x7ffdc994fb34,59701907,0,0x0,8
tick,0x7ffdc994fb34,59717369,0,0x0,8
tick,0x7ffdc994fb34,59733008,0,0x0,8
tick,0x7ffdc994fb34,59748091,0,0x0,8
tick,0x7ffdc994fb34,59763296,0,0x0,8
tick,0x7ffdc994fb34,59778839,0,0x0,8
tick,0x7ffdc994fb34,59794056,0,0x0,8
tick,0x7ffdc994fb34,59809948,0,0x0,8
tick,0x7ffdc994fb34,59825487,0,0x0,8
tick,0x7ffdc994fb34,59841234,0,0x0,8
tick,0x7ffdc994fb34,59856540,0,0x0,8
tick,0x7ffdc994fb34,59872484,0,0x0,8
tick,0x7ffdc994fb34,59888281,0,0x0,8
tick,0x7ffdc994fb34,59903268,0,0x0,8
tick,0x7ffdc994fb34,59918725,0,0x0,8
tick,0x7ffdc994fb34,59934765,0,0x0,8
tick,0x7ffdc994fb34,59949901,0,0x0,8
tick,0x7ffdc994fb34,59965787,0,0x0,8
tick,0x7ffdc994fb34,59981142,0,0x0,8
tick,0x7ffdc994fb34,59996939,0,0x0,8
tick,0x7ffdc994fb34,60012292,0,0x0,8
tick,0x7ffdc994fb34,60028196,0,0x0,8
tick,0x7ffdc994fb34,60043349,0,0x0,8
tick,0x7ffdc994fb34,60059333,0,0x0,8
tick,0x7ffdc994fb34,60074515,0,0x0,8
tick,0x7ffdc994fb34,60090194,0,0x0,8
tick,0x7ffdc994fb34,60106062,0,0x0,8
tick,0x7ffdc994fb34,60121084,0,0x0,8
tick,0x7ffdc994fb34,60137110,0,0x0,8
tick,0x7ffdc994fb34,60153227,0,0x0,8
tick,0x7ffdc994fb34,60168689,0,0x0,8
tick,0x7ffdc994fb34,60184209,0,0x0,8
tick,0x7ffdc994fb34,60199821,0,0x0,8
tick,0x7ffdc994fb34,60215536,0,0x0,8
tick,0x7ffdc994fb34,60230605,0,0x0,8
tick,0x7ffdc994fb34,60246213,0,0x0,8
tick,0x7ffdc994fb34,60262274,0,0x0,8
tick,0x7ffdc994fb34,60277866,0,0x0,8
tick,0x7ffdc994fb34,60293630,0,0x0,8
tick,0x7ffdc994fb34,60309008,0,0x0,8
tick,0x7ffdc994fb34,60324387,0,0x0,8
tick,0x7ffdc994fb34,60339804,0,0x0,8
tick,0x7ffdc994fb34,60355412,0,0x0,8
tick,0x7ffdc994fb34,60370988,0,0x0,8
tick,0x7ffdc994fb34,60386522,0,0x0,8
tick,0x7ffdc994fb34,60402637,0,0x0,8
tick,0x7ffdc994fb34,60418257,0,0x0,8
tick,0x7ffdc994fb34,60433603,0,0x0,8
tick,0x7ffdc994fb34,60449704,0,0x0,8
tick,0x7ffdc994fb34,60465169,0,0x0,8
tick,0x7ffdc994fb34,60480515,0,0x0,8
tick,0x7ffdc994fb34,60495887,0,0x0,8
tick,0x7ffdc994fb34,60511214,0,0x0,8
tick,0x7ffdc994fb34,60526501,0,0x0,8
tick,0x7ffdc994fb34,60542544,0,0x0,8
tick,0x7ffdc994fb34,60557826,0,0x0,8
tick,0x7ffdc994fb34,60573042,0,0x0,8
tick,0x7ffdc994fb34,60589021,0,0x0,8
tick,0x7ffdc994fb34,60604606,0,0x0,8
tick,0x7ffdc994fb34,60620053,0,0x0,8
tick,0x7ffdc994fb34,60635513,0,0x0,8
tick,0x7ffdc994fb34,60651439,0,0x0,8
tick,0x7ffdc994fb34,60667079,0,0x0,8
tick,0x7ffdc994fb34,60682202,0,0x0,8
tick,0x7ffdc994fb34,60698366,0,0x0,8
tick,0x7ffdc994fb34,60714331,0,0x0,8
tick,0x7ffdc994fb34,60729838,0,0x0,8
tick,0x7ffdc994fb34,60745808,0,0x0,8
tick,0x7ffdc994fb34,60761652,0,0x0,8
tick,0x7ffdc994fb34,60777158,0,0x0,8
tick,0x7ffdc994fb34,60792692,0,0x0,8
tick,0x7ffdc994fb34,60807776,0,0x0,8
tick,0x7ffdc994fb34,60822810,0,0x0,8
tick,0x7ffdc994fb34,60838195,0,0x0,8
tick,0x7ffdc994fb34,60854271,0,0x0,8
tick,0x7ffdc994fb34,60869906,0,0x0,8
tick,0x7ffdc994fb34,60885772,0,0x0,8
tick,0x7ffdc994fb34,60901630,0,0x0,8
tick,0x7ffdc994fb34,60917090,0,0x0,8
tick,0x7ffdc994fb34,60932717,0,0x0,8
tick,0x7ffdc994fb34,60948404,0,0x0,8
tick,0x7ffdc994fb34,60963331,0,0x0,8
tick,0x7ffdc994fb34,60979142,0,0x0,8
tick,0x7ffdc994fb34,60995209,0,0x0,8
tick,0x7ffdc994fb34,61010647,0,0x0,8
tick,0x7ffdc994fb34,61025974,0,0x0,8
tick,0x7ffdc994fb34,61041909,0,0x0,8
tick,0x7ffdc994fb34,61057968,0,0x0,8
tick,0x7ffdc994fb34,61073212,0,0x0,8
tick,0x7ffdc994fb34,61088546,0,0x0,8
tick,0x7ffdc994fb34,61104246,0,0x0,8
tick,0x7ffdc994fb34,61119988,0,0x0,8
tick,0x7ffdc994fb34,61135359,0,0x0,8
tick,0x7ffdc994fb34,61151197,0,0x0,8
tick,0x7ffdc994fb34,61165992,0,0x0,8
tick,0x7ffdc994fb34,61181458,0,0x0,8
tick,0x7ffdc994fb34,61196911,0,0x0,8
tick,0x7ffdc994fb34,61212120,0,0x0,8
tick,0x7ffdc994fb34,61227507,0,0x0,8
tick,0x7ffdc994fb34,61243629,0,0x0,8
tick,0x7ffdc994fb34,61258862,0,0x0,8
tick,0x7ffdc994fb34,61274324,0,0x0,8
tick,0x7ffdc994fb34,61289942,0,0x0,8
tick,0x7ffdc994fb34,61306134,0,0x0,8
tick,0x7ffdc994fb34,61321832,0,0x0,8
tick,0x7ffdc994fb34,61337459,0,0x0,8
tick,0x7ffdc994fb34,61353423,0,0x0,8
tick,0x7ffdc994fb34,61368963,0,0x0,8
tick,0x7ffdc994fb34,61384049,0,0x0,8
tick,0x7ffdc994fb34,61399768,0,0x0,8
tick,0x7ffdc994fb34,61415642,0,0x0,8
tick,0x7ffdc994fb34,61431179,0,0x0,8
tick,0x7ffdc994fb34,61446504,0,0x0,8
tick,0x7ffdc994fb34,61462530,0,0x0,8
tick,0x7ffdc994fb34,61478402,0,0x0,8
tick,0x7ffdc994fb34,61494044,0,0x0,8
tick,0x7ffdc994fb34,61510017,0,0x0,8
tick,0x7ffdc994fb34,61525513,0,0x0,8
tick,0x7ffdc994fb34,61540867,0,0x0,8
tick,0x7ffdc994fb34,61556740,0,0x0,8
tick,0x7ffdc994fb34,61572495,0,0x0,8
tick,0x7ffdc994fb34,61588115,0,0x0,8
tick,0x7ffdc994fb34,61603514,0,0x0,8
tick,0x7ffdc994fb34,61618804,0,0x0,8
tick,0x7ffdc994fb34,61634995,0,0x0,8
tick,0x7ffdc994fb34,61650363,0,0x0,8
tick,0x7ffdc994fb34,61665750,0,0x0,8
tick,0x7ffdc994fb34,61680936,0,0x0,8
tick,0x7ffdc994fb34,61696370,0,0x0,8
tick,0x7ffdc994fb34,61712337,0,0x0,8
tick,0x7ffdc994fb34,61728148,0,0x0,8
tick,0x7ffdc994fb34,61743672,0,0x0,8
tick,0x7ffdc994fb34,61758988,0,0x0,8
tick,0x7ffdc994fb34,61775049,0,0x0,8
tick,0x7ffdc994fb34,61790770,0,0x0,8
tick,0x7ffdc994fb34,61806682,0,0x0,8
tick,0x7ffdc994fb34,61821773,0,0x0,8
tick,0x7ffdc994fb34,61837423,0,0x0,8
tick,0x7ffdc994fb34,61852848,0,0x0,8
tick,0x7ffdc994fb34,61868195,0,0x0,8
tick,0x7ffdc994fb34,61884315,0,0x0,8
tick,0x7ffdc994fb34,61900319,0,0x0,8
tick,0x7ffdc994fb34,61915768,0,0x0,8
tick,0x7ffdc994fb34,61931956,0,0x0,8
tick,0x7ffdc994fb34,61947540,0,0x0,8
tick,0x7ffdc994fb34,61963406,0,0x0,8
tick,0x7ffdc994fb34,61979309,0,0x0,8
tick,0x7ffdc994fb34,61994500,0,0x0,8
tick,0x7ffdc994fb34,62010808,0,0x0,8
tick,0x7ffdc994fb34,62026094,0,0x0,8
tick,0x7ffdc994fb34,62042108,0,0x0,8
tick,0x7ffdc994fb34,62057554,0,0x0,8
tick,0x7ffdc994fb34,62073068,0,0x0,8
tick,0x7ffdc994fb34,62088567,0,0x0,8
tick,0x7ffdc994fb34,62104452,0,0x0,8
tick,0x7ffdc994fb34,62119964,0,0x0,8
tick,0x7ffdc994fb34,62135582,0,0x0,8
tick,0x7ffdc994fb34,62151559,0,0x0,8
tick,0x7ffdc994fb34,62166757,0,0x0,8
tick,0x7ffdc994fb34,62182852,0,0x0,8
tick,0x7ffdc994fb34,62198598,0,0x0,8
tick,0x7ffdc994fb34,62213801,0,0x0,8
tick,0x7ffdc994fb34,62230011,0,0x0,8
tick,0x7ffdc994fb34,62245489,0,0x0,8
tick,0x7ffdc994fb34,62261434,0,0x0,8
tick,0x7ffdc994fb34,62277467,0,0x0,8
tick,0x7ffdc994fb34,62293257,0,0x0,8
tick,0x7ffdc994fb34,62308616,0,0x0,8
tick,0x7ffdc994fb34,62323833,0,0x0,8
tick,0x7ffdc994fb34,62339469,0,0x0,8
tick,0x7ffdc994fb34,62354888,0,0x0,8
tick,0x7ffdc994fb34,62370780,0,0x0,8
tick,0x7ffdc994fb34,62386481,0,0x0,8
tick,0x7ffdc994fb34,62401850,0,0x0,8
tick,0x7ffdc994fb34,62417322,0,0x0,8
tick,0x7ffdc994fb34,62432581,0,0x0,8
tick,0x7ffdc994fb34,62447970,0,0x0,8
tick,0x7ffdc994fb34,62463476,0,0x0,8
tick,0x7ffdc994fb34,62479398,0,0x0,8
tick,0x7ffdc994fb34,62494460,0,0x0,8
tick,0x7ffdc994fb34,62510252,0,0x0,8
tick,0x7ffdc994fb34,62526447,0,0x0,8
tick,0x7ffdc994fb34,62541331,0,0x0,8
tick,0x7ffdc994fb34,62557289,0,0x0,8
tick,0x7ffdc994fb34,62572913,0,0x0,8
tick,0x7ffdc994fb34,62588361,0,0x0,8
tick,0x7ffdc994fb34,62603841,0,0x0,8
tick,0x7ffdc994fb34,62619361,0,0x0,8
tick,0x7ffdc994fb34,62635583,0,0x0,8
tick,0x7ffdc994fb34,62650697,0,0x0,8
tick,0x7ffdc994fb34,62666455,0,0x0,8
tick,0x7ffdc994fb34,62681834,0,0x0,8
tick,0x7ffdc994fb34,62697595,0,0x0,8
tick,0x7ffdc994fb34,62713240,0,0x0,8
tick,0x7ffdc994fb34,62728488,0,0x0,8
tick,0x7ffdc994fb34,62744058,0,0x0,8
tick,0x7ffdc994fb34,62759554,0,0x0,8
tick,0x7ffdc994fb34,62775024,0,0x0,8
tick,0x7ffdc994fb34,62791113,0,0x0,8
tick,0x7ffdc994fb34,62806942,0,0x0,8
tick,0x7ffdc994fb34,62823067,0,0x0,8
tick,0x7ffdc994fb34,62838882,0,0x0,8
tick,0x7ffdc994fb34,62853970,0,0x0,8
tick,0x7ffdc994fb34,62869610,0,0x0,8
tick,0x7ffdc994fb34,62884882,0,0x0,8
tick,0x7ffdc994fb34,62900525,0,0x0,8
tick,0x7ffdc994fb34,62915906,0,0x0,8
tick,0x7ffdc994fb34,62931663,0,0x0,8
tick,0x7ffdc994fb34,62947029,0,0x0,8
tick,0x7ffdc994fb34,62962550,0,0x0,8
tick,0x7ffdc994fb34,62978250,0,0x0,8
tick,0x7ffdc994fb34,62993305,0,0x0,8
tick,0x7ffdc994fb34,63009198,0,0x0,8
tick,0x7ffdc994fb34,63024588,0,0x0,8
tick,0x7ffdc994fb34,63040390,0,0x0,8
tick,0x7ffdc994fb34,63055631,0,0x0,8
tick,0x7ffdc994fb34,63071250,0,0x0,8
tick,0x7ffdc994fb34,63086404,0,0x0,8
tick,0x7ffdc994fb34,63101686,0,0x0,8
tick,0x7ffdc994fb34,63117184,0,0x0,8
tick,0x7ffdc994fb34,63132579,0,0x0,8
tick,0x7ffdc994fb34,63148271,0,0x0,8
tick,0x7ffdc994fb34,63163731,0,0x0,8
tick,0x7ffdc994fb34,63179395,0,0x0,8
tick,0x7ffdc994fb34,63194822,0,0x0,8
tick,0x7ffdc994fb34,63210781,0,0x0,8
tick,0x7ffdc994fb34,63225881,0,0x0,8
tick,0x7ffdc994fb34,63241904,0,0x0,8
tick,0x7ffdc994fb34,63257979,0,0x0,8
tick,0x7ffdc994fb34,63273629,0,0x0,8
tick,0x7ffdc994fb34,63289194,0,0x0,8
tick,0x7ffdc994fb34,63304766,0,0x0,8
tick,0x7ffdc994fb34,63320007,0,0x0,8
tick,0x7ffdc994fb34,63335246,0,0x0,8
tick,0x7ffdc994fb34,63351129,0,0x0,8
tick,0x7ffdc994fb34,63366661,0,0x0,8
tick,0x7ffdc994fb34,63381996,0,0x0,8
tick,0x7ffdc994fb34,63397546,0,0x0,8
tick,0x7ffdc994fb34,63413145,0,0x0,8
tick,0x7ffdc994fb34,63428667,0,0x0,8
tick,0x7ffdc994fb34,63443891,0,0x0,8
tick,0x7ffdc994fb34,63459253,0,0x0,8
tick,0x7ffdc994fb34,63474863,0,0x0,8
tick,0x7ffdc994fb34,63490147,0,0x0,8
tick,0x7ffdc994fb34,63506031,0,0x0,8
tick,0x7ffdc994fb34,63521646,0,0x0,8
tick,0x7ffdc994fb34,63537536,0,0x0,8
tick,0x7ffdc994fb34,63553400,0,0x0,8
tick,0x7ffdc994fb34,63568960,0,0x0,8
tick,0x7ffdc994fb34,63584294,0,0x0,8
tick,0x7ffdc994fb34,63599585,0,0x0,8
tick,0x7ffdc994fb34,63615423,0,0x0,8
tick,0x7ffdc994fb34,63630501,0,0x0,8
tick,0x7ffdc994fb34,63646238,0,0x0,8
tick,0x7ffdc994fb34,63661790,0,0x0,8
tick,0x7ffdc994fb34,63677339,0,0x0,8
tick,0x7ffdc994fb34,63693335,0,0x0,8
tick,0x7ffdc994fb34,63708926,0,0x0,8
tick,0x7ffdc994fb34,63724339,0,0x0,8
tick,0x7ffdc994fb34,63740308,0,0x0,8
tick,0x7ffdc994fb34,63756163,0,0x0,8
tick,0x7ffdc994fb34,63772055,0,0x0,8
tick,0x7ffdc994fb34,63787457,0,0x0,8
tick,0x7ffdc994fb34,63803487,0,0x0,8
tick,0x7ffdc994fb34,63819211,0,0x0,8
tick,0x7ffdc994fb34,63834374,0,0x0,8
tick,0x7ffdc994fb34,63849633,0,0x0,8
tick,0x7ffdc994fb34,63865687,0,0x0,8
tick,0x7ffdc994fb34,63881852,0,0x0,8
tick,0x7ffdc994fb34,63897588,0,0x0,8
tick,0x7ffdc994fb34,63912637,0,0x0,8
tick,0x7ffdc994fb34,63928796,0,0x0,8
tick,0x7ffdc994fb34,63944661,0,0x0,8
tick,0x7ffdc994fb34,63960104,0,0x0,8
tick,0x7ffdc994fb34,63975417,0,0x0,8
tick,0x7ffdc994fb34,63991689,0,0x0,8
tick,0x7ffdc994fb34,64006735,0,0x0,8
tick,0x7ffdc994fb34,64022501,0,0x0,8
tick,0x7ffdc994fb34,64037759,0,0x0,8
tick,0x7ffdc994fb34,64053372,0,0x0,8
tick,0x7ffdc994fb34,64067877,0,0x0,8
tick,0x7ffdc994fb34,64083824,0,0x0,8
tick,0x7ffdc994fb34,64100140,0,0x0,8
tick,0x7ffdc994fb34,64115104,0,0x0,8
tick,0x7ffdc994fb34,64130868,0,0x0,8
tick,0x7ffdc994fb34,64146231,0,0x0,8
tick,0x7ffdc994fb34,64161358,0,0x0,8
tick,0x7ffdc994fb34,64176744,0,0x0,8
tick,0x7ffdc994fb34,64192643,0,0x0,8
tick,0x7ffdc994fb34,64208517,0,0x0,8
tick,0x7ffdc994fb34,64224309,0,0x0,8
tick,0x7ffdc994fb34,64239620,0,0x0,8
tick,0x7ffdc994fb34,64255345,0,0x0,8
tick,0x7ffdc994fb34,64270806,0,0x0,8
tick,0x7ffdc994fb34,64286757,0,0x0,8
tick,0x7ffdc994fb34,64302713,0,0x0,8
tick,0x7ffdc994fb34,64318054,0,0x0,8
tick,0x7ffdc994fb34,64333303,0,0x0,8
tick,0x7ffdc994fb34,64348644,0,0x0,8
tick,0x7ffdc994fb34,64364105,0,0x0,8
tick,0x7ffdc994fb34,64380379,0,0x0,8
tick,0x7ffdc994fb34,64395653,0,0x0,8
tick,0x7ffdc994fb34,64411038,0,0x0,8
tick,0x7ffdc994fb34,64426679,0,0x0,8
tick,0x7ffdc994fb34,64442062,0,0x0,8
tick,0x7ffdc994fb34,64457836,0,0x0,8
tick,0x7ffdc994fb34,64473119,0,0x0,8
tick,0x7ffdc994fb34,64488381,0,0x0,8
tick,0x7ffdc994fb34,64503558,0,0x0,8
tick,0x7ffdc994fb34,64518898,0,0x0,8
tick,0x7ffdc994fb34,64534429,0,0x0,8
tick,0x7ffdc994fb34,64549939,0,0x0,8
tick,0x7ffdc994fb34,64565327,0,0x0,8
tick,0x7ffdc994fb34,64580399,0,0x0,8
tick,0x7ffdc994fb34,64595688,0,0x0,8
tick,0x7ffdc994fb34,64610655,0,0x0,8
tick,0x7ffdc994fb34,64626408,0,0x0,8
tick,0x7ffdc994fb34,64642523,0,0x0,8
tick,0x7ffdc994fb34,64658272,0,0x0,8
tick,0x7ffdc994fb34,64673589,0,0x0,8
tick,0x7ffdc994fb34,64689049,0,0x0,8
tick,0x7ffdc994fb34,64704528,0,0x0,8
tick,0x7ffdc994fb34,64720901,0,0x0,8
tick,0x7ffdc994fb34,64737002,0,0x0,8
tick,0x7ffdc994fb34,64752898,0,0x0,8
tick,0x7ffdc994fb34,64768685,0,0x0,8
tick,0x7ffdc994fb34,64784028,0,0x0,8
tick,0x7ffdc994fb34,64800004,0,0x0,8
tick,0x7ffdc994fb34,64815275,0,0x0,8
tick,0x7ffdc994fb34,64830776,0,0x0,8
tick,0x7ffdc994fb34,64845953,0,0x0,8
tick,0x7ffdc994fb34,64861792,0,0x0,8
tick,0x7ffdc994fb34,64877090,0,0x0,8
tick,0x7ffdc994fb34,64892576,0,0x0,8
tick,0x7ffdc994fb34,64907869,0,0x0,8
tick,0x7ffdc994fb34,64923212,0,0x0,8
tick,0x7ffdc994fb34,64938713,0,0x0,8
tick,0x7ffdc994fb34,64954004,0,0x0,8
tick,0x7ffdc994fb34,64969572,0,0x0,8
tick,0x7ffdc994fb34,64984906,0,0x0,8
tick,0x7ffdc994fb34,65000195,0,0x0,8
tick,0x7ffdc994fb34,65015690,0,0x0,8
tick,0x7ffdc994fb34,65031320,0,0x0,8
tick,0x7ffdc994fb34,65046792,0,0x0,8
tick,0x7ffdc994fb34,65061948,0,0x0,8
tick,0x7ffdc994fb34,65077476,0,0x0,8
tick,0x7ffdc994fb34,65092814,0,0x0,8
tick,0x7ffdc994fb34,65108050,0,0x0,8
tick,0x7ffdc994fb34,65124507,0,0x0,8
tick,0x7ffdc994fb34,65139823,0,0x0,8
tick,0x7ffdc994fb34,65155559,0,0x0,8
tick,0x7ffdc994fb34,65171043,0,0x0,8
tick,0x7ffdc994fb34,65186616,0,0x0,8
tick,0x7ffdc994fb34,65202065,0,0x0,8
tick,0x7ffdc994fb34,65217931,0,0x0,8
tick,0x7ffdc994fb34,65233731,0,0x0,8
tick,0x7ffdc994fb34,65249467,0,0x0,8
tick,0x7ffdc994fb34,65264707,0,0x0,8
tick,0x7ffdc994fb34,65280473,0,0x0,8
tick,0x7ffdc994fb34,65295823,0,0x0,8
tick,0x7ffdc994fb34,65311672,0,0x0,8
tick,0x7ffdc994fb34,65326665,0,0x0,8
tick,0x7ffdc994fb34,65342781,0,0x0,8
tick,0x7ffdc994fb34,65358487,0,0x0,8
tick,0x7ffdc994fb34,65373350,0,0x0,8
tick,0x7ffdc994fb34,65389171,0,0x0,8
tick,0x7ffdc994fb34,65404994,0,0x0,8
tick,0x7ffdc994fb34,65421452,0,0x0,8
tick,0x7ffdc994fb34,65436641,0,0x0,8
tick,0x7ffdc994fb34,65452719,0,0x0,8
tick,0x7ffdc994fb34,65468070,0,0x0,8
tick,0x7ffdc994fb34,65483235,0,0x0,8
tick,0x7ffdc994fb34,65498899,0,0x0,8
tick,0x7ffdc994fb34,65514337,0,0x0,8
tick,0x7ffdc994fb34,65530069,0,0x0,8
tick,0x7ffdc994fb34,65545297,0,0x0,8
tick,0x7ffdc994fb34,65560958,0,0x0,8
tick,0x7ffdc994fb34,65576586,0,0x0,8
tick,0x7ffdc994fb34,65591790,0,0x0,8
tick,0x7ffdc994fb34,65607460,0,0x0,8
tick,0x7ffdc994fb34,65622631,0,0x0,8
tick,0x7ffdc994fb34,65638142,0,0x0,8
tick,0x7ffdc994fb34,65654506,0,0x0,8
tick,0x7ffdc994fb34,65669753,0,0x0,8
tick,0x7ffdc994fb34,65685999,0,0x0,8
tick,0x7ffdc994fb34,65701505,0,0x0,8
tick,0x7ffdc994fb34,65717030,0,0x0,8
tick,0x7ffdc994fb34,65732736,0,0x0,8
tick,0x7ffdc994fb34,65748225,0,0x0,8
tick,0x7ffdc994fb34,65763595,0,0x0,8
tick,0x7ffdc994fb34,65779838,0,0x0,8
tick,0x7ffdc994fb34,65795185,0,0x0,8
tick,0x7ffdc994fb34,65811077,0,0x0,8
tick,0x7ffdc994fb34,65827172,0,0x0,8
tick,0x7ffdc994fb34,65841643,0,0x0,8
tick,0x7ffdc994fb34,65856816,0,0x0,8
tick,0x7ffdc994fb34,65872755,0,0x0,8
tick,0x7ffdc994fb34,65888481,0,0x0,8
tick,0x7ffdc994fb34,65903947,0,0x0,8
tick,0x7ffdc994fb34,65919435,0,0x0,8
tick,0x7ffdc994fb34,65934858,0,0x0,8
tick,0x7ffdc994fb34,65950033,0,0x0,8
tick,0x7ffdc994fb34,65965739,0,0x0,8
tick,0x7ffdc994fb34,65980637,0,0x0,8
tick,0x7ffdc994fb34,65996422,0,0x0,8
tick,0x7ffdc994fb34,66012134,0,0x0,8
tick,0x7ffdc994fb34,66027827,0,0x0,8
tick,0x7ffdc994fb34,66042706,0,0x0,8
tick,0x7ffdc994fb34,66058645,0,0x0,8
tick,0x7ffdc994fb34,66073479,0,0x0,8
tick,0x7ffdc994fb34,66089564,0,0x0,8
tick,0x7ffdc994fb34,66104817,0,0x0,8
tick,0x7ffdc994fb34,66120089,0,0x0,8
tick,0x7ffdc994fb34,66135795,0,0x0,8
tick,0x7ffdc994fb34,66151624,0,0x0,8
tick,0x7ffdc994fb34,66166800,0,0x0,8
tick,0x7ffdc994fb34,66182504,0,0x0,8
tick,0x7ffdc994fb34,66197981,0,0x0,8
tick,0x7ffdc994fb34,66213639,0,0x0,8
tick,0x7ffdc994fb34,66228734,0,0x0,8
tick,0x7ffdc994fb34,66244225,0,0x0,8
tick,0x7ffdc994fb34,66259397,0,0x0,8
tick,0x7ffdc994fb34,66274879,0,0x0,8
tick,0x7ffdc994fb34,66290714,0,0x0,8
tick,0x7ffdc994fb34,66306595,0,0x0,8
tick,0x7ffdc994fb34,66322512,0,0x0,8
tick,0x7ffdc994fb34,66338422,0,0x0,8
tick,0x7ffdc994fb34,66354308,0,0x0,8
tick,0x7ffdc994fb34,66369344,0,0x0,8
tick,0x7ffdc994fb34,66384661,0,0x0,8
tick,0x7ffdc994fb34,66400321,0,0x0,8
tick,0x7ffdc994fb34,66415888,0,0x0,8
tick,0x7ffdc994fb34,66431462,0,0x0,8
tick,0x7ffdc994fb34,66446882,0,0x0,8
tick,0x7ffdc994fb34,66462495,0,0x0,8
tick,0x7ffdc994fb34,66477935,0,0x0,8
tick,0x7ffdc994fb34,66493412,0,0x0,8
tick,0x7ffdc994fb34,66509120,0,0x0,8
tick,0x7ffdc994fb34,66524549,0,0x0,8
tick,0x7ffdc994fb34,66540276,0,0x0,8
tick,0x7ffdc994fb34,66555969,0,0x0,8
tick,0x7ffdc994fb34,66571853,0,0x0,8
tick,0x7ffdc994fb34,66587715,0,0x0,8
tick,0x7ffdc994fb34,66602777,0,0x0,8
tick,0x7ffdc994fb34,66618689,0,0x0,8
tick,0x7ffdc994fb34,66634009,0,0x0,8
tick,0x7ffdc994fb34,66649329,0,0x0,8
tick,0x7ffdc994fb34,66664484,0,0x0,8
tick,0x7ffdc994fb34,66680056,0,0x0,8
tick,0x7ffdc994fb34,66695683,0,0x0,8
tick,0x7ffdc994fb34,66711238,0,0x0,8
tick,0x7ffdc994fb34,66726791,0,0x0,8
tick,0x7ffdc994fb34,66742633,0,0x0,8
tick,0x7ffdc994fb34,66758037,0,0x0,8
tick,0x7ffdc994fb34,66773419,0,0x0,8
tick,0x7ffdc994fb34,66788801,0,0x0,8
tick,0x7ffdc994fb34,66805117,0,0x0,8
tick,0x7ffdc994fb34,66820295,0,0x0,8
tick,0x7ffdc994fb34,66835995,0,0x0,8
tick,0x7ffdc994fb34,66851360,0,0x0,8
tick,0x7ffdc994fb34,66866988,0,0x0,8
tick,0x7ffdc994fb34,66882828,0,0x0,8
tick,0x7ffdc994fb34,66899113,0,0x0,8
tick,0x7ffdc994fb34,66914799,0,0x0,8
tick,0x7ffdc994fb34,66930765,0,0x0,8
tick,0x7ffdc994fb34,66946207,0,0x0,8
tick,0x7ffdc994fb34,66962133,0,0x0,8
tick,0x7ffdc994fb34,66977094,0,0x0,8
tick,0x7ffdc994fb34,66993207,0,0x0,8
tick,0x7ffdc994fb34,67008451,0,0x0,8
tick,0x7ffdc994fb34,67023941,0,0x0,8
tick,0x7ffdc994fb34,67039139,0,0x0,8
tick,0x7ffdc994fb34,67054991,0,0x0,8
tick,0x7ffdc994fb34,67070188,0,0x0,8
tick,0x7ffdc994fb34,67085623,0,0x0,8
tick,0x7ffdc994fb34,67101080,0,0x0,8
tick,0x7ffdc994fb34,67116852,0,0x0,8
tick,0x7ffdc994fb34,67132215,0,0x0,8
tick,0x7ffdc994fb34,67147616,0,0x0,8
tick,0x7ffdc994fb34,67162886,0,0x0,8
tick,0x7ffdc994fb34,67178470,0,0x0,8
tick,0x7ffdc994fb34,67193718,0,0x0,8
tick,0x7ffdc994fb34,67209554,0,0x0,8
tick,0x7ffdc994fb34,67224906,0,0x0,8
tick,0x7ffdc994fb34,67240549,0,0x0,8
tick,0x7ffdc994fb34,67256060,0,0x0,8
tick,0x7ffdc994fb34,67271550,0,0x0,8
tick,0x7ffdc994fb34,67287555,0,0x0,8
tick,0x7ffdc994fb34,67303004,0,0x0,8
tick,0x7ffdc994fb34,67318182,0,0x0,8
tick,0x7ffdc994fb34,67333401,0,0x0,8
tick,0x7ffdc994fb34,67348862,0,0x0,8
tick,0x7ffdc994fb34,67364037,0,0x0,8
tick,0x7ffdc994fb34,67379351,0,0x0,8
tick,0x7ffdc994fb34,67394911,0,0x0,8
tick,0x7ffdc994fb34,67410557,0,0x0,8
tick,0x7ffdc994fb34,67426303,0,0x0,8
tick,0x7ffdc994fb34,67442240,0,0x0,8
tick,0x7ffdc994fb34,67457716,0,0x0,8
tick,0x7ffdc994fb34,67472949,0,0x0,8
tick,0x7ffdc994fb34,67488871,0,0x0,8
tick,0x7ffdc994fb34,67504586,0,0x0,8
tick,0x7ffdc994fb34,67519901,0,0x0,8
tick,0x7ffdc994fb34,67535792,0,0x0,8
tick,0x7ffdc994fb34,67551935,0,0x0,8
tick,0x7ffdc994fb34,67568050,0,0x0,8
tick,0x7ffdc994fb34,67584169,0,0x0,8
tick,0x7ffdc994fb34,67599717,0,0x0,8
tick,0x7ffdc994fb34,67614851,0,0x0,8
tick,0x7ffdc994fb34,67630599,0,0x0,8
tick,0x7ffdc994fb34,67646194,0,0x0,8
tick,0x7ffdc994fb34,67662146,0,0x0,8
tick,0x7ffdc994fb34,67677322,0,0x0,8
tick,0x7ffdc994fb34,67692961,0,0x0,8
tick,0x7ffdc994fb34,67708367,0,0x0,8
tick,0x7ffdc994fb34,67724291,0,0x0,8
tick,0x7ffdc994fb34,67740011,0,0x0,8
tick,0x7ffdc994fb34,67755647,0,0x0,8
tick,0x7ffdc994fb34,67771105,0,0x0,8
tick,0x7ffdc994fb34,67786791,0,0x0,8
tick,0x7ffdc994fb34,67802229,0,0x0,8
tick,0x7ffdc994fb34,67817532,0,0x0,8
tick,0x7ffdc994fb34,67833028,0,0x0,8
tick,0x7ffdc994fb34,67848515,0,0x0,8
tick,0x7ffdc994fb34,67864197,0,0x0,8
tick,0x7ffdc994fb34,67879626,0,0x0,8
tick,0x7ffdc994fb34,67894642,0,0x0,8
tick,0x7ffdc994fb34,67910118,0,0x0,8
tick,0x7ffdc994fb34,67926418,0,0x0,8
tick,0x7ffdc994fb34,67941596,0,0x0,8
tick,0x7ffdc994fb34,67957457,0,0x0,8
tick,0x7ffdc994fb34,67972823,0,0x0,8
tick,0x7ffdc994fb34,67988699,0,0x0,8
tick,0x7ffdc994fb34,68004376,0,0x0,8
tick,0x7ffdc994fb34,68019638,0,0x0,8
tick,0x7ffdc994fb34,68035577,0,0x0,8
tick,0x7ffdc994fb34,68050811,0,0x0,8
tick,0x7ffdc994fb34,68066425,0,0x0,8
tick,0x7ffdc994fb34,68082792,0,0x0,8
tick,0x7ffdc994fb34,68098154,0,0x0,8
tick,0x7ffdc994fb34,68113863,0,0x0,8
tick,0x7ffdc994fb34,68129531,0,0x0,8
tick,0x7ffdc994fb34,68144815,0,0x0,8
tick,0x7ffdc994fb34,68160449,0,0x0,8
tick,0x7ffdc994fb34,68176562,0,0x0,8
tick,0x7ffdc994fb34,68192486,0,0x0,8
tick,0x7ffdc994fb34,68208202,0,0x0,8
tick,0x7ffdc994fb34,68223122,0,0x0,8
tick,0x7ffdc994fb34,68239119,0,0x0,8
tick,0x7ffdc994fb34,68254299,0,0x0,8
tick,0x7ffdc994fb34,68270051,0,0x0,8
tick,0x7ffdc994fb34,68285256,0,0x0,8
tick,0x7ffdc994fb34,68300571,0,0x0,8
tick,0x7ffdc994fb34,68316382,0,0x0,8
tick,0x7ffdc994fb34,68331611,0,0x0,8
tick,0x7ffdc994fb34,68346965,0,0x0,8
tick,0x7ffdc994fb34,68362391,0,0x0,8
tick,0x7ffdc994fb34,68377824,0,0x0,8
tick,0x7ffdc994fb34,68392911,0,0x0,8
tick,0x7ffdc994fb34,68408074,0,0x0,8
tick,0x7ffdc994fb34,68422984,0,0x0,8
tick,0x7ffdc994fb34,68438161,0,0x0,8
tick,0x7ffdc994fb34,68454231,0,0x0,8
tick,0x7ffdc994fb34,68469317,0,0x0,8
tick,0x7ffdc994fb34,68484448,0,0x0,8
tick,0x7ffdc994fb34,68500152,0,0x0,8
tick,0x7ffdc994fb34,68515793,0,0x0,8
tick,0x7ffdc994fb34,68531109,0,0x0,8
tick,0x7ffdc994fb34,68546410,0,0x0,8
tick,0x7ffdc994fb34,68561932,0,0x0,8
tick,0x7ffdc994fb34,68577564,0,0x0,8
tick,0x7ffdc994fb34,68593080,0,0x0,8
tick,0x7ffdc994fb34,68608393,0,0x0,8
tick,0x7ffdc994fb34,68623491,0,0x0,8
tick,0x7ffdc994fb34,68638926,0,0x0,8
tick,0x7ffdc994fb34,68654655,0,0x0,8
tick,0x7ffdc994fb34,68670501,0,0x0,8
tick,0x7ffdc994fb34,68685867,0,0x0,8
tick,0x7ffdc994fb34,68701067,0,0x0,8
tick,0x7ffdc994fb34,68717189,0,0x0,8
tick,0x7ffdc994fb34,68732425,0,0x0,8
tick,0x7ffdc994fb34,68748627,0,0x0,8
tick,0x7ffdc994fb34,68764310,0,0x0,8
tick,0x7ffdc994fb34,68780163,0,0x0,8
tick,0x7ffdc994fb34,68795975,0,0x0,8
tick,0x7ffdc994fb34,68811623,0,0x0,8
tick,0x7ffdc994fb34,68826813,0,0x0,8
tick,0x7ffdc994fb34,68842444,0,0x0,8
tick,0x7ffdc994fb34,68858660,0,0x0,8
tick,0x7ffdc994fb34,68874272,0,0x0,8
tick,0x7ffdc994fb34,68890190,0,0x0,8
tick,0x7ffdc994fb34,68906393,0,0x0,8
tick,0x7ffdc994fb34,68921926,0,0x0,8
tick,0x7ffdc994fb34,68937525,0,0x0,8
tick,0x7ffdc994fb34,68953018,0,0x0,8
tick,0x7ffdc994fb34,68968724,0,0x0,8
tick,0x7ffdc994fb34,68984129,0,0x0,8
tick,0x7ffdc994fb34,68999462,0,0x0,8
tick,0x7ffdc994fb34,69015477,0,0x0,8
tick,0x7ffdc994fb34,69031005,0,0x0,8
tick,0x7ffdc994fb34,69046460,0,0x0,8
tick,0x7ffdc994fb34,69061901,0,0x0,8
tick,0x7ffdc994fb34,69077750,0,0x0,8
tick,0x7ffdc994fb34,69093088,0,0x0,8
tick,0x7ffdc994fb34,69108502,0,0x0,8
tick,0x7ffdc994fb34,69123602,0,0x0,8
tick,0x7ffdc994fb34,69139506,0,0x0,8
tick,0x7ffdc994fb34,69154752,0,0x0,8
tick,0x7ffdc994fb34,69170331,0,0x0,8
tick,0x7ffdc994fb34,69185752,0,0x0,8
tick,0x7ffdc994fb34,69201294,0,0x0,8
tick,0x7ffdc994fb34,69216989,0,0x0,8
tick,0x7ffdc994fb34,69231995,0,0x0,8
tick,0x7ffdc994fb34,69247523,0,0x0,8
tick,0x7ffdc994fb34,69263113,0,0x0,8
tick,0x7ffdc994fb34,69278645,0,0x0,8
tick,0x7ffdc994fb34,69294012,0,0x0,8
tick,0x7ffdc994fb34,69309936,0,0x0,8
tick,0x7ffdc994fb34,69325073,0,0x0,8
tick,0x7ffdc994fb34,69340534,0,0x0,8
tick,0x7ffdc994fb34,69356233,0,0x0,8
tick,0x7ffdc994fb34,69371663,0,0x0,8
tick,0x7ffdc994fb34,69387473,0,0x0,8
tick,0x7ffdc994fb34,69403492,0,0x0,8
tick,0x7ffdc994fb34,69419288,0,0x0,8
tick,0x7ffdc994fb34,69434683,0,0x0,8
tick,0x7ffdc994fb34,69450303,0,0x0,8
tick,0x7ffdc994fb34,69465872,0,0x0,8
tick,0x7ffdc994fb34,69481446,0,0x0,8
tick,0x7ffdc994fb34,69496649,0,0x0,8
tick,0x7ffdc994fb34,69511997,0,0x0,8
tick,0x7ffdc994fb34,69527962,0,0x0,8
tick,0x7ffdc994fb34,69543394,0,0x0,8
tick,0x7ffdc994fb34,69559177,0,0x0,8
tick,0x7ffdc994fb34,69574554,0,0x0,8
tick,0x7ffdc994fb34,69590609,0,0x0,8
tick,0x7ffdc994fb34,69606150,0,0x0,8
tick,0x7ffdc994fb34,69621580,0,0x0,8
tick,0x7ffdc994fb34,69637044,0,0x0,8
tick,0x7ffdc994fb34,69652843,0,0x0,8
tick,0x7ffdc994fb34,69669341,0,0x0,8
tick,0x7ffdc994fb34,69685070,0,0x0,8
tick,0x7ffdc994fb34,69700693,0,0x0,8
tick,0x7ffdc994fb34,69716394,0,0x0,8
tick,0x7ffdc994fb34,69731707,0,0x0,8
tick,0x7ffdc994fb34,69747753,0,0x0,8
tick,0x7ffdc994fb34,69763081,0,0x0,8
tick,0x7ffdc994fb34,69778975,0,0x0,8
tick,0x7ffdc994fb34,69794409,0,0x0,8
tick,0x7ffdc994fb34,69809003,0,0x0,8
tick,0x7ffdc994fb34,69824679,0,0x0,8
tick,0x7ffdc994fb34,69840228,0,0x0,8
tick,0x7ffdc994fb34,69855779,0,0x0,8
tick,0x7ffdc994fb34,69871540,0,0x0,8
tick,0x7ffdc994fb34,69887207,0,0x0,8
tick,0x7ffdc994fb34,69902552,0,0x0,8
tick,0x7ffdc994fb34,69918248,0,0x0,8
tick,0x7ffdc994fb34,69933567,0,0x0,8
tick,0x7ffdc994fb34,69949358,0,0x0,8
tick,0x7ffdc994fb34,69965219,0,0x0,8
tick,0x7ffdc994fb34,69980955,0,0x0,8
tick,0x7ffdc994fb34,69996871,0,0x0,8
tick,0x7ffdc994fb34,70011776,0,0x0,8
tick,0x7ffdc994fb34,70027001,0,0x0,8
tick,0x7ffdc994fb34,70042873,0,0x0,8
tick,0x7ffdc994fb34,70058492,0,0x0,8
tick,0x7ffdc994fb34,70073497,0,0x0,8
tick,0x7ffdc994fb34,70088574,0,0x0,8
tick,0x7ffdc994fb34,70104077,0,0x0,8
tick,0x7ffdc994fb34,70119600,0,0x0,8
tick,0x7ffdc994fb34,70134959,0,0x0,8
tick,0x7ffdc994fb34,70150547,0,0x0,8
tick,0x7ffdc994fb34,70165806,0,0x0,8
tick,0x7ffdc994fb34,70181616,0,0x0,8
tick,0x7ffdc994fb34,70196461,0,0x0,8
tick,0x7ffdc994fb34,70212171,0,0x0,8
tick,0x7ffdc994fb34,70228335,0,0x0,8
tick,0x7ffdc994fb34,70243696,0,0x0,8
tick,0x7ffdc994fb34,70259477,0,0x0,8
tick,0x7ffdc994fb34,70275403,0,0x0,8
tick,0x7ffdc994fb34,70291172,0,0x0,8
tick,0x7ffdc994fb34,70306634,0,0x0,8
tick,0x7ffdc994fb34,70322068,0,0x0,8
tick,0x7ffdc994fb34,70337650,0,0x0,8
tick,0x7ffdc994fb34,70353061,0,0x0,8
tick,0x7ffdc994fb34,70369068,0,0x0,8
tick,0x7ffdc994fb34,70384411,0,0x0,8
tick,0x7ffdc994fb34,70399937,0,0x0,8
tick,0x7ffdc994fb34,70415394,0,0x0,8
tick,0x7ffdc994fb34,70430526,0,0x0,8
tick,0x7ffdc994fb34,70446592,0,0x0,8
tick,0x7ffdc994fb34,70461557,0,0x0,8
tick,0x7ffdc994fb34,70477490,0,0x0,8
tick,0x7ffdc994fb34,70492845,0,0x0,8
tick,0x7ffdc994fb34,70508656,0,0x0,8
tick,0x7ffdc994fb34,70524004,0,0x0,8
tick,0x7ffdc994fb34,70539630,0,0x0,8
tick,0x7ffdc994fb34,70554676,0,0x0,8
tick,0x7ffdc994fb34,70570191,0,0x0,8
tick,0x7ffdc994fb34,70586146,0,0x0,8
tick,0x7ffdc994fb34,70602555,0,0x0,8
tick,0x7ffdc994fb34,70618117,0,0x0,8
tick,0x7ffdc994fb34,70633280,0,0x0,8
tick,0x7ffdc994fb34,70649059,0,0x0,8
tick,0x7ffdc994fb34,70665205,0,0x0,8
tick,0x7ffdc994fb34,70680896,0,0x0,8
tick,0x7ffdc994fb34,70696606,0,0x0,8
tick,0x7ffdc994fb34,70712383,0,0x0,8
tick,0x7ffdc994fb34,70728156,0,0x0,8
tick,0x7ffdc994fb34,70743608,0,0x0,8
tick,0x7ffdc994fb34,70759333,0,0x0,8
tick,0x7ffdc994fb34,70774556,0,0x0,8
tick,0x7ffdc994fb34,70790031,0,0x0,8
tick,0x7ffdc994fb34,70805371,0,0x0,8
tick,0x7ffdc994fb34,70820944,0,0x0,8
tick,0x7ffdc994fb34,70836490,0,0x0,8
tick,0x7ffdc994fb34,70852101,0,0x0,8
tick,0x7ffdc994fb34,70867302,0,0x0,8
tick,0x7ffdc994fb34,70882411,0,0x0,8
tick,0x7ffdc994fb34,70898361,0,0x0,8
tick,0x7ffdc994fb34,70913611,0,0x0,8
tick,0x7ffdc994fb34,70929592,0,0x0,8
tick,0x7ffdc994fb34,70944697,0,0x0,8
tick,0x7ffdc994fb34,70960348,0,0x0,8
tick,0x7ffdc994fb34,70975773,0,0x0,8
tick,0x7ffdc994fb34,70991047,0,0x0,8
tick,0x7ffdc994fb34,71007008,0,0x0,8
tick,0x7ffdc994fb34,71022519,0,0x0,8
tick,0x7ffdc994fb34,71037728,0,0x0,8
tick,0x7ffdc994fb34,71053413,0,0x0,8
tick,0x7ffdc994fb34,71069173,0,0x0,8
tick,0x7ffdc994fb34,71084449,0,0x0,8
tick,0x7ffdc994fb34,71099970,0,0x0,8
tick,0x7ffdc994fb34,71115640,0,0x0,8
tick,0x7ffdc994fb34,71131644,0,0x0,8
tick,0x7ffdc994fb34,71147530,0,0x0,8
tick,0x7ffdc994fb34,71163796,0,0x0,8
tick,0x7ffdc994fb34,71179554,0,0x0,8
tick,0x7ffdc994fb34,71195122,0,0x0,8
tick,0x7ffdc994fb34,71210736,0,0x0,8
tick,0x7ffdc994fb34,71226374,0,0x0,8
tick,0x7ffdc994fb34,71241794,0,0x0,8
tick,0x7ffdc994fb34,71257586,0,0x0,8
tick,0x7ffdc994fb34,71272882,0,0x0,8
tick,0x7ffdc994fb34,71288568,0,0x0,8
tick,0x7ffdc994fb34,71304432,0,0x0,8
tick,0x7ffdc994fb34,71319608,0,0x0,8
tick,0x7ffdc994fb34,71335744,0,0x0,8
tick,0x7ffdc994fb34,71351258,0,0x0,8
tick,0x7ffdc994fb34,71366531,0,0x0,8
tick,0x7ffdc994fb34,71382090,0,0x0,8
tick,0x7ffdc994fb34,71397573,0,0x0,8
tick,0x7ffdc994fb34,71413351,0,0x0,8
tick,0x7ffdc994fb34,71428717,0,0x0,8
tick,0x7ffdc994fb34,71444466,0,0x0,8
tick,0x7ffdc994fb34,71459854,0,0x0,8
tick,0x7ffdc994fb34,71475324,0,0x0,8
tick,0x7ffdc994fb34,71490822,0,0x0,8
tick,0x7ffdc994fb34,71506614,0,0x0,8
tick,0x7ffdc994fb34,71521851,0,0x0,8
tick,0x7ffdc994fb34,71536994,0,0x0,8
tick,0x7ffdc994fb34,71552710,0,0x0,8
tick,0x7ffdc994fb34,71568609,0,0x0,8
tick,0x7ffdc994fb34,71583484,0,0x0,8
tick,0x7ffdc994fb34,71599214,0,0x0,8
tick,0x7ffdc994fb34,71614477,0,0x0,8
tick,0x7ffdc994fb34,71630246,0,0x0,8
tick,0x7ffdc994fb34,71645809,0,0x0,8
tick,0x7ffdc994fb34,71661274,0,0x0,8
tick,0x7ffdc994fb34,71677005,0,0x0,8
tick,0x7ffdc994fb34,71692374,0,0x0,8
tick,0x7ffdc994fb34,71708576,0,0x0,8
tick,0x7ffdc994fb34,71723635,0,0x0,8
tick,0x7ffdc994fb34,71739415,0,0x0,8
tick,0x7ffdc994fb34,71754511,0,0x0,8
tick,0x7ffdc994fb34,71769999,0,0x0,8
tick,0x7ffdc994fb34,71785652,0,0x0,8
tick,0x7ffdc994fb34,71801609,0,0x0,8
tick,0x7ffdc994fb34,71816908,0,0x0,8
tick,0x7ffdc994fb34,71832072,0,0x0,8
tick,0x7ffdc994fb34,71848088,0,0x0,8
tick,0x7ffdc994fb34,71863568,0,0x0,8
tick,0x7ffdc994fb34,71879451,0,0x0,8
tick,0x7ffdc994fb34,71895009,0,0x0,8
tick,0x7ffdc994fb34,71910682,0,0x0,8
tick,0x7ffdc994fb34,71926330,0,0x0,8
tick,0x7ffdc994fb34,71941884,0,0x0,8
tick,0x7ffdc994fb34,71957882,0,0x0,8
tick,0x7ffdc994fb34,71972853,0,0x0,8
tick,0x7ffdc994fb34,71988641,0,0x0,8
tick,0x7ffdc994fb34,72003995,0,0x0,8
tick,0x7ffdc994fb34,72019137,0,0x0,8
tick,0x7ffdc994fb34,72035163,0,0x0,8
tick,0x7ffdc994fb34,72050927,0,0x0,8
tick,0x7ffdc994fb34,72065569,0,0x0,8
tick,0x7ffdc994fb34,72081569,0,0x0,8
tick,0x7ffdc994fb34,72096526,0,0x0,8
tick,0x7ffdc994fb34,72111604,0,0x0,8
tick,0x7ffdc994fb34,72127247,0,0x0,8
tick,0x7ffdc994fb34,72142514,0,0x0,8
tick,0x7ffdc994fb34,72158389,0,0x0,8
tick,0x7ffdc994fb34,72173888,0,0x0,8
tick,0x7ffdc994fb34,72189753,0,0x0,8
tick,0x7ffdc994fb34,72204590,0,0x0,8
tick,0x7ffdc994fb34,72220477,0,0x0,8
tick,0x7ffdc994fb34,72236326,0,0x0,8
tick,0x7ffdc994fb34,72251757,0,0x0,8
tick,0x7ffdc994fb34,72267752,0,0x0,8
tick,0x7ffdc994fb34,72282596,0,0x0,8
tick,0x7ffdc994fb34,72297887,0,0x0,8
tick,0x7ffdc994fb34,72314202,0,0x0,8
tick,0x7ffdc994fb34,72329728,0,0x0,8
tick,0x7ffdc994fb34,72345551,0,0x0,8
tick,0x7ffdc994fb34,72360894,0,0x0,8
tick,0x7ffdc994fb34,72376151,0,0x0,8
tick,0x7ffdc994fb34,72392244,0,0x0,8
tick,0x7ffdc994fb34,72407625,0,0x0,8
tick,0x7ffdc994fb34,72423110,0,0x0,8
tick,0x7ffdc994fb34,72438414,0,0x0,8
tick,0x7ffdc994fb34,72454198,0,0x0,8
tick,0x7ffdc994fb34,72469537,0,0x0,8
tick,0x7ffdc994fb34,72485302,0,0x0,8
tick,0x7ffdc994fb34,72501496,0,0x0,8
tick,0x7ffdc994fb34,72516828,0,0x0,8
tick,0x7ffdc994fb34,72532385,0,0x0,8
tick,0x7ffdc994fb34,72547880,0,0x0,8
tick,0x7ffdc994fb34,72563262,0,0x0,8
tick,0x7ffdc994fb34,72578391,0,0x0,8
tick,0x7ffdc994fb34,72594125,0,0x0,8
tick,0x7ffdc994fb34,72609629,0,0x0,8
tick,0x7ffdc994fb34,72625075,0,0x0,8
tick,0x7ffdc994fb34,72640132,0,0x0,8
tick,0x7ffdc994fb34,72656254,0,0x0,8
tick,0x7ffdc994fb34,72671748,0,0x0,8
tick,0x7ffdc994fb34,72687639,0,0x0,8
tick,0x7ffdc994fb34,72702557,0,0x0,8
tick,0x7ffdc994fb34,72718283,0,0x0,8
tick,0x7ffdc994fb34,72734402,0,0x0,8
tick,0x7ffdc994fb34,72749869,0,0x0,8
tick,0x7ffdc994fb34,72765040,0,0x0,8
tick,0x7ffdc994fb34,72781289,0,0x0,8
tick,0x7ffdc994fb34,72796601,0,0x0,8
tick,0x7ffdc994fb34,72811747,0,0x0,8
tick,0x7ffdc994fb34,72827719,0,0x0,8
tick,0x7ffdc994fb34,72843069,0,0x0,8
tick,0x7ffdc994fb34,72859062,0,0x0,8
tick,0x7ffdc994fb34,72874252,0,0x0,8
tick,0x7ffdc994fb34,72889833,0,0x0,8
tick,0x7ffdc994fb34,72904887,0,0x0,8
tick,0x7ffdc994fb34,72920280,0,0x0,8
tick,0x7ffdc994fb34,72936610,0,0x0,8
tick,0x7ffdc994fb34,72952134,0,0x0,8
tick,0x7ffdc994fb34,72968228,0,0x0,8
tick,0x7ffdc994fb34,72984274,0,0x0,8
tick,0x7ffdc994fb34,72999707,0,0x0,8
tick,0x7ffdc994fb34,73015404,0,0x0,8
tick,0x7ffdc994fb34,73030873,0,0x0,8
tick,0x7ffdc994fb34,73046085,0,0x0,8
tick,0x7ffdc994fb34,73062158,0,0x0,8
tick,0x7ffdc994fb34,73077480,0,0x0,8
tick,0x7ffdc994fb34,73092558,0,0x0,8
tick,0x7ffdc994fb34,73108030,0,0x0,8
tick,0x7ffdc994fb34,73123620,0,0x0,8
tick,0x7ffdc994fb34,73139423,0,0x0,8
tick,0x7ffdc994fb34,73155083,0,0x0,8
tick,0x7ffdc994fb34,73170684,0,0x0,8
tick,0x7ffdc994fb34,73186664,0,0x0,8
tick,0x7ffdc994fb34,73201910,0,0x0,8
tick,0x7ffdc994fb34,73218309,0,0x0,8
tick,0x7ffdc994fb34,73233579,0,0x0,8
tick,0x7ffdc994fb34,73249222,0,0x0,8
tick,0x7ffdc994fb34,73264532,0,0x0,8
tick,0x7ffdc994fb34,73280119,0,0x0,8
tick,0x7ffdc994fb34,73295913,0,0x0,8
tick,0x7ffdc994fb34,73311020,0,0x0,8
tick,0x7ffdc994fb34,73326848,0,0x0,8
tick,0x7ffdc994fb34,73342569,0,0x0,8
tick,0x7ffdc994fb34,73358377,0,0x0,8
tick,0x7ffdc994fb34,73374325,0,0x0,8
tick,0x7ffdc994fb34,73389862,0,0x0,8
tick,0x7ffdc994fb34,73404721,0,0x0,8
tick,0x7ffdc994fb34,73420126,0,0x0,8
tick,0x7ffdc994fb34,73436314,0,0x0,8
tick,0x7ffdc994fb34,73451624,0,0x0,8
tick,0x7ffdc994fb34,73467652,0,0x0,8
tick,0x7ffdc994fb34,73482939,0,0x0,8
tick,0x7ffdc994fb34,73498174,0,0x0,8
tick,0x7ffdc994fb34,73514365,0,0x0,8
tick,0x7ffdc994fb34,73529538,0,0x0,8
tick,0x7ffdc994fb34,73545341,0,0x0,8
tick,0x7ffdc994fb34,73560974,0,0x0,8
tick,0x7ffdc994fb34,73575544,0,0x0,8
tick,0x7ffdc994fb34,73591181,0,0x0,8
tick,0x7ffdc994fb34,73606582,0,0x0,8
tick,0x7ffdc994fb34,73622824,0,0x0,8
tick,0x7ffdc994fb34,73638521,0,0x0,8
tick,0x7ffdc994fb34,73653999,0,0x0,8
tick,0x7ffdc994fb34,73669707,0,0x0,8
tick,0x7ffdc994fb34,73685692,0,0x0,8
tick,0x7ffdc994fb34,73701275,0,0x0,8
tick,0x7ffdc994fb34,73716998,0,0x0,8
tick,0x7ffdc994fb34,73732470,0,0x0,8
tick,0x7ffdc994fb34,73748066,0,0x0,8
tick,0x7ffdc994fb34,73763174,0,0x0,8
tick,0x7ffdc994fb34,73778876,0,0x0,8
tick,0x7ffdc994fb34,73794163,0,0x0,8
tick,0x7ffdc994fb34,73810018,0,0x0,8
tick,0x7ffdc994fb34,73825132,0,0x0,8
tick,0x7ffdc994fb34,73841124,0,0x0,8
tick,0x7ffdc994fb34,73856403,0,0x0,8
tick,0x7ffdc994fb34,73872096,0,0x0,8
tick,0x7ffdc994fb34,73887737,0,0x0,8
tick,0x7ffdc994fb34,73903652,0,0x0,8
tick,0x7ffdc994fb34,73919080,0,0x0,8
tick,0x7ffdc994fb34,73934099,0,0x0,8
tick,0x7ffdc994fb34,73949625,0,0x0,8
tick,0x7ffdc994fb34,73965039,0,0x0,8
tick,0x7ffdc994fb34,73980738,0,0x0,8
tick,0x7ffdc994fb34,73996210,0,0x0,8
tick,0x7ffdc994fb34,74011836,0,0x0,8
tick,0x7ffdc994fb34,74027226,0,0x0,8
tick,0x7ffdc994fb34,74043261,0,0x0,8
tick,0x7ffdc994fb34,74059461,0,0x0,8
tick,0x7ffdc994fb34,74075565,0,0x0,8
tick,0x7ffdc994fb34,74090616,0,0x0,8
tick,0x7ffdc994fb34,74106658,0,0x0,8
tick,0x7ffdc994fb34,74122723,0,0x0,8
tick,0x7ffdc994fb34,74138570,0,0x0,8
tick,0x7ffdc994fb34,74153883,0,0x0,8
tick,0x7ffdc994fb34,74169228,0,0x0,8
tick,0x7ffdc994fb34,74185346,0,0x0,8
tick,0x7ffdc994fb34,74200602,0,0x0,8
tick,0x7ffdc994fb34,74216427,0,0x0,8
tick,0x7ffdc994fb34,74232074,0,0x0,8
tick,0x7ffdc994fb34,74247369,0,0x0,8
tick,0x7ffdc994fb34,74262153,0,0x0,8
tick,0x7ffdc994fb34,74277644,0,0x0,8
tick,0x7ffdc994fb34,74292819,0,0x0,8
tick,0x7ffdc994fb34,74309230,0,0x0,8
tick,0x7ffdc994fb34,74324693,0,0x0,8
tick,0x7ffdc994fb34,74340502,0,0x0,8
tick,0x7ffdc994fb34,74355736,0,0x0,8
tick,0x7ffdc994fb34,74371561,0,0x0,8
tick,0x7ffdc994fb34,74386813,0,0x0,8
tick,0x7ffdc994fb34,74402615,0,0x0,8
tick,0x7ffdc994fb34,74418256,0,0x0,8
tick,0x7ffdc994fb34,74433958,0,0x0,8
tick,0x7ffdc994fb34,74449655,0,0x0,8
tick,0x7ffdc994fb34,74464695,0,0x0,8
tick,0x7ffdc994fb34,74480442,0,0x0,8
tick,0x7ffdc994fb34,74495816,0,0x0,8
tick,0x7ffdc994fb34,74510883,0,0x0,8
tick,0x7ffdc994fb34,74526451,0,0x0,8
tick,0x7ffdc994fb34,74542650,0,0x0,8
tick,0x7ffdc994fb34,74557696,0,0x0,8
tick,0x7ffdc994fb34,74573039,0,0x0,8
tick,0x7ffdc994fb34,74588094,0,0x0,8
tick,0x7ffdc994fb34,74603532,0,0x0,8
tick,0x7ffdc994fb34,74619705,0,0x0,8
tick,0x7ffdc994fb34,74635113,0,0x0,8
tick,0x7ffdc994fb34,74650498,0,0x0,8
tick,0x7ffdc994fb34,74665948,0,0x0,8
tick,0x7ffdc994fb34,74681871,0,0x0,8
tick,0x7ffdc994fb34,74697643,0,0x0,8
tick,0x7ffdc994fb34,74712917,0,0x0,8
tick,0x7ffdc994fb34,74729071,0,0x0,8
tick,0x7ffdc994fb34,74744505,0,0x0,8
tick,0x7ffdc994fb34,74760349,0,0x0,8
tick,0x7ffdc994fb34,74775641,0,0x0,8
tick,0x7ffdc994fb34,74790962,0,0x0,8
tick,0x7ffdc994fb34,74806225,0,0x0,8
tick,0x7ffdc994fb34,74821589,0,0x0,8
tick,0x7ffdc994fb34,74837494,0,0x0,8
tick,0x7ffdc994fb34,74853095,0,0x0,8
tick,0x7ffdc994fb34,74868163,0,0x0,8
tick,0x7ffdc994fb34,74883755,0,0x0,8
tick,0x7ffdc994fb34,74899475,0,0x0,8
tick,0x7ffdc994fb34,74915316,0,0x0,8
tick,0x7ffdc994fb34,74930435,0,0x0,8
tick,0x7ffdc994fb34,74945800,0,0x0,8
tick,0x7ffdc994fb34,74961732,0,0x0,8
tick,0x7ffdc994fb34,74977459,0,0x0,8
tick,0x7ffdc994fb34,74993560,0,0x0,8
tick,0x7ffdc994fb34,75009665,0,0x0,8
tick,0x7ffdc994fb34,75025517,0,0x0,8
tick,0x7ffdc994fb34,75041195,0,0x0,8
tick,0x7ffdc994fb34,75056665,0,0x0,8
tick,0x7ffdc994fb34,75071817,0,0x0,8
tick,0x7ffdc994fb34,75086887,0,0x0,8
tick,0x7ffdc994fb34,75102869,0,0x0,8
tick,0x7ffdc994fb34,75118780,0,0x0,8
tick,0x7ffdc994fb34,75134641,0,0x0,8
tick,0x7ffdc994fb34,75150839,0,0x0,8
tick,0x7ffdc994fb34,75166702,0,0x0,8
tick,0x7ffdc994fb34,75182377,0,0x0,8
tick,0x7ffdc994fb34,75197968,0,0x0,8
tick,0x7ffdc994fb34,75213074,0,0x0,8
tick,0x7ffdc994fb34,75229268,0,0x0,8
tick,0x7ffdc994fb34,75244503,0,0x0,8
tick,0x7ffdc994fb34,75260576,0,0x0,8
tick,0x7ffdc994fb34,75276588,0,0x0,8
tick,0x7ffdc994fb34,75292276,0,0x0,8
tick,0x7ffdc994fb34,75307813,0,0x0,8
tick,0x7ffdc994fb34,75322856,0,0x0,8
tick,0x7ffdc994fb34,75337840,0,0x0,8
tick,0x7ffdc994fb34,75353937,0,0x0,8
tick,0x7ffdc994fb34,75369576,0,0x0,8
tick,0x7ffdc994fb34,75384905,0,0x0,8
tick,0x7ffdc994fb34,75401105,0,0x0,8
tick,0x7ffdc994fb34,75416393,0,0x0,8
tick,0x7ffdc994fb34,75432194,0,0x0,8
tick,0x7ffdc994fb34,75447427,0,0x0,8
tick,0x7ffdc994fb34,75463370,0,0x0,8
tick,0x7ffdc994fb34,75479011,0,0x0,8
tick,0x7ffdc994fb34,75494516,0,0x0,8
tick,0x7ffdc994fb34,75509819,0,0x0,8
tick,0x7ffdc994fb34,75525968,0,0x0,8
tick,0x7ffdc994fb34,75541616,0,0x0,8
tick,0x7ffdc994fb34,75557018,0,0x0,8
tick,0x7ffdc994fb34,75572605,0,0x0,8
tick,0x7ffdc994fb34,75588517,0,0x0,8
tick,0x7ffdc994fb34,75604078,0,0x0,8
tick,0x7ffdc994fb34,75619519,0,0x0,8
tick,0x7ffdc994fb34,75635222,0,0x0,8
tick,0x7ffdc994fb34,75650539,0,0x0,8
tick,0x7ffdc994fb34,75666281,0,0x0,8
tick,0x7ffdc994fb34,75681947,0,0x0,8
tick,0x7ffdc994fb34,75697982,0,0x0,8
tick,0x7ffdc994fb34,75713540,0,0x0,8
tick,0x7ffdc994fb34,75728950,0,0x0,8
tick,0x7ffdc994fb34,75744162,0,0x0,8
tick,0x7ffdc994fb34,75759786,0,0x0,8
tick,0x7ffdc994fb34,75775325,0,0x0,8
tick,0x7ffdc994fb34,75790231,0,0x0,8
tick,0x7ffdc994fb34,75806207,0,0x0,8
tick,0x7ffdc994fb34,75821425,0,0x0,8
tick,0x7ffdc994fb34,75836797,0,0x0,8
tick,0x7ffdc994fb34,75853072,0,0x0,8
tick,0x7ffdc994fb34,75868079,0,0x0,8
tick,0x7ffdc994fb34,75883592,0,0x0,8
tick,0x7ffdc994fb34,75898876,0,0x0,8
tick,0x7ffdc994fb34,75914449,0,0x0,8
tick,0x7ffdc994fb34,75929758,0,0x0,8
tick,0x7ffdc994fb34,75945172,0,0x0,8
tick,0x7ffdc994fb34,75960602,0,0x0,8
tick,0x7ffdc994fb34,75976328,0,0x0,8
tick,0x7ffdc994fb34,75991738,0,0x0,8
tick,0x7ffdc994fb34,76007630,0,0x0,8
tick,0x7ffdc994fb34,76022992,0,0x0,8
tick,0x7ffdc994fb34,76038460,0,0x0,8
tick,0x7ffdc994fb34,76054557,0,0x0,8
tick,0x7ffdc994fb34,76070127,0,0x0,8
tick,0x7ffdc994fb34,76085957,0,0x0,8
tick,0x7ffdc994fb34,76102007,0,0x0,8
tick,0x7ffdc994fb34,76117760,0,0x0,8
tick,0x7ffdc994fb34,76133962,0,0x0,8
tick,0x7ffdc994fb34,76149735,0,0x0,8
tick,0x7ffdc994fb34,76165740,0,0x0,8
tick,0x7ffdc994fb34,76181295,0,0x0,8
tick,0x7ffdc994fb34,76196932,0,0x0,8
tick,0x7ffdc994fb34,76213035,0,0x0,8
tick,0x7ffdc994fb34,76228310,0,0x0,8
tick,0x7ffdc994fb34,76244232,0,0x0,8
tick,0x7ffdc994fb34,76259457,0,0x0,8
tick,0x7ffdc994fb34,76274572,0,0x0,8
tick,0x7ffdc994fb34,76289969,0,0x0,8
tick,0x7ffdc994fb34,76305845,0,0x0,8
tick,0x7ffdc994fb34,76321393,0,0x0,8
tick,0x7ffdc994fb34,76337597,0,0x0,8
tick,0x7ffdc994fb34,76352771,0,0x0,8
tick,0x7ffdc994fb34,76368102,0,0x0,8
tick,0x7ffdc994fb34,76383503,0,0x0,8
tick,0x7ffdc994fb34,76399219,0,0x0,8
tick,0x7ffdc994fb34,76414436,0,0x0,8
tick,0x7ffdc994fb34,76430306,0,0x0,8
tick,0x7ffdc994fb34,76445783,0,0x0,8
tick,0x7ffdc994fb34,76461880,0,0x0,8
tick,0x7ffdc994fb34,76477948,0,0x0,8
tick,0x7ffdc994fb34,76493203,0,0x0,8
tick,0x7ffdc994fb34,76508566,0,0x0,8
tick,0x7ffdc994fb34,76524367,0,0x0,8
tick,0x7ffdc994fb34,76539575,0,0x0,8
tick,0x7ffdc994fb34,76555449,0,0x0,8
tick,0x7ffdc994fb34,76570949,0,0x0,8
tick,0x7ffdc994fb34,76586621,0,0x0,8
tick,0x7ffdc994fb34,76602208,0,0x0,8
tick,0x7ffdc994fb34,76618033,0,0x0,8
tick,0x7ffdc994fb34,76633536,0,0x0,8
tick,0x7ffdc994fb34,76649037,0,0x0,8
tick,0x7ffdc994fb34,76664515,0,0x0,8
tick,0x7ffdc994fb34,76679980,0,0x0,8
tick,0x7ffdc994fb34,76695128,0,0x0,8
tick,0x7ffdc994fb34,76710582,0,0x0,8
tick,0x7ffdc994fb34,76726300,0,0x0,8
tick,0x7ffdc994fb34,76742581,0,0x0,8
tick,0x7ffdc994fb34,76757951,0,0x0,8
tick,0x7ffdc994fb34,76773597,0,0x0,8
tick,0x7ffdc994fb34,76789090,0,0x0,8
tick,0x7ffdc994fb34,76804262,0,0x0,8
tick,0x7ffdc994fb34,76820272,0,0x0,8
tick,0x7ffdc994fb34,76835633,0,0x0,8
tick,0x7ffdc994fb34,76851213,0,0x0,8
tick,0x7ffdc994fb34,76866993,0,0x0,8
tick,0x7ffdc994fb34,76882489,0,0x0,8
tick,0x7ffdc994fb34,76898101,0,0x0,8
tick,0x7ffdc994fb34,76913381,0,0x0,8
tick,0x7ffdc994fb34,76928740,0,0x0,8
tick,0x7ffdc994fb34,76943967,0,0x0,8
tick,0x7ffdc994fb34,76959751,0,0x0,8
tick,0x7ffdc994fb34,76975747,0,0x0,8
tick,0x7ffdc994fb34,76990887,0,0x0,8
tick,0x7ffdc994fb34,77006629,0,0x0,8
tick,0x7ffdc994fb34,77022064,0,0x0,8
tick,0x7ffdc994fb34,77037699,0,0x0,8
tick,0x7ffdc994fb34,77053510,0,0x0,8
tick,0x7ffdc994fb34,77069547,0,0x0,8
tick,0x7ffdc994fb34,77085002,0,0x0,8
tick,0x7ffdc994fb34,77100392,0,0x0,8
tick,0x7ffdc994fb34,77116200,0,0x0,8
tick,0x7ffdc994fb34,77132282,0,0x0,8
tick,0x7ffdc994fb34,77147417,0,0x0,8
tick,0x7ffdc994fb34,77162990,0,0x0,8
tick,0x7ffdc994fb34,77178661,0,0x0,8
tick,0x7ffdc994fb34,77193778,0,0x0,8
tick,0x7ffdc994fb34,77209703,0,0x0,8
tick,0x7ffdc994fb34,77225669,0,0x0,8
tick,0x7ffdc994fb34,77240789,0,0x0,8
tick,0x7ffdc994fb34,77255998,0,0x0,8
tick,0x7ffdc994fb34,77272095,0,0x0,8
tick,0x7ffdc994fb34,77287859,0,0x0,8
tick,0x7ffdc994fb34,77304355,0,0x0,8
tick,0x7ffdc994fb34,77320017,0,0x0,8
tick,0x7ffdc994fb34,77335337,0,0x0,8
tick,0x7ffdc994fb34,77350677,0,0x0,8
tick,0x7ffdc994fb34,77366368,0,0x0,8
tick,0x7ffdc994fb34,77381479,0,0x0,8
tick,0x7ffdc994fb34,77397388,0,0x0,8
tick,0x7ffdc994fb34,77412582,0,0x0,8
tick,0x7ffdc994fb34,77428298,0,0x0,8
tick,0x7ffdc994fb34,77443419,0,0x0,8
tick,0x7ffdc994fb34,77459348,0,0x0,8
tick,0x7ffdc994fb34,77474468,0,0x0,8
tick,0x7ffdc994fb34,77490334,0,0x0,8
tick,0x7ffdc994fb34,77505738,0,0x0,8
tick,0x7ffdc994fb34,77521564,0,0x0,8
tick,0x7ffdc994fb34,77537372,0,0x0,8
tick,0x7ffdc994fb34,77553112,0,0x0,8
tick,0x7ffdc994fb34,77568519,0,0x0,8
tick,0x7ffdc994fb34,77584282,0,0x0,8
tick,0x7ffdc994fb34,77599901,0,0x0,8
tick,0x7ffdc994fb34,77615402,0,0x0,8
tick,0x7ffdc994fb34,77631143,0,0x0,8
tick,0x7ffdc994fb34,77646811,0,0x0,8
tick,0x7ffdc994fb34,77662900,0,0x0,8
tick,0x7ffdc994fb34,77678859,0,0x0,8
tick,0x7ffdc994fb34,77693839,0,0x0,8
tick,0x7ffdc994fb34,77709533,0,0x0,8
tick,0x7ffdc994fb34,77724446,0,0x0,8
tick,0x7ffdc994fb34,77740378,0,0x0,8
tick,0x7ffdc994fb34,77755560,0,0x0,8
tick,0x7ffdc994fb34,77771342,0,0x0,8
tick,0x7ffdc994fb34,77786891,0,0x0,8
tick,0x7ffdc994fb34,77802412,0,0x0,8
tick,0x7ffdc994fb34,77818021,0,0x0,8
tick,0x7ffdc994fb34,77833760,0,0x0,8
tick,0x7ffdc994fb34,77849027,0,0x0,8
tick,0x7ffdc994fb34,77865144,0,0x0,8
tick,0x7ffdc994fb34,77880724,0,0x0,8
tick,0x7ffdc994fb34,77896342,0,0x0,8
tick,0x7ffdc994fb34,77911743,0,0x0,8
tick,0x7ffdc994fb34,77927576,0,0x0,8
tick,0x7ffdc994fb34,77943093,0,0x0,8
tick,0x7ffdc994fb34,77958612,0,0x0,8
tick,0x7ffdc994fb34,77974240,0,0x0,8
tick,0x7ffdc994fb34,77989815,0,0x0,8
tick,0x7ffdc994fb34,78005533,0,0x0,8
tick,0x7ffdc994fb34,78021226,0,0x0,8
tick,0x7ffdc994fb34,78036297,0,0x0,8
tick,0x7ffdc994fb34,78052288,0,0x0,8
tick,0x7ffdc994fb34,78067991,0,0x0,8
tick,0x7ffdc994fb34,78084059,0,0x0,8
tick,0x7ffdc994fb34,78099340,0,0x0,8
tick,0x7ffdc994fb34,78115529,0,0x0,8
tick,0x7ffdc994fb34,78130329,0,0x0,8
tick,0x7ffdc994fb34,78146892,0,0x0,8
tick,0x7ffdc994fb34,78162413,0,0x0,8
tick,0x7ffdc994fb34,78176756,0,0x0,8
tick,0x7ffdc994fb34,78192353,0,0x0,8
tick,0x7ffdc994fb34,78208056,0,0x0,8
tick,0x7ffdc994fb34,78223799,0,0x0,8
tick,0x7ffdc994fb34,78239494,0,0x0,8
tick,0x7ffdc994fb34,78254276,0,0x0,8
tick,0x7ffdc994fb34,78269407,0,0x0,8
tick,0x7ffdc994fb34,78284706,0,0x0,8
tick,0x7ffdc994fb34,78300629,0,0x0,8
tick,0x7ffdc994fb34,78316363,0,0x0,8
tick,0x7ffdc994fb34,78332043,0,0x0,8
tick,0x7ffdc994fb34,78347940,0,0x0,8
tick,0x7ffdc994fb34,78363187,0,0x0,8
tick,0x7ffdc994fb34,78378749,0,0x0,8
tick,0x7ffdc994fb34,78394040,0,0x0,8
tick,0x7ffdc994fb34,78409924,0,0x0,8
tick,0x7ffdc994fb34,78425763,0,0x0,8
tick,0x7ffdc994fb34,78441453,0,0x0,8
tick,0x7ffdc994fb34,78458628,0,0x0,8
tick,0x7ffdc994fb34,78472261,0,0x0,8
tick,0x7ffdc994fb34,78487710,0,0x0,8
tick,0x7ffdc994fb34,78503149,0,0x0,8
tick,0x7ffdc994fb34,78519201,0,0x0,8
tick,0x7ffdc994fb34,78534564,0,0x0,8
tick,0x7ffdc994fb34,78550243,0,0x0,8
tick,0x7ffdc994fb34,78565817,0,0x0,8
tick,0x7ffdc994fb34,78581225,0,0x0,8
tick,0x7ffdc994fb34,78596946,0,0x0,8
tick,0x7ffdc994fb34,78612128,0,0x0,8
tick,0x7ffdc994fb34,78627433,0,0x0,8
tick,0x7ffdc994fb34,78642742,0,0x0,8
tick,0x7ffdc994fb34,78657969,0,0x0,8
tick,0x7ffdc994fb34,78673615,0,0x0,8
tick,0x7ffdc994fb34,78688839,0,0x0,8
tick,0x7ffdc994fb34,78705104,0,0x0,8
tick,0x7ffdc994fb34,78720346,0,0x0,8
tick,0x7ffdc994fb34,78736360,0,0x0,8
tick,0x7ffdc994fb34,78751765,0,0x0,8
tick,0x7ffdc994fb34,78767277,0,0x0,8
tick,0x7ffdc994fb34,78783287,0,0x0,8
tick,0x7ffdc994fb34,78798402,0,0x0,8
tick,0x7ffdc994fb34,78813733,0,0x0,8
tick,0x7ffdc994fb34,78829160,0,0x0,8
tick,0x7ffdc994fb34,78845056,0,0x0,8
tick,0x7ffdc994fb34,78860281,0,0x0,8
tick,0x7ffdc994fb34,78876243,0,0x0,8
tick,0x7ffdc994fb34,78892269,0,0x0,8
tick,0x7ffdc994fb34,78907942,0,0x0,8
tick,0x7ffdc994fb34,78923270,0,0x0,8
tick,0x7ffdc994fb34,78938625,0,0x0,8
tick,0x7ffdc994fb34,78953867,0,0x0,8
tick,0x7ffdc994fb34,78969691,0,0x0,8
tick,0x7ffdc994fb34,78984995,0,0x0,8
tick,0x7ffdc994fb34,79001076,0,0x0,8
tick,0x7ffdc994fb34,79017261,0,0x0,8
tick,0x7ffdc994fb34,79032080,0,0x0,8
tick,0x7ffdc994fb34,79047989,0,0x0,8
tick,0x7ffdc994fb34,79063292,0,0x0,8
tick,0x7ffdc994fb34,79079436,0,0x0,8
tick,0x7ffdc994fb34,79095518,0,0x0,8
tick,0x7ffdc994fb34,79111375,0,0x0,8
tick,0x7ffdc994fb34,79127161,0,0x0,8
tick,0x7ffdc994fb34,79143203,0,0x0,8
tick,0x7ffdc994fb34,79158496,0,0x0,8
tick,0x7ffdc994fb34,79173349,0,0x0,8
tick,0x7ffdc994fb34,79189345,0,0x0,8
tick,0x7ffdc994fb34,79208633,0,0x0,8
tick,0x7ffdc994fb34,79222092,0,0x0,8
tick,0x7ffdc994fb34,79236098,0,0x0,8
tick,0x7ffdc994fb34,79251896,0,0x0,8
tick,0x7ffdc994fb34,79266671,0,0x0,8
tick,0x7ffdc994fb34,79282507,0,0x0,8
tick,0x7ffdc994fb34,79298478,0,0x0,8
tick,0x7ffdc994fb34,79314241,0,0x0,8
tick,0x7ffdc994fb34,79329995,0,0x0,8
tick,0x7ffdc994fb34,79346131,0,0x0,8
tick,0x7ffdc994fb34,79362260,0,0x0,8
tick,0x7ffdc994fb34,79377852,0,0x0,8
tick,0x7ffdc994fb34,79393820,0,0x0,8
tick,0x7ffdc994fb34,79409205,0,0x0,8
tick,0x7ffdc994fb34,79424469,0,0x0,8
tick,0x7ffdc994fb34,79440135,0,0x0,8
tick,0x7ffdc994fb34,79456183,0,0x0,8
tick,0x7ffdc994fb34,79472486,0,0x0,8
tick,0x7ffdc994fb34,79487643,0,0x0,8
tick,0x7ffdc994fb34,79503411,0,0x0,8
tick,0x7ffdc994fb34,79518378,0,0x0,8
tick,0x7ffdc994fb34,79534365,0,0x0,8
tick,0x7ffdc994fb34,79549811,0,0x0,8
tick,0x7ffdc994fb34,79565134,0,0x0,8
tick,0x7ffdc994fb34,79580600,0,0x0,8
tick,0x7ffdc994fb34,79595955,0,0x0,8
tick,0x7ffdc994fb34,79612103,0,0x0,8
tick,0x7ffdc994fb34,79628034,0,0x0,8
tick,0x7ffdc994fb34,79643887,0,0x0,8
tick,0x7ffdc994fb34,79659629,0,0x0,8
tick,0x7ffdc994fb34,79679775,0,0x0,8
tick,0x7ffdc994fb34,79691050,0,0x0,8
tick,0x7ffdc994fb34,79707124,0,0x0,8
tick,0x7ffdc994fb34,79723123,0,0x0,8
tick,0x7ffdc994fb34,79738389,0,0x0,8
tick,0x7ffdc994fb34,79754509,0,0x0,8
tick,0x7ffdc994fb34,79770294,0,0x0,8
tick,0x7ffdc994fb34,79785868,0,0x0,8
tick,0x7ffdc994fb34,79801341,0,0x0,8
tick,0x7ffdc994fb34,79816728,0,0x0,8
tick,0x7ffdc994fb34,79832033,0,0x0,8
tick,0x7ffdc994fb34,79847390,0,0x0,8
tick,0x7ffdc994fb34,79863357,0,0x0,8
tick,0x7ffdc994fb34,79879464,0,0x0,8
tick,0x7ffdc994fb34,79895335,0,0x0,8
tick,0x7ffdc994fb34,79910973,0,0x0,8
tick,0x7ffdc994fb34,79926715,0,0x0,8
tick,0x7ffdc994fb34,79942840,0,0x0,8
tick,0x7ffdc994fb34,79958100,0,0x0,8
tick,0x7ffdc994fb34,79974154,0,0x0,8
tick,0x7ffdc994fb34,79989987,0,0x0,8
tick,0x7ffdc994fb34,80006120,0,0x0,8
tick,0x7ffdc994fb34,80021446,0,0x0,8
tick,0x7ffdc994fb34,80037750,0,0x0,8
tick,0x7ffdc994fb34,80053028,0,0x0,8
tick,0x7ffdc994fb34,80069036,0,0x0,8
tick,0x7ffdc994fb34,80083971,0,0x0,8
tick,0x7ffdc994fb34,80099700,0,0x0,8
tick,0x7ffdc994fb34,80115669,0,0x0,8
tick,0x7ffdc994fb34,80131648,0,0x0,8
tick,0x7ffdc994fb34,80147221,0,0x0,8
tick,0x7ffdc994fb34,80163612,0,0x0,8
tick,0x7ffdc994fb34,80178661,0,0x0,8
tick,0x7ffdc994fb34,80194151,0,0x0,8
tick,0x7ffdc994fb34,80209441,0,0x0,8
tick,0x7ffdc994fb34,80224705,0,0x0,8
tick,0x7ffdc994fb34,80240227,0,0x0,8
tick,0x7ffdc994fb34,80255973,0,0x0,8
tick,0x7ffdc994fb34,80271378,0,0x0,8
tick,0x7ffdc994fb34,80287511,0,0x0,8
tick,0x7ffdc994fb34,80303399,0,0x0,8
tick,0x7ffdc994fb34,80318740,0,0x0,8
tick,0x7ffdc994fb34,80334154,0,0x0,8
tick,0x7ffdc994fb34,80350581,0,0x0,8
tick,0x7ffdc994fb34,80366239,0,0x0,8
tick,0x7ffdc994fb34,80381932,0,0x0,8
tick,0x7ffdc994fb34,80398009,0,0x0,8
tick,0x7ffdc994fb34,80414085,0,0x0,8
tick,0x7ffdc994fb34,80429519,0,0x0,8
tick,0x7ffdc994fb34,80444939,0,0x0,8
tick,0x7ffdc994fb34,80460071,0,0x0,8
tick,0x7ffdc994fb34,80475227,0,0x0,8
tick,0x7ffdc994fb34,80491406,0,0x0,8
tick,0x7ffdc994fb34,80506715,0,0x0,8
tick,0x7ffdc994fb34,80522037,0,0x0,8
tick,0x7ffdc994fb34,80537598,0,0x0,8
tick,0x7ffdc994fb34,80553968,0,0x0,8
tick,0x7ffdc994fb34,80569960,0,0x0,8
tick,0x7ffdc994fb34,80586004,0,0x0,8
tick,0x7ffdc994fb34,80601391,0,0x0,8
tick,0x7ffdc994fb34,80616532,0,0x0,8
tick,0x7ffdc994fb34,80632333,0,0x0,8
tick,0x7ffdc994fb34,80648286,0,0x0,8
tick,0x7ffdc994fb34,80663510,0,0x0,8
tick,0x7ffdc994fb34,80679776,0,0x0,8
tick,0x7ffdc994fb34,80694603,0,0x0,8
tick,0x7ffdc994fb34,80710680,0,0x0,8
tick,0x7ffdc994fb34,80726129,0,0x0,8
tick,0x7ffdc994fb34,80741332,0,0x0,8
tick,0x7ffdc994fb34,80756653,0,0x0,8
tick,0x7ffdc994fb34,80772503,0,0x0,8
tick,0x7ffdc994fb34,80788152,0,0x0,8
tick,0x7ffdc994fb34,80804385,0,0x0,8
tick,0x7ffdc994fb34,80820161,0,0x0,8
tick,0x7ffdc994fb34,80835438,0,0x0,8
tick,0x7ffdc994fb34,80851121,0,0x0,8
tick,0x7ffdc994fb34,80866257,0,0x0,8
tick,0x7ffdc994fb34,80881811,0,0x0,8
tick,0x7ffdc994fb34,80897533,0,0x0,8
tick,0x7ffdc994fb34,80913576,0,0x0,8
tick,0x7ffdc994fb34,80929034,0,0x0,8
tick,0x7ffdc994fb34,80954604,0,0x0,8
tick,0x7ffdc994fb34,80960377,0,0x0,8
tick,0x7ffdc994fb34,80976405,0,0x0,8
tick,0x7ffdc994fb34,80992540,0,0x0,8
tick,0x7ffdc994fb34,81007830,0,0x0,8
tick,0x7ffdc994fb34,81023852,0,0x0,8
tick,0x7ffdc994fb34,81039837,0,0x0,8
tick,0x7ffdc994fb34,81054368,0,0x0,8
tick,0x7ffdc994fb34,81069399,0,0x0,8
tick,0x7ffdc994fb34,81084456,0,0x0,8
tick,0x7ffdc994fb34,81101819,0,0x0,8
tick,0x7ffdc994fb34,81115841,0,0x0,8
tick,0x7ffdc994fb34,81131214,0,0x0,8
tick,0x7ffdc994fb34,81146560,0,0x0,8
tick,0x7ffdc994fb34,81162319,0,0x0,8
tick,0x7ffdc994fb34,81177396,0,0x0,8
tick,0x7ffdc994fb34,81193151,0,0x0,8
tick,0x7ffdc994fb34,81209246,0,0x0,8
tick,0x7ffdc994fb34,81225091,0,0x0,8
tick,0x7ffdc994fb34,81241065,0,0x0,8
tick,0x7ffdc994fb34,81256417,0,0x0,8
tick,0x7ffdc994fb34,81272368,0,0x0,8
tick,0x7ffdc994fb34,81288335,0,0x0,8
tick,0x7ffdc994fb34,81304364,0,0x0,8
tick,0x7ffdc994fb34,81320264,0,0x0,8
tick,0x7ffdc994fb34,81335468,0,0x0,8
tick,0x7ffdc994fb34,81350949,0,0x0,8
tick,0x7ffdc994fb34,81366246,0,0x0,8
tick,0x7ffdc994fb34,81381303,0,0x0,8
tick,0x7ffdc994fb34,81397381,0,0x0,8
tick,0x7ffdc994fb34,81413415,0,0x0,8
tick,0x7ffdc994fb34,81428615,0,0x0,8
tick,0x7ffdc994fb34,81444190,0,0x0,8
tick,0x7ffdc994fb34,81460083,0,0x0,8
tick,0x7ffdc994fb34,81476028,0,0x0,8
tick,0x7ffdc994fb34,81491834,0,0x0,8
tick,0x7ffdc994fb34,81507100,0,0x0,8
tick,0x7ffdc994fb34,81523030,0,0x0,8
tick,0x7ffdc994fb34,81538902,0,0x0,8
tick,0x7ffdc994fb34,81554176,0,0x0,8
tick,0x7ffdc994fb34,81570035,0,0x0,8
tick,0x7ffdc994fb34,81585487,0,0x0,8
tick,0x7ffdc994fb34,81601158,0,0x0,8
tick,0x7ffdc994fb34,81616088,0,0x0,8
tick,0x7ffdc994fb34,81631359,0,0x0,8
tick,0x7ffdc994fb34,81646934,0,0x0,8
tick,0x7ffdc994fb34,81662738,0,0x0,8
tick,0x7ffdc994fb34,81678011,0,0x0,8
tick,0x7ffdc994fb34,81693935,0,0x0,8
tick,0x7ffdc994fb34,81710045,0,0x0,8
tick,0x7ffdc994fb34,81726303,0,0x0,8
tick,0x7ffdc994fb34,81741879,0,0x0,8
tick,0x7ffdc994fb34,81757853,0,0x0,8
tick,0x7ffdc994fb34,81774022,0,0x0,8
tick,0x7ffdc994fb34,81789116,0,0x0,8
tick,0x7ffdc994fb34,81804430,0,0x0,8
tick,0x7ffdc994fb34,81822822,0,0x0,8
tick,0x7ffdc994fb34,81836136,0,0x0,8
tick,0x7ffdc994fb34,81851132,0,0x0,8
tick,0x7ffdc994fb34,81866696,0,0x0,8
tick,0x7ffdc994fb34,81881700,0,0x0,8
tick,0x7ffdc994fb34,81897594,0,0x0,8
tick,0x7ffdc994fb34,81913227,0,0x0,8
tick,0x7ffdc994fb34,81928662,0,0x0,8
tick,0x7ffdc994fb34,81944349,0,0x0,8
tick,0x7ffdc994fb34,81959514,0,0x0,8
tick,0x7ffdc994fb34,81974767,0,0x0,8
tick,0x7ffdc994fb34,81990756,0,0x0,8
tick,0x7ffdc994fb34,82006459,0,0x0,8
tick,0x7ffdc994fb34,82021962,0,0x0,8
tick,0x7ffdc994fb34,82036967,0,0x0,8
tick,0x7ffdc994fb34,82052332,0,0x0,8
tick,0x7ffdc994fb34,82068085,0,0x0,8
tick,0x7ffdc994fb34,82083539,0,0x0,8
tick,0x7ffdc994fb34,82099772,0,0x0,8
tick,0x7ffdc994fb34,82115818,0,0x0,8
tick,0x7ffdc994fb34,82131150,0,0x0,8
tick,0x7ffdc994fb34,82146216,0,0x0,8
tick,0x7ffdc994fb34,82162282,0,0x0,8
tick,0x7ffdc994fb34,82177512,0,0x0,8
tick,0x7ffdc994fb34,82193181,0,0x0,8
tick,0x7ffdc994fb34,82208569,0,0x0,8
tick,0x7ffdc994fb34,82224224,0,0x0,8
tick,0x7ffdc994fb34,82240065,0,0x0,8
tick,0x7ffdc994fb34,82255834,0,0x0,8
tick,0x7ffdc994fb34,82271970,0,0x0,8
tick,0x7ffdc994fb34,82287148,0,0x0,8
tick,0x7ffdc994fb34,82302887,0,0x0,8
tick,0x7ffdc994fb34,82318392,0,0x0,8
tick,0x7ffdc994fb34,82333666,0,0x0,8
tick,0x7ffdc994fb34,82348824,0,0x0,8
tick,0x7ffdc994fb34,82364626,0,0x0,8
tick,0x7ffdc994fb34,82379955,0,0x0,8
tick,0x7ffdc994fb34,82395308,0,0x0,8
tick,0x7ffdc994fb34,82410682,0,0x0,8
tick,0x7ffdc994fb34,82426501,0,0x0,8
tick,0x7ffdc994fb34,82441815,0,0x0,8
tick,0x7ffdc994fb34,82457195,0,0x0,8
tick,0x7ffdc994fb34,82473186,0,0x0,8
tick,0x7ffdc994fb34,82488397,0,0x0,8
tick,0x7ffdc994fb34,82504054,0,0x0,8
tick,0x7ffdc994fb34,82519070,0,0x0,8
tick,0x7ffdc994fb34,82534695,0,0x0,8
tick,0x7ffdc994fb34,82549908,0,0x0,8
tick,0x7ffdc994fb34,82565050,0,0x0,8
tick,0x7ffdc994fb34,82580549,0,0x0,8
tick,0x7ffdc994fb34,82595942,0,0x0,8
tick,0x7ffdc994fb34,82611873,0,0x0,8
tick,0x7ffdc994fb34,82627879,0,0x0,8
tick,0x7ffdc994fb34,82643952,0,0x0,8
tick,0x7ffdc994fb34,82659791,0,0x0,8
tick,0x7ffdc994fb34,82675803,0,0x0,8
tick,0x7ffdc994fb34,82691872,0,0x0,8
tick,0x7ffdc994fb34,82708057,0,0x0,8
tick,0x7ffdc994fb34,82723950,0,0x0,8
tick,0x7ffdc994fb34,82739349,0,0x0,8
tick,0x7ffdc994fb34,82754694,0,0x0,8
tick,0x7ffdc994fb34,82769913,0,0x0,8
tick,0x7ffdc994fb34,82786221,0,0x0,8
tick,0x7ffdc994fb34,82802186,0,0x0,8
tick,0x7ffdc994fb34,82818512,0,0x0,8
tick,0x7ffdc994fb34,82834059,0,0x0,8
tick,0x7ffdc994fb34,82850308,0,0x0,8
tick,0x7ffdc994fb34,82866236,0,0x0,8
tick,0x7ffdc994fb34,82882152,0,0x0,8
tick,0x7ffdc994fb34,82897704,0,0x0,8
tick,0x7ffdc994fb34,82913358,0,0x0,8
tick,0x7ffdc994fb34,82929057,0,0x0,8
tick,0x7ffdc994fb34,82945041,0,0x0,8
tick,0x7ffdc994fb34,82960246,0,0x0,8
tick,0x7ffdc994fb34,82976047,0,0x0,8
tick,0x7ffdc994fb34,82997286,0,0x0,8
tick,0x7ffdc994fb34,83006086,0,0x0,8
tick,0x7ffdc994fb34,83022044,0,0x0,8
tick,0x7ffdc994fb34,83037311,0,0x0,8
tick,0x7ffdc994fb34,83052764,0,0x0,8
tick,0x7ffdc994fb34,83068114,0,0x0,8
tick,0x7ffdc994fb34,83083213,0,0x0,8
tick,0x7ffdc994fb34,83098925,0,0x0,8
tick,0x7ffdc994fb34,83114433,0,0x0,8
tick,0x7ffdc994fb34,83130191,0,0x0,8
tick,0x7ffdc994fb34,83145400,0,0x0,8
tick,0x7ffdc994fb34,83161153,0,0x0,8
tick,0x7ffdc994fb34,83176689,0,0x0,8
tick,0x7ffdc994fb34,83191952,0,0x0,8
tick,0x7ffdc994fb34,83207573,0,0x0,8
tick,0x7ffdc994fb34,83223645,0,0x0,8
tick,0x7ffdc994fb34,83239073,0,0x0,8
tick,0x7ffdc994fb34,83254506,0,0x0,8
tick,0x7ffdc994fb34,83270159,0,0x0,8
tick,0x7ffdc994fb34,83285284,0,0x0,8
tick,0x7ffdc994fb34,83301007,0,0x0,8
tick,0x7ffdc994fb34,83317299,0,0x0,8
tick,0x7ffdc994fb34,83332682,0,0x0,8
tick,0x7ffdc994fb34,83348277,0,0x0,8
tick,0x7ffdc994fb34,83363961,0,0x0,8
tick,0x7ffdc994fb34,83379478,0,0x0,8
tick,0x7ffdc994fb34,83394552,0,0x0,8
tick,0x7ffdc994fb34,83410349,0,0x0,8
tick,0x7ffdc994fb34,83425888,0,0x0,8
tick,0x7ffdc994fb34,83442147,0,0x0,8
tick,0x7ffdc994fb34,83457291,0,0x0,8
tick,0x7ffdc994fb34,83472831,0,0x0,8
tick,0x7ffdc994fb34,83488641,0,0x0,8
tick,0x7ffdc994fb34,83504174,0,0x0,8
tick,0x7ffdc994fb34,83520188,0,0x0,8
tick,0x7ffdc994fb34,83536024,0,0x0,8
tick,0x7ffdc994fb34,83551784,0,0x0,8
tick,0x7ffdc994fb34,83567828,0,0x0,8
tick,0x7ffdc994fb34,83583678,0,0x0,8
tick,0x7ffdc994fb34,83599052,0,0x0,8
tick,0x7ffdc994fb34,83614916,0,0x0,8
tick,0x7ffdc994fb34,83630190,0,0x0,8
tick,0x7ffdc994fb34,83646119,0,0x0,8
tick,0x7ffdc994fb34,83661326,0,0x0,8
tick,0x7ffdc994fb34,83676904,0,0x0,8
tick,0x7ffdc994fb34,83692676,0,0x0,8
tick,0x7ffdc994fb34,83708978,0,0x0,8
tick,0x7ffdc994fb34,83724575,0,0x0,8
tick,0x7ffdc994fb34,83740075,0,0x0,8
tick,0x7ffdc994fb34,83754914,0,0x0,8
tick,0x7ffdc994fb34,83770162,0,0x0,8
tick,0x7ffdc994fb34,83785372,0,0x0,8
tick,0x7ffdc994fb34,83800791,0,0x0,8
tick,0x7ffdc994fb34,83816215,0,0x0,8
tick,0x7ffdc994fb34,83831631,0,0x0,8
tick,0x7ffdc994fb34,83847183,0,0x0,8
tick,0x7ffdc994fb34,83863594,0,0x0,8
tick,0x7ffdc994fb34,83879865,0,0x0,8
tick,0x7ffdc994fb34,83894994,0,0x0,8
tick,0x7ffdc994fb34,83910915,0,0x0,8
tick,0x7ffdc994fb34,83926634,0,0x0,8
tick,0x7ffdc994fb34,83942140,0,0x0,8
tick,0x7ffdc994fb34,83958100,0,0x0,8
tick,0x7ffdc994fb34,83973316,0,0x0,8
tick,0x7ffdc994fb34,83989070,0,0x0,8
tick,0x7ffdc994fb34,84003829,0,0x0,8
tick,0x7ffdc994fb34,84018968,0,0x0,8
tick,0x7ffdc994fb34,84034149,0,0x0,8
tick,0x7ffdc994fb34,84050288,0,0x0,8
tick,0x7ffdc994fb34,84065647,0,0x0,8
tick,0x7ffdc994fb34,84081787,0,0x0,8
tick,0x7ffdc994fb34,84097028,0,0x0,8
tick,0x7ffdc994fb34,84112215,0,0x0,8
tick,0x7ffdc994fb34,84127594,0,0x0,8
tick,0x7ffdc994fb34,84143686,0,0x0,8
tick,0x7ffdc994fb34,84159632,0,0x0,8
tick,0x7ffdc994fb34,84175569,0,0x0,8
tick,0x7ffdc994fb34,84191476,0,0x0,8
tick,0x7ffdc994fb34,84206527,0,0x0,8
tick,0x7ffdc994fb34,84222886,0,0x0,8
tick,0x7ffdc994fb34,84238075,0,0x0,8
tick,0x7ffdc994fb34,84253697,0,0x0,8
tick,0x7ffdc994fb34,84269233,0,0x0,8
tick,0x7ffdc994fb34,84284409,0,0x0,8
tick,0x7ffdc994fb34,84299828,0,0x0,8
tick,0x7ffdc994fb34,84315888,0,0x0,8
tick,0x7ffdc994fb34,84331240,0,0x0,8
tick,0x7ffdc994fb34,84346765,0,0x0,8
tick,0x7ffdc994fb34,84362525,0,0x0,8
tick,0x7ffdc994fb34,84377653,0,0x0,8
tick,0x7ffdc994fb34,84393011,0,0x0,8
tick,0x7ffdc994fb34,84408342,0,0x0,8
tick,0x7ffdc994fb34,84423141,0,0x0,8
tick,0x7ffdc994fb34,84438911,0,0x0,8
tick,0x7ffdc994fb34,84454405,0,0x0,8
tick,0x7ffdc994fb34,84469758,0,0x0,8
tick,0x7ffdc994fb34,84485790,0,0x0,8
tick,0x7ffdc994fb34,84501579,0,0x0,8
tick,0x7ffdc994fb34,84516781,0,0x0,8
tick,0x7ffdc994fb34,84532044,0,0x0,8
tick,0x7ffdc994fb34,84547716,0,0x0,8
tick,0x7ffdc994fb34,84563530,0,0x0,8
tick,0x7ffdc994fb34,84579510,0,0x0,8
tick,0x7ffdc994fb34,84595665,0,0x0,8
tick,0x7ffdc994fb34,84611580,0,0x0,8
tick,0x7ffdc994fb34,84626849,0,0x0,8
tick,0x7ffdc994fb34,84642859,0,0x0,8
tick,0x7ffdc994fb34,84657526,0,0x0,8
tick,0x7ffdc994fb34,84673182,0,0x0,8
tick,0x7ffdc994fb34,84689503,0,0x0,8
tick,0x7ffdc994fb34,84705400,0,0x0,8
tick,0x7ffdc994fb34,84721622,0,0x0,8
tick,0x7ffdc994fb34,84737557,0,0x0,8
tick,0x7ffdc994fb34,84753544,0,0x0,8
tick,0x7ffdc994fb34,84768835,0,0x0,8
tick,0x7ffdc994fb34,84784549,0,0x0,8
tick,0x7ffdc994fb34,84799999,0,0x0,8
tick,0x7ffdc994fb34,84815784,0,0x0,8
tick,0x7ffdc994fb34,84831242,0,0x0,8
tick,0x7ffdc994fb34,84846889,0,0x0,8
tick,0x7ffdc994fb34,84862603,0,0x0,8
tick,0x7ffdc994fb34,84878218,0,0x0,8
tick,0x7ffdc994fb34,84893732,0,0x0,8
tick,0x7ffdc994fb34,84909300,0,0x0,8
tick,0x7ffdc994fb34,84924702,0,0x0,8
tick,0x7ffdc994fb34,84940977,0,0x0,8
tick,0x7ffdc994fb34,84957157,0,0x0,8
tick,0x7ffdc994fb34,84972845,0,0x0,8
tick,0x7ffdc994fb34,84988102,0,0x0,8
tick,0x7ffdc994fb34,85003815,0,0x0,8
tick,0x7ffdc994fb34,85019581,0,0x0,8
tick,0x7ffdc994fb34,85034899,0,0x0,8
tick,0x7ffdc994fb34,85050441,0,0x0,8
tick,0x7ffdc994fb34,85065906,0,0x0,8
tick,0x7ffdc994fb34,85081737,0,0x0,8
tick,0x7ffdc994fb34,85097835,0,0x0,8
tick,0x7ffdc994fb34,85113257,0,0x0,8
tick,0x7ffdc994fb34,85128924,0,0x0,8
tick,0x7ffdc994fb34,85144548,0,0x0,8
tick,0x7ffdc994fb34,85159781,0,0x0,8
tick,0x7ffdc994fb34,85175165,0,0x0,8
tick,0x7ffdc994fb34,85190939,0,0x0,8
tick,0x7ffdc994fb34,85205973,0,0x0,8
tick,0x7ffdc994fb34,85222036,0,0x0,8
tick,0x7ffdc994fb34,85237638,0,0x0,8
tick,0x7ffdc994fb34,85253042,0,0x0,8
tick,0x7ffdc994fb34,85268327,0,0x0,8
tick,0x7ffdc994fb34,85283949,0,0x0,8
tick,0x7ffdc994fb34,85299415,0,0x0,8
tick,0x7ffdc994fb34,85314844,0,0x0,8
tick,0x7ffdc994fb34,85330573,0,0x0,8
tick,0x7ffdc994fb34,85346102,0,0x0,8
tick,0x7ffdc994fb34,85361390,0,0x0,8
tick,0x7ffdc994fb34,85376841,0,0x0,8
tick,0x7ffdc994fb34,85392555,0,0x0,8
tick,0x7ffdc994fb34,85407881,0,0x0,8
tick,0x7ffdc994fb34,85423156,0,0x0,8
tick,0x7ffdc994fb34,85438733,0,0x0,8
tick,0x7ffdc994fb34,85454496,0,0x0,8
tick,0x7ffdc994fb34,85470633,0,0x0,8
tick,0x7ffdc994fb34,85486376,0,0x0,8
tick,0x7ffdc994fb34,85501864,0,0x0,8
tick,0x7ffdc994fb34,85517287,0,0x0,8
tick,0x7ffdc994fb34,85532956,0,0x0,8
tick,0x7ffdc994fb34,85548430,0,0x0,8
tick,0x7ffdc994fb34,85563662,0,0x0,8
tick,0x7ffdc994fb34,85579555,0,0x0,8
tick,0x7ffdc994fb34,85595090,0,0x0,8
tick,0x7ffdc994fb34,85610874,0,0x0,8
tick,0x7ffdc994fb34,85626672,0,0x0,8
tick,0x7ffdc994fb34,85641803,0,0x0,8
tick,0x7ffdc994fb34,85657808,0,0x0,8
tick,0x7ffdc994fb34,85673167,0,0x0,8
tick,0x7ffdc994fb34,85688714,0,0x0,8
tick,0x7ffdc994fb34,85704242,0,0x0,8
tick,0x7ffdc994fb34,85719509,0,0x0,8
tick,0x7ffdc994fb34,85734859,0,0x0,8
tick,0x7ffdc994fb34,85750396,0,0x0,8
tick,0x7ffdc994fb34,85766208,0,0x0,8
tick,0x7ffdc994fb34,85782221,0,0x0,8
tick,0x7ffdc994fb34,85798439,0,0x0,8
tick,0x7ffdc994fb34,85813414,0,0x0,8
tick,0x7ffdc994fb34,85828769,0,0x0,8
tick,0x7ffdc994fb34,85844382,0,0x0,8
tick,0x7ffdc994fb34,85860089,0,0x0,8
tick,0x7ffdc994fb34,85875625,0,0x0,8
tick,0x7ffdc994fb34,85890469,0,0x0,8
tick,0x7ffdc994fb34,85906191,0,0x0,8
tick,0x7ffdc994fb34,85921293,0,0x0,8
tick,0x7ffdc994fb34,85937182,0,0x0,8
tick,0x7ffdc994fb34,85952856,0,0x0,8
tick,0x7ffdc994fb34,85968399,0,0x0,8
tick,0x7ffdc994fb34,85983689,0,0x0,8
tick,0x7ffdc994fb34,85999163,0,0x0,8
tick,0x7ffdc994fb34,86014420,0,0x0,8
tick,0x7ffdc994fb34,86030365,0,0x0,8
tick,0x7ffdc994fb34,86045968,0,0x0,8
tick,0x7ffdc994fb34,86061807,0,0x0,8
tick,0x7ffdc994fb34,86077269,0,0x0,8
tick,0x7ffdc994fb34,86093346,0,0x0,8
tick,0x7ffdc994fb34,86108757,0,0x0,8
tick,0x7ffdc994fb34,86124303,0,0x0,8
tick,0x7ffdc994fb34,86139593,0,0x0,8
tick,0x7ffdc994fb34,86154896,0,0x0,8
tick,0x7ffdc994fb34,86170670,0,0x0,8
tick,0x7ffdc994fb34,86186438,0,0x0,8
tick,0x7ffdc994fb34,86202298,0,0x0,8
tick,0x7ffdc994fb34,86217486,0,0x0,8
tick,0x7ffdc994fb34,86233118,0,0x0,8
tick,0x7ffdc994fb34,86248778,0,0x0,8
tick,0x7ffdc994fb34,86264236,0,0x0,8
tick,0x7ffdc994fb34,86279647,0,0x0,8
tick,0x7ffdc994fb34,86295024,0,0x0,8
tick,0x7ffdc994fb34,86310482,0,0x0,8
tick,0x7ffdc994fb34,86326491,0,0x0,8
tick,0x7ffdc994fb34,86342106,0,0x0,8
tick,0x7ffdc994fb34,86357462,0,0x0,8
tick,0x7ffdc994fb34,86373512,0,0x0,8
tick,0x7ffdc994fb34,86388937,0,0x0,8
tick,0x7ffdc994fb34,86404183,0,0x0,8
tick,0x7ffdc994fb34,86419853,0,0x0,8
tick,0x7ffdc994fb34,86435305,0,0x0,8
tick,0x7ffdc994fb34,86450886,0,0x0,8
tick,0x7ffdc994fb34,86466694,0,0x0,8
tick,0x7ffdc994fb34,86483043,0,0x0,8
tick,0x7ffdc994fb34,86498048,0,0x0,8
tick,0x7ffdc994fb34,86514300,0,0x0,8
tick,0x7ffdc994fb34,86529807,0,0x0,8
tick,0x7ffdc994fb34,86545092,0,0x0,8
tick,0x7ffdc994fb34,86561411,0,0x0,8
tick,0x7ffdc994fb34,86576768,0,0x0,8
tick,0x7ffdc994fb34,86592501,0,0x0,8
tick,0x7ffdc994fb34,86608320,0,0x0,8
tick,0x7ffdc994fb34,86624208,0,0x0,8
tick,0x7ffdc994fb34,86639674,0,0x0,8
tick,0x7ffdc994fb34,86654971,0,0x0,8
tick,0x7ffdc994fb34,86670201,0,0x0,8
tick,0x7ffdc994fb34,86685943,0,0x0,8
tick,0x7ffdc994fb34,86702033,0,0x0,8
tick,0x7ffdc994fb34,86717018,0,0x0,8
tick,0x7ffdc994fb34,86732803,0,0x0,8
tick,0x7ffdc994fb34,86748672,0,0x0,8
tick,0x7ffdc994fb34,86764631,0,0x0,8
tick,0x7ffdc994fb34,86780405,0,0x0,8
tick,0x7ffdc994fb34,86795672,0,0x0,8
tick,0x7ffdc994fb34,86811665,0,0x0,8
tick,0x7ffdc994fb34,86826917,0,0x0,8
tick,0x7ffdc994fb34,86842421,0,0x0,8
tick,0x7ffdc994fb34,86857871,0,0x0,8
tick,0x7ffdc994fb34,86873340,0,0x0,8
tick,0x7ffdc994fb34,86889401,0,0x0,8
tick,0x7ffdc994fb34,86904702,0,0x0,8
tick,0x7ffdc994fb34,86920357,0,0x0,8
tick,0x7ffdc994fb34,86935524,0,0x0,8
tick,0x7ffdc994fb34,86951587,0,0x0,8
tick,0x7ffdc994fb34,86966643,0,0x0,8
tick,0x7ffdc994fb34,86982255,0,0x0,8
tick,0x7ffdc994fb34,86997633,0,0x0,8
tick,0x7ffdc994fb34,87013120,0,0x0,8
tick,0x7ffdc994fb34,87028986,0,0x0,8
tick,0x7ffdc994fb34,87044910,0,0x0,8
tick,0x7ffdc994fb34,87060206,0,0x0,8
tick,0x7ffdc994fb34,87076229,0,0x0,8
tick,0x7ffdc994fb34,87092205,0,0x0,8
tick,0x7ffdc994fb34,87108169,0,0x0,8
tick,0x7ffdc994fb34,87123421,0,0x0,8
tick,0x7ffdc994fb34,87138798,0,0x0,8
tick,0x7ffdc994fb34,87154367,0,0x0,8
tick,0x7ffdc994fb34,87169637,0,0x0,8
tick,0x7ffdc994fb34,87185185,0,0x0,8
tick,0x7ffdc994fb34,87200634,0,0x0,8
tick,0x7ffdc994fb34,87216040,0,0x0,8
tick,0x7ffdc994fb34,87232315,0,0x0,8
tick,0x7ffdc994fb34,87247951,0,0x0,8
tick,0x7ffdc994fb34,87263105,0,0x0,8
tick,0x7ffdc994fb34,87278261,0,0x0,8
tick,0x7ffdc994fb34,87293844,0,0x0,8
tick,0x7ffdc994fb34,87309306,0,0x0,8
tick,0x7ffdc994fb34,87324851,0,0x0,8
tick,0x7ffdc994fb34,87339779,0,0x0,8
tick,0x7ffdc994fb34,87355887,0,0x0,8
tick,0x7ffdc994fb34,87371488,0,0x0,8
tick,0x7ffdc994fb34,87387250,0,0x0,8
tick,0x7ffdc994fb34,87403537,0,0x0,8
tick,0x7ffdc994fb34,87419274,0,0x0,8
tick,0x7ffdc994fb34,87434728,0,0x0,8
tick,0x7ffdc994fb34,87450174,0,0x0,8
tick,0x7ffdc994fb34,87466161,0,0x0,8
tick,0x7ffdc994fb34,87481990,0,0x0,8
tick,0x7ffdc994fb34,87497143,0,0x0,8
tick,0x7ffdc994fb34,87512360,0,0x0,8
tick,0x7ffdc994fb34,87527791,0,0x0,8
tick,0x7ffdc994fb34,87543456,0,0x0,8
tick,0x7ffdc994fb34,87559301,0,0x0,8
tick,0x7ffdc994fb34,87575104,0,0x0,8
tick,0x7ffdc994fb34,87590824,0,0x0,8
tick,0x7ffdc994fb34,87606160,0,0x0,8
tick,0x7ffdc994fb34,87621338,0,0x0,8
tick,0x7ffdc994fb34,87636231,0,0x0,8
tick,0x7ffdc994fb34,87652333,0,0x0,8
tick,0x7ffdc994fb34,87668100,0,0x0,8
tick,0x7ffdc994fb34,87684160,0,0x0,8
tick,0x7ffdc994fb34,87699837,0,0x0,8
tick,0x7ffdc994fb34,87715444,0,0x0,8
tick,0x7ffdc994fb34,87730800,0,0x0,8
tick,0x7ffdc994fb34,87746606,0,0x0,8
tick,0x7ffdc994fb34,87762076,0,0x0,8
tick,0x7ffdc994fb34,87777606,0,0x0,8
tick,0x7ffdc994fb34,87793937,0,0x0,8
tick,0x7ffdc994fb34,87809394,0,0x0,8
tick,0x7ffdc994fb34,87825550,0,0x0,8
tick,0x7ffdc994fb34,87841119,0,0x0,8
tick,0x7ffdc994fb34,87856552,0,0x0,8
tick,0x7ffdc994fb34,87872385,0,0x0,8
tick,0x7ffdc994fb34,87887879,0,0x0,8
tick,0x7ffdc994fb34,87904333,0,0x0,8
tick,0x7ffdc994fb34,87919572,0,0x0,8
tick,0x7ffdc994fb34,87934887,0,0x0,8
tick,0x7ffdc994fb34,87949977,0,0x0,8
tick,0x7ffdc994fb34,87966393,0,0x0,8
tick,0x7ffdc994fb34,87981851,0,0x0,8
tick,0x7ffdc994fb34,87996868,0,0x0,8
tick,0x7ffdc994fb34,88012758,0,0x0,8
tick,0x7ffdc994fb34,88028415,0,0x0,8
tick,0x7ffdc994fb34,88044533,0,0x0,8
tick,0x7ffdc994fb34,88060459,0,0x0,8
tick,0x7ffdc994fb34,88075761,0,0x0,8
tick,0x7ffdc994fb34,88091147,0,0x0,8
tick,0x7ffdc994fb34,88105844,0,0x0,8
tick,0x7ffdc994fb34,88121988,0,0x0,8
tick,0x7ffdc994fb34,88137985,0,0x0,8
tick,0x7ffdc994fb34,88153281,0,0x0,8
tick,0x7ffdc994fb34,88168957,0,0x0,8
tick,0x7ffdc994fb34,88185038,0,0x0,8
tick,0x7ffdc994fb34,88200714,0,0x0,8
tick,0x7ffdc994fb34,88215797,0,0x0,8
tick,0x7ffdc994fb34,88231120,0,0x0,8
tick,0x7ffdc994fb34,88246575,0,0x0,8
tick,0x7ffdc994fb34,88261965,0,0x0,8
tick,0x7ffdc994fb34,88277788,0,0x0,8
tick,0x7ffdc994fb34,88292867,0,0x0,8
tick,0x7ffdc994fb34,88308474,0,0x0,8
tick,0x7ffdc994fb34,88324288,0,0x0,8
tick,0x7ffdc994fb34,88339593,0,0x0,8
tick,0x7ffdc994fb34,88354799,0,0x0,8
tick,0x7ffdc994fb34,88370277,0,0x0,8
tick,0x7ffdc994fb34,88386039,0,0x0,8
tick,0x7ffdc994fb34,88402377,0,0x0,8
tick,0x7ffdc994fb34,88418098,0,0x0,8
tick,0x7ffdc994fb34,88433773,0,0x0,8
tick,0x7ffdc994fb34,88449955,0,0x0,8
tick,0x7ffdc994fb34,88465088,0,0x0,8
tick,0x7ffdc994fb34,88481005,0,0x0,8
tick,0x7ffdc994fb34,88496978,0,0x0,8
tick,0x7ffdc994fb34,88512588,0,0x0,8
tick,0x7ffdc994fb34,88528022,0,0x0,8
tick,0x7ffdc994fb34,88543981,0,0x0,8
tick,0x7ffdc994fb34,88559415,0,0x0,8
tick,0x7ffdc994fb34,88574186,0,0x0,8
tick,0x7ffdc994fb34,88590040,0,0x0,8
tick,0x7ffdc994fb34,88605606,0,0x0,8
tick,0x7ffdc994fb34,88621107,0,0x0,8
tick,0x7ffdc994fb34,88636664,0,0x0,8
tick,0x7ffdc994fb34,88652196,0,0x0,8
tick,0x7ffdc994fb34,88667227,0,0x0,8
tick,0x7ffdc994fb34,88682976,0,0x0,8
tick,0x7ffdc994fb34,88697528,0,0x0,8
tick,0x7ffdc994fb34,88713125,0,0x0,8
tick,0x7ffdc994fb34,88728671,0,0x0,8
tick,0x7ffdc994fb34,88743457,0,0x0,8
tick,0x7ffdc994fb34,88759203,0,0x0,8
tick,0x7ffdc994fb34,88774752,0,0x0,8
tick,0x7ffdc994fb34,88790459,0,0x0,8
tick,0x7ffdc994fb34,88806191,0,0x0,8
tick,0x7ffdc994fb34,88822172,0,0x0,8
tick,0x7ffdc994fb34,88837690,0,0x0,8
tick,0x7ffdc994fb34,88852888,0,0x0,8
tick,0x7ffdc994fb34,88868840,0,0x0,8
tick,0x7ffdc994fb34,88884454,0,0x0,8
tick,0x7ffdc994fb34,88900794,0,0x0,8
tick,0x7ffdc994fb34,88916327,0,0x0,8
tick,0x7ffdc994fb34,88932153,0,0x0,8
tick,0x7ffdc994fb34,88948178,0,0x0,8
tick,0x7ffdc994fb34,88963135,0,0x0,8
tick,0x7ffdc994fb34,88979052,0,0x0,8
tick,0x7ffdc994fb34,88994325,0,0x0,8
tick,0x7ffdc994fb34,89009741,0,0x0,8
tick,0x7ffdc994fb34,89025428,0,0x0,8
tick,0x7ffdc994fb34,89040751,0,0x0,8
tick,0x7ffdc994fb34,89056278,0,0x0,8
tick,0x7ffdc994fb34,89072073,0,0x0,8
tick,0x7ffdc994fb34,89087339,0,0x0,8
tick,0x7ffdc994fb34,89103164,0,0x0,8
tick,0x7ffdc994fb34,89118318,0,0x0,8
tick,0x7ffdc994fb34,89133766,0,0x0,8
tick,0x7ffdc994fb34,89149683,0,0x0,8
tick,0x7ffdc994fb34,89165869,0,0x0,8
tick,0x7ffdc994fb34,89181794,0,0x0,8
tick,0x7ffdc994fb34,89197591,0,0x0,8
tick,0x7ffdc994fb34,89213622,0,0x0,8
tick,0x7ffdc994fb34,89229384,0,0x0,8
tick,0x7ffdc994fb34,89244999,0,0x0,8
tick,0x7ffdc994fb34,89260698,0,0x0,8
tick,0x7ffdc994fb34,89275861,0,0x0,8
tick,0x7ffdc994fb34,89291890,0,0x0,8
tick,0x7ffdc994fb34,89308068,0,0x0,8
tick,0x7ffdc994fb34,89323297,0,0x0,8
tick,0x7ffdc994fb34,89338548,0,0x0,8
tick,0x7ffdc994fb34,89354335,0,0x0,8
tick,0x7ffdc994fb34,89369551,0,0x0,8
tick,0x7ffdc994fb34,89385242,0,0x0,8
tick,0x7ffdc994fb34,89401123,0,0x0,8
tick,0x7ffdc994fb34,89416107,0,0x0,8
tick,0x7ffdc994fb34,89431533,0,0x0,8
tick,0x7ffdc994fb34,89447043,0,0x0,8
tick,0x7ffdc994fb34,89462818,0,0x0,8
tick,0x7ffdc994fb34,89478543,0,0x0,8
tick,0x7ffdc994fb34,89493826,0,0x0,8
tick,0x7ffdc994fb34,89509193,0,0x0,8
tick,0x7ffdc994fb34,89524477,0,0x0,8
tick,0x7ffdc994fb34,89540509,0,0x0,8
tick,0x7ffdc994fb34,89556373,0,0x0,8
tick,0x7ffdc994fb34,89571942,0,0x0,8
tick,0x7ffdc994fb34,89587993,0,0x0,8
tick,0x7ffdc994fb34,89603283,0,0x0,8
tick,0x7ffdc994fb34,89618840,0,0x0,8
tick,0x7ffdc994fb34,89633849,0,0x0,8
tick,0x7ffdc994fb34,89649714,0,0x0,8
tick,0x7ffdc994fb34,89665560,0,0x0,8
tick,0x7ffdc994fb34,89681265,0,0x0,8
tick,0x7ffdc994fb34,89696883,0,0x0,8
tick,0x7ffdc994fb34,89712516,0,0x0,8
tick,0x7ffdc994fb34,89728207,0,0x0,8
tick,0x7ffdc994fb34,89743318,0,0x0,8
tick,0x7ffdc994fb34,89759066,0,0x0,8
tick,0x7ffdc994fb34,89775161,0,0x0,8
tick,0x7ffdc994fb34,89790400,0,0x0,8
tick,0x7ffdc994fb34,89806016,0,0x0,8
tick,0x7ffdc994fb34,89821211,0,0x0,8
tick,0x7ffdc994fb34,89836887,0,0x0,8
tick,0x7ffdc994fb34,89852384,0,0x0,8
tick,0x7ffdc994fb34,89867835,0,0x0,8
tick,0x7ffdc994fb34,89883425,0,0x0,8
tick,0x7ffdc994fb34,89898749,0,0x0,8
tick,0x7ffdc994fb34,89914432,0,0x0,8
tick,0x7ffdc994fb34,89929851,0,0x0,8
tick,0x7ffdc994fb34,89945780,0,0x0,8
tick,0x7ffdc994fb34,89961478,0,0x0,8
tick,0x7ffdc994fb34,89976667,0,0x0,8
tick,0x7ffdc994fb34,89991884,0,0x0,8
tick,0x7ffdc994fb34,90007817,0,0x0,8
tick,0x7ffdc994fb34,90023540,0,0x0,8
tick,0x7ffdc994fb34,90039457,0,0x0,8
tick,0x7ffdc994fb34,90055535,0,0x0,8
tick,0x7ffdc994fb34,90071432,0,0x0,8
tick,0x7ffdc994fb34,90087541,0,0x0,8
tick,0x7ffdc994fb34,90103435,0,0x0,8
tick,0x7ffdc994fb34,90118748,0,0x0,8
tick,0x7ffdc994fb34,90133962,0,0x0,8
tick,0x7ffdc994fb34,90149323,0,0x0,8
tick,0x7ffdc994fb34,90164433,0,0x0,8
tick,0x7ffdc994fb34,90179529,0,0x0,8
tick,0x7ffdc994fb34,90194827,0,0x0,8
tick,0x7ffdc994fb34,90210672,0,0x0,8
tick,0x7ffdc994fb34,90226804,0,0x0,8
tick,0x7ffdc994fb34,90242150,0,0x0,8
tick,0x7ffdc994fb34,90257855,0,0x0,8
tick,0x7ffdc994fb34,90273461,0,0x0,8
tick,0x7ffdc994fb34,90288800,0,0x0,8
tick,0x7ffdc994fb34,90304016,0,0x0,8
tick,0x7ffdc994fb34,90319608,0,0x0,8
tick,0x7ffdc994fb34,90334931,0,0x0,8
tick,0x7ffdc994fb34,90350246,0,0x0,8
tick,0x7ffdc994fb34,90365557,0,0x0,8
tick,0x7ffdc994fb34,90381124,0,0x0,8
tick,0x7ffdc994fb34,90395997,0,0x0,8
tick,0x7ffdc994fb34,90410925,0,0x0,8
tick,0x7ffdc994fb34,90426975,0,0x0,8
tick,0x7ffdc994fb34,90442312,0,0x0,8
tick,0x7ffdc994fb34,90457267,0,0x0,8
tick,0x7ffdc994fb34,90472796,0,0x0,8
tick,0x7ffdc994fb34,90488423,0,0x0,8
tick,0x7ffdc994fb34,90504491,0,0x0,8
tick,0x7ffdc994fb34,90520201,0,0x0,8
tick,0x7ffdc994fb34,90536040,0,0x0,8
tick,0x7ffdc994fb34,90551413,0,0x0,8
tick,0x7ffdc994fb34,90566838,0,0x0,8
tick,0x7ffdc994fb34,90581550,0,0x0,8
tick,0x7ffdc994fb34,90596581,0,0x0,8
tick,0x7ffdc994fb34,90612570,0,0x0,8
tick,0x7ffdc994fb34,90628584,0,0x0,8
tick,0x7ffdc994fb34,90643820,0,0x0,8
tick,0x7ffdc994fb34,90659666,0,0x0,8
tick,0x7ffdc994fb34,90675553,0,0x0,8
tick,0x7ffdc994fb34,90691065,0,0x0,8
tick,0x7ffdc994fb34,90706795,0,0x0,8
tick,0x7ffdc994fb34,90722130,0,0x0,8
tick,0x7ffdc994fb34,90737599,0,0x0,8
tick,0x7ffdc994fb34,90753197,0,0x0,8
tick,0x7ffdc994fb34,90768319,0,0x0,8
tick,0x7ffdc994fb34,90783629,0,0x0,8
tick,0x7ffdc994fb34,90799196,0,0x0,8
tick,0x7ffdc994fb34,90814818,0,0x0,8
tick,0x7ffdc994fb34,90831020,0,0x0,8
tick,0x7ffdc994fb34,90846643,0,0x0,8
tick,0x7ffdc994fb34,90862064,0,0x0,8
tick,0x7ffdc994fb34,90877491,0,0x0,8
tick,0x7ffdc994fb34,90893726,0,0x0,8
tick,0x7ffdc994fb34,90908710,0,0x0,8
tick,0x7ffdc994fb34,90924742,0,0x0,8
tick,0x7ffdc994fb34,90940038,0,0x0,8
tick,0x7ffdc994fb34,90955343,0,0x0,8
tick,0x7ffdc994fb34,90970817,0,0x0,8
tick,0x7ffdc994fb34,90986958,0,0x0,8
tick,0x7ffdc994fb34,91002866,0,0x0,8
tick,0x7ffdc994fb34,91018377,0,0x0,8
tick,0x7ffdc994fb34,91033782,0,0x0,8
tick,0x7ffdc994fb34,91049713,0,0x0,8
tick,0x7ffdc994fb34,91065401,0,0x0,8
tick,0x7ffdc994fb34,91081028,0,0x0,8
tick,0x7ffdc994fb34,91096664,0,0x0,8
tick,0x7ffdc994fb34,91112087,0,0x0,8
tick,0x7ffdc994fb34,91127688,0,0x0,8
tick,0x7ffdc994fb34,91143184,0,0x0,8
tick,0x7ffdc994fb34,91158409,0,0x0,8
tick,0x7ffdc994fb34,91174671,0,0x0,8
tick,0x7ffdc994fb34,91190245,0,0x0,8
tick,0x7ffdc994fb34,91206332,0,0x0,8
tick,0x7ffdc994fb34,91221520,0,0x0,8
tick,0x7ffdc994fb34,91236809,0,0x0,8
tick,0x7ffdc994fb34,91252729,0,0x0,8
tick,0x7ffdc994fb34,91268271,0,0x0,8
tick,0x7ffdc994fb34,91283179,0,0x0,8
tick,0x7ffdc994fb34,91298700,0,0x0,8
tick,0x7ffdc994fb34,91314114,0,0x0,8
tick,0x7ffdc994fb34,91329617,0,0x0,8
tick,0x7ffdc994fb34,91345030,0,0x0,8
tick,0x7ffdc994fb34,91360130,0,0x0,8
tick,0x7ffdc994fb34,91375921,0,0x0,8
tick,0x7ffdc994fb34,91391505,0,0x0,8
tick,0x7ffdc994fb34,91407008,0,0x0,8
tick,0x7ffdc994fb34,91422721,0,0x0,8
tick,0x7ffdc994fb34,91438463,0,0x0,8
tick,0x7ffdc994fb34,91454045,0,0x0,8
tick,0x7ffdc994fb34,91469628,0,0x0,8
tick,0x7ffdc994fb34,91484895,0,0x0,8
tick,0x7ffdc994fb34,91500634,0,0x0,8
tick,0x7ffdc994fb34,91515585,0,0x0,8
tick,0x7ffdc994fb34,91531486,0,0x0,8
tick,0x7ffdc994fb34,91547492,0,0x0,8
tick,0x7ffdc994fb34,91562646,0,0x0,8
tick,0x7ffdc994fb34,91578354,0,0x0,8
tick,0x7ffdc994fb34,91593972,0,0x0,8
tick,0x7ffdc994fb34,91609593,0,0x0,8
tick,0x7ffdc994fb34,91624837,0,0x0,8
tick,0x7ffdc994fb34,91640518,0,0x0,8
tick,0x7ffdc994fb34,91656107,0,0x0,8
tick,0x7ffdc994fb34,91671728,0,0x0,8
tick,0x7ffdc994fb34,91687195,0,0x0,8
tick,0x7ffdc994fb34,91702627,0,0x0,8
tick,0x7ffdc994fb34,91718831,0,0x0,8
tick,0x7ffdc994fb34,91734405,0,0x0,8
tick,0x7ffdc994fb34,91749949,0,0x0,8
tick,0x7ffdc994fb34,91765171,0,0x0,8
tick,0x7ffdc994fb34,91780657,0,0x0,8
tick,0x7ffdc994fb34,91796904,0,0x0,8
tick,0x7ffdc994fb34,91812137,0,0x0,8
tick,0x7ffdc994fb34,91828328,0,0x0,8
tick,0x7ffdc994fb34,91843287,0,0x0,8
tick,0x7ffdc994fb34,91858605,0,0x0,8
tick,0x7ffdc994fb34,91874692,0,0x0,8
tick,0x7ffdc994fb34,91890073,0,0x0,8
tick,0x7ffdc994fb34,91905235,0,0x0,8
tick,0x7ffdc994fb34,91921048,0,0x0,8
tick,0x7ffdc994fb34,91936466,0,0x0,8
tick,0x7ffdc994fb34,91951847,0,0x0,8
tick,0x7ffdc994fb34,91966802,0,0x0,8
tick,0x7ffdc994fb34,91982062,0,0x0,8
tick,0x7ffdc994fb34,91997730,0,0x0,8
tick,0x7ffdc994fb34,92013375,0,0x0,8
tick,0x7ffdc994fb34,92028910,0,0x0,8
tick,0x7ffdc994fb34,92045143,0,0x0,8
tick,0x7ffdc994fb34,92060252,0,0x0,8
tick,0x7ffdc994fb34,92075549,0,0x0,8
tick,0x7ffdc994fb34,92090950,0,0x0,8
tick,0x7ffdc994fb34,92106340,0,0x0,8
tick,0x7ffdc994fb34,92121893,0,0x0,8
tick,0x7ffdc994fb34,92138122,0,0x0,8
tick,0x7ffdc994fb34,92153544,0,0x0,8
tick,0x7ffdc994fb34,92169391,0,0x0,8
tick,0x7ffdc994fb34,92184590,0,0x0,8
tick,0x7ffdc994fb34,92199637,0,0x0,8
tick,0x7ffdc994fb34,92215638,0,0x0,8
tick,0x7ffdc994fb34,92231408,0,0x0,8
tick,0x7ffdc994fb34,92246765,0,0x0,8
tick,0x7ffdc994fb34,92262191,0,0x0,8
tick,0x7ffdc994fb34,92278003,0,0x0,8
tick,0x7ffdc994fb34,92293471,0,0x0,8
tick,0x7ffdc994fb34,92309148,0,0x0,8
tick,0x7ffdc994fb34,92324486,0,0x0,8
tick,0x7ffdc994fb34,92339768,0,0x0,8
tick,0x7ffdc994fb34,92355389,0,0x0,8
tick,0x7ffdc994fb34,92370994,0,0x0,8
tick,0x7ffdc994fb34,92386289,0,0x0,8
tick,0x7ffdc994fb34,92401771,0,0x0,8
tick,0x7ffdc994fb34,92417513,0,0x0,8
tick,0x7ffdc994fb34,92433048,0,0x0,8
tick,0x7ffdc994fb34,92448675,0,0x0,8
tick,0x7ffdc994fb34,92464112,0,0x0,8
tick,0x7ffdc994fb34,92480173,0,0x0,8
tick,0x7ffdc994fb34,92496071,0,0x0,8
tick,0x7ffdc994fb34,92512062,0,0x0,8
tick,0x7ffdc994fb34,92526935,0,0x0,8
tick,0x7ffdc994fb34,92542115,0,0x0,8
tick,0x7ffdc994fb34,92557926,0,0x0,8
tick,0x7ffdc994fb34,92572925,0,0x0,8
tick,0x7ffdc994fb34,92588536,0,0x0,8
tick,0x7ffdc994fb34,92603932,0,0x0,8
tick,0x7ffdc994fb34,92619587,0,0x0,8
tick,0x7ffdc994fb34,92635232,0,0x0,8
tick,0x7ffdc994fb34,92650690,0,0x0,8
tick,0x7ffdc994fb34,92665933,0,0x0,8
tick,0x7ffdc994fb34,92682302,0,0x0,8
tick,0x7ffdc994fb34,92698363,0,0x0,8
tick,0x7ffdc994fb34,92713374,0,0x0,8
tick,0x7ffdc994fb34,92729031,0,0x0,8
tick,0x7ffdc994fb34,92744509,0,0x0,8
tick,0x7ffdc994fb34,92760292,0,0x0,8
tick,0x7ffdc994fb34,92775634,0,0x0,8
tick,0x7ffdc994fb34,92791165,0,0x0,8
tick,0x7ffdc994fb34,92806481,0,0x0,8
tick,0x7ffdc994fb34,92822172,0,0x0,8
tick,0x7ffdc994fb34,92837891,0,0x0,8
tick,0x7ffdc994fb34,92853346,0,0x0,8
tick,0x7ffdc994fb34,92868894,0,0x0,8
tick,0x7ffdc994fb34,92884254,0,0x0,8
tick,0x7ffdc994fb34,92899801,0,0x0,8
tick,0x7ffdc994fb34,92915780,0,0x0,8
tick,0x7ffdc994fb34,92931135,0,0x0,8
tick,0x7ffdc994fb34,92946677,0,0x0,8
tick,0x7ffdc994fb34,92962487,0,0x0,8
tick,0x7ffdc994fb34,92978057,0,0x0,8
tick,0x7ffdc994fb34,92993321,0,0x0,8
tick,0x7ffdc994fb34,93008847,0,0x0,8
tick,0x7ffdc994fb34,93023921,0,0x0,8
tick,0x7ffdc994fb34,93039708,0,0x0,8
tick,0x7ffdc994fb34,93055063,0,0x0,8
tick,0x7ffdc994fb34,93070416,0,0x0,8
tick,0x7ffdc994fb34,93085802,0,0x0,8
tick,0x7ffdc994fb34,93101303,0,0x0,8
tick,0x7ffdc994fb34,93117227,0,0x0,8
tick,0x7ffdc994fb34,93132462,0,0x0,8
tick,0x7ffdc994fb34,93148014,0,0x0,8
tick,0x7ffdc994fb34,93164082,0,0x0,8
tick,0x7ffdc994fb34,93180343,0,0x0,8
tick,0x7ffdc994fb34,93195616,0,0x0,8
tick,0x7ffdc994fb34,93211143,0,0x0,8
tick,0x7ffdc994fb34,93226431,0,0x0,8
tick,0x7ffdc994fb34,93242264,0,0x0,8
tick,0x7ffdc994fb34,93257637,0,0x0,8
tick,0x7ffdc994fb34,93273412,0,0x0,8
tick,0x7ffdc994fb34,93289082,0,0x0,8
tick,0x7ffdc994fb34,93305060,0,0x0,8
tick,0x7ffdc994fb34,93321110,0,0x0,8
tick,0x7ffdc994fb34,93336758,0,0x0,8
tick,0x7ffdc994fb34,93352694,0,0x0,8
tick,0x7ffdc994fb34,93367899,0,0x0,8
tick,0x7ffdc994fb34,93383951,0,0x0,8
tick,0x7ffdc994fb34,93399137,0,0x0,8
tick,0x7ffdc994fb34,93414194,0,0x0,8
tick,0x7ffdc994fb34,93429711,0,0x0,8
tick,0x7ffdc994fb34,93445046,0,0x0,8
tick,0x7ffdc994fb34,93460418,0,0x0,8
tick,0x7ffdc994fb34,93476368,0,0x0,8
tick,0x7ffdc994fb34,93491615,0,0x0,8
tick,0x7ffdc994fb34,93507152,0,0x0,8
tick,0x7ffdc994fb34,93522391,0,0x0,8
tick,0x7ffdc994fb34,93537268,0,0x0,8
tick,0x7ffdc994fb34,93552847,0,0x0,8
tick,0x7ffdc994fb34,93568287,0,0x0,8
tick,0x7ffdc994fb34,93584124,0,0x0,8
tick,0x7ffdc994fb34,93600056,0,0x0,8
tick,0x7ffdc994fb34,93615949,0,0x0,8
tick,0x7ffdc994fb34,93631987,0,0x0,8
tick,0x7ffdc994fb34,93647924,0,0x0,8
tick,0x7ffdc994fb34,93663359,0,0x0,8
tick,0x7ffdc994fb34,93679130,0,0x0,8
tick,0x7ffdc994fb34,93694912,0,0x0,8
tick,0x7ffdc994fb34,93710468,0,0x0,8
tick,0x7ffdc994fb34,93726403,0,0x0,8
tick,0x7ffdc994fb34,93741569,0,0x0,8
tick,0x7ffdc994fb34,93756827,0,0x0,8
tick,0x7ffdc994fb34,93772017,0,0x0,8
tick,0x7ffdc994fb34,93787861,0,0x0,8
tick,0x7ffdc994fb34,93803339,0,0x0,8
tick,0x7ffdc994fb34,93818775,0,0x0,8
tick,0x7ffdc994fb34,93834175,0,0x0,8
tick,0x7ffdc994fb34,93849885,0,0x0,8
tick,0x7ffdc994fb34,93865010,0,0x0,8
tick,0x7ffdc994fb34,93880181,0,0x0,8
tick,0x7ffdc994fb34,93895695,0,0x0,8
tick,0x7ffdc994fb34,93911388,0,0x0,8
tick,0x7ffdc994fb34,93926901,0,0x0,8
tick,0x7ffdc994fb34,93942133,0,0x0,8
tick,0x7ffdc994fb34,93958090,0,0x0,8
tick,0x7ffdc994fb34,93973188,0,0x0,8
tick,0x7ffdc994fb34,93988280,0,0x0,8
tick,0x7ffdc994fb34,94003521,0,0x0,8
tick,0x7ffdc994fb34,94018963,0,0x0,8
tick,0x7ffdc994fb34,94034723,0,0x0,8
tick,0x7ffdc994fb34,94050546,0,0x0,8
tick,0x7ffdc994fb34,94066168,0,0x0,8
tick,0x7ffdc994fb34,94081528,0,0x0,8
tick,0x7ffdc994fb34,94097583,0,0x0,8
tick,0x7ffdc994fb34,94112258,0,0x0,8
tick,0x7ffdc994fb34,94127885,0,0x0,8
tick,0x7ffdc994fb34,94143956,0,0x0,8
tick,0x7ffdc994fb34,94159723,0,0x0,8
tick,0x7ffdc994fb34,94175205,0,0x0,8
tick,0x7ffdc994fb34,94190698,0,0x0,8
tick,0x7ffdc994fb34,94206675,0,0x0,8
tick,0x7ffdc994fb34,94221878,0,0x0,8
tick,0x7ffdc994fb34,94237704,0,0x0,8
tick,0x7ffdc994fb34,94253291,0,0x0,8
tick,0x7ffdc994fb34,94269350,0,0x0,8
tick,0x7ffdc994fb34,94284121,0,0x0,8
tick,0x7ffdc994fb34,94299369,0,0x0,8
tick,0x7ffdc994fb34,94314604,0,0x0,8
tick,0x7ffdc994fb34,94329783,0,0x0,8
tick,0x7ffdc994fb34,94345196,0,0x0,8
tick,0x7ffdc994fb34,94360771,0,0x0,8
tick,0x7ffdc994fb34,94375437,0,0x0,8
tick,0x7ffdc994fb34,94391675,0,0x0,8
tick,0x7ffdc994fb34,94407023,0,0x0,8
tick,0x7ffdc994fb34,94423093,0,0x0,8
tick,0x7ffdc994fb34,94438567,0,0x0,8
tick,0x7ffdc994fb34,94453903,0,0x0,8
tick,0x7ffdc994fb34,94470276,0,0x0,8
tick,0x7ffdc994fb34,94485592,0,0x0,8
tick,0x7ffdc994fb34,94500865,0,0x0,8
tick,0x7ffdc994fb34,94516180,0,0x0,8
tick,0x7ffdc994fb34,94532220,0,0x0,8
tick,0x7ffdc994fb34,94548045,0,0x0,8
tick,0x7ffdc994fb34,94563542,0,0x0,8
tick,0x7ffdc994fb34,94578731,0,0x0,8
tick,0x7ffdc994fb34,94594920,0,0x0,8
tick,0x7ffdc994fb34,94610778,0,0x0,8
tick,0x7ffdc994fb34,94626085,0,0x0,8
tick,0x7ffdc994fb34,94641429,0,0x0,8
tick,0x7ffdc994fb34,94656565,0,0x0,8
tick,0x7ffdc994fb34,94671846,0,0x0,8
tick,0x7ffdc994fb34,94686936,0,0x0,8
tick,0x7ffdc994fb34,94702322,0,0x0,8
tick,0x7ffdc994fb34,94718136,0,0x0,8
tick,0x7ffdc994fb34,94734117,0,0x0,8
tick,0x7ffdc994fb34,94749940,0,0x0,8
tick,0x7ffdc994fb34,94764604,0,0x0,8
tick,0x7ffdc994fb34,94780249,0,0x0,8
tick,0x7ffdc994fb34,94795919,0,0x0,8
tick,0x7ffdc994fb34,94811186,0,0x0,8
tick,0x7ffdc994fb34,94827002,0,0x0,8
tick,0x7ffdc994fb34,94842720,0,0x0,8
tick,0x7ffdc994fb34,94858399,0,0x0,8
tick,0x7ffdc994fb34,94873928,0,0x0,8
tick,0x7ffdc994fb34,94889462,0,0x0,8
tick,0x7ffdc994fb34,94904809,0,0x0,8
tick,0x7ffdc994fb34,94920234,0,0x0,8
tick,0x7ffdc994fb34,94935767,0,0x0,8
tick,0x7ffdc994fb34,94951462,0,0x0,8
tick,0x7ffdc994fb34,94967628,0,0x0,8
tick,0x7ffdc994fb34,94982882,0,0x0,8
tick,0x7ffdc994fb34,94997897,0,0x0,8
tick,0x7ffdc994fb34,95013792,0,0x0,8
tick,0x7ffdc994fb34,95029468,0,0x0,8
tick,0x7ffdc994fb34,95045235,0,0x0,8
tick,0x7ffdc994fb34,95060329,0,0x0,8
tick,0x7ffdc994fb34,95076188,0,0x0,8
tick,0x7ffdc994fb34,95091465,0,0x0,8
tick,0x7ffdc994fb34,95106650,0,0x0,8
tick,0x7ffdc994fb34,95122833,0,0x0,8
tick,0x7ffdc994fb34,95138032,0,0x0,8
tick,0x7ffdc994fb34,95153937,0,0x0,8
tick,0x7ffdc994fb34,95170109,0,0x0,8
tick,0x7ffdc994fb34,95185658,0,0x0,8
tick,0x7ffdc994fb34,95201600,0,0x0,8
tick,0x7ffdc994fb34,95216675,0,0x0,8
tick,0x7ffdc994fb34,95231991,0,0x0,8
tick,0x7ffdc994fb34,95247738,0,0x0,8
tick,0x7ffdc994fb34,95262606,0,0x0,8
tick,0x7ffdc994fb34,95278420,0,0x0,8
tick,0x7ffdc994fb34,95294405,0,0x0,8
tick,0x7ffdc994fb34,95309643,0,0x0,8
tick,0x7ffdc994fb34,95325007,0,0x0,8
tick,0x7ffdc994fb34,95341063,0,0x0,8
tick,0x7ffdc994fb34,95356409,0,0x0,8
tick,0x7ffdc994fb34,95372006,0,0x0,8
tick,0x7ffdc994fb34,95387432,0,0x0,8
tick,0x7ffdc994fb34,95403283,0,0x0,8
tick,0x7ffdc994fb34,95419022,0,0x0,8
tick,0x7ffdc994fb34,95434163,0,0x0,8
tick,0x7ffdc994fb34,95450279,0,0x0,8
tick,0x7ffdc994fb34,95466392,0,0x0,8
tick,0x7ffdc994fb34,95481788,0,0x0,8
tick,0x7ffdc994fb34,95497132,0,0x0,8
tick,0x7ffdc994fb34,95512952,0,0x0,8
tick,0x7ffdc994fb34,95528820,0,0x0,8
tick,0x7ffdc994fb34,95544692,0,0x0,8
tick,0x7ffdc994fb34,95560406,0,0x0,8
tick,0x7ffdc994fb34,95575807,0,0x0,8
tick,0x7ffdc994fb34,95592032,0,0x0,8
tick,0x7ffdc994fb34,95607847,0,0x0,8
tick,0x7ffdc994fb34,95623390,0,0x0,8
tick,0x7ffdc994fb34,95638842,0,0x0,8
tick,0x7ffdc994fb34,95654364,0,0x0,8
tick,0x7ffdc994fb34,95669458,0,0x0,8
tick,0x7ffdc994fb34,95684570,0,0x0,8
tick,0x7ffdc994fb34,95700146,0,0x0,8
tick,0x7ffdc994fb34,95717894,0,0x0,8
tick,0x7ffdc994fb34,95731041,0,0x0,8
tick,0x7ffdc994fb34,95747249,0,0x0,8
tick,0x7ffdc994fb34,95763094,0,0x0,8
tick,0x7ffdc994fb34,95778454,0,0x0,8
tick,0x7ffdc994fb34,95794993,0,0x0,8
tick,0x7ffdc994fb34,95810111,0,0x0,8
tick,0x7ffdc994fb34,95825970,0,0x0,8
tick,0x7ffdc994fb34,95841010,0,0x0,8
tick,0x7ffdc994fb34,95856755,0,0x0,8
tick,0x7ffdc994fb34,95872598,0,0x0,8
tick,0x7ffdc994fb34,95887791,0,0x0,8
tick,0x7ffdc994fb34,95903140,0,0x0,8
tick,0x7ffdc994fb34,95918403,0,0x0,8
tick,0x7ffdc994fb34,95934412,0,0x0,8
tick,0x7ffdc994fb34,95949441,0,0x0,8
tick,0x7ffdc994fb34,95965408,0,0x0,8
tick,0x7ffdc994fb34,95980986,0,0x0,8
tick,0x7ffdc994fb34,95996682,0,0x0,8
tick,0x7ffdc994fb34,96012331,0,0x0,8
tick,0x7ffdc994fb34,96027951,0,0x0,8
tick,0x7ffdc994fb34,96043456,0,0x0,8
tick,0x7ffdc994fb34,96058507,0,0x0,8
tick,0x7ffdc994fb34,96073698,0,0x0,8
tick,0x7ffdc994fb34,96089500,0,0x0,8
tick,0x7ffdc994fb34,96104705,0,0x0,8
tick,0x7ffdc994fb34,96119987,0,0x0,8
tick,0x7ffdc994fb34,96135611,0,0x0,8
tick,0x7ffdc994fb34,96151006,0,0x0,8
tick,0x7ffdc994fb34,96166635,0,0x0,8
tick,0x7ffdc994fb34,96182357,0,0x0,8
tick,0x7ffdc994fb34,96197705,0,0x0,8
tick,0x7ffdc994fb34,96213197,0,0x0,8
tick,0x7ffdc994fb34,96228622,0,0x0,8
tick,0x7ffdc994fb34,96243975,0,0x0,8
tick,0x7ffdc994fb34,96259582,0,0x0,8
tick,0x7ffdc994fb34,96274873,0,0x0,8
tick,0x7ffdc994fb34,96290434,0,0x0,8
tick,0x7ffdc994fb34,96306331,0,0x0,8
tick,0x7ffdc994fb34,96321411,0,0x0,8
tick,0x7ffdc994fb34,96337087,0,0x0,8
tick,0x7ffdc994fb34,96352871,0,0x0,8
tick,0x7ffdc994fb34,96368354,0,0x0,8
tick,0x7ffdc994fb34,96384381,0,0x0,8
tick,0x7ffdc994fb34,96399714,0,0x0,8
tick,0x7ffdc994fb34,96415124,0,0x0,8
tick,0x7ffdc994fb34,96430643,0,0x0,8
tick,0x7ffdc994fb34,96446464,0,0x0,8
tick,0x7ffdc994fb34,96461987,0,0x0,8
tick,0x7ffdc994fb34,96477483,0,0x0,8
tick,0x7ffdc994fb34,96493078,0,0x0,8
tick,0x7ffdc994fb34,96508937,0,0x0,8
tick,0x7ffdc994fb34,96524401,0,0x0,8
tick,0x7ffdc994fb34,96540087,0,0x0,8
tick,0x7ffdc994fb34,96555729,0,0x0,8
tick,0x7ffdc994fb34,96571519,0,0x0,8
tick,0x7ffdc994fb34,96587176,0,0x0,8
tick,0x7ffdc994fb34,96602585,0,0x0,8
tick,0x7ffdc994fb34,96618343,0,0x0,8
tick,0x7ffdc994fb34,96633499,0,0x0,8
tick,0x7ffdc994fb34,96649607,0,0x0,8
tick,0x7ffdc994fb34,96664962,0,0x0,8
tick,0x7ffdc994fb34,96680359,0,0x0,8
tick,0x7ffdc994fb34,96695735,0,0x0,8
tick,0x7ffdc994fb34,96711801,0,0x0,8
tick,0x7ffdc994fb34,96727815,0,0x0,8
tick,0x7ffdc994fb34,96743524,0,0x0,8
tick,0x7ffdc994fb34,96759919,0,0x0,8
tick,0x7ffdc994fb34,96775725,0,0x0,8
tick,0x7ffdc994fb34,96791944,0,0x0,8
tick,0x7ffdc994fb34,96808035,0,0x0,8
tick,0x7ffdc994fb34,96822992,0,0x0,8
tick,0x7ffdc994fb34,96838805,0,0x0,8
tick,0x7ffdc994fb34,96854166,0,0x0,8
tick,0x7ffdc994fb34,96869690,0,0x0,8
tick,0x7ffdc994fb34,96885314,0,0x0,8
tick,0x7ffdc994fb34,96901075,0,0x0,8
tick,0x7ffdc994fb34,96916293,0,0x0,8
tick,0x7ffdc994fb34,96932042,0,0x0,8
tick,0x7ffdc994fb34,96948143,0,0x0,8
tick,0x7ffdc994fb34,96963631,0,0x0,8
tick,0x7ffdc994fb34,96979976,0,0x0,8
tick,0x7ffdc994fb34,96994843,0,0x0,8
tick,0x7ffdc994fb34,97010584,0,0x0,8
tick,0x7ffdc994fb34,97026253,0,0x0,8
tick,0x7ffdc994fb34,97041751,0,0x0,8
tick,0x7ffdc994fb34,97057312,0,0x0,8
tick,0x7ffdc994fb34,97073092,0,0x0,8
tick,0x7ffdc994fb34,97088753,0,0x0,8
tick,0x7ffdc994fb34,97104325,0,0x0,8
tick,0x7ffdc994fb34,97120055,0,0x0,8
tick,0x7ffdc994fb34,97135438,0,0x0,8
tick,0x7ffdc994fb34,97150737,0,0x0,8
tick,0x7ffdc994fb34,97166412,0,0x0,8
tick,0x7ffdc994fb34,97182293,0,0x0,8
tick,0x7ffdc994fb34,97198066,0,0x0,8
tick,0x7ffdc994fb34,97213957,0,0x0,8
tick,0x7ffdc994fb34,97229642,0,0x0,8
tick,0x7ffdc994fb34,97244799,0,0x0,8
tick,0x7ffdc994fb34,97260614,0,0x0,8
tick,0x7ffdc994fb34,97275524,0,0x0,8
tick,0x7ffdc994fb34,97291212,0,0x0,8
tick,0x7ffdc994fb34,97306865,0,0x0,8
tick,0x7ffdc994fb34,97322571,0,0x0,8
tick,0x7ffdc994fb34,97338128,0,0x0,8
tick,0x7ffdc994fb34,97353244,0,0x0,8
tick,0x7ffdc994fb34,97368972,0,0x0,8
tick,0x7ffdc994fb34,97384137,0,0x0,8
tick,0x7ffdc994fb34,97399419,0,0x0,8
tick,0x7ffdc994fb34,97414836,0,0x0,8
tick,0x7ffdc994fb34,97430067,0,0x0,8
tick,0x7ffdc994fb34,97445990,0,0x0,8
tick,0x7ffdc994fb34,97462015,0,0x0,8
tick,0x7ffdc994fb34,97477585,0,0x0,8
tick,0x7ffdc994fb34,97492755,0,0x0,8
tick,0x7ffdc994fb34,97509029,0,0x0,8
tick,0x7ffdc994fb34,97524106,0,0x0,8
tick,0x7ffdc994fb34,97539902,0,0x0,8
tick,0x7ffdc994fb34,97555348,0,0x0,8
tick,0x7ffdc994fb34,97571086,0,0x0,8
tick,0x7ffdc994fb34,97586350,0,0x0,8
tick,0x7ffdc994fb34,97602242,0,0x0,8
tick,0x7ffdc994fb34,97618076,0,0x0,8
tick,0x7ffdc994fb34,97633702,0,0x0,8
tick,0x7ffdc994fb34,97649736,0,0x0,8
tick,0x7ffdc994fb34,97665505,0,0x0,8
tick,0x7ffdc994fb34,97680739,0,0x0,8
tick,0x7ffdc994fb34,97696353,0,0x0,8
tick,0x7ffdc994fb34,97712256,0,0x0,8
tick,0x7ffdc994fb34,97727893,0,0x0,8
tick,0x7ffdc994fb34,97743606,0,0x0,8
tick,0x7ffdc994fb34,97759334,0,0x0,8
tick,0x7ffdc994fb34,97774710,0,0x0,8
tick,0x7ffdc994fb34,97790475,0,0x0,8
tick,0x7ffdc994fb34,97805498,0,0x0,8
tick,0x7ffdc994fb34,97820326,0,0x0,8
tick,0x7ffdc994fb34,97835696,0,0x0,8
tick,0x7ffdc994fb34,97851243,0,0x0,8
tick,0x7ffdc994fb34,97867570,0,0x0,8
tick,0x7ffdc994fb34,97883284,0,0x0,8
tick,0x7ffdc994fb34,97898552,0,0x0,8
tick,0x7ffdc994fb34,97913881,0,0x0,8
tick,0x7ffdc994fb34,97929998,0,0x0,8
tick,0x7ffdc994fb34,97945439,0,0x0,8
tick,0x7ffdc994fb34,97960624,0,0x0,8
tick,0x7ffdc994fb34,97976162,0,0x0,8
tick,0x7ffdc994fb34,97991659,0,0x0,8
tick,0x7ffdc994fb34,98007657,0,0x0,8
tick,0x7ffdc994fb34,98023266,0,0x0,8
tick,0x7ffdc994fb34,98038910,0,0x0,8
tick,0x7ffdc994fb34,98054783,0,0x0,8
tick,0x7ffdc994fb34,98070179,0,0x0,8
tick,0x7ffdc994fb34,98085587,0,0x0,8
tick,0x7ffdc994fb34,98100957,0,0x0,8
tick,0x7ffdc994fb34,98116717,0,0x0,8
tick,0x7ffdc994fb34,98132085,0,0x0,8
tick,0x7ffdc994fb34,98148033,0,0x0,8
tick,0x7ffdc994fb34,98163424,0,0x0,8
tick,0x7ffdc994fb34,98179196,0,0x0,8
tick,0x7ffdc994fb34,98195277,0,0x0,8
tick,0x7ffdc994fb34,98210901,0,0x0,8
tick,0x7ffdc994fb34,98226645,0,0x0,8
tick,0x7ffdc994fb34,98242116,0,0x0,8
tick,0x7ffdc994fb34,98257518,0,0x0,8
tick,0x7ffdc994fb34,98274575,0,0x0,8
tick,0x7ffdc994fb34,98289160,0,0x0,8
tick,0x7ffdc994fb34,98304574,0,0x0,8
tick,0x7ffdc994fb34,98319901,0,0x0,8
tick,0x7ffdc994fb34,98335183,0,0x0,8
tick,0x7ffdc994fb34,98351083,0,0x0,8
tick,0x7ffdc994fb34,98366616,0,0x0,8
tick,0x7ffdc994fb34,98381231,0,0x0,8
tick,0x7ffdc994fb34,98396706,0,0x0,8
tick,0x7ffdc994fb34,98412947,0,0x0,8
tick,0x7ffdc994fb34,98429067,0,0x0,8
tick,0x7ffdc994fb34,98445062,0,0x0,8
tick,0x7ffdc994fb34,98460747,0,0x0,8
tick,0x7ffdc994fb34,98475774,0,0x0,8
tick,0x7ffdc994fb34,98491735,0,0x0,8
tick,0x7ffdc994fb34,98507883,0,0x0,8
tick,0x7ffdc994fb34,98523988,0,0x0,8
tick,0x7ffdc994fb34,98539913,0,0x0,8
tick,0x7ffdc994fb34,98556034,0,0x0,8
tick,0x7ffdc994fb34,98571458,0,0x0,8
tick,0x7ffdc994fb34,98586743,0,0x0,8
tick,0x7ffdc994fb34,98601772,0,0x0,8
tick,0x7ffdc994fb34,98616822,0,0x0,8
tick,0x7ffdc994fb34,98632288,0,0x0,8
tick,0x7ffdc994fb34,98647482,0,0x0,8
tick,0x7ffdc994fb34,98663354,0,0x0,8
tick,0x7ffdc994fb34,98679084,0,0x0,8
tick,0x7ffdc994fb34,98694228,0,0x0,8
tick,0x7ffdc994fb34,98710385,0,0x0,8
tick,0x7ffdc994fb34,98725873,0,0x0,8
tick,0x7ffdc994fb34,98741605,0,0x0,8
tick,0x7ffdc994fb34,98760347,0,0x0,8
tick,0x7ffdc994fb34,98772396,0,0x0,8
tick,0x7ffdc994fb34,98788320,0,0x0,8
tick,0x7ffdc994fb34,98804140,0,0x0,8
tick,0x7ffdc994fb34,98819958,0,0x0,8
tick,0x7ffdc994fb34,98835386,0,0x0,8
tick,0x7ffdc994fb34,98850772,0,0x0,8
tick,0x7ffdc994fb34,98866107,0,0x0,8
tick,0x7ffdc994fb34,98881760,0,0x0,8
tick,0x7ffdc994fb34,98897241,0,0x0,8
tick,0x7ffdc994fb34,98912765,0,0x0,8
tick,0x7ffdc994fb34,98928353,0,0x0,8
tick,0x7ffdc994fb34,98943692,0,0x0,8
tick,0x7ffdc994fb34,98959097,0,0x0,8
tick,0x7ffdc994fb34,98974526,0,0x0,8
tick,0x7ffdc994fb34,98989924,0,0x0,8
tick,0x7ffdc994fb34,99005122,0,0x0,8
tick,0x7ffdc994fb34,99021113,0,0x0,8
tick,0x7ffdc994fb34,99037091,0,0x0,8
tick,0x7ffdc994fb34,99053129,0,0x0,8
tick,0x7ffdc994fb34,99068899,0,0x0,8
tick,0x7ffdc994fb34,99084470,0,0x0,8
tick,0x7ffdc994fb34,99099905,0,0x0,8
tick,0x7ffdc994fb34,99115315,0,0x0,8
tick,0x7ffdc994fb34,99130909,0,0x0,8
tick,0x7ffdc994fb34,99146724,0,0x0,8
tick,0x7ffdc994fb34,99162608,0,0x0,8
tick,0x7ffdc994fb34,99177693,0,0x0,8
tick,0x7ffdc994fb34,99193362,0,0x0,8
tick,0x7ffdc994fb34,99209199,0,0x0,8
tick,0x7ffdc994fb34,99224191,0,0x0,8
tick,0x7ffdc994fb34,99240184,0,0x0,8
tick,0x7ffdc994fb34,99255941,0,0x0,8
tick,0x7ffdc994fb34,99271658,0,0x0,8
tick,0x7ffdc994fb34,99287054,0,0x0,8
tick,0x7ffdc994fb34,99302449,0,0x0,8
tick,0x7ffdc994fb34,99318514,0,0x0,8
tick,0x7ffdc994fb34,99333987,0,0x0,8
tick,0x7ffdc994fb34,99349659,0,0x0,8
tick,0x7ffdc994fb34,99364917,0,0x0,8
tick,0x7ffdc994fb34,99380524,0,0x0,8
tick,0x7ffdc994fb34,99396045,0,0x0,8
tick,0x7ffdc994fb34,99411434,0,0x0,8
tick,0x7ffdc994fb34,99427053,0,0x0,8
tick,0x7ffdc994fb34,99442837,0,0x0,8
tick,0x7ffdc994fb34,99458174,0,0x0,8
tick,0x7ffdc994fb34,99473756,0,0x0,8
tick,0x7ffdc994fb34,99489530,0,0x0,8
tick,0x7ffdc994fb34,99504560,0,0x0,8
tick,0x7ffdc994fb34,99520457,0,0x0,8
tick,0x7ffdc994fb34,99535995,0,0x0,8
tick,0x7ffdc994fb34,99551485,0,0x0,8
tick,0x7ffdc994fb34,99567003,0,0x0,8
tick,0x7ffdc994fb34,99583101,0,0x0,8
tick,0x7ffdc994fb34,99599005,0,0x0,8
tick,0x7ffdc994fb34,99614353,0,0x0,8
tick,0x7ffdc994fb34,99629546,0,0x0,8
tick,0x7ffdc994fb34,99645327,0,0x0,8
tick,0x7ffdc994fb34,99660633,0,0x0,8
tick,0x7ffdc994fb34,99675472,0,0x0,8
tick,0x7ffdc994fb34,99690731,0,0x0,8
tick,0x7ffdc994fb34,99706897,0,0x0,8
tick,0x7ffdc994fb34,99722183,0,0x0,8
tick,0x7ffdc994fb34,99737713,0,0x0,8
tick,0x7ffdc994fb34,99752676,0,0x0,8
tick,0x7ffdc994fb34,99768927,0,0x0,8
tick,0x7ffdc994fb34,99784136,0,0x0,8
tick,0x7ffdc994fb34,99800263,0,0x0,8
tick,0x7ffdc994fb34,99816091,0,0x0,8
tick,0x7ffdc994fb34,99832298,0,0x0,8
tick,0x7ffdc994fb34,99848056,0,0x0,8
tick,0x7ffdc994fb34,99864095,0,0x0,8
tick,0x7ffdc994fb34,99879793,0,0x0,8
tick,0x7ffdc994fb34,99895960,0,0x0,8
tick,0x7ffdc994fb34,99911540,0,0x0,8
tick,0x7ffdc994fb34,99926762,0,0x0,8
tick,0x7ffdc994fb34,99942526,0,0x0,8
tick,0x7ffdc994fb34,99957802,0,0x0,8
tick,0x7ffdc994fb34,99973380,0,0x0,8
tick,0x7ffdc994fb34,99988947,0,0x0,8
tick,0x7ffdc994fb34,100004717,0,0x0,8
tick,0x7ffdc994fb34,100020104,0,0x0,8
tick,0x7ffdc994fb34,100036050,0,0x0,8
tick,0x7ffdc994fb34,100051760,0,0x0,8
tick,0x7ffdc994fb34,100067206,0,0x0,8
tick,0x7ffdc994fb34,100083293,0,0x0,8
tick,0x7ffdc994fb34,100098577,0,0x0,8
tick,0x7ffdc994fb34,100113972,0,0x0,8
tick,0x7ffdc994fb34,100135416,0,0x0,8
tick,0x7ffdc994fb34,100144794,0,0x0,8
tick,0x7ffdc994fb34,100160455,0,0x0,8
tick,0x7ffdc994fb34,100175821,0,0x0,8
tick,0x7ffdc994fb34,100191311,0,0x0,8
tick,0x7ffdc994fb34,100206577,0,0x0,8
tick,0x7ffdc994fb34,100222393,0,0x0,8
tick,0x7ffdc994fb34,100237980,0,0x0,8
tick,0x7ffdc994fb34,100253121,0,0x0,8
tick,0x7ffdc994fb34,100268985,0,0x0,8
tick,0x7ffdc994fb34,100284094,0,0x0,8
tick,0x7ffdc994fb34,100299806,0,0x0,8
tick,0x7ffdc994fb34,100315729,0,0x0,8
tick,0x7ffdc994fb34,100330677,0,0x0,8
tick,0x7ffdc994fb34,100346595,0,0x0,8
tick,0x7ffdc994fb34,100363140,0,0x0,8
tick,0x7ffdc994fb34,100378238,0,0x0,8
tick,0x7ffdc994fb34,100393567,0,0x0,8
tick,0x7ffdc994fb34,100409102,0,0x0,8
tick,0x7ffdc994fb34,100424418,0,0x0,8
tick,0x7ffdc994fb34,100439998,0,0x0,8
tick,0x7ffdc994fb34,100454917,0,0x0,8
tick,0x7ffdc994fb34,100470508,0,0x0,8
tick,0x7ffdc994fb34,100485908,0,0x0,8
tick,0x7ffdc994fb34,100501574,0,0x0,8
tick,0x7ffdc994fb34,100517067,0,0x0,8
tick,0x7ffdc994fb34,100533133,0,0x0,8
tick,0x7ffdc994fb34,100548939,0,0x0,8
tick,0x7ffdc994fb34,100564938,0,0x0,8
tick,0x7ffdc994fb34,100581011,0,0x0,8
tick,0x7ffdc994fb34,100596102,0,0x0,8
tick,0x7ffdc994fb34,100611691,0,0x0,8
tick,0x7ffdc994fb34,100626718,0,0x0,8
tick,0x7ffdc994fb34,100642498,0,0x0,8
tick,0x7ffdc994fb34,100658336,0,0x0,8
tick,0x7ffdc994fb34,100673242,0,0x0,8
tick,0x7ffdc994fb34,100689366,0,0x0,8
tick,0x7ffdc994fb34,100704569,0,0x0,8
tick,0x7ffdc994fb34,100719878,0,0x0,8
tick,0x7ffdc994fb34,100735680,0,0x0,8
tick,0x7ffdc994fb34,100750934,0,0x0,8
tick,0x7ffdc994fb34,100767104,0,0x0,8
tick,0x7ffdc994fb34,100782977,0,0x0,8
tick,0x7ffdc994fb34,100798703,0,0x0,8
tick,0x7ffdc994fb34,100813762,0,0x0,8
tick,0x7ffdc994fb34,100829619,0,0x0,8
tick,0x7ffdc994fb34,100844877,0,0x0,8
tick,0x7ffdc994fb34,100860494,0,0x0,8
tick,0x7ffdc994fb34,100875924,0,0x0,8
tick,0x7ffdc994fb34,100891550,0,0x0,8
tick,0x7ffdc994fb34,100907778,0,0x0,8
tick,0x7ffdc994fb34,100923387,0,0x0,8
tick,0x7ffdc994fb34,100938109,0,0x0,8
tick,0x7ffdc994fb34,100953249,0,0x0,8
tick,0x7ffdc994fb34,100969261,0,0x0,8
tick,0x7ffdc994fb34,100985351,0,0x0,8
tick,0x7ffdc994fb34,101001050,0,0x0,8
tick,0x7ffdc994fb34,101016433,0,0x0,8
tick,0x7ffdc994fb34,101032229,0,0x0,8
tick,0x7ffdc994fb34,101047531,0,0x0,8
tick,0x7ffdc994fb34,101063714,0,0x0,8
tick,0x7ffdc994fb34,101078599,0,0x0,8
tick,0x7ffdc994fb34,101094051,0,0x0,8
tick,0x7ffdc994fb34,101109894,0,0x0,8
tick,0x7ffdc994fb34,101125682,0,0x0,8
tick,0x7ffdc994fb34,101141405,0,0x0,8
tick,0x7ffdc994fb34,101157093,0,0x0,8
tick,0x7ffdc994fb34,101172716,0,0x0,8
tick,0x7ffdc994fb34,101187841,0,0x0,8
tick,0x7ffdc994fb34,101203293,0,0x0,8
tick,0x7ffdc994fb34,101218822,0,0x0,8
tick,0x7ffdc994fb34,101234187,0,0x0,8
tick,0x7ffdc994fb34,101249757,0,0x0,8
tick,0x7ffdc994fb34,101265601,0,0x0,8
tick,0x7ffdc994fb34,101281131,0,0x0,8
tick,0x7ffdc994fb34,101296446,0,0x0,8
tick,0x7ffdc994fb34,101311510,0,0x0,8
tick,0x7ffdc994fb34,101326750,0,0x0,8
tick,0x7ffdc994fb34,101343089,0,0x0,8
tick,0x7ffdc994fb34,101358650,0,0x0,8
tick,0x7ffdc994fb34,101373862,0,0x0,8
tick,0x7ffdc994fb34,101389392,0,0x0,8
tick,0x7ffdc994fb34,101405105,0,0x0,8
tick,0x7ffdc994fb34,101420575,0,0x0,8
tick,0x7ffdc994fb34,101436721,0,0x0,8
tick,0x7ffdc994fb34,101452338,0,0x0,8
tick,0x7ffdc994fb34,101468143,0,0x0,8
tick,0x7ffdc994fb34,101483798,0,0x0,8
tick,0x7ffdc994fb34,101498904,0,0x0,8
tick,0x7ffdc994fb34,101514218,0,0x0,8
tick,0x7ffdc994fb34,101530499,0,0x0,8
tick,0x7ffdc994fb34,101545719,0,0x0,8
tick,0x7ffdc994fb34,101561111,0,0x0,8
tick,0x7ffdc994fb34,101576314,0,0x0,8
tick,0x7ffdc994fb34,101592453,0,0x0,8
tick,0x7ffdc994fb34,101607567,0,0x0,8
tick,0x7ffdc994fb34,101623490,0,0x0,8
tick,0x7ffdc994fb34,101638655,0,0x0,8
tick,0x7ffdc994fb34,101654275,0,0x0,8
tick,0x7ffdc994fb34,101669910,0,0x0,8
tick,0x7ffdc994fb34,101686001,0,0x0,8
tick,0x7ffdc994fb34,101701862,0,0x0,8
tick,0x7ffdc994fb34,101717034,0,0x0,8
tick,0x7ffdc994fb34,101732687,0,0x0,8
tick,0x7ffdc994fb34,101748226,0,0x0,8
tick,0x7ffdc994fb34,101763662,0,0x0,8
tick,0x7ffdc994fb34,101779505,0,0x0,8
tick,0x7ffdc994fb34,101794498,0,0x0,8
tick,0x7ffdc994fb34,101810386,0,0x0,8
tick,0x7ffdc994fb34,101825387,0,0x0,8
tick,0x7ffdc994fb34,101841585,0,0x0,8
tick,0x7ffdc994fb34,101856459,0,0x0,8
tick,0x7ffdc994fb34,101871927,0,0x0,8
tick,0x7ffdc994fb34,101887948,0,0x0,8
tick,0x7ffdc994fb34,101903163,0,0x0,8
tick,0x7ffdc994fb34,101919249,0,0x0,8
tick,0x7ffdc994fb34,101934639,0,0x0,8
tick,0x7ffdc994fb34,101950805,0,0x0,8
tick,0x7ffdc994fb34,101966296,0,0x0,8
tick,0x7ffdc994fb34,101981165,0,0x0,8
tick,0x7ffdc994fb34,101996894,0,0x0,8
tick,0x7ffdc994fb34,102012570,0,0x0,8
tick,0x7ffdc994fb34,102028720,0,0x0,8
tick,0x7ffdc994fb34,102044861,0,0x0,8
tick,0x7ffdc994fb34,102060122,0,0x0,8
tick,0x7ffdc994fb34,102075814,0,0x0,8
tick,0x7ffdc994fb34,102091357,0,0x0,8
tick,0x7ffdc994fb34,102107168,0,0x0,8
tick,0x7ffdc994fb34,102123314,0,0x0,8
tick,0x7ffdc994fb34,102139217,0,0x0,8
tick,0x7ffdc994fb34,102154659,0,0x0,8
tick,0x7ffdc994fb34,102170411,0,0x0,8
tick,0x7ffdc994fb34,102185446,0,0x0,8
tick,0x7ffdc994fb34,102200659,0,0x0,8
tick,0x7ffdc994fb34,102216668,0,0x0,8
tick,0x7ffdc994fb34,102232933,0,0x0,8
tick,0x7ffdc994fb34,102248476,0,0x0,8
tick,0x7ffdc994fb34,102263625,0,0x0,8
tick,0x7ffdc994fb34,102279091,0,0x0,8
tick,0x7ffdc994fb34,102294892,0,0x0,8
tick,0x7ffdc994fb34,102310237,0,0x0,8
tick,0x7ffdc994fb34,102326052,0,0x0,8
tick,0x7ffdc994fb34,102342341,0,0x0,8
tick,0x7ffdc994fb34,102357865,0,0x0,8
tick,0x7ffdc994fb34,102373902,0,0x0,8
tick,0x7ffdc994fb34,102389988,0,0x0,8
tick,0x7ffdc994fb34,102405960,0,0x0,8
tick,0x7ffdc994fb34,102421323,0,0x0,8
tick,0x7ffdc994fb34,102436556,0,0x0,8
tick,0x7ffdc994fb34,102452410,0,0x0,8
tick,0x7ffdc994fb34,102467852,0,0x0,8
tick,0x7ffdc994fb34,102484136,0,0x0,8
tick,0x7ffdc994fb34,102499861,0,0x0,8
tick,0x7ffdc994fb34,102514969,0,0x0,8
tick,0x7ffdc994fb34,102530704,0,0x0,8
tick,0x7ffdc994fb34,102546207,0,0x0,8
tick,0x7ffdc994fb34,102561620,0,0x0,8
tick,0x7ffdc994fb34,102576744,0,0x0,8
tick,0x7ffdc994fb34,102592444,0,0x0,8
tick,0x7ffdc994fb34,102607706,0,0x0,8
tick,0x7ffdc994fb34,102623299,0,0x0,8
tick,0x7ffdc994fb34,102638826,0,0x0,8
tick,0x7ffdc994fb34,102654242,0,0x0,8
tick,0x7ffdc994fb34,102669967,0,0x0,8
tick,0x7ffdc994fb34,102685427,0,0x0,8
tick,0x7ffdc994fb34,102701024,0,0x0,8
tick,0x7ffdc994fb34,102716563,0,0x0,8
tick,0x7ffdc994fb34,102731965,0,0x0,8
tick,0x7ffdc994fb34,102747999,0,0x0,8
tick,0x7ffdc994fb34,102762933,0,0x0,8
tick,0x7ffdc994fb34,102778596,0,0x0,8
tick,0x7ffdc994fb34,102794914,0,0x0,8
tick,0x7ffdc994fb34,102810538,0,0x0,8
tick,0x7ffdc994fb34,102826013,0,0x0,8
tick,0x7ffdc994fb34,102841546,0,0x0,8
tick,0x7ffdc994fb34,102856948,0,0x0,8
tick,0x7ffdc994fb34,102872590,0,0x0,8
tick,0x7ffdc994fb34,102888595,0,0x0,8
tick,0x7ffdc994fb34,102904051,0,0x0,8
tick,0x7ffdc994fb34,102919990,0,0x0,8
tick,0x7ffdc994fb34,102935703,0,0x0,8
tick,0x7ffdc994fb34,102950799,0,0x0,8
tick,0x7ffdc994fb34,102966318,0,0x0,8
tick,0x7ffdc994fb34,102982555,0,0x0,8
tick,0x7ffdc994fb34,102999151,0,0x0,8
tick,0x7ffdc994fb34,103013552,0,0x0,8
tick,0x7ffdc994fb34,103029405,0,0x0,8
tick,0x7ffdc994fb34,103044833,0,0x0,8
tick,0x7ffdc994fb34,103060892,0,0x0,8
tick,0x7ffdc994fb34,103076449,0,0x0,8
tick,0x7ffdc994fb34,103092232,0,0x0,8
tick,0x7ffdc994fb34,103107928,0,0x0,8
tick,0x7ffdc994fb34,103123700,0,0x0,8
tick,0x7ffdc994fb34,103139174,0,0x0,8
tick,0x7ffdc994fb34,103155336,0,0x0,8
tick,0x7ffdc994fb34,103171131,0,0x0,8
tick,0x7ffdc994fb34,103187086,0,0x0,8
tick,0x7ffdc994fb34,103202421,0,0x0,8
tick,0x7ffdc994fb34,103218409,0,0x0,8
tick,0x7ffdc994fb34,103234422,0,0x0,8
tick,0x7ffdc994fb34,103249652,0,0x0,8
tick,0x7ffdc994fb34,103265366,0,0x0,8
tick,0x7ffdc994fb34,103281420,0,0x0,8
tick,0x7ffdc994fb34,103297469,0,0x0,8
tick,0x7ffdc994fb34,103313198,0,0x0,8
tick,0x7ffdc994fb34,103328657,0,0x0,8
tick,0x7ffdc994fb34,103348063,0,0x0,8
tick,0x7ffdc994fb34,103359528,0,0x0,8
tick,0x7ffdc994fb34,103375189,0,0x0,8
tick,0x7ffdc994fb34,103390787,0,0x0,8
tick,0x7ffdc994fb34,103405801,0,0x0,8
tick,0x7ffdc994fb34,103421013,0,0x0,8
tick,0x7ffdc994fb34,103437043,0,0x0,8
tick,0x7ffdc994fb34,103453161,0,0x0,8
tick,0x7ffdc994fb34,103468424,0,0x0,8
tick,0x7ffdc994fb34,103483903,0,0x0,8
tick,0x7ffdc994fb34,103499739,0,0x0,8
tick,0x7ffdc994fb34,103515083,0,0x0,8
tick,0x7ffdc994fb34,103530312,0,0x0,8
tick,0x7ffdc994fb34,103545836,0,0x0,8
tick,0x7ffdc994fb34,103561201,0,0x0,8
tick,0x7ffdc994fb34,103576570,0,0x0,8
tick,0x7ffdc994fb34,103592560,0,0x0,8
tick,0x7ffdc994fb34,103607801,0,0x0,8
tick,0x7ffdc994fb34,103623856,0,0x0,8
tick,0x7ffdc994fb34,103639921,0,0x0,8
tick,0x7ffdc994fb34,103655720,0,0x0,8
tick,0x7ffdc994fb34,103670709,0,0x0,8
tick,0x7ffdc994fb34,103686863,0,0x0,8
tick,0x7ffdc994fb34,103702738,0,0x0,8
tick,0x7ffdc994fb34,103718447,0,0x0,8
tick,0x7ffdc994fb34,103733690,0,0x0,8
tick,0x7ffdc994fb34,103749408,0,0x0,8
tick,0x7ffdc994fb34,103764395,0,0x0,8
tick,0x7ffdc994fb34,103780293,0,0x0,8
tick,0x7ffdc994fb34,103795186,0,0x0,8
tick,0x7ffdc994fb34,103811110,0,0x0,8
tick,0x7ffdc994fb34,103826359,0,0x0,8
tick,0x7ffdc994fb34,103841685,0,0x0,8
tick,0x7ffdc994fb34,103856940,0,0x0,8
tick,0x7ffdc994fb34,103873011,0,0x0,8
tick,0x7ffdc994fb34,103888540,0,0x0,8
tick,0x7ffdc994fb34,103904293,0,0x0,8
tick,0x7ffdc994fb34,103919728,0,0x0,8
tick,0x7ffdc994fb34,103935199,0,0x0,8
tick,0x7ffdc994fb34,103950370,0,0x0,8
tick,0x7ffdc994fb34,103966367,0,0x0,8
tick,0x7ffdc994fb34,103981876,0,0x0,8
tick,0x7ffdc994fb34,103997548,0,0x0,8
tick,0x7ffdc994fb34,104013027,0,0x0,8
tick,0x7ffdc994fb34,104028778,0,0x0,8
tick,0x7ffdc994fb34,104044241,0,0x0,8
tick,0x7ffdc994fb34,104060290,0,0x0,8
tick,0x7ffdc994fb34,104075992,0,0x0,8
tick,0x7ffdc994fb34,104092082,0,0x0,8
tick,0x7ffdc994fb34,104107044,0,0x0,8
tick,0x7ffdc994fb34,104122470,0,0x0,8
tick,0x7ffdc994fb34,104138196,0,0x0,8
tick,0x7ffdc994fb34,104153464,0,0x0,8
tick,0x7ffdc994fb34,104169202,0,0x0,8
tick,0x7ffdc994fb34,104184502,0,0x0,8
tick,0x7ffdc994fb34,104200008,0,0x0,8
tick,0x7ffdc994fb34,104215473,0,0x0,8
tick,0x7ffdc994fb34,104231137,0,0x0,8
tick,0x7ffdc994fb34,104246202,0,0x0,8
tick,0x7ffdc994fb34,104261968,0,0x0,8
tick,0x7ffdc994fb34,104277740,0,0x0,8
tick,0x7ffdc994fb34,104293196,0,0x0,8
tick,0x7ffdc994fb34,104308222,0,0x0,8
tick,0x7ffdc994fb34,104323170,0,0x0,8
tick,0x7ffdc994fb34,104339283,0,0x0,8
tick,0x7ffdc994fb34,104354555,0,0x0,8
tick,0x7ffdc994fb34,104370427,0,0x0,8
tick,0x7ffdc994fb34,104386031,0,0x0,8
tick,0x7ffdc994fb34,104402361,0,0x0,8
tick,0x7ffdc994fb34,104418249,0,0x0,8
tick,0x7ffdc994fb34,104434195,0,0x0,8
tick,0x7ffdc994fb34,104450139,0,0x0,8
tick,0x7ffdc994fb34,104466025,0,0x0,8
tick,0x7ffdc994fb34,104482008,0,0x0,8
tick,0x7ffdc994fb34,104497824,0,0x0,8
tick,0x7ffdc994fb34,104513587,0,0x0,8
tick,0x7ffdc994fb34,104528788,0,0x0,8
tick,0x7ffdc994fb34,104544517,0,0x0,8
tick,0x7ffdc994fb34,104559717,0,0x0,8
tick,0x7ffdc994fb34,104575801,0,0x0,8
tick,0x7ffdc994fb34,104591136,0,0x0,8
tick,0x7ffdc994fb34,104607069,0,0x0,8
tick,0x7ffdc994fb34,104622862,0,0x0,8
tick,0x7ffdc994fb34,104637621,0,0x0,8
tick,0x7ffdc994fb34,104653762,0,0x0,8
tick,0x7ffdc994fb34,104669427,0,0x0,8
tick,0x7ffdc994fb34,104684802,0,0x0,8
tick,0x7ffdc994fb34,104700406,0,0x0,8
tick,0x7ffdc994fb34,104715902,0,0x0,8
tick,0x7ffdc994fb34,104732199,0,0x0,8
tick,0x7ffdc994fb34,104747653,0,0x0,8
tick,0x7ffdc994fb34,104762926,0,0x0,8
tick,0x7ffdc994fb34,104778627,0,0x0,8
tick,0x7ffdc994fb34,104794319,0,0x0,8
tick,0x7ffdc994fb34,104809345,0,0x0,8
tick,0x7ffdc994fb34,104824470,0,0x0,8
tick,0x7ffdc994fb34,104840060,0,0x0,8
tick,0x7ffdc994fb34,104855846,0,0x0,8
tick,0x7ffdc994fb34,104871975,0,0x0,8
tick,0x7ffdc994fb34,104887579,0,0x0,8
tick,0x7ffdc994fb34,104903950,0,0x0,8
tick,0x7ffdc994fb34,104918253,0,0x0,8
tick,0x7ffdc994fb34,104933546,0,0x0,8
tick,0x7ffdc994fb34,104949428,0,0x0,8
tick,0x7ffdc994fb34,104964726,0,0x0,8
tick,0x7ffdc994fb34,104980323,0,0x0,8
tick,0x7ffdc994fb34,104996137,0,0x0,8
tick,0x7ffdc994fb34,105012410,0,0x0,8
tick,0x7ffdc994fb34,105028137,0,0x0,8
tick,0x7ffdc994fb34,105043756,0,0x0,8
tick,0x7ffdc994fb34,105059721,0,0x0,8
tick,0x7ffdc994fb34,105075372,0,0x0,8
tick,0x7ffdc994fb34,105090719,0,0x0,8
tick,0x7ffdc994fb34,105106325,0,0x0,8
tick,0x7ffdc994fb34,105122079,0,0x0,8
tick,0x7ffdc994fb34,105136958,0,0x0,8
tick,0x7ffdc994fb34,105152650,0,0x0,8
tick,0x7ffdc994fb34,105168500,0,0x0,8
tick,0x7ffdc994fb34,105184276,0,0x0,8
tick,0x7ffdc994fb34,105199736,0,0x0,8
tick,0x7ffdc994fb34,105214683,0,0x0,8
tick,0x7ffdc994fb34,105229800,0,0x0,8
tick,0x7ffdc994fb34,105245218,0,0x0,8
tick,0x7ffdc994fb34,105261263,0,0x0,8
tick,0x7ffdc994fb34,105276819,0,0x0,8
tick,0x7ffdc994fb34,105292770,0,0x0,8
tick,0x7ffdc994fb34,105308734,0,0x0,8
tick,0x7ffdc994fb34,105324184,0,0x0,8
tick,0x7ffdc994fb34,105340006,0,0x0,8
tick,0x7ffdc994fb34,105355823,0,0x0,8
tick,0x7ffdc994fb34,105370982,0,0x0,8
tick,0x7ffdc994fb34,105387217,0,0x0,8
tick,0x7ffdc994fb34,105402986,0,0x0,8
tick,0x7ffdc994fb34,105418478,0,0x0,8
tick,0x7ffdc994fb34,105433721,0,0x0,8
tick,0x7ffdc994fb34,105449386,0,0x0,8
tick,0x7ffdc994fb34,105465238,0,0x0,8
tick,0x7ffdc994fb34,105481528,0,0x0,8
tick,0x7ffdc994fb34,105496541,0,0x0,8
tick,0x7ffdc994fb34,105512633,0,0x0,8
tick,0x7ffdc994fb34,105528542,0,0x0,8
tick,0x7ffdc994fb34,105543879,0,0x0,8
tick,0x7ffdc994fb34,105559853,0,0x0,8
tick,0x7ffdc994fb34,105574920,0,0x0,8
tick,0x7ffdc994fb34,105590495,0,0x0,8
tick,0x7ffdc994fb34,105605508,0,0x0,8
tick,0x7ffdc994fb34,105620963,0,0x0,8
tick,0x7ffdc994fb34,105636841,0,0x0,8
tick,0x7ffdc994fb34,105652653,0,0x0,8
tick,0x7ffdc994fb34,105668305,0,0x0,8
tick,0x7ffdc994fb34,105683501,0,0x0,8
tick,0x7ffdc994fb34,105698939,0,0x0,8
tick,0x7ffdc994fb34,105714455,0,0x0,8
tick,0x7ffdc994fb34,105730251,0,0x0,8
tick,0x7ffdc994fb34,105745650,0,0x0,8
tick,0x7ffdc994fb34,105761580,0,0x0,8
tick,0x7ffdc994fb34,105777318,0,0x0,8
tick,0x7ffdc994fb34,105793084,0,0x0,8
tick,0x7ffdc994fb34,105809018,0,0x0,8
tick,0x7ffdc994fb34,105824272,0,0x0,8
tick,0x7ffdc994fb34,105840286,0,0x0,8
tick,0x7ffdc994fb34,105855693,0,0x0,8
tick,0x7ffdc994fb34,105871178,0,0x0,8
tick,0x7ffdc994fb34,105886715,0,0x0,8
tick,0x7ffdc994fb34,105902460,0,0x0,8
tick,0x7ffdc994fb34,105917681,0,0x0,8
tick,0x7ffdc994fb34,105933462,0,0x0,8
tick,0x7ffdc994fb34,105949405,0,0x0,8
tick,0x7ffdc994fb34,105964481,0,0x0,8
tick,0x7ffdc994fb34,105980437,0,0x0,8
tick,0x7ffdc994fb34,105996722,0,0x0,8
tick,0x7ffdc994fb34,106011866,0,0x0,8
tick,0x7ffdc994fb34,106027641,0,0x0,8
tick,0x7ffdc994fb34,106042993,0,0x0,8
tick,0x7ffdc994fb34,106058708,0,0x0,8
tick,0x7ffdc994fb34,106074134,0,0x0,8
tick,0x7ffdc994fb34,106089971,0,0x0,8
tick,0x7ffdc994fb34,106105300,0,0x0,8
tick,0x7ffdc994fb34,106121093,0,0x0,8
tick,0x7ffdc994fb34,106136843,0,0x0,8
tick,0x7ffdc994fb34,106152540,0,0x0,8
tick,0x7ffdc994fb34,106168111,0,0x0,8
tick,0x7ffdc994fb34,106183036,0,0x0,8
tick,0x7ffdc994fb34,106198673,0,0x0,8
tick,0x7ffdc994fb34,106213979,0,0x0,8
tick,0x7ffdc994fb34,106229609,0,0x0,8
tick,0x7ffdc994fb34,106244908,0,0x0,8
tick,0x7ffdc994fb34,106260588,0,0x0,8
tick,0x7ffdc994fb34,106276135,0,0x0,8
tick,0x7ffdc994fb34,106291326,0,0x0,8
tick,0x7ffdc994fb34,106306499,0,0x0,8
tick,0x7ffdc994fb34,106322295,0,0x0,8
tick,0x7ffdc994fb34,106338091,0,0x0,8
tick,0x7ffdc994fb34,106353740,0,0x0,8
tick,0x7ffdc994fb34,106368582,0,0x0,8
tick,0x7ffdc994fb34,106384126,0,0x0,8
tick,0x7ffdc994fb34,106399941,0,0x0,8
tick,0x7ffdc994fb34,106415258,0,0x0,8
tick,0x7ffdc994fb34,106430771,0,0x0,8
tick,0x7ffdc994fb34,106446126,0,0x0,8
tick,0x7ffdc994fb34,106461779,0,0x0,8
tick,0x7ffdc994fb34,106477274,0,0x0,8
tick,0x7ffdc994fb34,106492890,0,0x0,8
tick,0x7ffdc994fb34,106509134,0,0x0,8
tick,0x7ffdc994fb34,106524982,0,0x0,8
tick,0x7ffdc994fb34,106540339,0,0x0,8
tick,0x7ffdc994fb34,106556101,0,0x0,8
tick,0x7ffdc994fb34,106571444,0,0x0,8
tick,0x7ffdc994fb34,106587106,0,0x0,8
tick,0x7ffdc994fb34,106602251,0,0x0,8
tick,0x7ffdc994fb34,106617683,0,0x0,8
tick,0x7ffdc994fb34,106633491,0,0x0,8
tick,0x7ffdc994fb34,106649170,0,0x0,8
tick,0x7ffdc994fb34,106664960,0,0x0,8
tick,0x7ffdc994fb34,106680336,0,0x0,8
tick,0x7ffdc994fb34,106695787,0,0x0,8
tick,0x7ffdc994fb34,106711180,0,0x0,8
tick,0x7ffdc994fb34,106726418,0,0x0,8
tick,0x7ffdc994fb34,106741953,0,0x0,8
tick,0x7ffdc994fb34,106757242,0,0x0,8
tick,0x7ffdc994fb34,106772770,0,0x0,8
tick,0x7ffdc994fb34,106788351,0,0x0,8
tick,0x7ffdc994fb34,106803796,0,0x0,8
tick,0x7ffdc994fb34,106819183,0,0x0,8
tick,0x7ffdc994fb34,106834601,0,0x0,8
tick,0x7ffdc994fb34,106850180,0,0x0,8
tick,0x7ffdc994fb34,106865478,0,0x0,8
tick,0x7ffdc994fb34,106880774,0,0x0,8
tick,0x7ffdc994fb34,106895915,0,0x0,8
tick,0x7ffdc994fb34,106911436,0,0x0,8
tick,0x7ffdc994fb34,106926849,0,0x0,8
tick,0x7ffdc994fb34,106942085,0,0x0,8
tick,0x7ffdc994fb34,106958447,0,0x0,8
tick,0x7ffdc994fb34,106974403,0,0x0,8
tick,0x7ffdc994fb34,106989829,0,0x0,8
tick,0x7ffdc994fb34,107005605,0,0x0,8
tick,0x7ffdc994fb34,107021176,0,0x0,8
tick,0x7ffdc994fb34,107035711,0,0x0,8
tick,0x7ffdc994fb34,107051118,0,0x0,8
tick,0x7ffdc994fb34,107066439,0,0x0,8
tick,0x7ffdc994fb34,107082449,0,0x0,8
tick,0x7ffdc994fb34,107098512,0,0x0,8
tick,0x7ffdc994fb34,107114756,0,0x0,8
tick,0x7ffdc994fb34,107130148,0,0x0,8
tick,0x7ffdc994fb34,107145678,0,0x0,8
tick,0x7ffdc994fb34,107161467,0,0x0,8
tick,0x7ffdc994fb34,107176697,0,0x0,8
tick,0x7ffdc994fb34,107192541,0,0x0,8
tick,0x7ffdc994fb34,107208191,0,0x0,8
tick,0x7ffdc994fb34,107223527,0,0x0,8
tick,0x7ffdc994fb34,107239230,0,0x0,8
tick,0x7ffdc994fb34,107254767,0,0x0,8
tick,0x7ffdc994fb34,107270534,0,0x0,8
tick,0x7ffdc994fb34,107285453,0,0x0,8
tick,0x7ffdc994fb34,107300457,0,0x0,8
tick,0x7ffdc994fb34,107315612,0,0x0,8
tick,0x7ffdc994fb34,107331383,0,0x0,8
tick,0x7ffdc994fb34,107346808,0,0x0,8
tick,0x7ffdc994fb34,107362471,0,0x0,8
tick,0x7ffdc994fb34,107378060,0,0x0,8
tick,0x7ffdc994fb34,107393544,0,0x0,8
tick,0x7ffdc994fb34,107409522,0,0x0,8
tick,0x7ffdc994fb34,107425376,0,0x0,8
tick,0x7ffdc994fb34,107441565,0,0x0,8
tick,0x7ffdc994fb34,107457179,0,0x0,8
tick,0x7ffdc994fb34,107473615,0,0x0,8
tick,0x7ffdc994fb34,107489168,0,0x0,8
tick,0x7ffdc994fb34,107504788,0,0x0,8
tick,0x7ffdc994fb34,107520137,0,0x0,8
tick,0x7ffdc994fb34,107535899,0,0x0,8
tick,0x7ffdc994fb34,107552341,0,0x0,8
tick,0x7ffdc994fb34,107568201,0,0x0,8
tick,0x7ffdc994fb34,107583275,0,0x0,8
tick,0x7ffdc994fb34,107599182,0,0x0,8
tick,0x7ffdc994fb34,107614912,0,0x0,8
tick,0x7ffdc994fb34,107630080,0,0x0,8
tick,0x7ffdc994fb34,107646016,0,0x0,8
tick,0x7ffdc994fb34,107661619,0,0x0,8
tick,0x7ffdc994fb34,107677340,0,0x0,8
tick,0x7ffdc994fb34,107692558,0,0x0,8
tick,0x7ffdc994fb34,107708290,0,0x0,8
tick,0x7ffdc994fb34,107723907,0,0x0,8
tick,0x7ffdc994fb34,107739383,0,0x0,8
tick,0x7ffdc994fb34,107754592,0,0x0,8
tick,0x7ffdc994fb34,107770061,0,0x0,8
tick,0x7ffdc994fb34,107785366,0,0x0,8
tick,0x7ffdc994fb34,107800863,0,0x0,8
tick,0x7ffdc994fb34,107816555,0,0x0,8
tick,0x7ffdc994fb34,107832209,0,0x0,8
tick,0x7ffdc994fb34,107847772,0,0x0,8
tick,0x7ffdc994fb34,107863388,0,0x0,8
tick,0x7ffdc994fb34,107878352,0,0x0,8
tick,0x7ffdc994fb34,107893446,0,0x0,8
tick,0x7ffdc994fb34,107909204,0,0x0,8
tick,0x7ffdc994fb34,107925020,0,0x0,8
tick,0x7ffdc994fb34,107940418,0,0x0,8
tick,0x7ffdc994fb34,107955531,0,0x0,8
tick,0x7ffdc994fb34,107971196,0,0x0,8
tick,0x7ffdc994fb34,107986671,0,0x0,8
tick,0x7ffdc994fb34,108002387,0,0x0,8
tick,0x7ffdc994fb34,108017768,0,0x0,8
tick,0x7ffdc994fb34,108033416,0,0x0,8
tick,0x7ffdc994fb34,108048807,0,0x0,8
tick,0x7ffdc994fb34,108064090,0,0x0,8
tick,0x7ffdc994fb34,108079833,0,0x0,8
tick,0x7ffdc994fb34,108094972,0,0x0,8
tick,0x7ffdc994fb34,108110563,0,0x0,8
tick,0x7ffdc994fb34,108125937,0,0x0,8
tick,0x7ffdc994fb34,108141553,0,0x0,8
tick,0x7ffdc994fb34,108156955,0,0x0,8
tick,0x7ffdc994fb34,108172586,0,0x0,8
tick,0x7ffdc994fb34,108188128,0,0x0,8
tick,0x7ffdc994fb34,108203617,0,0x0,8
tick,0x7ffdc994fb34,108218524,0,0x0,8
tick,0x7ffdc994fb34,108233749,0,0x0,8
tick,0x7ffdc994fb34,108249698,0,0x0,8
tick,0x7ffdc994fb34,108265092,0,0x0,8
tick,0x7ffdc994fb34,108280413,0,0x0,8
tick,0x7ffdc994fb34,108295830,0,0x0,8
tick,0x7ffdc994fb34,108312106,0,0x0,8
tick,0x7ffdc994fb34,108327674,0,0x0,8
tick,0x7ffdc994fb34,108343959,0,0x0,8
tick,0x7ffdc994fb34,108359522,0,0x0,8
tick,0x7ffdc994fb34,108375034,0,0x0,8
tick,0x7ffdc994fb34,108391122,0,0x0,8
tick,0x7ffdc994fb34,108407300,0,0x0,8
tick,0x7ffdc994fb34,108423116,0,0x0,8
tick,0x7ffdc994fb34,108439209,0,0x0,8
tick,0x7ffdc994fb34,108454542,0,0x0,8
tick,0x7ffdc994fb34,108470237,0,0x0,8
tick,0x7ffdc994fb34,108485433,0,0x0,8
tick,0x7ffdc994fb34,108500646,0,0x0,8
tick,0x7ffdc994fb34,108516454,0,0x0,8
tick,0x7ffdc994fb34,108531798,0,0x0,8
tick,0x7ffdc994fb34,108546927,0,0x0,8
tick,0x7ffdc994fb34,108562813,0,0x0,8
tick,0x7ffdc994fb34,108578399,0,0x0,8
tick,0x7ffdc994fb34,108593981,0,0x0,8
tick,0x7ffdc994fb34,108609128,0,0x0,8
tick,0x7ffdc994fb34,108624276,0,0x0,8
tick,0x7ffdc994fb34,108640078,0,0x0,8
tick,0x7ffdc994fb34,108655504,0,0x0,8
tick,0x7ffdc994fb34,108671346,0,0x0,8
tick,0x7ffdc994fb34,108686732,0,0x0,8
tick,0x7ffdc994fb34,108702574,0,0x0,8
tick,0x7ffdc994fb34,108717562,0,0x0,8
tick,0x7ffdc994fb34,108733234,0,0x0,8
tick,0x7ffdc994fb34,108749152,0,0x0,8
tick,0x7ffdc994fb34,108764160,0,0x0,8
tick,0x7ffdc994fb34,108779840,0,0x0,8
tick,0x7ffdc994fb34,108795723,0,0x0,8
tick,0x7ffdc994fb34,108811292,0,0x0,8
tick,0x7ffdc994fb34,108827141,0,0x0,8
tick,0x7ffdc994fb34,108843217,0,0x0,8
tick,0x7ffdc994fb34,108858536,0,0x0,8
tick,0x7ffdc994fb34,108874707,0,0x0,8
tick,0x7ffdc994fb34,108890327,0,0x0,8
tick,0x7ffdc994fb34,108905946,0,0x0,8
tick,0x7ffdc994fb34,108922219,0,0x0,8
tick,0x7ffdc994fb34,108937284,0,0x0,8
tick,0x7ffdc994fb34,108953240,0,0x0,8
tick,0x7ffdc994fb34,108969081,0,0x0,8
tick,0x7ffdc994fb34,108984548,0,0x0,8
tick,0x7ffdc994fb34,109000255,0,0x0,8
tick,0x7ffdc994fb34,109015368,0,0x0,8
tick,0x7ffdc994fb34,109031551,0,0x0,8
tick,0x7ffdc994fb34,109047180,0,0x0,8
tick,0x7ffdc994fb34,109062136,0,0x0,8
tick,0x7ffdc994fb34,109077881,0,0x0,8
tick,0x7ffdc994fb34,109093449,0,0x0,8
tick,0x7ffdc994fb34,109108965,0,0x0,8
tick,0x7ffdc994fb34,109124268,0,0x0,8
tick,0x7ffdc994fb34,109139626,0,0x0,8
tick,0x7ffdc994fb34,109154838,0,0x0,8
tick,0x7ffdc994fb34,109170615,0,0x0,8
tick,0x7ffdc994fb34,109185758,0,0x0,8
tick,0x7ffdc994fb34,109201945,0,0x0,8
tick,0x7ffdc994fb34,109217543,0,0x0,8
tick,0x7ffdc994fb34,109232704,0,0x0,8
tick,0x7ffdc994fb34,109248669,0,0x0,8
tick,0x7ffdc994fb34,109264122,0,0x0,8
tick,0x7ffdc994fb34,109279638,0,0x0,8
tick,0x7ffdc994fb34,109295486,0,0x0,8
tick,0x7ffdc994fb34,109311377,0,0x0,8
tick,0x7ffdc994fb34,109326738,0,0x0,8
tick,0x7ffdc994fb34,109342080,0,0x0,8
tick,0x7ffdc994fb34,109357532,0,0x0,8
tick,0x7ffdc994fb34,109373064,0,0x0,8
tick,0x7ffdc994fb34,109389043,0,0x0,8
tick,0x7ffdc994fb34,109403991,0,0x0,8
tick,0x7ffdc994fb34,109419482,0,0x0,8
tick,0x7ffdc994fb34,109435821,0,0x0,8
tick,0x7ffdc994fb34,109451329,0,0x0,8
tick,0x7ffdc994fb34,109466731,0,0x0,8
tick,0x7ffdc994fb34,109481804,0,0x0,8
tick,0x7ffdc994fb34,109498229,0,0x0,8
tick,0x7ffdc994fb34,109513271,0,0x0,8
tick,0x7ffdc994fb34,109528900,0,0x0,8
tick,0x7ffdc994fb34,109544106,0,0x0,8
tick,0x7ffdc994fb34,109559515,0,0x0,8
tick,0x7ffdc994fb34,109574868,0,0x0,8
tick,0x7ffdc994fb34,109590055,0,0x0,8
tick,0x7ffdc994fb34,109606176,0,0x0,8
tick,0x7ffdc994fb34,109621775,0,0x0,8
tick,0x7ffdc994fb34,109637349,0,0x0,8
tick,0x7ffdc994fb34,109652848,0,0x0,8
tick,0x7ffdc994fb34,109668312,0,0x0,8
tick,0x7ffdc994fb34,109683950,0,0x0,8
tick,0x7ffdc994fb34,109699557,0,0x0,8
tick,0x7ffdc994fb34,109715020,0,0x0,8
tick,0x7ffdc994fb34,109730474,0,0x0,8
tick,0x7ffdc994fb34,109746136,0,0x0,8
tick,0x7ffdc994fb34,109761233,0,0x0,8
tick,0x7ffdc994fb34,109777281,0,0x0,8
tick,0x7ffdc994fb34,109792634,0,0x0,8
tick,0x7ffdc994fb34,109807855,0,0x0,8
tick,0x7ffdc994fb34,109823854,0,0x0,8
tick,0x7ffdc994fb34,109839993,0,0x0,8
tick,0x7ffdc994fb34,109855762,0,0x0,8
tick,0x7ffdc994fb34,109871494,0,0x0,8
tick,0x7ffdc994fb34,109886945,0,0x0,8
tick,0x7ffdc994fb34,109902702,0,0x0,8
tick,0x7ffdc994fb34,109917925,0,0x0,8
tick,0x7ffdc994fb34,109933502,0,0x0,8
tick,0x7ffdc994fb34,109948878,0,0x0,8
tick,0x7ffdc994fb34,109964213,0,0x0,8
tick,0x7ffdc994fb34,109980391,0,0x0,8
tick,0x7ffdc994fb34,109996115,0,0x0,8
tick,0x7ffdc994fb34,110011893,0,0x0,8
tick,0x7ffdc994fb34,110027054,0,0x0,8
tick,0x7ffdc994fb34,110042574,0,0x0,8
tick,0x7ffdc994fb34,110058513,0,0x0,8
tick,0x7ffdc994fb34,110073685,0,0x0,8
tick,0x7ffdc994fb34,110089399,0,0x0,8
tick,0x7ffdc994fb34,110104622,0,0x0,8
tick,0x7ffdc994fb34,110120322,0,0x0,8
tick,0x7ffdc994fb34,110135920,0,0x0,8
tick,0x7ffdc994fb34,110151109,0,0x0,8
tick,0x7ffdc994fb34,110167145,0,0x0,8
tick,0x7ffdc994fb34,110182144,0,0x0,8
tick,0x7ffdc994fb34,110198079,0,0x0,8
tick,0x7ffdc994fb34,110213425,0,0x0,8
tick,0x7ffdc994fb34,110229500,0,0x0,8
tick,0x7ffdc994fb34,110244533,0,0x0,8
tick,0x7ffdc994fb34,110260169,0,0x0,8
tick,0x7ffdc994fb34,110275282,0,0x0,8
tick,0x7ffdc994fb34,110290993,0,0x0,8
tick,0x7ffdc994fb34,110307024,0,0x0,8
tick,0x7ffdc994fb34,110322294,0,0x0,8
tick,0x7ffdc994fb34,110337517,0,0x0,8
tick,0x7ffdc994fb34,110352971,0,0x0,8
tick,0x7ffdc994fb34,110369246,0,0x0,8
tick,0x7ffdc994fb34,110385157,0,0x0,8
tick,0x7ffdc994fb34,110400135,0,0x0,8
tick,0x7ffdc994fb34,110415955,0,0x0,8
tick,0x7ffdc994fb34,110431939,0,0x0,8
tick,0x7ffdc994fb34,110448289,0,0x0,8
tick,0x7ffdc994fb34,110462678,0,0x0,8
tick,0x7ffdc994fb34,110478593,0,0x0,8
tick,0x7ffdc994fb34,110494044,0,0x0,8
tick,0x7ffdc994fb34,110509194,0,0x0,8
tick,0x7ffdc994fb34,110524780,0,0x0,8
tick,0x7ffdc994fb34,110539627,0,0x0,8
tick,0x7ffdc994fb34,110555178,0,0x0,8
tick,0x7ffdc994fb34,110570657,0,0x0,8
tick,0x7ffdc994fb34,110586494,0,0x0,8
tick,0x7ffdc994fb34,110602304,0,0x0,8
tick,0x7ffdc994fb34,110617713,0,0x0,8
tick,0x7ffdc994fb34,110633594,0,0x0,8
tick,0x7ffdc994fb34,110649093,0,0x0,8
tick,0x7ffdc994fb34,110664693,0,0x0,8
tick,0x7ffdc994fb34,110679926,0,0x0,8
tick,0x7ffdc994fb34,110695810,0,0x0,8
tick,0x7ffdc994fb34,110711803,0,0x0,8
tick,0x7ffdc994fb34,110727657,0,0x0,8
tick,0x7ffdc994fb34,110743163,0,0x0,8
tick,0x7ffdc994fb34,110758403,0,0x0,8
tick,0x7ffdc994fb34,110773497,0,0x0,8
tick,0x7ffdc994fb34,110789166,0,0x0,8
tick,0x7ffdc994fb34,110804607,0,0x0,8
tick,0x7ffdc994fb34,110819662,0,0x0,8
tick,0x7ffdc994fb34,110835370,0,0x0,8
tick,0x7ffdc994fb34,110851460,0,0x0,8
tick,0x7ffdc994fb34,110866981,0,0x0,8
tick,0x7ffdc994fb34,110882307,0,0x0,8
tick,0x7ffdc994fb34,110897983,0,0x0,8
tick,0x7ffdc994fb34,110913629,0,0x0,8
tick,0x7ffdc994fb34,110929139,0,0x0,8
tick,0x7ffdc994fb34,110945009,0,0x0,8
tick,0x7ffdc994fb34,110960461,0,0x0,8
tick,0x7ffdc994fb34,110976317,0,0x0,8
tick,0x7ffdc994fb34,110992192,0,0x0,8
tick,0x7ffdc994fb34,111008038,0,0x0,8
tick,0x7ffdc994fb34,111024086,0,0x0,8
tick,0x7ffdc994fb34,111039325,0,0x0,8
tick,0x7ffdc994fb34,111054668,0,0x0,8
tick,0x7ffdc994fb34,111070494,0,0x0,8
tick,0x7ffdc994fb34,111085861,0,0x0,8
tick,0x7ffdc994fb34,111101364,0,0x0,8
tick,0x7ffdc994fb34,111116612,0,0x0,8
tick,0x7ffdc994fb34,111132159,0,0x0,8
tick,0x7ffdc994fb34,111147577,0,0x0,8
tick,0x7ffdc994fb34,111163212,0,0x0,8
tick,0x7ffdc994fb34,111179206,0,0x0,8
tick,0x7ffdc994fb34,111194704,0,0x0,8
tick,0x7ffdc994fb34,111209884,0,0x0,8
tick,0x7ffdc994fb34,111225597,0,0x0,8
tick,0x7ffdc994fb34,111241422,0,0x0,8
tick,0x7ffdc994fb34,111257316,0,0x0,8
tick,0x7ffdc994fb34,111272456,0,0x0,8
tick,0x7ffdc994fb34,111288555,0,0x0,8
tick,0x7ffdc994fb34,111303865,0,0x0,8
tick,0x7ffdc994fb34,111319468,0,0x0,8
tick,0x7ffdc994fb34,111335587,0,0x0,8
tick,0x7ffdc994fb34,111351381,0,0x0,8
tick,0x7ffdc994fb34,111366541,0,0x0,8
tick,0x7ffdc994fb34,111381878,0,0x0,8
tick,0x7ffdc994fb34,111397621,0,0x0,8
tick,0x7ffdc994fb34,111413105,0,0x0,8
tick,0x7ffdc994fb34,111428667,0,0x0,8
tick,0x7ffdc994fb34,111444311,0,0x0,8
tick,0x7ffdc994fb34,111460153,0,0x0,8
tick,0x7ffdc994fb34,111475543,0,0x0,8
tick,0x7ffdc994fb34,111491202,0,0x0,8
tick,0x7ffdc994fb34,111506454,0,0x0,8
tick,0x7ffdc994fb34,111521978,0,0x0,8
tick,0x7ffdc994fb34,111537058,0,0x0,8
tick,0x7ffdc994fb34,111552964,0,0x0,8
tick,0x7ffdc994fb34,111570094,0,0x0,8
tick,0x7ffdc994fb34,111585836,0,0x0,8
tick,0x7ffdc994fb34,111600389,0,0x0,8
tick,0x7ffdc994fb34,111615991,0,0x0,8
tick,0x7ffdc994fb34,111629789,0,0x0,8
tick,0x7ffdc994fb34,111645997,0,0x0,8
tick,0x7ffdc994fb34,111661826,0,0x0,8
tick,0x7ffdc994fb34,111677330,0,0x0,8
tick,0x7ffdc994fb34,111692925,0,0x0,8
tick,0x7ffdc994fb34,111708363,0,0x0,8
tick,0x7ffdc994fb34,111724315,0,0x0,8
tick,0x7ffdc994fb34,111740409,0,0x0,8
tick,0x7ffdc994fb34,111756340,0,0x0,8
tick,0x7ffdc994fb34,111772335,0,0x0,8
tick,0x7ffdc994fb34,111788208,0,0x0,8
tick,0x7ffdc994fb34,111803280,0,0x0,8
tick,0x7ffdc994fb34,111819106,0,0x0,8
tick,0x7ffdc994fb34,111834806,0,0x0,8
tick,0x7ffdc994fb34,111850388,0,0x0,8
tick,0x7ffdc994fb34,111866336,0,0x0,8
tick,0x7ffdc994fb34,111882011,0,0x0,8
tick,0x7ffdc994fb34,111897732,0,0x0,8
tick,0x7ffdc994fb34,111913037,0,0x0,8
tick,0x7ffdc994fb34,111928557,0,0x0,8
tick,0x7ffdc994fb34,111944626,0,0x0,8
tick,0x7ffdc994fb34,111959929,0,0x0,8
tick,0x7ffdc994fb34,111975631,0,0x0,8
tick,0x7ffdc994fb34,111990889,0,0x0,8
tick,0x7ffdc994fb34,112006824,0,0x0,8
tick,0x7ffdc994fb34,112022082,0,0x0,8
tick,0x7ffdc994fb34,112037435,0,0x0,8
tick,0x7ffdc994fb34,112053055,0,0x0,8
tick,0x7ffdc994fb34,112068536,0,0x0,8
tick,0x7ffdc994fb34,112084158,0,0x0,8
tick,0x7ffdc994fb34,112099436,0,0x0,8
tick,0x7ffdc994fb34,112115162,0,0x0,8
tick,0x7ffdc994fb34,112130663,0,0x0,8
tick,0x7ffdc994fb34,112145968,0,0x0,8
tick,0x7ffdc994fb34,112161030,0,0x0,8
tick,0x7ffdc994fb34,112177193,0,0x0,8
tick,0x7ffdc994fb34,112192779,0,0x0,8
tick,0x7ffdc994fb34,112208188,0,0x0,8
tick,0x7ffdc994fb34,112224424,0,0x0,8
tick,0x7ffdc994fb34,112240047,0,0x0,8
tick,0x7ffdc994fb34,112255764,0,0x0,8
tick,0x7ffdc994fb34,112271190,0,0x0,8
tick,0x7ffdc994fb34,112286887,0,0x0,8
tick,0x7ffdc994fb34,112302366,0,0x0,8
tick,0x7ffdc994fb34,112318092,0,0x0,8
tick,0x7ffdc994fb34,112335869,0,0x0,8
tick,0x7ffdc994fb34,112349321,0,0x0,8
tick,0x7ffdc994fb34,112364954,0,0x0,8
tick,0x7ffdc994fb34,112380064,0,0x0,8
tick,0x7ffdc994fb34,112396127,0,0x0,8
tick,0x7ffdc994fb34,112412098,0,0x0,8
tick,0x7ffdc994fb34,112427652,0,0x0,8
tick,0x7ffdc994fb34,112443747,0,0x0,8
tick,0x7ffdc994fb34,112459165,0,0x0,8
tick,0x7ffdc994fb34,112474621,0,0x0,8
tick,0x7ffdc994fb34,112490084,0,0x0,8
tick,0x7ffdc994fb34,112506002,0,0x0,8
tick,0x7ffdc994fb34,112521225,0,0x0,8
tick,0x7ffdc994fb34,112536847,0,0x0,8
tick,0x7ffdc994fb34,112551899,0,0x0,8
tick,0x7ffdc994fb34,112567372,0,0x0,8
tick,0x7ffdc994fb34,112582819,0,0x0,8
tick,0x7ffdc994fb34,112598236,0,0x0,8
tick,0x7ffdc994fb34,112613088,0,0x0,8
tick,0x7ffdc994fb34,112628416,0,0x0,8
tick,0x7ffdc994fb34,112643575,0,0x0,8
tick,0x7ffdc994fb34,112659325,0,0x0,8
tick,0x7ffdc994fb34,112675311,0,0x0,8
tick,0x7ffdc994fb34,112691473,0,0x0,8
tick,0x7ffdc994fb34,112707615,0,0x0,8
tick,0x7ffdc994fb34,112722782,0,0x0,8
tick,0x7ffdc994fb34,112739008,0,0x0,8
tick,0x7ffdc994fb34,112754347,0,0x0,8
tick,0x7ffdc994fb34,112769908,0,0x0,8
tick,0x7ffdc994fb34,112786028,0,0x0,8
tick,0x7ffdc994fb34,112801201,0,0x0,8
tick,0x7ffdc994fb34,112816917,0,0x0,8
tick,0x7ffdc994fb34,112832176,0,0x0,8
tick,0x7ffdc994fb34,112848689,0,0x0,8
tick,0x7ffdc994fb34,112863802,0,0x0,8
tick,0x7ffdc994fb34,112879030,0,0x0,8
tick,0x7ffdc994fb34,112895080,0,0x0,8
tick,0x7ffdc994fb34,112911297,0,0x0,8
tick,0x7ffdc994fb34,112926596,0,0x0,8
tick,0x7ffdc994fb34,112942740,0,0x0,8
tick,0x7ffdc994fb34,112958579,0,0x0,8
tick,0x7ffdc994fb34,112974611,0,0x0,8
tick,0x7ffdc994fb34,112990054,0,0x0,8
tick,0x7ffdc994fb34,113005361,0,0x0,8
tick,0x7ffdc994fb34,113021326,0,0x0,8
tick,0x7ffdc994fb34,113036904,0,0x0,8
tick,0x7ffdc994fb34,113052275,0,0x0,8
tick,0x7ffdc994fb34,113067982,0,0x0,8
tick,0x7ffdc994fb34,113083312,0,0x0,8
tick,0x7ffdc994fb34,113099186,0,0x0,8
tick,0x7ffdc994fb34,113114412,0,0x0,8
tick,0x7ffdc994fb34,113130033,0,0x0,8
tick,0x7ffdc994fb34,113145506,0,0x0,8
tick,0x7ffdc994fb34,113161102,0,0x0,8
tick,0x7ffdc994fb34,113176771,0,0x0,8
tick,0x7ffdc994fb34,113192191,0,0x0,8
tick,0x7ffdc994fb34,113207360,0,0x0,8
tick,0x7ffdc994fb34,113223496,0,0x0,8
tick,0x7ffdc994fb34,113239176,0,0x0,8
tick,0x7ffdc994fb34,113255152,0,0x0,8
tick,0x7ffdc994fb34,113270988,0,0x0,8
tick,0x7ffdc994fb34,113286360,0,0x0,8
tick,0x7ffdc994fb34,113301575,0,0x0,8
tick,0x7ffdc994fb34,113317241,0,0x0,8
tick,0x7ffdc994fb34,113332357,0,0x0,8
tick,0x7ffdc994fb34,113348075,0,0x0,8
tick,0x7ffdc994fb34,113363040,0,0x0,8
tick,0x7ffdc994fb34,113378858,0,0x0,8
tick,0x7ffdc994fb34,113393887,0,0x0,8
tick,0x7ffdc994fb34,113409094,0,0x0,8
tick,0x7ffdc994fb34,113424871,0,0x0,8
tick,0x7ffdc994fb34,113440331,0,0x0,8
tick,0x7ffdc994fb34,113456158,0,0x0,8
tick,0x7ffdc994fb34,113471266,0,0x0,8
tick,0x7ffdc994fb34,113487063,0,0x0,8
tick,0x7ffdc994fb34,113502254,0,0x0,8
tick,0x7ffdc994fb34,113517742,0,0x0,8
tick,0x7ffdc994fb34,113533955,0,0x0,8
tick,0x7ffdc994fb34,113549327,0,0x0,8
tick,0x7ffdc994fb34,113565151,0,0x0,8
tick,0x7ffdc994fb34,113581237,0,0x0,8
tick,0x7ffdc994fb34,113596379,0,0x0,8
tick,0x7ffdc994fb34,113611482,0,0x0,8
tick,0x7ffdc994fb34,113627331,0,0x0,8
tick,0x7ffdc994fb34,113642355,0,0x0,8
tick,0x7ffdc994fb34,113658327,0,0x0,8
tick,0x7ffdc994fb34,113673694,0,0x0,8
tick,0x7ffdc994fb34,113689316,0,0x0,8
tick,0x7ffdc994fb34,113704630,0,0x0,8
tick,0x7ffdc994fb34,113720487,0,0x0,8
tick,0x7ffdc994fb34,113736100,0,0x0,8
tick,0x7ffdc994fb34,113752008,0,0x0,8
tick,0x7ffdc994fb34,113767615,0,0x0,8
tick,0x7ffdc994fb34,113783575,0,0x0,8
tick,0x7ffdc994fb34,113799003,0,0x0,8
tick,0x7ffdc994fb34,113814402,0,0x0,8
tick,0x7ffdc994fb34,113830339,0,0x0,8
tick,0x7ffdc994fb34,113845949,0,0x0,8
tick,0x7ffdc994fb34,113860845,0,0x0,8
tick,0x7ffdc994fb34,113875996,0,0x0,8
tick,0x7ffdc994fb34,113891565,0,0x0,8
tick,0x7ffdc994fb34,113907712,0,0x0,8
tick,0x7ffdc994fb34,113923461,0,0x0,8
tick,0x7ffdc994fb34,113939019,0,0x0,8
tick,0x7ffdc994fb34,113953986,0,0x0,8
tick,0x7ffdc994fb34,113969785,0,0x0,8
tick,0x7ffdc994fb34,113985216,0,0x0,8
tick,0x7ffdc994fb34,114000800,0,0x0,8
tick,0x7ffdc994fb34,114016024,0,0x0,8
tick,0x7ffdc994fb34,114031524,0,0x0,8
tick,0x7ffdc994fb34,114047236,0,0x0,8
tick,0x7ffdc994fb34,114062487,0,0x0,8
tick,0x7ffdc994fb34,114078571,0,0x0,8
tick,0x7ffdc994fb34,114093646,0,0x0,8
tick,0x7ffdc994fb34,114109568,0,0x0,8
tick,0x7ffdc994fb34,114125494,0,0x0,8
tick,0x7ffdc994fb34,114141217,0,0x0,8
tick,0x7ffdc994fb34,114156614,0,0x0,8
tick,0x7ffdc994fb34,114171775,0,0x0,8
tick,0x7ffdc994fb34,114187133,0,0x0,8
tick,0x7ffdc994fb34,114203360,0,0x0,8
tick,0x7ffdc994fb34,114218150,0,0x0,8
tick,0x7ffdc994fb34,114233224,0,0x0,8
tick,0x7ffdc994fb34,114248730,0,0x0,8
tick,0x7ffdc994fb34,114264595,0,0x0,8
tick,0x7ffdc994fb34,114279975,0,0x0,8
tick,0x7ffdc994fb34,114295896,0,0x0,8
tick,0x7ffdc994fb34,114311294,0,0x0,8
tick,0x7ffdc994fb34,114326182,0,0x0,8
tick,0x7ffdc994fb34,114341603,0,0x0,8
tick,0x7ffdc994fb34,114357305,0,0x0,8
tick,0x7ffdc994fb34,114372880,0,0x0,8
tick,0x7ffdc994fb34,114388701,0,0x0,8
tick,0x7ffdc994fb34,114403522,0,0x0,8
tick,0x7ffdc994fb34,114418952,0,0x0,8
tick,0x7ffdc994fb34,114434919,0,0x0,8
tick,0x7ffdc994fb34,114451127,0,0x0,8
tick,0x7ffdc994fb34,114467019,0,0x0,8
tick,0x7ffdc994fb34,114483049,0,0x0,8
tick,0x7ffdc994fb34,114498785,0,0x0,8
tick,0x7ffdc994fb34,114514228,0,0x0,8
tick,0x7ffdc994fb34,114530119,0,0x0,8
tick,0x7ffdc994fb34,114545733,0,0x0,8
tick,0x7ffdc994fb34,114561662,0,0x0,8
tick,0x7ffdc994fb34,114576440,0,0x0,8
tick,0x7ffdc994fb34,114592057,0,0x0,8
tick,0x7ffdc994fb34,114607070,0,0x0,8
tick,0x7ffdc994fb34,114623054,0,0x0,8
tick,0x7ffdc994fb34,114638555,0,0x0,8
tick,0x7ffdc994fb34,114654113,0,0x0,8
tick,0x7ffdc994fb34,114670033,0,0x0,8
tick,0x7ffdc994fb34,114685429,0,0x0,8
tick,0x7ffdc994fb34,114700947,0,0x0,8
tick,0x7ffdc994fb34,114716388,0,0x0,8
tick,0x7ffdc994fb34,114731797,0,0x0,8
tick,0x7ffdc994fb34,114747347,0,0x0,8
tick,0x7ffdc994fb34,114763103,0,0x0,8
tick,0x7ffdc994fb34,114779088,0,0x0,8
tick,0x7ffdc994fb34,114794941,0,0x0,8
tick,0x7ffdc994fb34,114810494,0,0x0,8
tick,0x7ffdc994fb34,114825767,0,0x0,8
tick,0x7ffdc994fb34,114841049,0,0x0,8
tick,0x7ffdc994fb34,114856824,0,0x0,8
tick,0x7ffdc994fb34,114872407,0,0x0,8
tick,0x7ffdc994fb34,114887813,0,0x0,8
tick,0x7ffdc994fb34,114903833,0,0x0,8
tick,0x7ffdc994fb34,114919387,0,0x0,8
tick,0x7ffdc994fb34,114934641,0,0x0,8
tick,0x7ffdc994fb34,114950073,0,0x0,8
tick,0x7ffdc994fb34,114965377,0,0x0,8
tick,0x7ffdc994fb34,114981193,0,0x0,8
tick,0x7ffdc994fb34,114997222,0,0x0,8
tick,0x7ffdc994fb34,115012308,0,0x0,8
tick,0x7ffdc994fb34,115028031,0,0x0,8
tick,0x7ffdc994fb34,115043199,0,0x0,8
tick,0x7ffdc994fb34,115058508,0,0x0,8
tick,0x7ffdc994fb34,115073549,0,0x0,8
tick,0x7ffdc994fb34,115089415,0,0x0,8
tick,0x7ffdc994fb34,115105384,0,0x0,8
tick,0x7ffdc994fb34,115120584,0,0x0,8
tick,0x7ffdc994fb34,115136185,0,0x0,8
tick,0x7ffdc994fb34,115151777,0,0x0,8
tick,0x7ffdc994fb34,115167360,0,0x0,8
tick,0x7ffdc994fb34,115182860,0,0x0,8
tick,0x7ffdc994fb34,115198529,0,0x0,8
tick,0x7ffdc994fb34,115213719,0,0x0,8
tick,0x7ffdc994fb34,115229353,0,0x0,8
tick,0x7ffdc994fb34,115244695,0,0x0,8
tick,0x7ffdc994fb34,115260035,0,0x0,8
tick,0x7ffdc994fb34,115275440,0,0x0,8
tick,0x7ffdc994fb34,115290936,0,0x0,8
tick,0x7ffdc994fb34,115306241,0,0x0,8
tick,0x7ffdc994fb34,115321702,0,0x0,8
tick,0x7ffdc994fb34,115336673,0,0x0,8
tick,0x7ffdc994fb34,115352630,0,0x0,8
tick,0x7ffdc994fb34,115368197,0,0x0,8
tick,0x7ffdc994fb34,115383316,0,0x0,8
tick,0x7ffdc994fb34,115398930,0,0x0,8
tick,0x7ffdc994fb34,115414384,0,0x0,8
tick,0x7ffdc994fb34,115429857,0,0x0,8
tick,0x7ffdc994fb34,115445732,0,0x0,8
tick,0x7ffdc994fb34,115461260,0,0x0,8
tick,0x7ffdc994fb34,115477151,0,0x0,8
tick,0x7ffdc994fb34,115492296,0,0x0,8
tick,0x7ffdc994fb34,115508055,0,0x0,8
tick,0x7ffdc994fb34,115523748,0,0x0,8
tick,0x7ffdc994fb34,115539332,0,0x0,8
tick,0x7ffdc994fb34,115554456,0,0x0,8
tick,0x7ffdc994fb34,115570419,0,0x0,8
tick,0x7ffdc994fb34,115585864,0,0x0,8
tick,0x7ffdc994fb34,115601681,0,0x0,8
tick,0x7ffdc994fb34,115616942,0,0x0,8
tick,0x7ffdc994fb34,115632589,0,0x0,8
tick,0x7ffdc994fb34,115648026,0,0x0,8
tick,0x7ffdc994fb34,115663881,0,0x0,8
tick,0x7ffdc994fb34,115679434,0,0x0,8
tick,0x7ffdc994fb34,115694875,0,0x0,8
tick,0x7ffdc994fb34,115710326,0,0x0,8
tick,0x7ffdc994fb34,115726311,0,0x0,8
tick,0x7ffdc994fb34,115742237,0,0x0,8
tick,0x7ffdc994fb34,115757860,0,0x0,8
tick,0x7ffdc994fb34,115773253,0,0x0,8
tick,0x7ffdc994fb34,115789055,0,0x0,8
tick,0x7ffdc994fb34,115804411,0,0x0,8
tick,0x7ffdc994fb34,115820045,0,0x0,8
tick,0x7ffdc994fb34,115835987,0,0x0,8
tick,0x7ffdc994fb34,115851264,0,0x0,8
tick,0x7ffdc994fb34,115867512,0,0x0,8
tick,0x7ffdc994fb34,115883324,0,0x0,8
tick,0x7ffdc994fb34,115899168,0,0x0,8
tick,0x7ffdc994fb34,115914389,0,0x0,8
tick,0x7ffdc994fb34,115929698,0,0x0,8
tick,0x7ffdc994fb34,115944974,0,0x0,8
tick,0x7ffdc994fb34,115960391,0,0x0,8
tick,0x7ffdc994fb34,115976697,0,0x0,8
tick,0x7ffdc994fb34,115992087,0,0x0,8
tick,0x7ffdc994fb34,116007476,0,0x0,8
tick,0x7ffdc994fb34,116023641,0,0x0,8
tick,0x7ffdc994fb34,116039072,0,0x0,8
tick,0x7ffdc994fb34,116054445,0,0x0,8
tick,0x7ffdc994fb34,116069868,0,0x0,8
tick,0x7ffdc994fb34,116085827,0,0x0,8
tick,0x7ffdc994fb34,116101460,0,0x0,8
tick,0x7ffdc994fb34,116116865,0,0x0,8
tick,0x7ffdc994fb34,116132552,0,0x0,8
tick,0x7ffdc994fb34,116147986,0,0x0,8
tick,0x7ffdc994fb34,116163649,0,0x0,8
tick,0x7ffdc994fb34,116180023,0,0x0,8
tick,0x7ffdc994fb34,116195833,0,0x0,8
tick,0x7ffdc994fb34,116211303,0,0x0,8
tick,0x7ffdc994fb34,116226188,0,0x0,8
tick,0x7ffdc994fb34,116242120,0,0x0,8
tick,0x7ffdc994fb34,116257232,0,0x0,8
tick,0x7ffdc994fb34,116272929,0,0x0,8
tick,0x7ffdc994fb34,116288196,0,0x0,8
tick,0x7ffdc994fb34,116303554,0,0x0,8
tick,0x7ffdc994fb34,116319398,0,0x0,8
tick,0x7ffdc994fb34,116334555,0,0x0,8
tick,0x7ffdc994fb34,116349963,0,0x0,8
tick,0x7ffdc994fb34,116366012,0,0x0,8
tick,0x7ffdc994fb34,116381522,0,0x0,8
tick,0x7ffdc994fb34,116397060,0,0x0,8
tick,0x7ffdc994fb34,116412320,0,0x0,8
tick,0x7ffdc994fb34,116427946,0,0x0,8
tick,0x7ffdc994fb34,116443210,0,0x0,8
tick,0x7ffdc994fb34,116459019,0,0x0,8
tick,0x7ffdc994fb34,116474325,0,0x0,8
tick,0x7ffdc994fb34,116489970,0,0x0,8
tick,0x7ffdc994fb34,116505286,0,0x0,8
tick,0x7ffdc994fb34,116520490,0,0x0,8
tick,0x7ffdc994fb34,116535723,0,0x0,8
tick,0x7ffdc994fb34,116551126,0,0x0,8
tick,0x7ffdc994fb34,116566635,0,0x0,8
tick,0x7ffdc994fb34,116582544,0,0x0,8
tick,0x7ffdc994fb34,116598387,0,0x0,8
tick,0x7ffdc994fb34,116613690,0,0x0,8
tick,0x7ffdc994fb34,116629413,0,0x0,8
tick,0x7ffdc994fb34,116644485,0,0x0,8
tick,0x7ffdc994fb34,116660363,0,0x0,8
tick,0x7ffdc994fb34,116676214,0,0x0,8
tick,0x7ffdc994fb34,116691438,0,0x0,8
tick,0x7ffdc994fb34,116706910,0,0x0,8
tick,0x7ffdc994fb34,116722431,0,0x0,8
tick,0x7ffdc994fb34,116738714,0,0x0,8
tick,0x7ffdc994fb34,116754141,0,0x0,8
tick,0x7ffdc994fb34,116769668,0,0x0,8
tick,0x7ffdc994fb34,116785094,0,0x0,8
tick,0x7ffdc994fb34,116800834,0,0x0,8
tick,0x7ffdc994fb34,116816383,0,0x0,8
tick,0x7ffdc994fb34,116832160,0,0x0,8
tick,0x7ffdc994fb34,116847276,0,0x0,8
tick,0x7ffdc994fb34,116863116,0,0x0,8
tick,0x7ffdc994fb34,116879154,0,0x0,8
tick,0x7ffdc994fb34,116894708,0,0x0,8
tick,0x7ffdc994fb34,116910337,0,0x0,8
tick,0x7ffdc994fb34,116926148,0,0x0,8
tick,0x7ffdc994fb34,116941672,0,0x0,8
tick,0x7ffdc994fb34,116957043,0,0x0,8
tick,0x7ffdc994fb34,116972885,0,0x0,8
tick,0x7ffdc994fb34,116988703,0,0x0,8
tick,0x7ffdc994fb34,117003632,0,0x0,8
tick,0x7ffdc994fb34,117019351,0,0x0,8
tick,0x7ffdc994fb34,117034786,0,0x0,8
tick,0x7ffdc994fb34,117050540,0,0x0,8
tick,0x7ffdc994fb34,117066234,0,0x0,8
tick,0x7ffdc994fb34,117081993,0,0x0,8
tick,0x7ffdc994fb34,117097197,0,0x0,8
tick,0x7ffdc994fb34,117112591,0,0x0,8
tick,0x7ffdc994fb34,117127903,0,0x0,8
tick,0x7ffdc994fb34,117143343,0,0x0,8
tick,0x7ffdc994fb34,117158715,0,0x0,8
tick,0x7ffdc994fb34,117174229,0,0x0,8
tick,0x7ffdc994fb34,117189825,0,0x0,8
tick,0x7ffdc994fb34,117205684,0,0x0,8
tick,0x7ffdc994fb34,117220880,0,0x0,8
tick,0x7ffdc994fb34,117236768,0,0x0,8
tick,0x7ffdc994fb34,117252873,0,0x0,8
tick,0x7ffdc994fb34,117267700,0,0x0,8
tick,0x7ffdc994fb34,117283347,0,0x0,8
tick,0x7ffdc994fb34,117298916,0,0x0,8
tick,0x7ffdc994fb34,117314280,0,0x0,8
tick,0x7ffdc994fb34,117329702,0,0x0,8
tick,0x7ffdc994fb34,117344888,0,0x0,8
tick,0x7ffdc994fb34,117360082,0,0x0,8
tick,0x7ffdc994fb34,117375682,0,0x0,8
tick,0x7ffdc994fb34,117391529,0,0x0,8
tick,0x7ffdc994fb34,117406899,0,0x0,8
tick,0x7ffdc994fb34,117422534,0,0x0,8
tick,0x7ffdc994fb34,117438065,0,0x0,8
tick,0x7ffdc994fb34,117453287,0,0x0,8
tick,0x7ffdc994fb34,117469147,0,0x0,8
tick,0x7ffdc994fb34,117484289,0,0x0,8
tick,0x7ffdc994fb34,117500129,0,0x0,8
tick,0x7ffdc994fb34,117515418,0,0x0,8
tick,0x7ffdc994fb34,117531046,0,0x0,8
tick,0x7ffdc994fb34,117546499,0,0x0,8
tick,0x7ffdc994fb34,117561912,0,0x0,8
tick,0x7ffdc994fb34,117577681,0,0x0,8
tick,0x7ffdc994fb34,117593061,0,0x0,8
tick,0x7ffdc994fb34,117608910,0,0x0,8
tick,0x7ffdc994fb34,117624160,0,0x0,8
tick,0x7ffdc994fb34,117640017,0,0x0,8
tick,0x7ffdc994fb34,117655194,0,0x0,8
tick,0x7ffdc994fb34,117670747,0,0x0,8
tick,0x7ffdc994fb34,117686515,0,0x0,8
tick,0x7ffdc994fb34,117702820,0,0x0,8
tick,0x7ffdc994fb34,117718406,0,0x0,8
tick,0x7ffdc994fb34,117733461,0,0x0,8
tick,0x7ffdc994fb34,117749622,0,0x0,8
tick,0x7ffdc994fb34,117765538,0,0x0,8
tick,0x7ffdc994fb34,117781350,0,0x0,8
tick,0x7ffdc994fb34,117797305,0,0x0,8
tick,0x7ffdc994fb34,117813040,0,0x0,8
tick,0x7ffdc994fb34,117828793,0,0x0,8
tick,0x7ffdc994fb34,117843927,0,0x0,8
tick,0x7ffdc994fb34,117859599,0,0x0,8
tick,0x7ffdc994fb34,117874516,0,0x0,8
tick,0x7ffdc994fb34,117890436,0,0x0,8
tick,0x7ffdc994fb34,117905697,0,0x0,8
tick,0x7ffdc994fb34,117921742,0,0x0,8
tick,0x7ffdc994fb34,117936913,0,0x0,8
tick,0x7ffdc994fb34,117952736,0,0x0,8
tick,0x7ffdc994fb34,117968298,0,0x0,8
tick,0x7ffdc994fb34,117983629,0,0x0,8
tick,0x7ffdc994fb34,117999279,0,0x0,8
tick,0x7ffdc994fb34,118014410,0,0x0,8
tick,0x7ffdc994fb34,118030522,0,0x0,8
tick,0x7ffdc994fb34,118046048,0,0x0,8
tick,0x7ffdc994fb34,118061411,0,0x0,8
tick,0x7ffdc994fb34,118077267,0,0x0,8
tick,0x7ffdc994fb34,118092782,0,0x0,8
tick,0x7ffdc994fb34,118108250,0,0x0,8
tick,0x7ffdc994fb34,118123298,0,0x0,8
tick,0x7ffdc994fb34,118138911,0,0x0,8
tick,0x7ffdc994fb34,118154146,0,0x0,8
tick,0x7ffdc994fb34,118169424,0,0x0,8
tick,0x7ffdc994fb34,118185032,0,0x0,8
tick,0x7ffdc994fb34,118200628,0,0x0,8
tick,0x7ffdc994fb34,118216016,0,0x0,8
tick,0x7ffdc994fb34,118231783,0,0x0,8
tick,0x7ffdc994fb34,118247212,0,0x0,8
tick,0x7ffdc994fb34,118262907,0,0x0,8
tick,0x7ffdc994fb34,118278196,0,0x0,8
tick,0x7ffdc994fb34,118293798,0,0x0,8
tick,0x7ffdc994fb34,118309027,0,0x0,8
tick,0x7ffdc994fb34,118324497,0,0x0,8
tick,0x7ffdc994fb34,118339560,0,0x0,8
tick,0x7ffdc994fb34,118355186,0,0x0,8
tick,0x7ffdc994fb34,118371286,0,0x0,8
tick,0x7ffdc994fb34,118387521,0,0x0,8
tick,0x7ffdc994fb34,118403553,0,0x0,8
tick,0x7ffdc994fb34,118419541,0,0x0,8
tick,0x7ffdc994fb34,118435340,0,0x0,8
tick,0x7ffdc994fb34,118450613,0,0x0,8
tick,0x7ffdc994fb34,118465593,0,0x0,8
tick,0x7ffdc994fb34,118481510,0,0x0,8
tick,0x7ffdc994fb34,118497391,0,0x0,8
tick,0x7ffdc994fb34,118512898,0,0x0,8
tick,0x7ffdc994fb34,118528050,0,0x0,8
tick,0x7ffdc994fb34,118543193,0,0x0,8
tick,0x7ffdc994fb34,118558681,0,0x0,8
tick,0x7ffdc994fb34,118574225,0,0x0,8
tick,0x7ffdc994fb34,118589933,0,0x0,8
tick,0x7ffdc994fb34,118605392,0,0x0,8
tick,0x7ffdc994fb34,118620946,0,0x0,8
tick,0x7ffdc994fb34,118636478,0,0x0,8
tick,0x7ffdc994fb34,118652621,0,0x0,8
tick,0x7ffdc994fb34,118667998,0,0x0,8
tick,0x7ffdc994fb34,118683480,0,0x0,8
tick,0x7ffdc994fb34,118698985,0,0x0,8
tick,0x7ffdc994fb34,118715056,0,0x0,8
tick,0x7ffdc994fb34,118730667,0,0x0,8
tick,0x7ffdc994fb34,118746281,0,0x0,8
tick,0x7ffdc994fb34,118761442,0,0x0,8
tick,0x7ffdc994fb34,118776873,0,0x0,8
tick,0x7ffdc994fb34,118791836,0,0x0,8
tick,0x7ffdc994fb34,118807734,0,0x0,8
tick,0x7ffdc994fb34,118822985,0,0x0,8
tick,0x7ffdc994fb34,118838969,0,0x0,8
tick,0x7ffdc994fb34,118854042,0,0x0,8
tick,0x7ffdc994fb34,118869834,0,0x0,8
tick,0x7ffdc994fb34,118885293,0,0x0,8
tick,0x7ffdc994fb34,118900888,0,0x0,8
tick,0x7ffdc994fb34,118916659,0,0x0,8
tick,0x7ffdc994fb34,118931755,0,0x0,8
tick,0x7ffdc994fb34,118947319,0,0x0,8
tick,0x7ffdc994fb34,118962413,0,0x0,8
tick,0x7ffdc994fb34,118978123,0,0x0,8
tick,0x7ffdc994fb34,118994307,0,0x0,8
tick,0x7ffdc994fb34,119009935,0,0x0,8
tick,0x7ffdc994fb34,119025211,0,0x0,8
tick,0x7ffdc994fb34,119040806,0,0x0,8
tick,0x7ffdc994fb34,119055675,0,0x0,8
tick,0x7ffdc994fb34,119071821,0,0x0,8
tick,0x7ffdc994fb34,119087530,0,0x0,8
tick,0x7ffdc994fb34,119102795,0,0x0,8
tick,0x7ffdc994fb34,119118252,0,0x0,8
tick,0x7ffdc994fb34,119133563,0,0x0,8
tick,0x7ffdc994fb34,119149251,0,0x0,8
tick,0x7ffdc994fb34,119164694,0,0x0,8
tick,0x7ffdc994fb34,119180167,0,0x0,8
tick,0x7ffdc994fb34,119195524,0,0x0,8
tick,0x7ffdc994fb34,119211254,0,0x0,8
tick,0x7ffdc994fb34,119226695,0,0x0,8
tick,0x7ffdc994fb34,119242031,0,0x0,8
tick,0x7ffdc994fb34,119257608,0,0x0,8
tick,0x7ffdc994fb34,119273145,0,0x0,8
tick,0x7ffdc994fb34,119288919,0,0x0,8
tick,0x7ffdc994fb34,119303807,0,0x0,8
tick,0x7ffdc994fb34,119319439,0,0x0,8
tick,0x7ffdc994fb34,119334868,0,0x0,8
tick,0x7ffdc994fb34,119350401,0,0x0,8
tick,0x7ffdc994fb34,119366028,0,0x0,8
tick,0x7ffdc994fb34,119381385,0,0x0,8
tick,0x7ffdc994fb34,119396625,0,0x0,8
tick,0x7ffdc994fb34,119412301,0,0x0,8
tick,0x7ffdc994fb34,119427799,0,0x0,8
tick,0x7ffdc994fb34,119443106,0,0x0,8
tick,0x7ffdc994fb34,119458546,0,0x0,8
tick,0x7ffdc994fb34,119473751,0,0x0,8
tick,0x7ffdc994fb34,119489559,0,0x0,8
tick,0x7ffdc994fb34,119504750,0,0x0,8
tick,0x7ffdc994fb34,119520363,0,0x0,8
tick,0x7ffdc994fb34,119535928,0,0x0,8
tick,0x7ffdc994fb34,119552560,0,0x0,8
tick,0x7ffdc994fb34,119567931,0,0x0,8
tick,0x7ffdc994fb34,119583514,0,0x0,8
tick,0x7ffdc994fb34,119599112,0,0x0,8
tick,0x7ffdc994fb34,119614556,0,0x0,8
tick,0x7ffdc994fb34,119631128,0,0x0,8
tick,0x7ffdc994fb34,119646653,0,0x0,8
tick,0x7ffdc994fb34,119662209,0,0x0,8
tick,0x7ffdc994fb34,119677579,0,0x0,8
tick,0x7ffdc994fb34,119693512,0,0x0,8
tick,0x7ffdc994fb34,119709273,0,0x0,8
tick,0x7ffdc994fb34,119724912,0,0x0,8
tick,0x7ffdc994fb34,119740183,0,0x0,8
tick,0x7ffdc994fb34,119755457,0,0x0,8
tick,0x7ffdc994fb34,119770936,0,0x0,8
tick,0x7ffdc994fb34,119787035,0,0x0,8
tick,0x7ffdc994fb34,119802213,0,0x0,8
tick,0x7ffdc994fb34,119817710,0,0x0,8
tick,0x7ffdc994fb34,119833369,0,0x0,8
tick,0x7ffdc994fb34,119849086,0,0x0,8
tick,0x7ffdc994fb34,119864652,0,0x0,8
tick,0x7ffdc994fb34,119879795,0,0x0,8
tick,0x7ffdc994fb34,119895344,0,0x0,8
tick,0x7ffdc994fb34,119910518,0,0x0,8
tick,0x7ffdc994fb34,119926447,0,0x0,8
tick,0x7ffdc994fb34,119942731,0,0x0,8
tick,0x7ffdc994fb34,119958234,0,0x0,8
tick,0x7ffdc994fb34,119973064,0,0x0,8
tick,0x7ffdc994fb34,119989154,0,0x0,8
tick,0x7ffdc994fb34,120005097,0,0x0,8
tick,0x7ffdc994fb34,120020380,0,0x0,8
tick,0x7ffdc994fb34,120035488,0,0x0,8
tick,0x7ffdc994fb34,120051240,0,0x0,8
tick,0x7ffdc994fb34,120066465,0,0x0,8
tick,0x7ffdc994fb34,120082388,0,0x0,8
tick,0x7ffdc994fb34,120098534,0,0x0,8
tick,0x7ffdc994fb34,120114669,0,0x0,8
tick,0x7ffdc994fb34,120130179,0,0x0,8
tick,0x7ffdc994fb34,120145562,0,0x0,8
tick,0x7ffdc994fb34,120161166,0,0x0,8
tick,0x7ffdc994fb34,120176149,0,0x0,8
tick,0x7ffdc994fb34,120191965,0,0x0,8
tick,0x7ffdc994fb34,120207162,0,0x0,8
tick,0x7ffdc994fb34,120222950,0,0x0,8
tick,0x7ffdc994fb34,120238422,0,0x0,8
tick,0x7ffdc994fb34,120254237,0,0x0,8
tick,0x7ffdc994fb34,120269851,0,0x0,8
tick,0x7ffdc994fb34,120284899,0,0x0,8
tick,0x7ffdc994fb34,120300490,0,0x0,8
tick,0x7ffdc994fb34,120316039,0,0x0,8
tick,0x7ffdc994fb34,120332160,0,0x0,8
tick,0x7ffdc994fb34,120347786,0,0x0,8
tick,0x7ffdc994fb34,120363429,0,0x0,8
tick,0x7ffdc994fb34,120379080,0,0x0,8
tick,0x7ffdc994fb34,120394456,0,0x0,8
tick,0x7ffdc994fb34,120410203,0,0x0,8
tick,0x7ffdc994fb34,120425268,0,0x0,8
tick,0x7ffdc994fb34,120441331,0,0x0,8
tick,0x7ffdc994fb34,120456701,0,0x0,8
tick,0x7ffdc994fb34,120472496,0,0x0,8
tick,0x7ffdc994fb34,120487903,0,0x0,8
tick,0x7ffdc994fb34,120503592,0,0x0,8
tick,0x7ffdc994fb34,120519584,0,0x0,8
tick,0x7ffdc994fb34,120535096,0,0x0,8
tick,0x7ffdc994fb34,120550792,0,0x0,8
tick,0x7ffdc994fb34,120566356,0,0x0,8
tick,0x7ffdc994fb34,120581675,0,0x0,8
tick,0x7ffdc994fb34,120597156,0,0x0,8
tick,0x7ffdc994fb34,120612963,0,0x0,8
tick,0x7ffdc994fb34,120628116,0,0x0,8
tick,0x7ffdc994fb34,120643235,0,0x0,8
tick,0x7ffdc994fb34,120659077,0,0x0,8
tick,0x7ffdc994fb34,120674012,0,0x0,8
tick,0x7ffdc994fb34,120689615,0,0x0,8
tick,0x7ffdc994fb34,120704819,0,0x0,8
tick,0x7ffdc994fb34,120720273,0,0x0,8
tick,0x7ffdc994fb34,120736460,0,0x0,8
tick,0x7ffdc994fb34,120752135,0,0x0,8
tick,0x7ffdc994fb34,120767667,0,0x0,8
tick,0x7ffdc994fb34,120782909,0,0x0,8
tick,0x7ffdc994fb34,120799128,0,0x0,8
tick,0x7ffdc994fb34,120814158,0,0x0,8
tick,0x7ffdc994fb34,120829857,0,0x0,8
tick,0x7ffdc994fb34,120845384,0,0x0,8
tick,0x7ffdc994fb34,120860744,0,0x0,8
tick,0x7ffdc994fb34,120876068,0,0x0,8
tick,0x7ffdc994fb34,120891964,0,0x0,8
tick,0x7ffdc994fb34,120907496,0,0x0,8
tick,0x7ffdc994fb34,120923742,0,0x0,8
tick,0x7ffdc994fb34,120938871,0,0x0,8
tick,0x7ffdc994fb34,120954950,0,0x0,8
tick,0x7ffdc994fb34,120970462,0,0x0,8
tick,0x7ffdc994fb34,120985976,0,0x0,8
tick,0x7ffdc994fb34,121001586,0,0x0,8
tick,0x7ffdc994fb34,121016701,0,0x0,8
tick,0x7ffdc994fb34,121032101,0,0x0,8
tick,0x7ffdc994fb34,121047684,0,0x0,8
tick,0x7ffdc994fb34,121063096,0,0x0,8
tick,0x7ffdc994fb34,121079190,0,0x0,8
tick,0x7ffdc994fb34,121094442,0,0x0,8
tick,0x7ffdc994fb34,121110137,0,0x0,8
tick,0x7ffdc994fb34,121125215,0,0x0,8
tick,0x7ffdc994fb34,121140596,0,0x0,8
tick,0x7ffdc994fb34,121155959,0,0x0,8
tick,0x7ffdc994fb34,121171514,0,0x0,8
tick,0x7ffdc994fb34,121187301,0,0x0,8
tick,0x7ffdc994fb34,121202791,0,0x0,8
tick,0x7ffdc994fb34,121218207,0,0x0,8
tick,0x7ffdc994fb34,121233690,0,0x0,8
tick,0x7ffdc994fb34,121249457,0,0x0,8
tick,0x7ffdc994fb34,121264700,0,0x0,8
tick,0x7ffdc994fb34,121280409,0,0x0,8
tick,0x7ffdc994fb34,121295921,0,0x0,8
tick,0x7ffdc994fb34,121311463,0,0x0,8
tick,0x7ffdc994fb34,121327003,0,0x0,8
tick,0x7ffdc994fb34,121342136,0,0x0,8
tick,0x7ffdc994fb34,121357686,0,0x0,8
tick,0x7ffdc994fb34,121373040,0,0x0,8
tick,0x7ffdc994fb34,121388738,0,0x0,8
tick,0x7ffdc994fb34,121403911,0,0x0,8
tick,0x7ffdc994fb34,121420031,0,0x0,8
tick,0x7ffdc994fb34,121435181,0,0x0,8
tick,0x7ffdc994fb34,121450654,0,0x0,8
tick,0x7ffdc994fb34,121466468,0,0x0,8
tick,0x7ffdc994fb34,121481786,0,0x0,8
tick,0x7ffdc994fb34,121497427,0,0x0,8
tick,0x7ffdc994fb34,121513164,0,0x0,8
tick,0x7ffdc994fb34,121528814,0,0x0,8
tick,0x7ffdc994fb34,121544047,0,0x0,8
tick,0x7ffdc994fb34,121560032,0,0x0,8
tick,0x7ffdc994fb34,121575551,0,0x0,8
tick,0x7ffdc994fb34,121591067,0,0x0,8
tick,0x7ffdc994fb34,121606642,0,0x0,8
tick,0x7ffdc994fb34,121621818,0,0x0,8
tick,0x7ffdc994fb34,121637543,0,0x0,8
tick,0x7ffdc994fb34,121653261,0,0x0,8
tick,0x7ffdc994fb34,121668428,0,0x0,8
tick,0x7ffdc994fb34,121683555,0,0x0,8
tick,0x7ffdc994fb34,121699378,0,0x0,8
tick,0x7ffdc994fb34,121714915,0,0x0,8
tick,0x7ffdc994fb34,121730856,0,0x0,8
tick,0x7ffdc994fb34,121746068,0,0x0,8
tick,0x7ffdc994fb34,121762076,0,0x0,8
tick,0x7ffdc994fb34,121777776,0,0x0,8
tick,0x7ffdc994fb34,121793826,0,0x0,8
tick,0x7ffdc994fb34,121809647,0,0x0,8
tick,0x7ffdc994fb34,121825101,0,0x0,8
tick,0x7ffdc994fb34,121841029,0,0x0,8
tick,0x7ffdc994fb34,121856703,0,0x0,8
tick,0x7ffdc994fb34,121872679,0,0x0,8
tick,0x7ffdc994fb34,121887536,0,0x0,8
tick,0x7ffdc994fb34,121902766,0,0x0,8
tick,0x7ffdc994fb34,121918382,0,0x0,8
tick,0x7ffdc994fb34,121933667,0,0x0,8
tick,0x7ffdc994fb34,121949053,0,0x0,8
tick,0x7ffdc994fb34,121964665,0,0x0,8
tick,0x7ffdc994fb34,121980314,0,0x0,8
tick,0x7ffdc994fb34,121996027,0,0x0,8
tick,0x7ffdc994fb34,122011595,0,0x0,8
tick,0x7ffdc994fb34,122027324,0,0x0,8
tick,0x7ffdc994fb34,122042619,0,0x0,8
tick,0x7ffdc994fb34,122058477,0,0x0,8
tick,0x7ffdc994fb34,122073893,0,0x0,8
tick,0x7ffdc994fb34,122089361,0,0x0,8
tick,0x7ffdc994fb34,122104976,0,0x0,8
tick,0x7ffdc994fb34,122120247,0,0x0,8
tick,0x7ffdc994fb34,122135605,0,0x0,8
tick,0x7ffdc994fb34,122151154,0,0x0,8
tick,0x7ffdc994fb34,122166202,0,0x0,8
tick,0x7ffdc994fb34,122181817,0,0x0,8
tick,0x7ffdc994fb34,122197307,0,0x0,8
tick,0x7ffdc994fb34,122212557,0,0x0,8
tick,0x7ffdc994fb34,122228786,0,0x0,8
tick,0x7ffdc994fb34,122244181,0,0x0,8
tick,0x7ffdc994fb34,122260306,0,0x0,8
tick,0x7ffdc994fb34,122275823,0,0x0,8
tick,0x7ffdc994fb34,122292196,0,0x0,8
tick,0x7ffdc994fb34,122308031,0,0x0,8
tick,0x7ffdc994fb34,122323099,0,0x0,8
tick,0x7ffdc994fb34,122338538,0,0x0,8
tick,0x7ffdc994fb34,122353726,0,0x0,8
tick,0x7ffdc994fb34,122369325,0,0x0,8
tick,0x7ffdc994fb34,122384484,0,0x0,8
tick,0x7ffdc994fb34,122400312,0,0x0,8
tick,0x7ffdc994fb34,122415939,0,0x0,8
tick,0x7ffdc994fb34,122431508,0,0x0,8
tick,0x7ffdc994fb34,122446788,0,0x0,8
tick,0x7ffdc994fb34,122462572,0,0x0,8
tick,0x7ffdc994fb34,122477694,0,0x0,8
tick,0x7ffdc994fb34,122493026,0,0x0,8
tick,0x7ffdc994fb34,122508732,0,0x0,8
tick,0x7ffdc994fb34,122523997,0,0x0,8
tick,0x7ffdc994fb34,122538916,0,0x0,8
tick,0x7ffdc994fb34,122554252,0,0x0,8
tick,0x7ffdc994fb34,122569200,0,0x0,8
tick,0x7ffdc994fb34,122585249,0,0x0,8
tick,0x7ffdc994fb34,122600795,0,0x0,8
tick,0x7ffdc994fb34,122616145,0,0x0,8
tick,0x7ffdc994fb34,122632651,0,0x0,8
tick,0x7ffdc994fb34,122648412,0,0x0,8
tick,0x7ffdc994fb34,122663565,0,0x0,8
tick,0x7ffdc994fb34,122679428,0,0x0,8
tick,0x7ffdc994fb34,122694539,0,0x0,8
tick,0x7ffdc994fb34,122710234,0,0x0,8
tick,0x7ffdc994fb34,122725622,0,0x0,8
tick,0x7ffdc994fb34,122741250,0,0x0,8
tick,0x7ffdc994fb34,122756738,0,0x0,8
tick,0x7ffdc994fb34,122772421,0,0x0,8
tick,0x7ffdc994fb34,122787830,0,0x0,8
tick,0x7ffdc994fb34,122803258,0,0x0,8
tick,0x7ffdc994fb34,122818870,0,0x0,8
tick,0x7ffdc994fb34,122833765,0,0x0,8
tick,0x7ffdc994fb34,122849227,0,0x0,8
tick,0x7ffdc994fb34,122865067,0,0x0,8
tick,0x7ffdc994fb34,122880741,0,0x0,8
tick,0x7ffdc994fb34,122896070,0,0x0,8
tick,0x7ffdc994fb34,122912498,0,0x0,8
tick,0x7ffdc994fb34,122927874,0,0x0,8
tick,0x7ffdc994fb34,122943252,0,0x0,8
tick,0x7ffdc994fb34,122958987,0,0x0,8
tick,0x7ffdc994fb34,122973966,0,0x0,8
tick,0x7ffdc994fb34,122989538,0,0x0,8
tick,0x7ffdc994fb34,123004830,0,0x0,8
tick,0x7ffdc994fb34,123020926,0,0x0,8
tick,0x7ffdc994fb34,123036154,0,0x0,8
tick,0x7ffdc994fb34,123052042,0,0x0,8
tick,0x7ffdc994fb34,123067332,0,0x0,8
tick,0x7ffdc994fb34,123082446,0,0x0,8
tick,0x7ffdc994fb34,123098396,0,0x0,8
tick,0x7ffdc994fb34,123113342,0,0x0,8
tick,0x7ffdc994fb34,123128928,0,0x0,8
tick,0x7ffdc994fb34,123144293,0,0x0,8
tick,0x7ffdc994fb34,123160576,0,0x0,8
tick,0x7ffdc994fb34,123176299,0,0x0,8
tick,0x7ffdc994fb34,123191853,0,0x0,8
tick,0x7ffdc994fb34,123207274,0,0x0,8
tick,0x7ffdc994fb34,123223080,0,0x0,8
tick,0x7ffdc994fb34,123239075,0,0x0,8
tick,0x7ffdc994fb34,123254687,0,0x0,8
tick,0x7ffdc994fb34,123269921,0,0x0,8
tick,0x7ffdc994fb34,123285181,0,0x0,8
tick,0x7ffdc994fb34,123301266,0,0x0,8
tick,0x7ffdc994fb34,123316384,0,0x0,8
tick,0x7ffdc994fb34,123332122,0,0x0,8
tick,0x7ffdc994fb34,123347372,0,0x0,8
tick,0x7ffdc994fb34,123362938,0,0x0,8
tick,0x7ffdc994fb34,123378551,0,0x0,8
tick,0x7ffdc994fb34,123393700,0,0x0,8
tick,0x7ffdc994fb34,123409376,0,0x0,8
tick,0x7ffdc994fb34,123424641,0,0x0,8
tick,0x7ffdc994fb34,123440355,0,0x0,8
tick,0x7ffdc994fb34,123455893,0,0x0,8
tick,0x7ffdc994fb34,123470933,0,0x0,8
tick,0x7ffdc994fb34,123487005,0,0x0,8
tick,0x7ffdc994fb34,123502553,0,0x0,8
tick,0x7ffdc994fb34,123518025,0,0x0,8
tick,0x7ffdc994fb34,123533464,0,0x0,8
tick,0x7ffdc994fb34,123549410,0,0x0,8
tick,0x7ffdc994fb34,123565535,0,0x0,8
tick,0x7ffdc994fb34,123581124,0,0x0,8
tick,0x7ffdc994fb34,123596790,0,0x0,8
tick,0x7ffdc994fb34,123612114,0,0x0,8
tick,0x7ffdc994fb34,123628301,0,0x0,8
tick,0x7ffdc994fb34,123643837,0,0x0,8
tick,0x7ffdc994fb34,123659086,0,0x0,8
tick,0x7ffdc994fb34,123675281,0,0x0,8
tick,0x7ffdc994fb34,123691344,0,0x0,8
tick,0x7ffdc994fb34,123706272,0,0x0,8
tick,0x7ffdc994fb34,123722517,0,0x0,8
tick,0x7ffdc994fb34,123737341,0,0x0,8
tick,0x7ffdc994fb34,123752857,0,0x0,8
tick,0x7ffdc994fb34,123768607,0,0x0,8
tick,0x7ffdc994fb34,123784573,0,0x0,8
tick,0x7ffdc994fb34,123800032,0,0x0,8
tick,0x7ffdc994fb34,123815429,0,0x0,8
tick,0x7ffdc994fb34,123831446,0,0x0,8
tick,0x7ffdc994fb34,123847118,0,0x0,8
tick,0x7ffdc994fb34,123862156,0,0x0,8
tick,0x7ffdc994fb34,123877900,0,0x0,8
tick,0x7ffdc994fb34,123893194,0,0x0,8
tick,0x7ffdc994fb34,123908256,0,0x0,8
tick,0x7ffdc994fb34,123923113,0,0x0,8
tick,0x7ffdc994fb34,123939086,0,0x0,8
tick,0x7ffdc994fb34,123954469,0,0x0,8
tick,0x7ffdc994fb34,123969507,0,0x0,8
tick,0x7ffdc994fb34,123985395,0,0x0,8
tick,0x7ffdc994fb34,124001172,0,0x0,8
tick,0x7ffdc994fb34,124016246,0,0x0,8
tick,0x7ffdc994fb34,124032355,0,0x0,8
tick,0x7ffdc994fb34,124048475,0,0x0,8
tick,0x7ffdc994fb34,124063979,0,0x0,8
tick,0x7ffdc994fb34,124079587,0,0x0,8
tick,0x7ffdc994fb34,124094984,0,0x0,8
tick,0x7ffdc994fb34,124110644,0,0x0,8
tick,0x7ffdc994fb34,124126262,0,0x0,8
tick,0x7ffdc994fb34,124141880,0,0x0,8
tick,0x7ffdc994fb34,124157296,0,0x0,8
tick,0x7ffdc994fb34,124173245,0,0x0,8
tick,0x7ffdc994fb34,124187775,0,0x0,8
tick,0x7ffdc994fb34,124203541,0,0x0,8
tick,0x7ffdc994fb34,124218611,0,0x0,8
tick,0x7ffdc994fb34,124233701,0,0x0,8
tick,0x7ffdc994fb34,124249157,0,0x0,8
tick,0x7ffdc994fb34,124265025,0,0x0,8
tick,0x7ffdc994fb34,124280584,0,0x0,8
tick,0x7ffdc994fb34,124296082,0,0x0,8
tick,0x7ffdc994fb34,124311550,0,0x0,8
tick,0x7ffdc994fb34,124327264,0,0x0,8
tick,0x7ffdc994fb34,124342851,0,0x0,8
tick,0x7ffdc994fb34,124358589,0,0x0,8
tick,0x7ffdc994fb34,124373814,0,0x0,8
tick,0x7ffdc994fb34,124389724,0,0x0,8
tick,0x7ffdc994fb34,124404672,0,0x0,8
tick,0x7ffdc994fb34,124420125,0,0x0,8
tick,0x7ffdc994fb34,124435417,0,0x0,8
tick,0x7ffdc994fb34,124451355,0,0x0,8
tick,0x7ffdc994fb34,124467035,0,0x0,8
tick,0x7ffdc994fb34,124482231,0,0x0,8
tick,0x7ffdc994fb34,124498109,0,0x0,8
tick,0x7ffdc994fb34,124513414,0,0x0,8
tick,0x7ffdc994fb34,124529018,0,0x0,8
tick,0x7ffdc994fb34,124544915,0,0x0,8
tick,0x7ffdc994fb34,124560407,0,0x0,8
tick,0x7ffdc994fb34,124575553,0,0x0,8
tick,0x7ffdc994fb34,124591543,0,0x0,8
tick,0x7ffdc994fb34,124606385,0,0x0,8
tick,0x7ffdc994fb34,124622573,0,0x0,8
tick,0x7ffdc994fb34,124638001,0,0x0,8
tick,0x7ffdc994fb34,124654234,0,0x0,8
tick,0x7ffdc994fb34,124670262,0,0x0,8
tick,0x7ffdc994fb34,124685266,0,0x0,8
tick,0x7ffdc994fb34,124700804,0,0x0,8
tick,0x7ffdc994fb34,124716535,0,0x0,8
tick,0x7ffdc994fb34,124732245,0,0x0,8
tick,0x7ffdc994fb34,124747613,0,0x0,8
tick,0x7ffdc994fb34,124763555,0,0x0,8
tick,0x7ffdc994fb34,124778935,0,0x0,8
tick,0x7ffdc994fb34,124794200,0,0x0,8
tick,0x7ffdc994fb34,124810016,0,0x0,8
tick,0x7ffdc994fb34,124825404,0,0x0,8
tick,0x7ffdc994fb34,124841092,0,0x0,8
tick,0x7ffdc994fb34,124856264,0,0x0,8
tick,0x7ffdc994fb34,124871831,0,0x0,8
tick,0x7ffdc994fb34,124887370,0,0x0,8
tick,0x7ffdc994fb34,124903120,0,0x0,8
tick,0x7ffdc994fb34,124918700,0,0x0,8
tick,0x7ffdc994fb34,124934081,0,0x0,8
tick,0x7ffdc994fb34,124949650,0,0x0,8
tick,0x7ffdc994fb34,124965177,0,0x0,8
tick,0x7ffdc994fb34,124980725,0,0x0,8
tick,0x7ffdc994fb34,124996116,0,0x0,8
tick,0x7ffdc994fb34,125011186,0,0x0,8
tick,0x7ffdc994fb34,125027076,0,0x0,8
tick,0x7ffdc994fb34,125042726,0,0x0,8
tick,0x7ffdc994fb34,125058040,0,0x0,8
tick,0x7ffdc994fb34,125073719,0,0x0,8
tick,0x7ffdc994fb34,125089208,0,0x0,8
tick,0x7ffdc994fb34,125105488,0,0x0,8
tick,0x7ffdc994fb34,125120541,0,0x0,8
tick,0x7ffdc994fb34,125136587,0,0x0,8
tick,0x7ffdc994fb34,125152084,0,0x0,8
tick,0x7ffdc994fb34,125167468,0,0x0,8
tick,0x7ffdc994fb34,125182692,0,0x0,8
tick,0x7ffdc994fb34,125198421,0,0x0,8
tick,0x7ffdc994fb34,125214146,0,0x0,8
tick,0x7ffdc994fb34,125230053,0,0x0,8
tick,0x7ffdc994fb34,125245435,0,0x0,8
tick,0x7ffdc994fb34,125260935,0,0x0,8
tick,0x7ffdc994fb34,125276330,0,0x0,8
tick,0x7ffdc994fb34,125291689,0,0x0,8
tick,0x7ffdc994fb34,125306830,0,0x0,8
tick,0x7ffdc994fb34,125322581,0,0x0,8
tick,0x7ffdc994fb34,125338404,0,0x0,8
tick,0x7ffdc994fb34,125354047,0,0x0,8
tick,0x7ffdc994fb34,125369649,0,0x0,8
tick,0x7ffdc994fb34,125385173,0,0x0,8
tick,0x7ffdc994fb34,125400664,0,0x0,8
tick,0x7ffdc994fb34,125416560,0,0x0,8
tick,0x7ffdc994fb34,125431785,0,0x0,8
tick,0x7ffdc994fb34,125447384,0,0x0,8
tick,0x7ffdc994fb34,125462835,0,0x0,8
tick,0x7ffdc994fb34,125478108,0,0x0,8
tick,0x7ffdc994fb34,125493196,0,0x0,8
tick,0x7ffdc994fb34,125509147,0,0x0,8
tick,0x7ffdc994fb34,125524345,0,0x0,8
tick,0x7ffdc994fb34,125539792,0,0x0,8
tick,0x7ffdc994fb34,125555203,0,0x0,8
tick,0x7ffdc994fb34,125570929,0,0x0,8
tick,0x7ffdc994fb34,125586303,0,0x0,8
tick,0x7ffdc994fb34,125601617,0,0x0,8
tick,0x7ffdc994fb34,125617358,0,0x0,8
tick,0x7ffdc994fb34,125632828,0,0x0,8
tick,0x7ffdc994fb34,125648487,0,0x0,8
tick,0x7ffdc994fb34,125663943,0,0x0,8
tick,0x7ffdc994fb34,125679281,0,0x0,8
tick,0x7ffdc994fb34,125694852,0,0x0,8
tick,0x7ffdc994fb34,125710923,0,0x0,8
tick,0x7ffdc994fb34,125726662,0,0x0,8
tick,0x7ffdc994fb34,125742784,0,0x0,8
tick,0x7ffdc994fb34,125758959,0,0x0,8
tick,0x7ffdc994fb34,125773997,0,0x0,8
tick,0x7ffdc994fb34,125789187,0,0x0,8
tick,0x7ffdc994fb34,125804589,0,0x0,8
tick,0x7ffdc994fb34,125820194,0,0x0,8
tick,0x7ffdc994fb34,125835436,0,0x0,8
tick,0x7ffdc994fb34,125850913,0,0x0,8
tick,0x7ffdc994fb34,125866367,0,0x0,8
tick,0x7ffdc994fb34,125881473,0,0x0,8
tick,0x7ffdc994fb34,125896873,0,0x0,8
tick,0x7ffdc994fb34,125912469,0,0x0,8
tick,0x7ffdc994fb34,125927992,0,0x0,8
tick,0x7ffdc994fb34,125943155,0,0x0,8
tick,0x7ffdc994fb34,125958904,0,0x0,8
tick,0x7ffdc994fb34,125974244,0,0x0,8
tick,0x7ffdc994fb34,125990169,0,0x0,8
tick,0x7ffdc994fb34,126005071,0,0x0,8
tick,0x7ffdc994fb34,126020463,0,0x0,8
tick,0x7ffdc994fb34,126035971,0,0x0,8
tick,0x7ffdc994fb34,126051560,0,0x0,8
tick,0x7ffdc994fb34,126067036,0,0x0,8
tick,0x7ffdc994fb34,126083083,0,0x0,8
tick,0x7ffdc994fb34,126098622,0,0x0,8
tick,0x7ffdc994fb34,126113619,0,0x0,8
tick,0x7ffdc994fb34,126128894,0,0x0,8
tick,0x7ffdc994fb34,126144229,0,0x0,8
tick,0x7ffdc994fb34,126160159,0,0x0,8
tick,0x7ffdc994fb34,126175509,0,0x0,8
tick,0x7ffdc994fb34,126191103,0,0x0,8
tick,0x7ffdc994fb34,126206714,0,0x0,8
tick,0x7ffdc994fb34,126222355,0,0x0,8
tick,0x7ffdc994fb34,126238597,0,0x0,8
tick,0x7ffdc994fb34,126254271,0,0x0,8
tick,0x7ffdc994fb34,126269966,0,0x0,8
tick,0x7ffdc994fb34,126285890,0,0x0,8
tick,0x7ffdc994fb34,126301504,0,0x0,8
tick,0x7ffdc994fb34,126317453,0,0x0,8
tick,0x7ffdc994fb34,126332610,0,0x0,8
tick,0x7ffdc994fb34,126348079,0,0x0,8
tick,0x7ffdc994fb34,126363403,0,0x0,8
tick,0x7ffdc994fb34,126378653,0,0x0,8
tick,0x7ffdc994fb34,126394057,0,0x0,8
tick,0x7ffdc994fb34,126409379,0,0x0,8
tick,0x7ffdc994fb34,126425104,0,0x0,8
tick,0x7ffdc994fb34,126440684,0,0x0,8
tick,0x7ffdc994fb34,126456046,0,0x0,8
tick,0x7ffdc994fb34,126472100,0,0x0,8
tick,0x7ffdc994fb34,126487794,0,0x0,8
tick,0x7ffdc994fb34,126503462,0,0x0,8
tick,0x7ffdc994fb34,126519197,0,0x0,8
tick,0x7ffdc994fb34,126534829,0,0x0,8
tick,0x7ffdc994fb34,126550169,0,0x0,8
tick,0x7ffdc994fb34,126565491,0,0x0,8
tick,0x7ffdc994fb34,126581234,0,0x0,8
tick,0x7ffdc994fb34,126596752,0,0x0,8
tick,0x7ffdc994fb34,126612592,0,0x0,8
tick,0x7ffdc994fb34,126628075,0,0x0,8
tick,0x7ffdc994fb34,126643739,0,0x0,8
tick,0x7ffdc994fb34,126658886,0,0x0,8
tick,0x7ffdc994fb34,126674323,0,0x0,8
tick,0x7ffdc994fb34,126689779,0,0x0,8
tick,0x7ffdc994fb34,126705154,0,0x0,8
tick,0x7ffdc994fb34,126720522,0,0x0,8
tick,0x7ffdc994fb34,126736593,0,0x0,8
tick,0x7ffdc994fb34,126751780,0,0x0,8
tick,0x7ffdc994fb34,126767326,0,0x0,8
tick,0x7ffdc994fb34,126782761,0,0x0,8
tick,0x7ffdc994fb34,126797690,0,0x0,8
tick,0x7ffdc994fb34,126813136,0,0x0,8
tick,0x7ffdc994fb34,126829077,0,0x0,8
tick,0x7ffdc994fb34,126844182,0,0x0,8
tick,0x7ffdc994fb34,126859801,0,0x0,8
tick,0x7ffdc994fb34,126875680,0,0x0,8
tick,0x7ffdc994fb34,126891332,0,0x0,8
tick,0x7ffdc994fb34,126906512,0,0x0,8
tick,0x7ffdc994fb34,126922159,0,0x0,8
tick,0x7ffdc994fb34,126937675,0,0x0,8
tick,0x7ffdc994fb34,126953445,0,0x0,8
tick,0x7ffdc994fb34,126968802,0,0x0,8
tick,0x7ffdc994fb34,126984446,0,0x0,8
tick,0x7ffdc994fb34,126999963,0,0x0,8
tick,0x7ffdc994fb34,127016012,0,0x0,8
tick,0x7ffdc994fb34,127031877,0,0x0,8
tick,0x7ffdc994fb34,127047846,0,0x0,8
tick,0x7ffdc994fb34,127063243,0,0x0,8
tick,0x7ffdc994fb34,127078411,0,0x0,8
tick,0x7ffdc994fb34,127093786,0,0x0,8
tick,0x7ffdc994fb34,127108852,0,0x0,8
tick,0x7ffdc994fb34,127124557,0,0x0,8
tick,0x7ffdc994fb34,127139829,0,0x0,8
tick,0x7ffdc994fb34,127155259,0,0x0,8
tick,0x7ffdc994fb34,127170692,0,0x0,8
tick,0x7ffdc994fb34,127186061,0,0x0,8
tick,0x7ffdc994fb34,127201011,0,0x0,8
tick,0x7ffdc994fb34,127216364,0,0x0,8
tick,0x7ffdc994fb34,127232609,0,0x0,8
tick,0x7ffdc994fb34,127247928,0,0x0,8
tick,0x7ffdc994fb34,127263747,0,0x0,8
tick,0x7ffdc994fb34,127279653,0,0x0,8
tick,0x7ffdc994fb34,127294856,0,0x0,8
tick,0x7ffdc994fb34,127310889,0,0x0,8
tick,0x7ffdc994fb34,127326198,0,0x0,8
tick,0x7ffdc994fb34,127341756,0,0x0,8
tick,0x7ffdc994fb34,127357520,0,0x0,8
tick,0x7ffdc994fb34,127373005,0,0x0,8
tick,0x7ffdc994fb34,127388244,0,0x0,8
tick,0x7ffdc994fb34,127403328,0,0x0,8
tick,0x7ffdc994fb34,127418772,0,0x0,8
tick,0x7ffdc994fb34,127434535,0,0x0,8
tick,0x7ffdc994fb34,127450275,0,0x0,8
tick,0x7ffdc994fb34,127465536,0,0x0,8
tick,0x7ffdc994fb34,127481515,0,0x0,8
tick,0x7ffdc994fb34,127497213,0,0x0,8
tick,0x7ffdc994fb34,127513571,0,0x0,8
tick,0x7ffdc994fb34,127529211,0,0x0,8
tick,0x7ffdc994fb34,127544551,0,0x0,8
tick,0x7ffdc994fb34,127560499,0,0x0,8
tick,0x7ffdc994fb34,127575941,0,0x0,8
tick,0x7ffdc994fb34,127591279,0,0x0,8
tick,0x7ffdc994fb34,127606761,0,0x0,8
tick,0x7ffdc994fb34,127622444,0,0x0,8
tick,0x7ffdc994fb34,127638338,0,0x0,8
tick,0x7ffdc994fb34,127653608,0,0x0,8
tick,0x7ffdc994fb34,127669578,0,0x0,8
tick,0x7ffdc994fb34,127684794,0,0x0,8
tick,0x7ffdc994fb34,127700413,0,0x0,8
tick,0x7ffdc994fb34,127715849,0,0x0,8
tick,0x7ffdc994fb34,127731467,0,0x0,8
tick,0x7ffdc994fb34,127747133,0,0x0,8
tick,0x7ffdc994fb34,127762825,0,0x0,8
tick,0x7ffdc994fb34,127778111,0,0x0,8
tick,0x7ffdc994fb34,127794138,0,0x0,8
tick,0x7ffdc994fb34,127809697,0,0x0,8
tick,0x7ffdc994fb34,127825270,0,0x0,8
tick,0x7ffdc994fb34,127840885,0,0x0,8
tick,0x7ffdc994fb34,127856351,0,0x0,8
tick,0x7ffdc994fb34,127871772,0,0x0,8
tick,0x7ffdc994fb34,127887452,0,0x0,8
tick,0x7ffdc994fb34,127902834,0,0x0,8
tick,0x7ffdc994fb34,127918155,0,0x0,8
tick,0x7ffdc994fb34,127933667,0,0x0,8
tick,0x7ffdc994fb34,127949582,0,0x0,8
tick,0x7ffdc994fb34,127964728,0,0x0,8
tick,0x7ffdc994fb34,127980549,0,0x0,8
tick,0x7ffdc994fb34,127996191,0,0x0,8
tick,0x7ffdc994fb34,128011471,0,0x0,8
tick,0x7ffdc994fb34,128027322,0,0x0,8
tick,0x7ffdc994fb34,128042602,0,0x0,8
tick,0x7ffdc994fb34,128057826,0,0x0,8
tick,0x7ffdc994fb34,128073449,0,0x0,8
tick,0x7ffdc994fb34,128088837,0,0x0,8
tick,0x7ffdc994fb34,128104059,0,0x0,8
tick,0x7ffdc994fb34,128119611,0,0x0,8
tick,0x7ffdc994fb34,128134813,0,0x0,8
tick,0x7ffdc994fb34,128150747,0,0x0,8
tick,0x7ffdc994fb34,128166190,0,0x0,8
tick,0x7ffdc994fb34,128181542,0,0x0,8
tick,0x7ffdc994fb34,128197005,0,0x0,8
tick,0x7ffdc994fb34,128212546,0,0x0,8
tick,0x7ffdc994fb34,128228289,0,0x0,8
tick,0x7ffdc994fb34,128243589,0,0x0,8
tick,0x7ffdc994fb34,128259227,0,0x0,8
tick,0x7ffdc994fb34,128275257,0,0x0,8
tick,0x7ffdc994fb34,128290551,0,0x0,8
tick,0x7ffdc994fb34,128306699,0,0x0,8
tick,0x7ffdc994fb34,128322046,0,0x0,8
tick,0x7ffdc994fb34,128337328,0,0x0,8
tick,0x7ffdc994fb34,128352963,0,0x0,8
tick,0x7ffdc994fb34,128368164,0,0x0,8
tick,0x7ffdc994fb34,128383585,0,0x0,8
tick,0x7ffdc994fb34,128399028,0,0x0,8
tick,0x7ffdc994fb34,128414740,0,0x0,8
tick,0x7ffdc994fb34,128430268,0,0x0,8
tick,0x7ffdc994fb34,128445520,0,0x0,8
tick,0x7ffdc994fb34,128461341,0,0x0,8
tick,0x7ffdc994fb34,128476425,0,0x0,8
tick,0x7ffdc994fb34,128491804,0,0x0,8
tick,0x7ffdc994fb34,128507070,0,0x0,8
tick,0x7ffdc994fb34,128522224,0,0x0,8
tick,0x7ffdc994fb34,128537662,0,0x0,8
tick,0x7ffdc994fb34,128552964,0,0x0,8
tick,0x7ffdc994fb34,128568296,0,0x0,8
tick,0x7ffdc994fb34,128583911,0,0x0,8
tick,0x7ffdc994fb34,128599207,0,0x0,8
tick,0x7ffdc994fb34,128615110,0,0x0,8
tick,0x7ffdc994fb34,128630502,0,0x0,8
tick,0x7ffdc994fb34,128646168,0,0x0,8
tick,0x7ffdc994fb34,128661687,0,0x0,8
tick,0x7ffdc994fb34,128677567,0,0x0,8
tick,0x7ffdc994fb34,128693068,0,0x0,8
tick,0x7ffdc994fb34,128708919,0,0x0,8
tick,0x7ffdc994fb34,128724201,0,0x0,8
tick,0x7ffdc994fb34,128739699,0,0x0,8
tick,0x7ffdc994fb34,128755408,0,0x0,8
tick,0x7ffdc994fb34,128770619,0,0x0,8
tick,0x7ffdc994fb34,128786245,0,0x0,8
tick,0x7ffdc994fb34,128801831,0,0x0,8
tick,0x7ffdc994fb34,128817027,0,0x0,8
tick,0x7ffdc994fb34,128832370,0,0x0,8
tick,0x7ffdc994fb34,128848033,0,0x0,8
tick,0x7ffdc994fb34,128863415,0,0x0,8
tick,0x7ffdc994fb34,128878724,0,0x0,8
tick,0x7ffdc994fb34,128894148,0,0x0,8
tick,0x7ffdc994fb34,128909585,0,0x0,8
tick,0x7ffdc994fb34,128925145,0,0x0,8
tick,0x7ffdc994fb34,128940288,0,0x0,8
tick,0x7ffdc994fb34,128956329,0,0x0,8
tick,0x7ffdc994fb34,128971999,0,0x0,8
tick,0x7ffdc994fb34,128987986,0,0x0,8
tick,0x7ffdc994fb34,129003654,0,0x0,8
tick,0x7ffdc994fb34,129019647,0,0x0,8
tick,0x7ffdc994fb34,129034997,0,0x0,8
tick,0x7ffdc994fb34,129050683,0,0x0,8
tick,0x7ffdc994fb34,129066180,0,0x0,8
tick,0x7ffdc994fb34,129081053,0,0x0,8
tick,0x7ffdc994fb34,129097072,0,0x0,8
tick,0x7ffdc994fb34,129111881,0,0x0,8
tick,0x7ffdc994fb34,129128267,0,0x0,8
tick,0x7ffdc994fb34,129143794,0,0x0,8
tick,0x7ffdc994fb34,129159333,0,0x0,8
tick,0x7ffdc994fb34,129174738,0,0x0,8
tick,0x7ffdc994fb34,129190158,0,0x0,8
tick,0x7ffdc994fb34,129205565,0,0x0,8
tick,0x7ffdc994fb34,129220875,0,0x0,8
tick,0x7ffdc994fb34,129236683,0,0x0,8
tick,0x7ffdc994fb34,129252053,0,0x0,8
tick,0x7ffdc994fb34,129267724,0,0x0,8
tick,0x7ffdc994fb34,129283132,0,0x0,8
tick,0x7ffdc994fb34,129298923,0,0x0,8
tick,0x7ffdc994fb34,129315070,0,0x0,8
tick,0x7ffdc994fb34,129330553,0,0x0,8
tick,0x7ffdc994fb34,129346142,0,0x0,8
tick,0x7ffdc994fb34,129361757,0,0x0,8
tick,0x7ffdc994fb34,129377265,0,0x0,8
tick,0x7ffdc994fb34,129393431,0,0x0,8
tick,0x7ffdc994fb34,129408787,0,0x0,8
tick,0x7ffdc994fb34,129424315,0,0x0,8
tick,0x7ffdc994fb34,129439771,0,0x0,8
tick,0x7ffdc994fb34,129455569,0,0x0,8
tick,0x7ffdc994fb34,129470971,0,0x0,8
tick,0x7ffdc994fb34,129485534,0,0x0,8
tick,0x7ffdc994fb34,129500710,0,0x0,8
tick,0x7ffdc994fb34,129516361,0,0x0,8
tick,0x7ffdc994fb34,129531368,0,0x0,8
tick,0x7ffdc994fb34,129547136,0,0x0,8
tick,0x7ffdc994fb34,129562519,0,0x0,8
tick,0x7ffdc994fb34,129578200,0,0x0,8
tick,0x7ffdc994fb34,129593439,0,0x0,8
tick,0x7ffdc994fb34,129609147,0,0x0,8
tick,0x7ffdc994fb34,129624776,0,0x0,8
tick,0x7ffdc994fb34,129640721,0,0x0,8
tick,0x7ffdc994fb34,129656802,0,0x0,8
tick,0x7ffdc994fb34,129672078,0,0x0,8
tick,0x7ffdc994fb34,129687631,0,0x0,8
tick,0x7ffdc994fb34,129703379,0,0x0,8
tick,0x7ffdc994fb34,129718856,0,0x0,8
tick,0x7ffdc994fb34,129734335,0,0x0,8
tick,0x7ffdc994fb34,129749613,0,0x0,8
tick,0x7ffdc994fb34,129765444,0,0x0,8
tick,0x7ffdc994fb34,129780648,0,0x0,8
tick,0x7ffdc994fb34,129796118,0,0x0,8
tick,0x7ffdc994fb34,129812106,0,0x0,8
tick,0x7ffdc994fb34,129828460,0,0x0,8
tick,0x7ffdc994fb34,129843610,0,0x0,8
tick,0x7ffdc994fb34,129859091,0,0x0,8
tick,0x7ffdc994fb34,129874563,0,0x0,8
tick,0x7ffdc994fb34,129890265,0,0x0,8
tick,0x7ffdc994fb34,129905560,0,0x0,8
tick,0x7ffdc994fb34,129921102,0,0x0,8
tick,0x7ffdc994fb34,129936501,0,0x0,8
tick,0x7ffdc994fb34,129951835,0,0x0,8
tick,0x7ffdc994fb34,129967240,0,0x0,8
tick,0x7ffdc994fb34,129982665,0,0x0,8
tick,0x7ffdc994fb34,129998801,0,0x0,8
tick,0x7ffdc994fb34,130014009,0,0x0,8
tick,0x7ffdc994fb34,130029202,0,0x0,8
tick,0x7ffdc994fb34,130044592,0,0x0,8
tick,0x7ffdc994fb34,130060419,0,0x0,8
tick,0x7ffdc994fb34,130076508,0,0x0,8
tick,0x7ffdc994fb34,130092840,0,0x0,8
tick,0x7ffdc994fb34,130108531,0,0x0,8
tick,0x7ffdc994fb34,130124028,0,0x0,8
tick,0x7ffdc994fb34,130140015,0,0x0,8
tick,0x7ffdc994fb34,130155326,0,0x0,8
tick,0x7ffdc994fb34,130171090,0,0x0,8
tick,0x7ffdc994fb34,130186544,0,0x0,8
tick,0x7ffdc994fb34,130201778,0,0x0,8
tick,0x7ffdc994fb34,130217025,0,0x0,8
tick,0x7ffdc994fb34,130232548,0,0x0,8
tick,0x7ffdc994fb34,130248049,0,0x0,8
tick,0x7ffdc994fb34,130263996,0,0x0,8
tick,0x7ffdc994fb34,130280320,0,0x0,8
tick,0x7ffdc994fb34,130295589,0,0x0,8
tick,0x7ffdc994fb34,130311273,0,0x0,8
tick,0x7ffdc994fb34,130326726,0,0x0,8
tick,0x7ffdc994fb34,130342851,0,0x0,8
tick,0x7ffdc994fb34,130358445,0,0x0,8
tick,0x7ffdc994fb34,130373458,0,0x0,8
tick,0x7ffdc994fb34,130389177,0,0x0,8
tick,0x7ffdc994fb34,130403983,0,0x0,8
tick,0x7ffdc994fb34,130419640,0,0x0,8
tick,0x7ffdc994fb34,130435866,0,0x0,8
tick,0x7ffdc994fb34,130451613,0,0x0,8
tick,0x7ffdc994fb34,130466793,0,0x0,8
tick,0x7ffdc994fb34,130482696,0,0x0,8
tick,0x7ffdc994fb34,130498164,0,0x0,8
tick,0x7ffdc994fb34,130514152,0,0x0,8
tick,0x7ffdc994fb34,130529565,0,0x0,8
tick,0x7ffdc994fb34,130544973,0,0x0,8
tick,0x7ffdc994fb34,130560476,0,0x0,8
tick,0x7ffdc994fb34,130576158,0,0x0,8
tick,0x7ffdc994fb34,130592289,0,0x0,8
tick,0x7ffdc994fb34,130607630,0,0x0,8
tick,0x7ffdc994fb34,130623536,0,0x0,8
tick,0x7ffdc994fb34,130638584,0,0x0,8
tick,0x7ffdc994fb34,130654557,0,0x0,8
tick,0x7ffdc994fb34,130670024,0,0x0,8
tick,0x7ffdc994fb34,130684735,0,0x0,8
tick,0x7ffdc994fb34,130700661,0,0x0,8
tick,0x7ffdc994fb34,130716383,0,0x0,8
tick,0x7ffdc994fb34,130732523,0,0x0,8
tick,0x7ffdc994fb34,130748537,0,0x0,8
tick,0x7ffdc994fb34,130763943,0,0x0,8
tick,0x7ffdc994fb34,130779185,0,0x0,8
tick,0x7ffdc994fb34,130794640,0,0x0,8
tick,0x7ffdc994fb34,130810409,0,0x0,8
tick,0x7ffdc994fb34,130825647,0,0x0,8
tick,0x7ffdc994fb34,130841374,0,0x0,8
tick,0x7ffdc994fb34,130857282,0,0x0,8
tick,0x7ffdc994fb34,130872578,0,0x0,8
tick,0x7ffdc994fb34,130888429,0,0x0,8
tick,0x7ffdc994fb34,130903903,0,0x0,8
tick,0x7ffdc994fb34,130919780,0,0x0,8
tick,0x7ffdc994fb34,130934986,0,0x0,8
tick,0x7ffdc994fb34,130950735,0,0x0,8
tick,0x7ffdc994fb34,130965986,0,0x0,8
tick,0x7ffdc994fb34,130981269,0,0x0,8
tick,0x7ffdc994fb34,130996892,0,0x0,8
tick,0x7ffdc994fb34,131012109,0,0x0,8
tick,0x7ffdc994fb34,131027761,0,0x0,8
tick,0x7ffdc994fb34,131043389,0,0x0,8
tick,0x7ffdc994fb34,131058801,0,0x0,8
tick,0x7ffdc994fb34,131074094,0,0x0,8
tick,0x7ffdc994fb34,131090046,0,0x0,8
tick,0x7ffdc994fb34,131105268,0,0x0,8
tick,0x7ffdc994fb34,131120945,0,0x0,8
tick,0x7ffdc994fb34,131136265,0,0x0,8
tick,0x7ffdc994fb34,131152728,0,0x0,8
tick,0x7ffdc994fb34,131168664,0,0x0,8
tick,0x7ffdc994fb34,131184563,0,0x0,8
tick,0x7ffdc994fb34,131200514,0,0x0,8
tick,0x7ffdc994fb34,131215752,0,0x0,8
tick,0x7ffdc994fb34,131231658,0,0x0,8
tick,0x7ffdc994fb34,131246739,0,0x0,8
tick,0x7ffdc994fb34,131262686,0,0x0,8
tick,0x7ffdc994fb34,131278231,0,0x0,8
tick,0x7ffdc994fb34,131294004,0,0x0,8
tick,0x7ffdc994fb34,131309145,0,0x0,8
tick,0x7ffdc994fb34,131324626,0,0x0,8
tick,0x7ffdc994fb34,131340729,0,0x0,8
tick,0x7ffdc994fb34,131356158,0,0x0,8
tick,0x7ffdc994fb34,131372047,0,0x0,8
tick,0x7ffdc994fb34,131388094,0,0x0,8
tick,0x7ffdc994fb34,131403868,0,0x0,8
tick,0x7ffdc994fb34,131419041,0,0x0,8
tick,0x7ffdc994fb34,131434315,0,0x0,8
tick,0x7ffdc994fb34,131449619,0,0x0,8
tick,0x7ffdc994fb34,131464803,0,0x0,8
tick,0x7ffdc994fb34,131479461,0,0x0,8
tick,0x7ffdc994fb34,131494882,0,0x0,8
tick,0x7ffdc994fb34,131510524,0,0x0,8
tick,0x7ffdc994fb34,131525742,0,0x0,8
tick,0x7ffdc994fb34,131541302,0,0x0,8
tick,0x7ffdc994fb34,131556826,0,0x0,8
tick,0x7ffdc994fb34,131572405,0,0x0,8
tick,0x7ffdc994fb34,131588350,0,0x0,8
tick,0x7ffdc994fb34,131604047,0,0x0,8
tick,0x7ffdc994fb34,131619630,0,0x0,8
tick,0x7ffdc994fb34,131635892,0,0x0,8
tick,0x7ffdc994fb34,131651553,0,0x0,8
tick,0x7ffdc994fb34,131667412,0,0x0,8
tick,0x7ffdc994fb34,131682993,0,0x0,8
tick,0x7ffdc994fb34,131698978,0,0x0,8
tick,0x7ffdc994fb34,131714340,0,0x0,8
tick,0x7ffdc994fb34,131729667,0,0x0,8
tick,0x7ffdc994fb34,131745181,0,0x0,8
tick,0x7ffdc994fb34,131760873,0,0x0,8
tick,0x7ffdc994fb34,131776164,0,0x0,8
tick,0x7ffdc994fb34,131791620,0,0x0,8
tick,0x7ffdc994fb34,131807176,0,0x0,8
tick,0x7ffdc994fb34,131822702,0,0x0,8
tick,0x7ffdc994fb34,131838091,0,0x0,8
tick,0x7ffdc994fb34,131853466,0,0x0,8
tick,0x7ffdc994fb34,131868831,0,0x0,8
tick,0x7ffdc994fb34,131884190,0,0x0,8
tick,0x7ffdc994fb34,131900136,0,0x0,8
tick,0x7ffdc994fb34,131915339,0,0x0,8
tick,0x7ffdc994fb34,131930774,0,0x0,8
tick,0x7ffdc994fb34,131945915,0,0x0,8
tick,0x7ffdc994fb34,131961535,0,0x0,8
tick,0x7ffdc994fb34,131977137,0,0x0,8
tick,0x7ffdc994fb34,131992376,0,0x0,8
tick,0x7ffdc994fb34,132008253,0,0x0,8
tick,0x7ffdc994fb34,132024084,0,0x0,8
tick,0x7ffdc994fb34,132040099,0,0x0,8
tick,0x7ffdc994fb34,132055401,0,0x0,8
tick,0x7ffdc994fb34,132071350,0,0x0,8
tick,0x7ffdc994fb34,132087407,0,0x0,8
tick,0x7ffdc994fb34,132103164,0,0x0,8
tick,0x7ffdc994fb34,132118841,0,0x0,8
tick,0x7ffdc994fb34,132134128,0,0x0,8
tick,0x7ffdc994fb34,132149594,0,0x0,8
tick,0x7ffdc994fb34,132165381,0,0x0,8
tick,0x7ffdc994fb34,132180797,0,0x0,8
tick,0x7ffdc994fb34,132196351,0,0x0,8
tick,0x7ffdc994fb34,132212574,0,0x0,8
tick,0x7ffdc994fb34,132228010,0,0x0,8
tick,0x7ffdc994fb34,132243486,0,0x0,8
tick,0x7ffdc994fb34,132259427,0,0x0,8
tick,0x7ffdc994fb34,132274622,0,0x0,8
tick,0x7ffdc994fb34,132290448,0,0x0,8
tick,0x7ffdc994fb34,132306452,0,0x0,8
tick,0x7ffdc994fb34,132322323,0,0x0,8
tick,0x7ffdc994fb34,132338523,0,0x0,8
tick,0x7ffdc994fb34,132354405,0,0x0,8
tick,0x7ffdc994fb34,132369928,0,0x0,8
tick,0x7ffdc994fb34,132385465,0,0x0,8
tick,0x7ffdc994fb34,132401468,0,0x0,8
tick,0x7ffdc994fb34,132416761,0,0x0,8
tick,0x7ffdc994fb34,132432809,0,0x0,8
tick,0x7ffdc994fb34,132448102,0,0x0,8
tick,0x7ffdc994fb34,132463856,0,0x0,8
tick,0x7ffdc994fb34,132479756,0,0x0,8
tick,0x7ffdc994fb34,132495373,0,0x0,8
tick,0x7ffdc994fb34,132510755,0,0x0,8
tick,0x7ffdc994fb34,132526776,0,0x0,8
tick,0x7ffdc994fb34,132541918,0,0x0,8
tick,0x7ffdc994fb34,132557770,0,0x0,8
tick,0x7ffdc994fb34,132572551,0,0x0,8
tick,0x7ffdc994fb34,132588212,0,0x0,8
tick,0x7ffdc994fb34,132603592,0,0x0,8
tick,0x7ffdc994fb34,132619282,0,0x0,8
tick,0x7ffdc994fb34,132634719,0,0x0,8
tick,0x7ffdc994fb34,132650753,0,0x0,8
tick,0x7ffdc994fb34,132666085,0,0x0,8
tick,0x7ffdc994fb34,132681275,0,0x0,8
tick,0x7ffdc994fb34,132697354,0,0x0,8
tick,0x7ffdc994fb34,132713127,0,0x0,8
tick,0x7ffdc994fb34,132728393,0,0x0,8
tick,0x7ffdc994fb34,132744326,0,0x0,8
tick,0x7ffdc994fb34,132758903,0,0x0,8
tick,0x7ffdc994fb34,132774879,0,0x0,8
tick,0x7ffdc994fb34,132790428,0,0x0,8
tick,0x7ffdc994fb34,132805753,0,0x0,8
tick,0x7ffdc994fb34,132821499,0,0x0,8
tick,0x7ffdc994fb34,132837503,0,0x0,8
tick,0x7ffdc994fb34,132853092,0,0x0,8
tick,0x7ffdc994fb34,132868201,0,0x0,8
tick,0x7ffdc994fb34,132883871,0,0x0,8
tick,0x7ffdc994fb34,132899680,0,0x0,8
tick,0x7ffdc994fb34,132914626,0,0x0,8
tick,0x7ffdc994fb34,132929795,0,0x0,8
tick,0x7ffdc994fb34,132945089,0,0x0,8
tick,0x7ffdc994fb34,132961016,0,0x0,8
tick,0x7ffdc994fb34,132976865,0,0x0,8
tick,0x7ffdc994fb34,132992433,0,0x0,8
tick,0x7ffdc994fb34,133008352,0,0x0,8
tick,0x7ffdc994fb34,133023543,0,0x0,8
tick,0x7ffdc994fb34,133039459,0,0x0,8
tick,0x7ffdc994fb34,133054780,0,0x0,8
tick,0x7ffdc994fb34,133070651,0,0x0,8
tick,0x7ffdc994fb34,133086306,0,0x0,8
tick,0x7ffdc994fb34,133101727,0,0x0,8
tick,0x7ffdc994fb34,133117162,0,0x0,8
tick,0x7ffdc994fb34,133133244,0,0x0,8
tick,0x7ffdc994fb34,133148353,0,0x0,8
tick,0x7ffdc994fb34,133163854,0,0x0,8
tick,0x7ffdc994fb34,133179485,0,0x0,8
tick,0x7ffdc994fb34,133195243,0,0x0,8
tick,0x7ffdc994fb34,133210904,0,0x0,8
tick,0x7ffdc994fb34,133226798,0,0x0,8
tick,0x7ffdc994fb34,133242509,0,0x0,8
tick,0x7ffdc994fb34,133257596,0,0x0,8
tick,0x7ffdc994fb34,133273333,0,0x0,8
tick,0x7ffdc994fb34,133289413,0,0x0,8
tick,0x7ffdc994fb34,133304903,0,0x0,8
tick,0x7ffdc994fb34,133320412,0,0x0,8
tick,0x7ffdc994fb34,133335754,0,0x0,8
tick,0x7ffdc994fb34,133351520,0,0x0,8
tick,0x7ffdc994fb34,133367242,0,0x0,8
tick,0x7ffdc994fb34,133383114,0,0x0,8
tick,0x7ffdc994fb34,133399008,0,0x0,8
tick,0x7ffdc994fb34,133414020,0,0x0,8
tick,0x7ffdc994fb34,133429765,0,0x0,8
tick,0x7ffdc994fb34,133445547,0,0x0,8
tick,0x7ffdc994fb34,133460945,0,0x0,8
tick,0x7ffdc994fb34,133476507,0,0x0,8
tick,0x7ffdc994fb34,133491861,0,0x0,8
tick,0x7ffdc994fb34,133506906,0,0x0,8
tick,0x7ffdc994fb34,133522680,0,0x0,8
tick,0x7ffdc994fb34,133538525,0,0x0,8
tick,0x7ffdc994fb34,133554045,0,0x0,8
tick,0x7ffdc994fb34,133569316,0,0x0,8
tick,0x7ffdc994fb34,133584861,0,0x0,8
tick,0x7ffdc994fb34,133600838,0,0x0,8
tick,0x7ffdc994fb34,133616923,0,0x0,8
tick,0x7ffdc994fb34,133632305,0,0x0,8
tick,0x7ffdc994fb34,133648365,0,0x0,8
tick,0x7ffdc994fb34,133664137,0,0x0,8
tick,0x7ffdc994fb34,133679244,0,0x0,8
tick,0x7ffdc994fb34,133694358,0,0x0,8
tick,0x7ffdc994fb34,133710577,0,0x0,8
tick,0x7ffdc994fb34,133725678,0,0x0,8
tick,0x7ffdc994fb34,133741505,0,0x0,8
tick,0x7ffdc994fb34,133757249,0,0x0,8
tick,0x7ffdc994fb34,133772574,0,0x0,8
tick,0x7ffdc994fb34,133788268,0,0x0,8
tick,0x7ffdc994fb34,133803757,0,0x0,8
tick,0x7ffdc994fb34,133819224,0,0x0,8
tick,0x7ffdc994fb34,133834828,0,0x0,8
tick,0x7ffdc994fb34,133850376,0,0x0,8
tick,0x7ffdc994fb34,133866448,0,0x0,8
tick,0x7ffdc994fb34,133881735,0,0x0,8
tick,0x7ffdc994fb34,133897253,0,0x0,8
tick,0x7ffdc994fb34,133912464,0,0x0,8
tick,0x7ffdc994fb34,133928283,0,0x0,8
tick,0x7ffdc994fb34,133944454,0,0x0,8
tick,0x7ffdc994fb34,133959245,0,0x0,8
tick,0x7ffdc994fb34,133974649,0,0x0,8
tick,0x7ffdc994fb34,133990355,0,0x0,8
tick,0x7ffdc994fb34,134005349,0,0x0,8
tick,0x7ffdc994fb34,134020808,0,0x0,8
tick,0x7ffdc994fb34,134036210,0,0x0,8
tick,0x7ffdc994fb34,134051899,0,0x0,8
tick,0x7ffdc994fb34,134068029,0,0x0,8
tick,0x7ffdc994fb34,134083864,0,0x0,8
tick,0x7ffdc994fb34,134099770,0,0x0,8
tick,0x7ffdc994fb34,134115765,0,0x0,8
tick,0x7ffdc994fb34,134130857,0,0x0,8
tick,0x7ffdc994fb34,134146053,0,0x0,8
tick,0x7ffdc994fb34,134161225,0,0x0,8
tick,0x7ffdc994fb34,134177093,0,0x0,8
tick,0x7ffdc994fb34,134193307,0,0x0,8
tick,0x7ffdc994fb34,134208590,0,0x0,8
tick,0x7ffdc994fb34,134224607,0,0x0,8
tick,0x7ffdc994fb34,134239543,0,0x0,8
tick,0x7ffdc994fb34,134255154,0,0x0,8
tick,0x7ffdc994fb34,134270533,0,0x0,8
tick,0x7ffdc994fb34,134286338,0,0x0,8
tick,0x7ffdc994fb34,134301586,0,0x0,8
tick,0x7ffdc994fb34,134316855,0,0x0,8
tick,0x7ffdc994fb34,134332106,0,0x0,8
tick,0x7ffdc994fb34,134347874,0,0x0,8
tick,0x7ffdc994fb34,134363618,0,0x0,8
tick,0x7ffdc994fb34,134379379,0,0x0,8
tick,0x7ffdc994fb34,134395137,0,0x0,8
tick,0x7ffdc994fb34,134411105,0,0x0,8
tick,0x7ffdc994fb34,134425744,0,0x0,8
tick,0x7ffdc994fb34,134442048,0,0x0,8
tick,0x7ffdc994fb34,134457854,0,0x0,8
tick,0x7ffdc994fb34,134473934,0,0x0,8
tick,0x7ffdc994fb34,134489316,0,0x0,8
tick,0x7ffdc994fb34,134504335,0,0x0,8
tick,0x7ffdc994fb34,134520213,0,0x0,8
tick,0x7ffdc994fb34,134535591,0,0x0,8
tick,0x7ffdc994fb34,134551166,0,0x0,8
tick,0x7ffdc994fb34,134567273,0,0x0,8
tick,0x7ffdc994fb34,134582255,0,0x0,8
tick,0x7ffdc994fb34,134597618,0,0x0,8
tick,0x7ffdc994fb34,134612406,0,0x0,8
tick,0x7ffdc994fb34,134628176,0,0x0,8
tick,0x7ffdc994fb34,134643900,0,0x0,8
tick,0x7ffdc994fb34,134659511,0,0x0,8
tick,0x7ffdc994fb34,134674892,0,0x0,8
tick,0x7ffdc994fb34,134690886,0,0x0,8
tick,0x7ffdc994fb34,134710503,0,0x0,8
tick,0x7ffdc994fb34,134722576,0,0x0,8
tick,0x7ffdc994fb34,134736261,0,0x0,8
tick,0x7ffdc994fb34,134751633,0,0x0,8
tick,0x7ffdc994fb34,134767763,0,0x0,8
tick,0x7ffdc994fb34,134783691,0,0x0,8
tick,0x7ffdc994fb34,134798766,0,0x0,8
tick,0x7ffdc994fb34,134815774,0,0x0,8
tick,0x7ffdc994fb34,134829950,0,0x0,8
tick,0x7ffdc994fb34,134845929,0,0x0,8
tick,0x7ffdc994fb34,134862086,0,0x0,8
tick,0x7ffdc994fb34,134878731,0,0x0,8
tick,0x7ffdc994fb34,134893571,0,0x0,8
tick,0x7ffdc994fb34,134909335,0,0x0,8
tick,0x7ffdc994fb34,134923550,0,0x0,8
tick,0x7ffdc994fb34,134939634,0,0x0,8
tick,0x7ffdc994fb34,134954852,0,0x0,8
tick,0x7ffdc994fb34,134970310,0,0x0,8
tick,0x7ffdc994fb34,134985971,0,0x0,8
tick,0x7ffdc994fb34,135001684,0,0x0,8
tick,0x7ffdc994fb34,135017669,0,0x0,8
tick,0x7ffdc994fb34,135033554,0,0x0,8
tick,0x7ffdc994fb34,135048720,0,0x0,8
tick,0x7ffdc994fb34,135064503,0,0x0,8
tick,0x7ffdc994fb34,135079473,0,0x0,8
tick,0x7ffdc994fb34,135096796,0,0x0,8
tick,0x7ffdc994fb34,135111218,0,0x0,8
tick,0x7ffdc994fb34,135126732,0,0x0,8
tick,0x7ffdc994fb34,135142407,0,0x0,8
tick,0x7ffdc994fb34,135158236,0,0x0,8
tick,0x7ffdc994fb34,135174296,0,0x0,8
tick,0x7ffdc994fb34,135189405,0,0x0,8
tick,0x7ffdc994fb34,135205252,0,0x0,8
tick,0x7ffdc994fb34,135221174,0,0x0,8
tick,0x7ffdc994fb34,135236425,0,0x0,8
tick,0x7ffdc994fb34,135252521,0,0x0,8
tick,0x7ffdc994fb34,135268040,0,0x0,8
tick,0x7ffdc994fb34,135283331,0,0x0,8
tick,0x7ffdc994fb34,135298847,0,0x0,8
tick,0x7ffdc994fb34,135314843,0,0x0,8
tick,0x7ffdc994fb34,135330257,0,0x0,8
tick,0x7ffdc994fb34,135346353,0,0x0,8
tick,0x7ffdc994fb34,135361736,0,0x0,8
tick,0x7ffdc994fb34,135377137,0,0x0,8
tick,0x7ffdc994fb34,135392578,0,0x0,8
tick,0x7ffdc994fb34,135408375,0,0x0,8
tick,0x7ffdc994fb34,135424458,0,0x0,8
tick,0x7ffdc994fb34,135440469,0,0x0,8
tick,0x7ffdc994fb34,135455804,0,0x0,8
tick,0x7ffdc994fb34,135471343,0,0x0,8
tick,0x7ffdc994fb34,135487441,0,0x0,8
tick,0x7ffdc994fb34,135502722,0,0x0,8
tick,0x7ffdc994fb34,135518282,0,0x0,8
tick,0x7ffdc994fb34,135532806,0,0x0,8
tick,0x7ffdc994fb34,135548256,0,0x0,8
tick,0x7ffdc994fb34,135563883,0,0x0,8
tick,0x7ffdc994fb34,135579368,0,0x0,8
tick,0x7ffdc994fb34,135594246,0,0x0,8
tick,0x7ffdc994fb34,135610241,0,0x0,8
tick,0x7ffdc994fb34,135625977,0,0x0,8
tick,0x7ffdc994fb34,135641772,0,0x0,8
tick,0x7ffdc994fb34,135657570,0,0x0,8
tick,0x7ffdc994fb34,135673351,0,0x0,8
tick,0x7ffdc994fb34,135689363,0,0x0,8
tick,0x7ffdc994fb34,135705276,0,0x0,8
tick,0x7ffdc994fb34,135720887,0,0x0,8
tick,0x7ffdc994fb34,135735971,0,0x0,8
tick,0x7ffdc994fb34,135751856,0,0x0,8
tick,0x7ffdc994fb34,135767248,0,0x0,8
tick,0x7ffdc994fb34,135782351,0,0x0,8
tick,0x7ffdc994fb34,135798588,0,0x0,8
tick,0x7ffdc994fb34,135814787,0,0x0,8
tick,0x7ffdc994fb34,135830655,0,0x0,8
tick,0x7ffdc994fb34,135847024,0,0x0,8
tick,0x7ffdc994fb34,135862740,0,0x0,8
tick,0x7ffdc994fb34,135877848,0,0x0,8
tick,0x7ffdc994fb34,135893764,0,0x0,8
tick,0x7ffdc994fb34,135909762,0,0x0,8
tick,0x7ffdc994fb34,135925383,0,0x0,8
tick,0x7ffdc994fb34,135940765,0,0x0,8
tick,0x7ffdc994fb34,135956623,0,0x0,8
tick,0x7ffdc994fb34,135971644,0,0x0,8
tick,0x7ffdc994fb34,135987826,0,0x0,8
tick,0x7ffdc994fb34,136003111,0,0x0,8
tick,0x7ffdc994fb34,136019180,0,0x0,8
tick,0x7ffdc994fb34,136034111,0,0x0,8
tick,0x7ffdc994fb34,136049689,0,0x0,8
tick,0x7ffdc994fb34,136064928,0,0x0,8
tick,0x7ffdc994fb34,136080359,0,0x0,8
tick,0x7ffdc994fb34,136095084,0,0x0,8
tick,0x7ffdc994fb34,136110724,0,0x0,8
tick,0x7ffdc994fb34,136126749,0,0x0,8
tick,0x7ffdc994fb34,136141800,0,0x0,8
tick,0x7ffdc994fb34,136157399,0,0x0,8
tick,0x7ffdc994fb34,136172817,0,0x0,8
tick,0x7ffdc994fb34,136188571,0,0x0,8
tick,0x7ffdc994fb34,136204755,0,0x0,8
tick,0x7ffdc994fb34,136220090,0,0x0,8
tick,0x7ffdc994fb34,136236004,0,0x0,8
tick,0x7ffdc994fb34,136251673,0,0x0,8
tick,0x7ffdc994fb34,136266758,0,0x0,8
tick,0x7ffdc994fb34,136282047,0,0x0,8
tick,0x7ffdc994fb34,136297897,0,0x0,8
tick,0x7ffdc994fb34,136313175,0,0x0,8
tick,0x7ffdc994fb34,136328739,0,0x0,8
tick,0x7ffdc994fb34,136344678,0,0x0,8
tick,0x7ffdc994fb34,136360318,0,0x0,8
tick,0x7ffdc994fb34,136375798,0,0x0,8
tick,0x7ffdc994fb34,136391772,0,0x0,8
tick,0x7ffdc994fb34,136407101,0,0x0,8
tick,0x7ffdc994fb34,136423274,0,0x0,8
tick,0x7ffdc994fb34,136438794,0,0x0,8
tick,0x7ffdc994fb34,136454242,0,0x0,8
tick,0x7ffdc994fb34,136470065,0,0x0,8
tick,0x7ffdc994fb34,136485520,0,0x0,8
tick,0x7ffdc994fb34,136501168,0,0x0,8
tick,0x7ffdc994fb34,136517022,0,0x0,8
tick,0x7ffdc994fb34,136532783,0,0x0,8
tick,0x7ffdc994fb34,136548159,0,0x0,8
tick,0x7ffdc994fb34,136563152,0,0x0,8
tick,0x7ffdc994fb34,136578238,0,0x0,8
tick,0x7ffdc994fb34,136593706,0,0x0,8
tick,0x7ffdc994fb34,136609090,0,0x0,8
tick,0x7ffdc994fb34,136624569,0,0x0,8
tick,0x7ffdc994fb34,136640521,0,0x0,8
tick,0x7ffdc994fb34,136655392,0,0x0,8
tick,0x7ffdc994fb34,136670839,0,0x0,8
tick,0x7ffdc994fb34,136686348,0,0x0,8
tick,0x7ffdc994fb34,136702631,0,0x0,8
tick,0x7ffdc994fb34,136718374,0,0x0,8
tick,0x7ffdc994fb34,136733626,0,0x0,8
tick,0x7ffdc994fb34,136749564,0,0x0,8
tick,0x7ffdc994fb34,136764710,0,0x0,8
tick,0x7ffdc994fb34,136780444,0,0x0,8
tick,0x7ffdc994fb34,136795770,0,0x0,8
tick,0x7ffdc994fb34,136811226,0,0x0,8
tick,0x7ffdc994fb34,136826512,0,0x0,8
tick,0x7ffdc994fb34,136841594,0,0x0,8
tick,0x7ffdc994fb34,136856811,0,0x0,8
tick,0x7ffdc994fb34,136872064,0,0x0,8
tick,0x7ffdc994fb34,136887587,0,0x0,8
tick,0x7ffdc994fb34,136903805,0,0x0,8
tick,0x7ffdc994fb34,136919370,0,0x0,8
tick,0x7ffdc994fb34,136934726,0,0x0,8
tick,0x7ffdc994fb34,136950027,0,0x0,8
tick,0x7ffdc994fb34,136966059,0,0x0,8
tick,0x7ffdc994fb34,136981881,0,0x0,8
tick,0x7ffdc994fb34,136997139,0,0x0,8
tick,0x7ffdc994fb34,137012989,0,0x0,8
tick,0x7ffdc994fb34,137028267,0,0x0,8
tick,0x7ffdc994fb34,137044000,0,0x0,8
tick,0x7ffdc994fb34,137059426,0,0x0,8
tick,0x7ffdc994fb34,137074717,0,0x0,8
tick,0x7ffdc994fb34,137090583,0,0x0,8
tick,0x7ffdc994fb34,137106379,0,0x0,8
tick,0x7ffdc994fb34,137121716,0,0x0,8
tick,0x7ffdc994fb34,137137396,0,0x0,8
tick,0x7ffdc994fb34,137152417,0,0x0,8
tick,0x7ffdc994fb34,137168559,0,0x0,8
tick,0x7ffdc994fb34,137183690,0,0x0,8
tick,0x7ffdc994fb34,137199032,0,0x0,8
tick,0x7ffdc994fb34,137215085,0,0x0,8
tick,0x7ffdc994fb34,137230326,0,0x0,8
tick,0x7ffdc994fb34,137245821,0,0x0,8
tick,0x7ffdc994fb34,137261534,0,0x0,8
tick,0x7ffdc994fb34,137276794,0,0x0,8
tick,0x7ffdc994fb34,137291922,0,0x0,8
tick,0x7ffdc994fb34,137307488,0,0x0,8
tick,0x7ffdc994fb34,137322626,0,0x0,8
tick,0x7ffdc994fb34,137338049,0,0x0,8
tick,0x7ffdc994fb34,137353405,0,0x0,8
tick,0x7ffdc994fb34,137369353,0,0x0,8
tick,0x7ffdc994fb34,137384660,0,0x0,8
tick,0x7ffdc994fb34,137400034,0,0x0,8
tick,0x7ffdc994fb34,137415703,0,0x0,8
tick,0x7ffdc994fb34,137431117,0,0x0,8
tick,0x7ffdc994fb34,137446172,0,0x0,8
tick,0x7ffdc994fb34,137461662,0,0x0,8
tick,0x7ffdc994fb34,137477230,0,0x0,8
tick,0x7ffdc994fb34,137492775,0,0x0,8
tick,0x7ffdc994fb34,137508304,0,0x0,8
tick,0x7ffdc994fb34,137523830,0,0x0,8
tick,0x7ffdc994fb34,137539234,0,0x0,8
tick,0x7ffdc994fb34,137555246,0,0x0,8
tick,0x7ffdc994fb34,137570308,0,0x0,8
tick,0x7ffdc994fb34,137586121,0,0x0,8
tick,0x7ffdc994fb34,137601679,0,0x0,8
tick,0x7ffdc994fb34,137617350,0,0x0,8
tick,0x7ffdc994fb34,137632554,0,0x0,8
tick,0x7ffdc994fb34,137648046,0,0x0,8
tick,0x7ffdc994fb34,137663457,0,0x0,8
tick,0x7ffdc994fb34,137679406,0,0x0,8
tick,0x7ffdc994fb34,137694992,0,0x0,8
tick,0x7ffdc994fb34,137710142,0,0x0,8
tick,0x7ffdc994fb34,137726174,0,0x0,8
tick,0x7ffdc994fb34,137741333,0,0x0,8
tick,0x7ffdc994fb34,137756930,0,0x0,8
tick,0x7ffdc994fb34,137772459,0,0x0,8
tick,0x7ffdc994fb34,137787868,0,0x0,8
tick,0x7ffdc994fb34,137803638,0,0x0,8
tick,0x7ffdc994fb34,137819761,0,0x0,8
tick,0x7ffdc994fb34,137835197,0,0x0,8
tick,0x7ffdc994fb34,137850312,0,0x0,8
tick,0x7ffdc994fb34,137865977,0,0x0,8
tick,0x7ffdc994fb34,137881157,0,0x0,8
tick,0x7ffdc994fb34,137896635,0,0x0,8
tick,0x7ffdc994fb34,137912063,0,0x0,8
tick,0x7ffdc994fb34,137927599,0,0x0,8
tick,0x7ffdc994fb34,137942898,0,0x0,8
tick,0x7ffdc994fb34,137958102,0,0x0,8
tick,0x7ffdc994fb34,137973474,0,0x0,8
tick,0x7ffdc994fb34,137989316,0,0x0,8
tick,0x7ffdc994fb34,138004724,0,0x0,8
tick,0x7ffdc994fb34,138020284,0,0x0,8
tick,0x7ffdc994fb34,138035533,0,0x0,8
tick,0x7ffdc994fb34,138051160,0,0x0,8
tick,0x7ffdc994fb34,138066777,0,0x0,8
tick,0x7ffdc994fb34,138082574,0,0x0,8
tick,0x7ffdc994fb34,138098421,0,0x0,8
tick,0x7ffdc994fb34,138113243,0,0x0,8
tick,0x7ffdc994fb34,138128701,0,0x0,8
tick,0x7ffdc994fb34,138144080,0,0x0,8
tick,0x7ffdc994fb34,138159597,0,0x0,8
tick,0x7ffdc994fb34,138174899,0,0x0,8
tick,0x7ffdc994fb34,138190339,0,0x0,8
tick,0x7ffdc994fb34,138205524,0,0x0,8
tick,0x7ffdc994fb34,138220493,0,0x0,8
tick,0x7ffdc994fb34,138235922,0,0x0,8
tick,0x7ffdc994fb34,138251271,0,0x0,8
tick,0x7ffdc994fb34,138266885,0,0x0,8
tick,0x7ffdc994fb34,138282633,0,0x0,8
tick,0x7ffdc994fb34,138298130,0,0x0,8
tick,0x7ffdc994fb34,138313298,0,0x0,8
tick,0x7ffdc994fb34,138329228,0,0x0,8
tick,0x7ffdc994fb34,138344585,0,0x0,8
tick,0x7ffdc994fb34,138359915,0,0x0,8
tick,0x7ffdc994fb34,138375867,0,0x0,8
tick,0x7ffdc994fb34,138390900,0,0x0,8
tick,0x7ffdc994fb34,138406427,0,0x0,8
tick,0x7ffdc994fb34,138421703,0,0x0,8
tick,0x7ffdc994fb34,138437059,0,0x0,8
tick,0x7ffdc994fb34,138452694,0,0x0,8
tick,0x7ffdc994fb34,138468040,0,0x0,8
tick,0x7ffdc994fb34,138483924,0,0x0,8
tick,0x7ffdc994fb34,138499113,0,0x0,8
tick,0x7ffdc994fb34,138514761,0,0x0,8
tick,0x7ffdc994fb34,138530018,0,0x0,8
tick,0x7ffdc994fb34,138545430,0,0x0,8
tick,0x7ffdc994fb34,138560825,0,0x0,8
tick,0x7ffdc994fb34,138576778,0,0x0,8
tick,0x7ffdc994fb34,138593038,0,0x0,8
tick,0x7ffdc994fb34,138608878,0,0x0,8
tick,0x7ffdc994fb34,138624014,0,0x0,8
tick,0x7ffdc994fb34,138639672,0,0x0,8
tick,0x7ffdc994fb34,138654959,0,0x0,8
tick,0x7ffdc994fb34,138670385,0,0x0,8
tick,0x7ffdc994fb34,138686251,0,0x0,8
tick,0x7ffdc994fb34,138701734,0,0x0,8
tick,0x7ffdc994fb34,138717140,0,0x0,8
tick,0x7ffdc994fb34,138733485,0,0x0,8
tick,0x7ffdc994fb34,138749091,0,0x0,8
tick,0x7ffdc994fb34,138764911,0,0x0,8
tick,0x7ffdc994fb34,138780203,0,0x0,8
tick,0x7ffdc994fb34,138795532,0,0x0,8
tick,0x7ffdc994fb34,138810264,0,0x0,8
tick,0x7ffdc994fb34,138826551,0,0x0,8
tick,0x7ffdc994fb34,138841508,0,0x0,8
tick,0x7ffdc994fb34,138857286,0,0x0,8
tick,0x7ffdc994fb34,138872593,0,0x0,8
tick,0x7ffdc994fb34,138887775,0,0x0,8
tick,0x7ffdc994fb34,138903094,0,0x0,8
tick,0x7ffdc994fb34,138919343,0,0x0,8
tick,0x7ffdc994fb34,138935177,0,0x0,8
tick,0x7ffdc994fb34,138950245,0,0x0,8
tick,0x7ffdc994fb34,138965862,0,0x0,8
tick,0x7ffdc994fb34,138981238,0,0x0,8
tick,0x7ffdc994fb34,138996868,0,0x0,8
tick,0x7ffdc994fb34,139012708,0,0x0,8
tick,0x7ffdc994fb34,139028603,0,0x0,8
tick,0x7ffdc994fb34,139043906,0,0x0,8
tick,0x7ffdc994fb34,139060064,0,0x0,8
tick,0x7ffdc994fb34,139075898,0,0x0,8
tick,0x7ffdc994fb34,139092118,0,0x0,8
tick,0x7ffdc994fb34,139107882,0,0x0,8
tick,0x7ffdc994fb34,139123389,0,0x0,8
tick,0x7ffdc994fb34,139139373,0,0x0,8
tick,0x7ffdc994fb34,139154710,0,0x0,8
tick,0x7ffdc994fb34,139171091,0,0x0,8
tick,0x7ffdc994fb34,139186551,0,0x0,8
tick,0x7ffdc994fb34,139202003,0,0x0,8
tick,0x7ffdc994fb34,139217355,0,0x0,8
tick,0x7ffdc994fb34,139232656,0,0x0,8
tick,0x7ffdc994fb34,139248775,0,0x0,8
tick,0x7ffdc994fb34,139265527,0,0x0,8
tick,0x7ffdc994fb34,139278902,0,0x0,8
tick,0x7ffdc994fb34,139295533,0,0x0,8
tick,0x7ffdc994fb34,139310070,0,0x0,8
tick,0x7ffdc994fb34,139325441,0,0x0,8
tick,0x7ffdc994fb34,139340616,0,0x0,8
tick,0x7ffdc994fb34,139356164,0,0x0,8
tick,0x7ffdc994fb34,139371346,0,0x0,8
tick,0x7ffdc994fb34,139386687,0,0x0,8
tick,0x7ffdc994fb34,139401967,0,0x0,8
tick,0x7ffdc994fb34,139417232,0,0x0,8
tick,0x7ffdc994fb34,139432539,0,0x0,8
tick,0x7ffdc994fb34,139447607,0,0x0,8
tick,0x7ffdc994fb34,139463636,0,0x0,8
tick,0x7ffdc994fb34,139479286,0,0x0,8
tick,0x7ffdc994fb34,139494655,0,0x0,8
tick,0x7ffdc994fb34,139510236,0,0x0,8
tick,0x7ffdc994fb34,139525447,0,0x0,8
tick,0x7ffdc994fb34,139541140,0,0x0,8
tick,0x7ffdc994fb34,139556764,0,0x0,8
tick,0x7ffdc994fb34,139571990,0,0x0,8
tick,0x7ffdc994fb34,139586985,0,0x0,8
tick,0x7ffdc994fb34,139602792,0,0x0,8
tick,0x7ffdc994fb34,139617738,0,0x0,8
tick,0x7ffdc994fb34,139632444,0,0x0,8
tick,0x7ffdc994fb34,139648139,0,0x0,8
tick,0x7ffdc994fb34,139663592,0,0x0,8
tick,0x7ffdc994fb34,139679177,0,0x0,8
tick,0x7ffdc994fb34,139694906,0,0x0,8
tick,0x7ffdc994fb34,139710282,0,0x0,8
tick,0x7ffdc994fb34,139726108,0,0x0,8
tick,0x7ffdc994fb34,139741813,0,0x0,8
tick,0x7ffdc994fb34,139757548,0,0x0,8
tick,0x7ffdc994fb34,139772551,0,0x0,8
tick,0x7ffdc994fb34,139788759,0,0x0,8
tick,0x7ffdc994fb34,139804239,0,0x0,8
tick,0x7ffdc994fb34,139819784,0,0x0,8
tick,0x7ffdc994fb34,139835954,0,0x0,8
tick,0x7ffdc994fb34,139851088,0,0x0,8
tick,0x7ffdc994fb34,139867140,0,0x0,8
tick,0x7ffdc994fb34,139882808,0,0x0,8
tick,0x7ffdc994fb34,139898444,0,0x0,8
tick,0x7ffdc994fb34,139913793,0,0x0,8
tick,0x7ffdc994fb34,139929221,0,0x0,8
tick,0x7ffdc994fb34,139945024,0,0x0,8
tick,0x7ffdc994fb34,139959870,0,0x0,8
tick,0x7ffdc994fb34,139975856,0,0x0,8
tick,0x7ffdc994fb34,139991063,0,0x0,8
tick,0x7ffdc994fb34,140007350,0,0x0,8
tick,0x7ffdc994fb34,140023283,0,0x0,8
tick,0x7ffdc994fb34,140039467,0,0x0,8
tick,0x7ffdc994fb34,140055296,0,0x0,8
tick,0x7ffdc994fb34,140070906,0,0x0,8
tick,0x7ffdc994fb34,140086899,0,0x0,8
tick,0x7ffdc994fb34,140102134,0,0x0,8
tick,0x7ffdc994fb34,140117721,0,0x0,8
tick,0x7ffdc994fb34,140133779,0,0x0,8
tick,0x7ffdc994fb34,140149670,0,0x0,8
tick,0x7ffdc994fb34,140165594,0,0x0,8
tick,0x7ffdc994fb34,140181733,0,0x0,8
tick,0x7ffdc994fb34,140197451,0,0x0,8
tick,0x7ffdc994fb34,140212763,0,0x0,8
tick,0x7ffdc994fb34,140228230,0,0x0,8
tick,0x7ffdc994fb34,140244142,0,0x0,8
tick,0x7ffdc994fb34,140259532,0,0x0,8
tick,0x7ffdc994fb34,140275408,0,0x0,8
tick,0x7ffdc994fb34,140291041,0,0x0,8
tick,0x7ffdc994fb34,140306761,0,0x0,8
tick,0x7ffdc994fb34,140322361,0,0x0,8
tick,0x7ffdc994fb34,140337804,0,0x0,8
tick,0x7ffdc994fb34,140353148,0,0x0,8
tick,0x7ffdc994fb34,140368344,0,0x0,8
tick,0x7ffdc994fb34,140384240,0,0x0,8
tick,0x7ffdc994fb34,140400201,0,0x0,8
tick,0x7ffdc994fb34,140415862,0,0x0,8
tick,0x7ffdc994fb34,140431334,0,0x0,8
tick,0x7ffdc994fb34,140446384,0,0x0,8
tick,0x7ffdc994fb34,140461429,0,0x0,8
tick,0x7ffdc994fb34,140477042,0,0x0,8
tick,0x7ffdc994fb34,140492613,0,0x0,8
tick,0x7ffdc994fb34,140508575,0,0x0,8
tick,0x7ffdc994fb34,140524040,0,0x0,8
tick,0x7ffdc994fb34,140539276,0,0x0,8
tick,0x7ffdc994fb34,140555146,0,0x0,8
tick,0x7ffdc994fb34,140570756,0,0x0,8
tick,0x7ffdc994fb34,140586042,0,0x0,8
tick,0x7ffdc994fb34,140601415,0,0x0,8
tick,0x7ffdc994fb34,140616705,0,0x0,8
tick,0x7ffdc994fb34,140633076,0,0x0,8
tick,0x7ffdc994fb34,140649212,0,0x0,8
tick,0x7ffdc994fb34,140664819,0,0x0,8
tick,0x7ffdc994fb34,140680342,0,0x0,8
tick,0x7ffdc994fb34,140695595,0,0x0,8
tick,0x7ffdc994fb34,140710923,0,0x0,8
tick,0x7ffdc994fb34,140726700,0,0x0,8
tick,0x7ffdc994fb34,140742139,0,0x0,8
tick,0x7ffdc994fb34,140757911,0,0x0,8
tick,0x7ffdc994fb34,140773743,0,0x0,8
tick,0x7ffdc994fb34,140788861,0,0x0,8
tick,0x7ffdc994fb34,140804254,0,0x0,8
tick,0x7ffdc994fb34,140820002,0,0x0,8
tick,0x7ffdc994fb34,140835523,0,0x0,8
tick,0x7ffdc994fb34,140851012,0,0x0,8
tick,0x7ffdc994fb34,140866460,0,0x0,8
tick,0x7ffdc994fb34,140882216,0,0x0,8
tick,0x7ffdc994fb34,140898156,0,0x0,8
tick,0x7ffdc994fb34,140913978,0,0x0,8
tick,0x7ffdc994fb34,140929724,0,0x0,8
tick,0x7ffdc994fb34,140945502,0,0x0,8
tick,0x7ffdc994fb34,140961250,0,0x0,8
tick,0x7ffdc994fb34,140976407,0,0x0,8
tick,0x7ffdc994fb34,140991580,0,0x0,8
tick,0x7ffdc994fb34,141006862,0,0x0,8
tick,0x7ffdc994fb34,141021950,0,0x0,8
tick,0x7ffdc994fb34,141037604,0,0x0,8
tick,0x7ffdc994fb34,141053554,0,0x0,8
tick,0x7ffdc994fb34,141069551,0,0x0,8
tick,0x7ffdc994fb34,141085507,0,0x0,8
tick,0x7ffdc994fb34,141101076,0,0x0,8
tick,0x7ffdc994fb34,141116301,0,0x0,8
tick,0x7ffdc994fb34,141131787,0,0x0,8
tick,0x7ffdc994fb34,141146906,0,0x0,8
tick,0x7ffdc994fb34,141162219,0,0x0,8
tick,0x7ffdc994fb34,141177843,0,0x0,8
tick,0x7ffdc994fb34,141193932,0,0x0,8
tick,0x7ffdc994fb34,141209284,0,0x0,8
tick,0x7ffdc994fb34,141224933,0,0x0,8
tick,0x7ffdc994fb34,141240557,0,0x0,8
tick,0x7ffdc994fb34,141256082,0,0x0,8
tick,0x7ffdc994fb34,141271608,0,0x0,8
tick,0x7ffdc994fb34,141286871,0,0x0,8
tick,0x7ffdc994fb34,141302517,0,0x0,8
tick,0x7ffdc994fb34,141318130,0,0x0,8
tick,0x7ffdc994fb34,141333392,0,0x0,8
tick,0x7ffdc994fb34,141348980,0,0x0,8
tick,0x7ffdc994fb34,141364636,0,0x0,8
tick,0x7ffdc994fb34,141380425,0,0x0,8
tick,0x7ffdc994fb34,141395844,0,0x0,8
tick,0x7ffdc994fb34,141411304,0,0x0,8
tick,0x7ffdc994fb34,141427097,0,0x0,8
tick,0x7ffdc994fb34,141443243,0,0x0,8
tick,0x7ffdc994fb34,141458364,0,0x0,8
tick,0x7ffdc994fb34,141474085,0,0x0,8
tick,0x7ffdc994fb34,141490230,0,0x0,8
tick,0x7ffdc994fb34,141505694,0,0x0,8
tick,0x7ffdc994fb34,141521027,0,0x0,8
tick,0x7ffdc994fb34,141536379,0,0x0,8
tick,0x7ffdc994fb34,141552172,0,0x0,8
tick,0x7ffdc994fb34,141568012,0,0x0,8
tick,0x7ffdc994fb34,141583647,0,0x0,8
tick,0x7ffdc994fb34,141599482,0,0x0,8
tick,0x7ffdc994fb34,141614460,0,0x0,8
tick,0x7ffdc994fb34,141629387,0,0x0,8
tick,0x7ffdc994fb34,141645202,0,0x0,8
tick,0x7ffdc994fb34,141661161,0,0x0,8
tick,0x7ffdc994fb34,141676942,0,0x0,8
tick,0x7ffdc994fb34,141692935,0,0x0,8
tick,0x7ffdc994fb34,141708852,0,0x0,8
tick,0x7ffdc994fb34,141724114,0,0x0,8
tick,0x7ffdc994fb34,141739540,0,0x0,8
tick,0x7ffdc994fb34,141755358,0,0x0,8
tick,0x7ffdc994fb34,141770917,0,0x0,8
tick,0x7ffdc994fb34,141786496,0,0x0,8
tick,0x7ffdc994fb34,141802482,0,0x0,8
tick,0x7ffdc994fb34,141818169,0,0x0,8
tick,0x7ffdc994fb34,141834118,0,0x0,8
tick,0x7ffdc994fb34,141849868,0,0x0,8
tick,0x7ffdc994fb34,141864999,0,0x0,8
tick,0x7ffdc994fb34,141880161,0,0x0,8
tick,0x7ffdc994fb34,141896021,0,0x0,8
tick,0x7ffdc994fb34,141911435,0,0x0,8
tick,0x7ffdc994fb34,141926726,0,0x0,8
tick,0x7ffdc994fb34,141942448,0,0x0,8
tick,0x7ffdc994fb34,141957706,0,0x0,8
tick,0x7ffdc994fb34,141973641,0,0x0,8
tick,0x7ffdc994fb34,141989330,0,0x0,8
tick,0x7ffdc994fb34,142004846,0,0x0,8
tick,0x7ffdc994fb34,142020968,0,0x0,8
tick,0x7ffdc994fb34,142036723,0,0x0,8
tick,0x7ffdc994fb34,142052642,0,0x0,8
tick,0x7ffdc994fb34,142068107,0,0x0,8
tick,0x7ffdc994fb34,142083138,0,0x0,8
tick,0x7ffdc994fb34,142098873,0,0x0,8
tick,0x7ffdc994fb34,142114642,0,0x0,8
tick,0x7ffdc994fb34,142129866,0,0x0,8
tick,0x7ffdc994fb34,142145749,0,0x0,8
tick,0x7ffdc994fb34,142161485,0,0x0,8
tick,0x7ffdc994fb34,142177481,0,0x0,8
tick,0x7ffdc994fb34,142193894,0,0x0,8
tick,0x7ffdc994fb34,142209134,0,0x0,8
tick,0x7ffdc994fb34,142224004,0,0x0,8
tick,0x7ffdc994fb34,142239408,0,0x0,8
tick,0x7ffdc994fb34,142255329,0,0x0,8
tick,0x7ffdc994fb34,142271275,0,0x0,8
tick,0x7ffdc994fb34,142286519,0,0x0,8
tick,0x7ffdc994fb34,142302416,0,0x0,8
tick,0x7ffdc994fb34,142317890,0,0x0,8
tick,0x7ffdc994fb34,142333979,0,0x0,8
tick,0x7ffdc994fb34,142349087,0,0x0,8
tick,0x7ffdc994fb34,142364702,0,0x0,8
tick,0x7ffdc994fb34,142380286,0,0x0,8
tick,0x7ffdc994fb34,142395630,0,0x0,8
tick,0x7ffdc994fb34,142411332,0,0x0,8
tick,0x7ffdc994fb34,142426938,0,0x0,8
tick,0x7ffdc994fb34,142443192,0,0x0,8
tick,0x7ffdc994fb34,142459126,0,0x0,8
tick,0x7ffdc994fb34,142474148,0,0x0,8
tick,0x7ffdc994fb34,142489030,0,0x0,8
tick,0x7ffdc994fb34,142505032,0,0x0,8
tick,0x7ffdc994fb34,142520721,0,0x0,8
tick,0x7ffdc994fb34,142536432,0,0x0,8
tick,0x7ffdc994fb34,142551639,0,0x0,8
tick,0x7ffdc994fb34,142567266,0,0x0,8
tick,0x7ffdc994fb34,142583107,0,0x0,8
tick,0x7ffdc994fb34,142599023,0,0x0,8
tick,0x7ffdc994fb34,142614065,0,0x0,8
tick,0x7ffdc994fb34,142630108,0,0x0,8
tick,0x7ffdc994fb34,142646123,0,0x0,8
tick,0x7ffdc994fb34,142661187,0,0x0,8
tick,0x7ffdc994fb34,142675998,0,0x0,8
tick,0x7ffdc994fb34,142691528,0,0x0,8
tick,0x7ffdc994fb34,142707335,0,0x0,8
tick,0x7ffdc994fb34,142722909,0,0x0,8
tick,0x7ffdc994fb34,142739139,0,0x0,8
tick,0x7ffdc994fb34,142754583,0,0x0,8
tick,0x7ffdc994fb34,142770147,0,0x0,8
tick,0x7ffdc994fb34,142785297,0,0x0,8
tick,0x7ffdc994fb34,142800797,0,0x0,8
tick,0x7ffdc994fb34,142816819,0,0x0,8
tick,0x7ffdc994fb34,142832861,0,0x0,8
tick,0x7ffdc994fb34,142848164,0,0x0,8
tick,0x7ffdc994fb34,142863322,0,0x0,8
tick,0x7ffdc994fb34,142878303,0,0x0,8
tick,0x7ffdc994fb34,142893747,0,0x0,8
tick,0x7ffdc994fb34,142909427,0,0x0,8
tick,0x7ffdc994fb34,142925090,0,0x0,8
tick,0x7ffdc994fb34,142940646,0,0x0,8
tick,0x7ffdc994fb34,142956192,0,0x0,8
tick,0x7ffdc994fb34,142971595,0,0x0,8
tick,0x7ffdc994fb34,142986969,0,0x0,8
tick,0x7ffdc994fb34,143002257,0,0x0,8
tick,0x7ffdc994fb34,143017456,0,0x0,8
tick,0x7ffdc994fb34,143032790,0,0x0,8
tick,0x7ffdc994fb34,143048028,0,0x0,8
tick,0x7ffdc994fb34,143063343,0,0x0,8
tick,0x7ffdc994fb34,143078951,0,0x0,8
tick,0x7ffdc994fb34,143094194,0,0x0,8
tick,0x7ffdc994fb34,143109816,0,0x0,8
tick,0x7ffdc994fb34,143125255,0,0x0,8
tick,0x7ffdc994fb34,143140817,0,0x0,8
tick,0x7ffdc994fb34,143156043,0,0x0,8
tick,0x7ffdc994fb34,143171819,0,0x0,8
tick,0x7ffdc994fb34,143187795,0,0x0,8
tick,0x7ffdc994fb34,143203359,0,0x0,8
tick,0x7ffdc994fb34,143219343,0,0x0,8
tick,0x7ffdc994fb34,143235545,0,0x0,8
tick,0x7ffdc994fb34,143251292,0,0x0,8
tick,0x7ffdc994fb34,143266446,0,0x0,8
tick,0x7ffdc994fb34,143281628,0,0x0,8
tick,0x7ffdc994fb34,143297262,0,0x0,8
tick,0x7ffdc994fb34,143313721,0,0x0,8
tick,0x7ffdc994fb34,143329487,0,0x0,8
tick,0x7ffdc994fb34,143345312,0,0x0,8
tick,0x7ffdc994fb34,143360218,0,0x0,8
tick,0x7ffdc994fb34,143376014,0,0x0,8
tick,0x7ffdc994fb34,143391913,0,0x0,8
tick,0x7ffdc994fb34,143407240,0,0x0,8
tick,0x7ffdc994fb34,143422562,0,0x0,8
tick,0x7ffdc994fb34,143438008,0,0x0,8
tick,0x7ffdc994fb34,143453019,0,0x0,8
tick,0x7ffdc994fb34,143468223,0,0x0,8
tick,0x7ffdc994fb34,143484072,0,0x0,8
tick,0x7ffdc994fb34,143499218,0,0x0,8
tick,0x7ffdc994fb34,143514595,0,0x0,8
tick,0x7ffdc994fb34,143529869,0,0x0,8
tick,0x7ffdc994fb34,143545874,0,0x0,8
tick,0x7ffdc994fb34,143562392,0,0x0,8
tick,0x7ffdc994fb34,143578394,0,0x0,8
tick,0x7ffdc994fb34,143593524,0,0x0,8
tick,0x7ffdc994fb34,143610063,0,0x0,8
tick,0x7ffdc994fb34,143625813,0,0x0,8
tick,0x7ffdc994fb34,143640740,0,0x0,8
tick,0x7ffdc994fb34,143656064,0,0x0,8
tick,0x7ffdc994fb34,143671996,0,0x0,8
tick,0x7ffdc994fb34,143688001,0,0x0,8
tick,0x7ffdc994fb34,143703645,0,0x0,8
tick,0x7ffdc994fb34,143718957,0,0x0,8
tick,0x7ffdc994fb34,143734916,0,0x0,8
tick,0x7ffdc994fb34,143750517,0,0x0,8
tick,0x7ffdc994fb34,143766043,0,0x0,8
tick,0x7ffdc994fb34,143781428,0,0x0,8
tick,0x7ffdc994fb34,143797456,0,0x0,8
tick,0x7ffdc994fb34,143812976,0,0x0,8
tick,0x7ffdc994fb34,143828596,0,0x0,8
tick,0x7ffdc994fb34,143844392,0,0x0,8
tick,0x7ffdc994fb34,143860186,0,0x0,8
tick,0x7ffdc994fb34,143875816,0,0x0,8
tick,0x7ffdc994fb34,143890942,0,0x0,8
tick,0x7ffdc994fb34,143906761,0,0x0,8
tick,0x7ffdc994fb34,143922009,0,0x0,8
tick,0x7ffdc994fb34,143937691,0,0x0,8
tick,0x7ffdc994fb34,143953286,0,0x0,8
tick,0x7ffdc994fb34,143969147,0,0x0,8
tick,0x7ffdc994fb34,143984860,0,0x0,8
tick,0x7ffdc994fb34,144000285,0,0x0,8
tick,0x7ffdc994fb34,144015929,0,0x0,8
tick,0x7ffdc994fb34,144031144,0,0x0,8
tick,0x7ffdc994fb34,144046932,0,0x0,8
tick,0x7ffdc994fb34,144062712,0,0x0,8
tick,0x7ffdc994fb34,144077616,0,0x0,8
tick,0x7ffdc994fb34,144093149,0,0x0,8
tick,0x7ffdc994fb34,144108286,0,0x0,8
tick,0x7ffdc994fb34,144123808,0,0x0,8
tick,0x7ffdc994fb34,144139078,0,0x0,8
tick,0x7ffdc994fb34,144154345,0,0x0,8
tick,0x7ffdc994fb34,144169756,0,0x0,8
tick,0x7ffdc994fb34,144185532,0,0x0,8
tick,0x7ffdc994fb34,144201652,0,0x0,8
tick,0x7ffdc994fb34,144217189,0,0x0,8
tick,0x7ffdc994fb34,144233211,0,0x0,8
tick,0x7ffdc994fb34,144248484,0,0x0,8
tick,0x7ffdc994fb34,144264327,0,0x0,8
tick,0x7ffdc994fb34,144279963,0,0x0,8
tick,0x7ffdc994fb34,144295560,0,0x0,8
tick,0x7ffdc994fb34,144310511,0,0x0,8
tick,0x7ffdc994fb34,144326595,0,0x0,8
tick,0x7ffdc994fb34,144342422,0,0x0,8
tick,0x7ffdc994fb34,144357865,0,0x0,8
tick,0x7ffdc994fb34,144372967,0,0x0,8
tick,0x7ffdc994fb34,144388932,0,0x0,8
tick,0x7ffdc994fb34,144404216,0,0x0,8
tick,0x7ffdc994fb34,144419529,0,0x0,8
tick,0x7ffdc994fb34,144435036,0,0x0,8
tick,0x7ffdc994fb34,144450581,0,0x0,8
tick,0x7ffdc994fb34,144465199,0,0x0,8
tick,0x7ffdc994fb34,144480892,0,0x0,8
tick,0x7ffdc994fb34,144496461,0,0x0,8
tick,0x7ffdc994fb34,144512020,0,0x0,8
tick,0x7ffdc994fb34,144527503,0,0x0,8
tick,0x7ffdc994fb34,144543611,0,0x0,8
tick,0x7ffdc994fb34,144558976,0,0x0,8
tick,0x7ffdc994fb34,144574409,0,0x0,8
tick,0x7ffdc994fb34,144590525,0,0x0,8
tick,0x7ffdc994fb34,144605622,0,0x0,8
tick,0x7ffdc994fb34,144621722,0,0x0,8
tick,0x7ffdc994fb34,144637692,0,0x0,8
tick,0x7ffdc994fb34,144653405,0,0x0,8
tick,0x7ffdc994fb34,144669045,0,0x0,8
tick,0x7ffdc994fb34,144684392,0,0x0,8
tick,0x7ffdc994fb34,144699962,0,0x0,8
tick,0x7ffdc994fb34,144715258,0,0x0,8
tick,0x7ffdc994fb34,144731118,0,0x0,8
tick,0x7ffdc994fb34,144746256,0,0x0,8
tick,0x7ffdc994fb34,144761799,0,0x0,8
tick,0x7ffdc994fb34,144777590,0,0x0,8
tick,0x7ffdc994fb34,144793575,0,0x0,8
tick,0x7ffdc994fb34,144809634,0,0x0,8
tick,0x7ffdc994fb34,144825149,0,0x0,8
tick,0x7ffdc994fb34,144841461,0,0x0,8
tick,0x7ffdc994fb34,144856420,0,0x0,8
tick,0x7ffdc994fb34,144872431,0,0x0,8
tick,0x7ffdc994fb34,144888455,0,0x0,8
tick,0x7ffdc994fb34,144904367,0,0x0,8
tick,0x7ffdc994fb34,144920380,0,0x0,8
tick,0x7ffdc994fb34,144936434,0,0x0,8
tick,0x7ffdc994fb34,144952984,0,0x0,8
tick,0x7ffdc994fb34,144968656,0,0x0,8
tick,0x7ffdc994fb34,144983931,0,0x0,8
tick,0x7ffdc994fb34,144999063,0,0x0,8
tick,0x7ffdc994fb34,145015059,0,0x0,8
tick,0x7ffdc994fb34,145030542,0,0x0,8
tick,0x7ffdc994fb34,145045808,0,0x0,8
tick,0x7ffdc994fb34,145061805,0,0x0,8
tick,0x7ffdc994fb34,145077170,0,0x0,8
tick,0x7ffdc994fb34,145092600,0,0x0,8
tick,0x7ffdc994fb34,145108224,0,0x0,8
tick,0x7ffdc994fb34,145123364,0,0x0,8
tick,0x7ffdc994fb34,145139260,0,0x0,8
tick,0x7ffdc994fb34,145154230,0,0x0,8
tick,0x7ffdc994fb34,145170086,0,0x0,8
tick,0x7ffdc994fb34,145185510,0,0x0,8
tick,0x7ffdc994fb34,145201340,0,0x0,8
tick,0x7ffdc994fb34,145216663,0,0x0,8
tick,0x7ffdc994fb34,145231993,0,0x0,8
tick,0x7ffdc994fb34,145247282,0,0x0,8
tick,0x7ffdc994fb34,145262569,0,0x0,8
tick,0x7ffdc994fb34,145278515,0,0x0,8
tick,0x7ffdc994fb34,145294459,0,0x0,8
tick,0x7ffdc994fb34,145310451,0,0x0,8
tick,0x7ffdc994fb34,145325685,0,0x0,8
tick,0x7ffdc994fb34,145341392,0,0x0,8
tick,0x7ffdc994fb34,145356599,0,0x0,8
tick,0x7ffdc994fb34,145372613,0,0x0,8
tick,0x7ffdc994fb34,145388332,0,0x0,8
tick,0x7ffdc994fb34,145403915,0,0x0,8
tick,0x7ffdc994fb34,145419213,0,0x0,8
tick,0x7ffdc994fb34,145434270,0,0x0,8
tick,0x7ffdc994fb34,145450047,0,0x0,8
tick,0x7ffdc994fb34,145465259,0,0x0,8
tick,0x7ffdc994fb34,145480441,0,0x0,8
tick,0x7ffdc994fb34,145496318,0,0x0,8
tick,0x7ffdc994fb34,145511439,0,0x0,8
tick,0x7ffdc994fb34,145526359,0,0x0,8
tick,0x7ffdc994fb34,145541578,0,0x0,8
tick,0x7ffdc994fb34,145557090,0,0x0,8
tick,0x7ffdc994fb34,145572779,0,0x0,8
tick,0x7ffdc994fb34,145588205,0,0x0,8
tick,0x7ffdc994fb34,145604057,0,0x0,8
tick,0x7ffdc994fb34,145619402,0,0x0,8
tick,0x7ffdc994fb34,145634322,0,0x0,8
tick,0x7ffdc994fb34,145650123,0,0x0,8
tick,0x7ffdc994fb34,145665916,0,0x0,8
tick,0x7ffdc994fb34,145681210,0,0x0,8
tick,0x7ffdc994fb34,145697024,0,0x0,8
tick,0x7ffdc994fb34,145712954,0,0x0,8
tick,0x7ffdc994fb34,145728924,0,0x0,8
tick,0x7ffdc994fb34,145744550,0,0x0,8
tick,0x7ffdc994fb34,145759760,0,0x0,8
tick,0x7ffdc994fb34,145775088,0,0x0,8
tick,0x7ffdc994fb34,145790333,0,0x0,8
tick,0x7ffdc994fb34,145806019,0,0x0,8
tick,0x7ffdc994fb34,145821051,0,0x0,8
tick,0x7ffdc994fb34,145837258,0,0x0,8
tick,0x7ffdc994fb34,145852646,0,0x0,8
tick,0x7ffdc994fb34,145868616,0,0x0,8
tick,0x7ffdc994fb34,145884132,0,0x0,8
tick,0x7ffdc994fb34,145899296,0,0x0,8
tick,0x7ffdc994fb34,145914623,0,0x0,8
tick,0x7ffdc994fb34,145930245,0,0x0,8
tick,0x7ffdc994fb34,145945434,0,0x0,8
tick,0x7ffdc994fb34,145961094,0,0x0,8
tick,0x7ffdc994fb34,145976635,0,0x0,8
tick,0x7ffdc994fb34,145991674,0,0x0,8
tick,0x7ffdc994fb34,146007318,0,0x0,8
tick,0x7ffdc994fb34,146023555,0,0x0,8
tick,0x7ffdc994fb34,146039246,0,0x0,8
tick,0x7ffdc994fb34,146054955,0,0x0,8
tick,0x7ffdc994fb34,146070437,0,0x0,8
tick,0x7ffdc994fb34,146086015,0,0x0,8
tick,0x7ffdc994fb34,146102287,0,0x0,8
tick,0x7ffdc994fb34,146118283,0,0x0,8
tick,0x7ffdc994fb34,146133915,0,0x0,8
tick,0x7ffdc994fb34,146148960,0,0x0,8
tick,0x7ffdc994fb34,146164172,0,0x0,8
tick,0x7ffdc994fb34,146179619,0,0x0,8
tick,0x7ffdc994fb34,146195350,0,0x0,8
tick,0x7ffdc994fb34,146210877,0,0x0,8
tick,0x7ffdc994fb34,146226284,0,0x0,8
tick,0x7ffdc994fb34,146241860,0,0x0,8
tick,0x7ffdc994fb34,146257143,0,0x0,8
tick,0x7ffdc994fb34,146272356,0,0x0,8
tick,0x7ffdc994fb34,146287794,0,0x0,8
tick,0x7ffdc994fb34,146303331,0,0x0,8
tick,0x7ffdc994fb34,146319176,0,0x0,8
tick,0x7ffdc994fb34,146334773,0,0x0,8
tick,0x7ffdc994fb34,146350570,0,0x0,8
tick,0x7ffdc994fb34,146366202,0,0x0,8
tick,0x7ffdc994fb34,146381547,0,0x0,8
tick,0x7ffdc994fb34,146397678,0,0x0,8
tick,0x7ffdc994fb34,146413600,0,0x0,8
tick,0x7ffdc994fb34,146429584,0,0x0,8
tick,0x7ffdc994fb34,146445231,0,0x0,8
tick,0x7ffdc994fb34,146459947,0,0x0,8
tick,0x7ffdc994fb34,146475974,0,0x0,8
tick,0x7ffdc994fb34,146492049,0,0x0,8
tick,0x7ffdc994fb34,146507373,0,0x0,8
tick,0x7ffdc994fb34,146522927,0,0x0,8
tick,0x7ffdc994fb34,146538247,0,0x0,8
tick,0x7ffdc994fb34,146553812,0,0x0,8
tick,0x7ffdc994fb34,146569374,0,0x0,8
tick,0x7ffdc994fb34,146583948,0,0x0,8
tick,0x7ffdc994fb34,146599936,0,0x0,8
tick,0x7ffdc994fb34,146615656,0,0x0,8
tick,0x7ffdc994fb34,146631412,0,0x0,8
tick,0x7ffdc994fb34,146646728,0,0x0,8
tick,0x7ffdc994fb34,146662206,0,0x0,8
tick,0x7ffdc994fb34,146678287,0,0x0,8
tick,0x7ffdc994fb34,146694319,0,0x0,8
tick,0x7ffdc994fb34,146709499,0,0x0,8
tick,0x7ffdc994fb34,146725103,0,0x0,8
tick,0x7ffdc994fb34,146739806,0,0x0,8
tick,0x7ffdc994fb34,146755935,0,0x0,8
tick,0x7ffdc994fb34,146771825,0,0x0,8
tick,0x7ffdc994fb34,146787682,0,0x0,8
tick,0x7ffdc994fb34,146803086,0,0x0,8
tick,0x7ffdc994fb34,146818436,0,0x0,8
tick,0x7ffdc994fb34,146833752,0,0x0,8
tick,0x7ffdc994fb34,146849682,0,0x0,8
tick,0x7ffdc994fb34,146865049,0,0x0,8
tick,0x7ffdc994fb34,146880969,0,0x0,8
tick,0x7ffdc994fb34,146897186,0,0x0,8
tick,0x7ffdc994fb34,146912612,0,0x0,8
tick,0x7ffdc994fb34,146928027,0,0x0,8
tick,0x7ffdc994fb34,146943674,0,0x0,8
tick,0x7ffdc994fb34,146958644,0,0x0,8
tick,0x7ffdc994fb34,146974107,0,0x0,8
tick,0x7ffdc994fb34,146989869,0,0x0,8
tick,0x7ffdc994fb34,147004913,0,0x0,8
tick,0x7ffdc994fb34,147020165,0,0x0,8
tick,0x7ffdc994fb34,147036271,0,0x0,8
tick,0x7ffdc994fb34,147051713,0,0x0,8
tick,0x7ffdc994fb34,147066857,0,0x0,8
tick,0x7ffdc994fb34,147082171,0,0x0,8
tick,0x7ffdc994fb34,147098433,0,0x0,8
tick,0x7ffdc994fb34,147114296,0,0x0,8
tick,0x7ffdc994fb34,147129804,0,0x0,8
tick,0x7ffdc994fb34,147146173,0,0x0,8
tick,0x7ffdc994fb34,147161481,0,0x0,8
tick,0x7ffdc994fb34,147176611,0,0x0,8
tick,0x7ffdc994fb34,147192221,0,0x0,8
tick,0x7ffdc994fb34,147207136,0,0x0,8
tick,0x7ffdc994fb34,147222875,0,0x0,8
tick,0x7ffdc994fb34,147237870,0,0x0,8
tick,0x7ffdc994fb34,147252891,0,0x0,8
tick,0x7ffdc994fb34,147268651,0,0x0,8
tick,0x7ffdc994fb34,147284223,0,0x0,8
tick,0x7ffdc994fb34,147299573,0,0x0,8
tick,0x7ffdc994fb34,147316121,0,0x0,8
tick,0x7ffdc994fb34,147331041,0,0x0,8
tick,0x7ffdc994fb34,147346478,0,0x0,8
tick,0x7ffdc994fb34,147362383,0,0x0,8
tick,0x7ffdc994fb34,147377785,0,0x0,8
tick,0x7ffdc994fb34,147393107,0,0x0,8
tick,0x7ffdc994fb34,147408863,0,0x0,8
tick,0x7ffdc994fb34,147424395,0,0x0,8
tick,0x7ffdc994fb34,147439927,0,0x0,8
tick,0x7ffdc994fb34,147455199,0,0x0,8
tick,0x7ffdc994fb34,147470748,0,0x0,8
tick,0x7ffdc994fb34,147485981,0,0x0,8
tick,0x7ffdc994fb34,147501905,0,0x0,8
tick,0x7ffdc994fb34,147517053,0,0x0,8
tick,0x7ffdc994fb34,147532615,0,0x0,8
tick,0x7ffdc994fb34,147548654,0,0x0,8
tick,0x7ffdc994fb34,147564136,0,0x0,8
tick,0x7ffdc994fb34,147579468,0,0x0,8
tick,0x7ffdc994fb34,147594897,0,0x0,8
tick,0x7ffdc994fb34,147610346,0,0x0,8
tick,0x7ffdc994fb34,147625817,0,0x0,8
tick,0x7ffdc994fb34,147641501,0,0x0,8
tick,0x7ffdc994fb34,147657170,0,0x0,8
tick,0x7ffdc994fb34,147673003,0,0x0,8
tick,0x7ffdc994fb34,147688219,0,0x0,8
tick,0x7ffdc994fb34,147703969,0,0x0,8
tick,0x7ffdc994fb34,147719480,0,0x0,8
tick,0x7ffdc994fb34,147734897,0,0x0,8
tick,0x7ffdc994fb34,147750324,0,0x0,8
tick,0x7ffdc994fb34,147766179,0,0x0,8
tick,0x7ffdc994fb34,147781608,0,0x0,8
tick,0x7ffdc994fb34,147797603,0,0x0,8
tick,0x7ffdc994fb34,147812852,0,0x0,8
tick,0x7ffdc994fb34,147828411,0,0x0,8
tick,0x7ffdc994fb34,147843622,0,0x0,8
tick,0x7ffdc994fb34,147859005,0,0x0,8
tick,0x7ffdc994fb34,147875415,0,0x0,8
tick,0x7ffdc994fb34,147891006,0,0x0,8
tick,0x7ffdc994fb34,147906801,0,0x0,8
tick,0x7ffdc994fb34,147922336,0,0x0,8
tick,0x7ffdc994fb34,147937501,0,0x0,8
tick,0x7ffdc994fb34,147952603,0,0x0,8
tick,0x7ffdc994fb34,147968729,0,0x0,8
tick,0x7ffdc994fb34,147984635,0,0x0,8
tick,0x7ffdc994fb34,148000327,0,0x0,8
tick,0x7ffdc994fb34,148015735,0,0x0,8
tick,0x7ffdc994fb34,148032109,0,0x0,8
tick,0x7ffdc994fb34,148047317,0,0x0,8
tick,0x7ffdc994fb34,148062751,0,0x0,8
tick,0x7ffdc994fb34,148077914,0,0x0,8
tick,0x7ffdc994fb34,148093667,0,0x0,8
tick,0x7ffdc994fb34,148109635,0,0x0,8
tick,0x7ffdc994fb34,148125059,0,0x0,8
tick,0x7ffdc994fb34,148140642,0,0x0,8
tick,0x7ffdc994fb34,148156494,0,0x0,8
tick,0x7ffdc994fb34,148172124,0,0x0,8
tick,0x7ffdc994fb34,148187286,0,0x0,8
tick,0x7ffdc994fb34,148202418,0,0x0,8
tick,0x7ffdc994fb34,148217954,0,0x0,8
tick,0x7ffdc994fb34,148233602,0,0x0,8
tick,0x7ffdc994fb34,148249177,0,0x0,8
tick,0x7ffdc994fb34,148264660,0,0x0,8
tick,0x7ffdc994fb34,148280415,0,0x0,8
tick,0x7ffdc994fb34,148296383,0,0x0,8
tick,0x7ffdc994fb34,148311784,0,0x0,8
tick,0x7ffdc994fb34,148327353,0,0x0,8
tick,0x7ffdc994fb34,148343145,0,0x0,8
tick,0x7ffdc994fb34,148359342,0,0x0,8
tick,0x7ffdc994fb34,148374857,0,0x0,8
tick,0x7ffdc994fb34,148390567,0,0x0,8
tick,0x7ffdc994fb34,148406590,0,0x0,8
tick,0x7ffdc994fb34,148422095,0,0x0,8
tick,0x7ffdc994fb34,148437668,0,0x0,8
tick,0x7ffdc994fb34,148453513,0,0x0,8
tick,0x7ffdc994fb34,148469274,0,0x0,8
tick,0x7ffdc994fb34,148485121,0,0x0,8
tick,0x7ffdc994fb34,148499963,0,0x0,8
tick,0x7ffdc994fb34,148516086,0,0x0,8
tick,0x7ffdc994fb34,148531223,0,0x0,8
tick,0x7ffdc994fb34,148547300,0,0x0,8
tick,0x7ffdc994fb34,148563280,0,0x0,8
tick,0x7ffdc994fb34,148579041,0,0x0,8
tick,0x7ffdc994fb34,148594319,0,0x0,8
tick,0x7ffdc994fb34,148609620,0,0x0,8
tick,0x7ffdc994fb34,148625034,0,0x0,8
tick,0x7ffdc994fb34,148640387,0,0x0,8
tick,0x7ffdc994fb34,148656545,0,0x0,8
tick,0x7ffdc994fb34,148672050,0,0x0,8
tick,0x7ffdc994fb34,148688107,0,0x0,8
tick,0x7ffdc994fb34,148703465,0,0x0,8
tick,0x7ffdc994fb34,148719693,0,0x0,8
tick,0x7ffdc994fb34,148734189,0,0x0,8
tick,0x7ffdc994fb34,148749387,0,0x0,8
tick,0x7ffdc994fb34,148765103,0,0x0,8
tick,0x7ffdc994fb34,148780809,0,0x0,8
tick,0x7ffdc994fb34,148796387,0,0x0,8
tick,0x7ffdc994fb34,148812122,0,0x0,8
tick,0x7ffdc994fb34,148827563,0,0x0,8
tick,0x7ffdc994fb34,148843217,0,0x0,8
tick,0x7ffdc994fb34,148858295,0,0x0,8
tick,0x7ffdc994fb34,148873666,0,0x0,8
tick,0x7ffdc994fb34,148888970,0,0x0,8
tick,0x7ffdc994fb34,148904019,0,0x0,8
tick,0x7ffdc994fb34,148919919,0,0x0,8
tick,0x7ffdc994fb34,148935955,0,0x0,8
tick,0x7ffdc994fb34,148951193,0,0x0,8
tick,0x7ffdc994fb34,148966496,0,0x0,8
tick,0x7ffdc994fb34,148982089,0,0x0,8
tick,0x7ffdc994fb34,148997753,0,0x0,8
tick,0x7ffdc994fb34,149013272,0,0x0,8
tick,0x7ffdc994fb34,149028559,0,0x0,8
tick,0x7ffdc994fb34,149044320,0,0x0,8
tick,0x7ffdc994fb34,149059842,0,0x0,8
tick,0x7ffdc994fb34,149075396,0,0x0,8
tick,0x7ffdc994fb34,149091116,0,0x0,8
tick,0x7ffdc994fb34,149107288,0,0x0,8
tick,0x7ffdc994fb34,149122501,0,0x0,8
tick,0x7ffdc994fb34,149137437,0,0x0,8
tick,0x7ffdc994fb34,149153422,0,0x0,8
tick,0x7ffdc994fb34,149168722,0,0x0,8
tick,0x7ffdc994fb34,149184713,0,0x0,8
tick,0x7ffdc994fb34,149200968,0,0x0,8
tick,0x7ffdc994fb34,149216507,0,0x0,8
tick,0x7ffdc994fb34,149232487,0,0x0,8
tick,0x7ffdc994fb34,149248093,0,0x0,8
tick,0x7ffdc994fb34,149263958,0,0x0,8
tick,0x7ffdc994fb34,149279748,0,0x0,8
tick,0x7ffdc994fb34,149295581,0,0x0,8
tick,0x7ffdc994fb34,149310802,0,0x0,8
tick,0x7ffdc994fb34,149327024,0,0x0,8
tick,0x7ffdc994fb34,149342924,0,0x0,8
tick,0x7ffdc994fb34,149358401,0,0x0,8
tick,0x7ffdc994fb34,149374205,0,0x0,8
tick,0x7ffdc994fb34,149390050,0,0x0,8
tick,0x7ffdc994fb34,149406173,0,0x0,8
tick,0x7ffdc994fb34,149421914,0,0x0,8
tick,0x7ffdc994fb34,149437492,0,0x0,8
tick,0x7ffdc994fb34,149453363,0,0x0,8
tick,0x7ffdc994fb34,149468664,0,0x0,8
tick,0x7ffdc994fb34,149484352,0,0x0,8
tick,0x7ffdc994fb34,149500010,0,0x0,8
tick,0x7ffdc994fb34,149515760,0,0x0,8
tick,0x7ffdc994fb34,149531458,0,0x0,8
tick,0x7ffdc994fb34,149546871,0,0x0,8
tick,0x7ffdc994fb34,149561923,0,0x0,8
tick,0x7ffdc994fb34,149577618,0,0x0,8
tick,0x7ffdc994fb34,149593077,0,0x0,8
tick,0x7ffdc994fb34,149609219,0,0x0,8
tick,0x7ffdc994fb34,149625077,0,0x0,8
tick,0x7ffdc994fb34,149640015,0,0x0,8
tick,0x7ffdc994fb34,149655525,0,0x0,8
tick,0x7ffdc994fb34,149670975,0,0x0,8
tick,0x7ffdc994fb34,149686066,0,0x0,8
tick,0x7ffdc994fb34,149701352,0,0x0,8
tick,0x7ffdc994fb34,149716749,0,0x0,8
tick,0x7ffdc994fb34,149732496,0,0x0,8
tick,0x7ffdc994fb34,149748014,0,0x0,8
tick,0x7ffdc994fb34,149764070,0,0x0,8
tick,0x7ffdc994fb34,149779796,0,0x0,8
tick,0x7ffdc994fb34,149795143,0,0x0,8
tick,0x7ffdc994fb34,149810473,0,0x0,8
tick,0x7ffdc994fb34,149825850,0,0x0,8
tick,0x7ffdc994fb34,149841932,0,0x0,8
tick,0x7ffdc994fb34,149856800,0,0x0,8
tick,0x7ffdc994fb34,149872479,0,0x0,8
tick,0x7ffdc994fb34,149888208,0,0x0,8
tick,0x7ffdc994fb34,149903493,0,0x0,8
tick,0x7ffdc994fb34,149918859,0,0x0,8
tick,0x7ffdc994fb34,149934783,0,0x0,8
tick,0x7ffdc994fb34,149950624,0,0x0,8
tick,0x7ffdc994fb34,149965776,0,0x0,8
tick,0x7ffdc994fb34,149981340,0,0x0,8
tick,0x7ffdc994fb34,149996608,0,0x0,8
tick,0x7ffdc994fb34,150012327,0,0x0,8
tick,0x7ffdc994fb34,150028118,0,0x0,8
tick,0x7ffdc994fb34,150043065,0,0x0,8
tick,0x7ffdc994fb34,150058389,0,0x0,8
tick,0x7ffdc994fb34,150073516,0,0x0,8
tick,0x7ffdc994fb34,150089003,0,0x0,8
tick,0x7ffdc994fb34,150104721,0,0x0,8
tick,0x7ffdc994fb34,150119789,0,0x0,8
tick,0x7ffdc994fb34,150135150,0,0x0,8
tick,0x7ffdc994fb34,150150791,0,0x0,8
tick,0x7ffdc994fb34,150165515,0,0x0,8
tick,0x7ffdc994fb34,150182929,0,0x0,8
tick,0x7ffdc994fb34,150197661,0,0x0,8
tick,0x7ffdc994fb34,150214638,0,0x0,8
tick,0x7ffdc994fb34,150227451,0,0x0,8
tick,0x7ffdc994fb34,150243272,0,0x0,8
tick,0x7ffdc994fb34,150258946,0,0x0,8
tick,0x7ffdc994fb34,150275946,0,0x0,8
tick,0x7ffdc994fb34,150294812,0,0x0,8
tick,0x7ffdc994fb34,150317669,0,0x0,8
tick,0x7ffdc994fb34,150325750,0,0x0,8
tick,0x7ffdc994fb34,150337822,0,0x0,8
tick,0x7ffdc994fb34,150352657,0,0x0,8
tick,0x7ffdc994fb34,150368795,0,0x0,8
tick,0x7ffdc994fb34,150384296,0,0x0,8
tick,0x7ffdc994fb34,150399760,0,0x0,8
tick,0x7ffdc994fb34,150415897,0,0x0,8
tick,0x7ffdc994fb34,150430977,0,0x0,8
tick,0x7ffdc994fb34,150446655,0,0x0,8
tick,0x7ffdc994fb34,150461976,0,0x0,8
tick,0x7ffdc994fb34,150477267,0,0x0,8
tick,0x7ffdc994fb34,150492900,0,0x0,8
tick,0x7ffdc994fb34,150508482,0,0x0,8
tick,0x7ffdc994fb34,150523776,0,0x0,8
tick,0x7ffdc994fb34,150539465,0,0x0,8
tick,0x7ffdc994fb34,150555015,0,0x0,8
tick,0x7ffdc994fb34,150570659,0,0x0,8
tick,0x7ffdc994fb34,150586446,0,0x0,8
tick,0x7ffdc994fb34,150601617,0,0x0,8
tick,0x7ffdc994fb34,150617528,0,0x0,8
tick,0x7ffdc994fb34,150632993,0,0x0,8
tick,0x7ffdc994fb34,150648008,0,0x0,8
tick,0x7ffdc994fb34,150662943,0,0x0,8
tick,0x7ffdc994fb34,150678640,0,0x0,8
tick,0x7ffdc994fb34,150694658,0,0x0,8
tick,0x7ffdc994fb34,150710857,0,0x0,8
tick,0x7ffdc994fb34,150726330,0,0x0,8
tick,0x7ffdc994fb34,150741679,0,0x0,8
tick,0x7ffdc994fb34,150757781,0,0x0,8
tick,0x7ffdc994fb34,150773796,0,0x0,8
tick,0x7ffdc994fb34,150789632,0,0x0,8
tick,0x7ffdc994fb34,150805731,0,0x0,8
tick,0x7ffdc994fb34,150820861,0,0x0,8
tick,0x7ffdc994fb34,150836931,0,0x0,8
tick,0x7ffdc994fb34,150852664,0,0x0,8
tick,0x7ffdc994fb34,150868448,0,0x0,8
tick,0x7ffdc994fb34,150883755,0,0x0,8
tick,0x7ffdc994fb34,150899331,0,0x0,8
tick,0x7ffdc994fb34,150915041,0,0x0,8
tick,0x7ffdc994fb34,150930888,0,0x0,8
tick,0x7ffdc994fb34,150946384,0,0x0,8
tick,0x7ffdc994fb34,150962334,0,0x0,8
tick,0x7ffdc994fb34,150978436,0,0x0,8
tick,0x7ffdc994fb34,150993536,0,0x0,8
tick,0x7ffdc994fb34,151008941,0,0x0,8
tick,0x7ffdc994fb34,151024230,0,0x0,8
tick,0x7ffdc994fb34,151040346,0,0x0,8
tick,0x7ffdc994fb34,151055558,0,0x0,8
tick,0x7ffdc994fb34,151071132,0,0x0,8
tick,0x7ffdc994fb34,151086424,0,0x0,8
tick,0x7ffdc994fb34,151101872,0,0x0,8
tick,0x7ffdc994fb34,151117333,0,0x0,8
tick,0x7ffdc994fb34,151132726,0,0x0,8
tick,0x7ffdc994fb34,151148326,0,0x0,8
tick,0x7ffdc994fb34,151163368,0,0x0,8
tick,0x7ffdc994fb34,151179263,0,0x0,8
tick,0x7ffdc994fb34,151194656,0,0x0,8
tick,0x7ffdc994fb34,151210498,0,0x0,8
tick,0x7ffdc994fb34,151226593,0,0x0,8
tick,0x7ffdc994fb34,151242304,0,0x0,8
tick,0x7ffdc994fb34,151258044,0,0x0,8
tick,0x7ffdc994fb34,151273586,0,0x0,8
tick,0x7ffdc994fb34,151289841,0,0x0,8
tick,0x7ffdc994fb34,151304923,0,0x0,8
tick,0x7ffdc994fb34,151320533,0,0x0,8
tick,0x7ffdc994fb34,151336380,0,0x0,8
tick,0x7ffdc994fb34,151351923,0,0x0,8
tick,0x7ffdc994fb34,151367434,0,0x0,8
tick,0x7ffdc994fb34,151383184,0,0x0,8
tick,0x7ffdc994fb34,151398617,0,0x0,8
tick,0x7ffdc994fb34,151413888,0,0x0,8
tick,0x7ffdc994fb34,151429558,0,0x0,8
tick,0x7ffdc994fb34,151444931,0,0x0,8
tick,0x7ffdc994fb34,151460519,0,0x0,8
tick,0x7ffdc994fb34,151475995,0,0x0,8
tick,0x7ffdc994fb34,151491682,0,0x0,8
tick,0x7ffdc994fb34,151506937,0,0x0,8
tick,0x7ffdc994fb34,151522520,0,0x0,8
tick,0x7ffdc994fb34,151537989,0,0x0,8
tick,0x7ffdc994fb34,151553677,0,0x0,8
tick,0x7ffdc994fb34,151569376,0,0x0,8
tick,0x7ffdc994fb34,151584638,0,0x0,8
tick,0x7ffdc994fb34,151600281,0,0x0,8
tick,0x7ffdc994fb34,151615932,0,0x0,8
tick,0x7ffdc994fb34,151631341,0,0x0,8
tick,0x7ffdc994fb34,151646873,0,0x0,8
tick,0x7ffdc994fb34,151662393,0,0x0,8
tick,0x7ffdc994fb34,151677865,0,0x0,8
tick,0x7ffdc994fb34,151693511,0,0x0,8
tick,0x7ffdc994fb34,151708981,0,0x0,8
tick,0x7ffdc994fb34,151724195,0,0x0,8
tick,0x7ffdc994fb34,151739880,0,0x0,8
tick,0x7ffdc994fb34,151755716,0,0x0,8
tick,0x7ffdc994fb34,151771197,0,0x0,8
tick,0x7ffdc994fb34,151786967,0,0x0,8
tick,0x7ffdc994fb34,151802727,0,0x0,8
tick,0x7ffdc994fb34,151818790,0,0x0,8
tick,0x7ffdc994fb34,151834744,0,0x0,8
tick,0x7ffdc994fb34,151850718,0,0x0,8
tick,0x7ffdc994fb34,151865563,0,0x0,8
tick,0x7ffdc994fb34,151881835,0,0x0,8
tick,0x7ffdc994fb34,151897809,0,0x0,8
tick,0x7ffdc994fb34,151913844,0,0x0,8
tick,0x7ffdc994fb34,151929875,0,0x0,8
tick,0x7ffdc994fb34,151945289,0,0x0,8
tick,0x7ffdc994fb34,151960366,0,0x0,8
tick,0x7ffdc994fb34,151976128,0,0x0,8
tick,0x7ffdc994fb34,151991508,0,0x0,8
tick,0x7ffdc994fb34,152006902,0,0x0,8
tick,0x7ffdc994fb34,152022648,0,0x0,8
tick,0x7ffdc994fb34,152037969,0,0x0,8
tick,0x7ffdc994fb34,152052909,0,0x0,8
tick,0x7ffdc994fb34,152068497,0,0x0,8
tick,0x7ffdc994fb34,152083701,0,0x0,8
tick,0x7ffdc994fb34,152099382,0,0x0,8
tick,0x7ffdc994fb34,152114742,0,0x0,8
tick,0x7ffdc994fb34,152129856,0,0x0,8
tick,0x7ffdc994fb34,152145258,0,0x0,8
tick,0x7ffdc994fb34,152161311,0,0x0,8
tick,0x7ffdc994fb34,152177232,0,0x0,8
tick,0x7ffdc994fb34,152193429,0,0x0,8
tick,0x7ffdc994fb34,152209367,0,0x0,8
tick,0x7ffdc994fb34,152224426,0,0x0,8
tick,0x7ffdc994fb34,152239677,0,0x0,8
tick,0x7ffdc994fb34,152255042,0,0x0,8
tick,0x7ffdc994fb34,152270308,0,0x0,8
tick,0x7ffdc994fb34,152285913,0,0x0,8
tick,0x7ffdc994fb34,152302380,0,0x0,8
tick,0x7ffdc994fb34,152317484,0,0x0,8
tick,0x7ffdc994fb34,152333043,0,0x0,8
tick,0x7ffdc994fb34,152348783,0,0x0,8
tick,0x7ffdc994fb34,152364292,0,0x0,8
tick,0x7ffdc994fb34,152379826,0,0x0,8
tick,0x7ffdc994fb34,152395403,0,0x0,8
tick,0x7ffdc994fb34,152410599,0,0x0,8
tick,0x7ffdc994fb34,152426023,0,0x0,8
tick,0x7ffdc994fb34,152441853,0,0x0,8
tick,0x7ffdc994fb34,152457182,0,0x0,8
tick,0x7ffdc994fb34,152473256,0,0x0,8
tick,0x7ffdc994fb34,152488415,0,0x0,8
tick,0x7ffdc994fb34,152504646,0,0x0,8
tick,0x7ffdc994fb34,152520248,0,0x0,8
tick,0x7ffdc994fb34,152535900,0,0x0,8
tick,0x7ffdc994fb34,152551586,0,0x0,8
tick,0x7ffdc994fb34,152567509,0,0x0,8
tick,0x7ffdc994fb34,152582941,0,0x0,8
tick,0x7ffdc994fb34,152598719,0,0x0,8
tick,0x7ffdc994fb34,152614054,0,0x0,8
tick,0x7ffdc994fb34,152629532,0,0x0,8
tick,0x7ffdc994fb34,152645229,0,0x0,8
tick,0x7ffdc994fb34,152660841,0,0x0,8
tick,0x7ffdc994fb34,152676477,0,0x0,8
tick,0x7ffdc994fb34,152692053,0,0x0,8
tick,0x7ffdc994fb34,152707088,0,0x0,8
tick,0x7ffdc994fb34,152722178,0,0x0,8
tick,0x7ffdc994fb34,152737979,0,0x0,8
tick,0x7ffdc994fb34,152753573,0,0x0,8
tick,0x7ffdc994fb34,152769632,0,0x0,8
tick,0x7ffdc994fb34,152784845,0,0x0,8
tick,0x7ffdc994fb34,152800256,0,0x0,8
tick,0x7ffdc994fb34,152815997,0,0x0,8
tick,0x7ffdc994fb34,152831418,0,0x0,8
tick,0x7ffdc994fb34,152847171,0,0x0,8
tick,0x7ffdc994fb34,152862773,0,0x0,8
tick,0x7ffdc994fb34,152878034,0,0x0,8
tick,0x7ffdc994fb34,152893162,0,0x0,8
tick,0x7ffdc994fb34,152908698,0,0x0,8
tick,0x7ffdc994fb34,152924046,0,0x0,8
tick,0x7ffdc994fb34,152939926,0,0x0,8
tick,0x7ffdc994fb34,152955753,0,0x0,8
tick,0x7ffdc994fb34,152970838,0,0x0,8
tick,0x7ffdc994fb34,152986063,0,0x0,8
tick,0x7ffdc994fb34,153001808,0,0x0,8
tick,0x7ffdc994fb34,153017297,0,0x0,8
tick,0x7ffdc994fb34,153032585,0,0x0,8
tick,0x7ffdc994fb34,153048532,0,0x0,8
tick,0x7ffdc994fb34,153064181,0,0x0,8
tick,0x7ffdc994fb34,153079351,0,0x0,8
tick,0x7ffdc994fb34,153094940,0,0x0,8
tick,0x7ffdc994fb34,153110338,0,0x0,8
tick,0x7ffdc994fb34,153125932,0,0x0,8
tick,0x7ffdc994fb34,153140990,0,0x0,8
tick,0x7ffdc994fb34,153156473,0,0x0,8
tick,0x7ffdc994fb34,153171608,0,0x0,8
tick,0x7ffdc994fb34,153187492,0,0x0,8
tick,0x7ffdc994fb34,153203412,0,0x0,8
tick,0x7ffdc994fb34,153218031,0,0x0,8
tick,0x7ffdc994fb34,153233736,0,0x0,8
tick,0x7ffdc994fb34,153249255,0,0x0,8
tick,0x7ffdc994fb34,153264573,0,0x0,8
tick,0x7ffdc994fb34,153280392,0,0x0,8
tick,0x7ffdc994fb34,153295578,0,0x0,8
tick,0x7ffdc994fb34,153311382,0,0x0,8
tick,0x7ffdc994fb34,153326988,0,0x0,8
tick,0x7ffdc994fb34,153343014,0,0x0,8
tick,0x7ffdc994fb34,153357738,0,0x0,8
tick,0x7ffdc994fb34,153372773,0,0x0,8
tick,0x7ffdc994fb34,153388005,0,0x0,8
tick,0x7ffdc994fb34,153403313,0,0x0,8
tick,0x7ffdc994fb34,153418544,0,0x0,8
tick,0x7ffdc994fb34,153434291,0,0x0,8
tick,0x7ffdc994fb34,153450306,0,0x0,8
tick,0x7ffdc994fb34,153466212,0,0x0,8
tick,0x7ffdc994fb34,153481650,0,0x0,8
tick,0x7ffdc994fb34,153497731,0,0x0,8
tick,0x7ffdc994fb34,153513905,0,0x0,8
tick,0x7ffdc994fb34,153529598,0,0x0,8
tick,0x7ffdc994fb34,153544848,0,0x0,8
tick,0x7ffdc994fb34,153560225,0,0x0,8
tick,0x7ffdc994fb34,153575976,0,0x0,8
tick,0x7ffdc994fb34,153591473,0,0x0,8
tick,0x7ffdc994fb34,153606802,0,0x0,8
tick,0x7ffdc994fb34,153622072,0,0x0,8
tick,0x7ffdc994fb34,153637423,0,0x0,8
tick,0x7ffdc994fb34,153652997,0,0x0,8
tick,0x7ffdc994fb34,153668609,0,0x0,8
tick,0x7ffdc994fb34,153684605,0,0x0,8
tick,0x7ffdc994fb34,153700020,0,0x0,8
tick,0x7ffdc994fb34,153715346,0,0x0,8
tick,0x7ffdc994fb34,153731097,0,0x0,8
tick,0x7ffdc994fb34,153747022,0,0x0,8
tick,0x7ffdc994fb34,153763149,0,0x0,8
tick,0x7ffdc994fb34,153778980,0,0x0,8
tick,0x7ffdc994fb34,153794941,0,0x0,8
tick,0x7ffdc994fb34,153810818,0,0x0,8
tick,0x7ffdc994fb34,153826181,0,0x0,8
tick,0x7ffdc994fb34,153841636,0,0x0,8
tick,0x7ffdc994fb34,153857039,0,0x0,8
tick,0x7ffdc994fb34,153872730,0,0x0,8
tick,0x7ffdc994fb34,153888298,0,0x0,8
tick,0x7ffdc994fb34,153904101,0,0x0,8
tick,0x7ffdc994fb34,153919385,0,0x0,8
tick,0x7ffdc994fb34,153935375,0,0x0,8
tick,0x7ffdc994fb34,153950850,0,0x0,8
tick,0x7ffdc994fb34,153966683,0,0x0,8
tick,0x7ffdc994fb34,153982292,0,0x0,8
tick,0x7ffdc994fb34,153998088,0,0x0,8
tick,0x7ffdc994fb34,154013505,0,0x0,8
tick,0x7ffdc994fb34,154028695,0,0x0,8
tick,0x7ffdc994fb34,154044050,0,0x0,8
tick,0x7ffdc994fb34,154059884,0,0x0,8
tick,0x7ffdc994fb34,154075537,0,0x0,8
tick,0x7ffdc994fb34,154091776,0,0x0,8
tick,0x7ffdc994fb34,154107721,0,0x0,8
tick,0x7ffdc994fb34,154122912,0,0x0,8
tick,0x7ffdc994fb34,154138242,0,0x0,8
tick,0x7ffdc994fb34,154153490,0,0x0,8
tick,0x7ffdc994fb34,154169119,0,0x0,8
tick,0x7ffdc994fb34,154184492,0,0x0,8
tick,0x7ffdc994fb34,154200188,0,0x0,8
tick,0x7ffdc994fb34,154215558,0,0x0,8
tick,0x7ffdc994fb34,154231571,0,0x0,8
tick,0x7ffdc994fb34,154246914,0,0x0,8
tick,0x7ffdc994fb34,154261927,0,0x0,8
tick,0x7ffdc994fb34,154277812,0,0x0,8
tick,0x7ffdc994fb34,154293756,0,0x0,8
tick,0x7ffdc994fb34,154309713,0,0x0,8
tick,0x7ffdc994fb34,154324952,0,0x0,8
tick,0x7ffdc994fb34,154341209,0,0x0,8
tick,0x7ffdc994fb34,154356870,0,0x0,8
tick,0x7ffdc994fb34,154372791,0,0x0,8
tick,0x7ffdc994fb34,154387803,0,0x0,8
tick,0x7ffdc994fb34,154402724,0,0x0,8
tick,0x7ffdc994fb34,154418073,0,0x0,8
tick,0x7ffdc994fb34,154434003,0,0x0,8
tick,0x7ffdc994fb34,154449114,0,0x0,8
tick,0x7ffdc994fb34,154464372,0,0x0,8
tick,0x7ffdc994fb34,154480076,0,0x0,8
tick,0x7ffdc994fb34,154495788,0,0x0,8
tick,0x7ffdc994fb34,154511733,0,0x0,8
tick,0x7ffdc994fb34,154527227,0,0x0,8
tick,0x7ffdc994fb34,154542771,0,0x0,8
tick,0x7ffdc994fb34,154558464,0,0x0,8
tick,0x7ffdc994fb34,154573872,0,0x0,8
tick,0x7ffdc994fb34,154589428,0,0x0,8
tick,0x7ffdc994fb34,154604372,0,0x0,8
tick,0x7ffdc994fb34,154620079,0,0x0,8
tick,0x7ffdc994fb34,154635562,0,0x0,8
tick,0x7ffdc994fb34,154651252,0,0x0,8
tick,0x7ffdc994fb34,154666588,0,0x0,8
tick,0x7ffdc994fb34,154682249,0,0x0,8
tick,0x7ffdc994fb34,154697593,0,0x0,8
tick,0x7ffdc994fb34,154712761,0,0x0,8
tick,0x7ffdc994fb34,154728315,0,0x0,8
tick,0x7ffdc994fb34,154744093,0,0x0,8
tick,0x7ffdc994fb34,154759533,0,0x0,8
tick,0x7ffdc994fb34,154774731,0,0x0,8
tick,0x7ffdc994fb34,154790885,0,0x0,8
tick,0x7ffdc994fb34,154806538,0,0x0,8
tick,0x7ffdc994fb34,154823052,0,0x0,8
tick,0x7ffdc994fb34,154838179,0,0x0,8
tick,0x7ffdc994fb34,154853483,0,0x0,8
tick,0x7ffdc994fb34,154868781,0,0x0,8
tick,0x7ffdc994fb34,154884228,0,0x0,8
tick,0x7ffdc994fb34,154899296,0,0x0,8
tick,0x7ffdc994fb34,154914500,0,0x0,8
tick,0x7ffdc994fb34,154930012,0,0x0,8
tick,0x7ffdc994fb34,154945468,0,0x0,8
tick,0x7ffdc994fb34,154961312,0,0x0,8
tick,0x7ffdc994fb34,154976935,0,0x0,8
tick,0x7ffdc994fb34,154992503,0,0x0,8
tick,0x7ffdc994fb34,155007899,0,0x0,8
tick,0x7ffdc994fb34,155022832,0,0x0,8
tick,0x7ffdc994fb34,155038553,0,0x0,8
tick,0x7ffdc994fb34,155053692,0,0x0,8
tick,0x7ffdc994fb34,155068979,0,0x0,8
tick,0x7ffdc994fb34,155084455,0,0x0,8
tick,0x7ffdc994fb34,155100010,0,0x0,8
tick,0x7ffdc994fb34,155115652,0,0x0,8
tick,0x7ffdc994fb34,155131617,0,0x0,8
tick,0x7ffdc994fb34,155147038,0,0x0,8
tick,0x7ffdc994fb34,155162513,0,0x0,8
tick,0x7ffdc994fb34,155178414,0,0x0,8
tick,0x7ffdc994fb34,155193773,0,0x0,8
tick,0x7ffdc994fb34,155209584,0,0x0,8
tick,0x7ffdc994fb34,155224959,0,0x0,8
tick,0x7ffdc994fb34,155240350,0,0x0,8
tick,0x7ffdc994fb34,155255974,0,0x0,8
tick,0x7ffdc994fb34,155271923,0,0x0,8
tick,0x7ffdc994fb34,155287284,0,0x0,8
tick,0x7ffdc994fb34,155302907,0,0x0,8
tick,0x7ffdc994fb34,155318360,0,0x0,8
tick,0x7ffdc994fb34,155334302,0,0x0,8
tick,0x7ffdc994fb34,155349951,0,0x0,8
tick,0x7ffdc994fb34,155365303,0,0x0,8
tick,0x7ffdc994fb34,155381162,0,0x0,8
tick,0x7ffdc994fb34,155395790,0,0x0,8
tick,0x7ffdc994fb34,155412284,0,0x0,8
tick,0x7ffdc994fb34,155428183,0,0x0,8
tick,0x7ffdc994fb34,155443850,0,0x0,8
tick,0x7ffdc994fb34,155459126,0,0x0,8
tick,0x7ffdc994fb34,155474690,0,0x0,8
tick,0x7ffdc994fb34,155490179,0,0x0,8
tick,0x7ffdc994fb34,155505901,0,0x0,8
tick,0x7ffdc994fb34,155520909,0,0x0,8
tick,0x7ffdc994fb34,155536193,0,0x0,8
tick,0x7ffdc994fb34,155551819,0,0x0,8
tick,0x7ffdc994fb34,155567618,0,0x0,8
tick,0x7ffdc994fb34,155582992,0,0x0,8
tick,0x7ffdc994fb34,155598057,0,0x0,8
tick,0x7ffdc994fb34,155613785,0,0x0,8
tick,0x7ffdc994fb34,155629403,0,0x0,8
tick,0x7ffdc994fb34,155644674,0,0x0,8
tick,0x7ffdc994fb34,155660238,0,0x0,8
tick,0x7ffdc994fb34,155675830,0,0x0,8
tick,0x7ffdc994fb34,155691402,0,0x0,8
tick,0x7ffdc994fb34,155707072,0,0x0,8
tick,0x7ffdc994fb34,155722735,0,0x0,8
tick,0x7ffdc994fb34,155737944,0,0x0,8
tick,0x7ffdc994fb34,155753882,0,0x0,8
tick,0x7ffdc994fb34,155769646,0,0x0,8
tick,0x7ffdc994fb34,155784879,0,0x0,8
tick,0x7ffdc994fb34,155800541,0,0x0,8
tick,0x7ffdc994fb34,155815854,0,0x0,8
tick,0x7ffdc994fb34,155831888,0,0x0,8
tick,0x7ffdc994fb34,155847122,0,0x0,8
tick,0x7ffdc994fb34,155863209,0,0x0,8
tick,0x7ffdc994fb34,155878444,0,0x0,8
tick,0x7ffdc994fb34,155894113,0,0x0,8
tick,0x7ffdc994fb34,155909655,0,0x0,8
tick,0x7ffdc994fb34,155925296,0,0x0,8
tick,0x7ffdc994fb34,155940869,0,0x0,8
tick,0x7ffdc994fb34,155956572,0,0x0,8
tick,0x7ffdc994fb34,155972090,0,0x0,8
tick,0x7ffdc994fb34,155987398,0,0x0,8
tick,0x7ffdc994fb34,156003056,0,0x0,8
tick,0x7ffdc994fb34,156018220,0,0x0,8
tick,0x7ffdc994fb34,156033646,0,0x0,8
tick,0x7ffdc994fb34,156049642,0,0x0,8
tick,0x7ffdc994fb34,156065241,0,0x0,8
tick,0x7ffdc994fb34,156081434,0,0x0,8
tick,0x7ffdc994fb34,156096597,0,0x0,8
tick,0x7ffdc994fb34,156112764,0,0x0,8
tick,0x7ffdc994fb34,156128735,0,0x0,8
tick,0x7ffdc994fb34,156144067,0,0x0,8
tick,0x7ffdc994fb34,156160327,0,0x0,8
tick,0x7ffdc994fb34,156176162,0,0x0,8
tick,0x7ffdc994fb34,156192502,0,0x0,8
tick,0x7ffdc994fb34,156207701,0,0x0,8
tick,0x7ffdc994fb34,156223486,0,0x0,8
tick,0x7ffdc994fb34,156239550,0,0x0,8
tick,0x7ffdc994fb34,156254851,0,0x0,8
tick,0x7ffdc994fb34,156270506,0,0x0,8
tick,0x7ffdc994fb34,156285436,0,0x0,8
tick,0x7ffdc994fb34,156301585,0,0x0,8
tick,0x7ffdc994fb34,156317576,0,0x0,8
tick,0x7ffdc994fb34,156332864,0,0x0,8
tick,0x7ffdc994fb34,156347972,0,0x0,8
tick,0x7ffdc994fb34,156363084,0,0x0,8
tick,0x7ffdc994fb34,156378577,0,0x0,8
tick,0x7ffdc994fb34,156393835,0,0x0,8
tick,0x7ffdc994fb34,156409475,0,0x0,8
tick,0x7ffdc994fb34,156424840,0,0x0,8
tick,0x7ffdc994fb34,156440268,0,0x0,8
tick,0x7ffdc994fb34,156455846,0,0x0,8
tick,0x7ffdc994fb34,156472030,0,0x0,8
tick,0x7ffdc994fb34,156487080,0,0x0,8
tick,0x7ffdc994fb34,156503147,0,0x0,8
tick,0x7ffdc994fb34,156518834,0,0x0,8
tick,0x7ffdc994fb34,156534214,0,0x0,8
tick,0x7ffdc994fb34,156549828,0,0x0,8
tick,0x7ffdc994fb34,156565394,0,0x0,8
tick,0x7ffdc994fb34,156580981,0,0x0,8
tick,0x7ffdc994fb34,156596543,0,0x0,8
tick,0x7ffdc994fb34,156612448,0,0x0,8
tick,0x7ffdc994fb34,156628038,0,0x0,8
tick,0x7ffdc994fb34,156643645,0,0x0,8
tick,0x7ffdc994fb34,156659469,0,0x0,8
tick,0x7ffdc994fb34,156674812,0,0x0,8
tick,0x7ffdc994fb34,156690381,0,0x0,8
tick,0x7ffdc994fb34,156706313,0,0x0,8
tick,0x7ffdc994fb34,156722179,0,0x0,8
tick,0x7ffdc994fb34,156737568,0,0x0,8
tick,0x7ffdc994fb34,156753059,0,0x0,8
tick,0x7ffdc994fb34,156768410,0,0x0,8
tick,0x7ffdc994fb34,156783678,0,0x0,8
tick,0x7ffdc994fb34,156799538,0,0x0,8
tick,0x7ffdc994fb34,156814878,0,0x0,8
tick,0x7ffdc994fb34,156830201,0,0x0,8
tick,0x7ffdc994fb34,156846018,0,0x0,8
tick,0x7ffdc994fb34,156861213,0,0x0,8
tick,0x7ffdc994fb34,156876987,0,0x0,8
tick,0x7ffdc994fb34,156892457,0,0x0,8
tick,0x7ffdc994fb34,156907700,0,0x0,8
tick,0x7ffdc994fb34,156922879,0,0x0,8
tick,0x7ffdc994fb34,156938519,0,0x0,8
tick,0x7ffdc994fb34,156953914,0,0x0,8
tick,0x7ffdc994fb34,156969597,0,0x0,8
tick,0x7ffdc994fb34,156984872,0,0x0,8
tick,0x7ffdc994fb34,157000947,0,0x0,8
tick,0x7ffdc994fb34,157016510,0,0x0,8
tick,0x7ffdc994fb34,157032493,0,0x0,8
tick,0x7ffdc994fb34,157048595,0,0x0,8
tick,0x7ffdc994fb34,157064326,0,0x0,8
tick,0x7ffdc994fb34,157079928,0,0x0,8
tick,0x7ffdc994fb34,157095339,0,0x0,8
tick,0x7ffdc994fb34,157110867,0,0x0,8
tick,0x7ffdc994fb34,157126390,0,0x0,8
tick,0x7ffdc994fb34,157141537,0,0x0,8
tick,0x7ffdc994fb34,157156903,0,0x0,8
tick,0x7ffdc994fb34,157172541,0,0x0,8
tick,0x7ffdc994fb34,157187656,0,0x0,8
tick,0x7ffdc994fb34,157203554,0,0x0,8
tick,0x7ffdc994fb34,157218929,0,0x0,8
tick,0x7ffdc994fb34,157234348,0,0x0,8
tick,0x7ffdc994fb34,157249855,0,0x0,8
tick,0x7ffdc994fb34,157265343,0,0x0,8
tick,0x7ffdc994fb34,157280822,0,0x0,8
tick,0x7ffdc994fb34,157296472,0,0x0,8
tick,0x7ffdc994fb34,157311917,0,0x0,8
tick,0x7ffdc994fb34,157327611,0,0x0,8
tick,0x7ffdc994fb34,157343379,0,0x0,8
tick,0x7ffdc994fb34,157359357,0,0x0,8
tick,0x7ffdc994fb34,157375281,0,0x0,8
tick,0x7ffdc994fb34,157391500,0,0x0,8
tick,0x7ffdc994fb34,157407028,0,0x0,8
tick,0x7ffdc994fb34,157423146,0,0x0,8
tick,0x7ffdc994fb34,157439274,0,0x0,8
tick,0x7ffdc994fb34,157454926,0,0x0,8
tick,0x7ffdc994fb34,157470933,0,0x0,8
tick,0x7ffdc994fb34,157486987,0,0x0,8
tick,0x7ffdc994fb34,157502582,0,0x0,8
tick,0x7ffdc994fb34,157517859,0,0x0,8
tick,0x7ffdc994fb34,157533918,0,0x0,8
tick,0x7ffdc994fb34,157548995,0,0x0,8
tick,0x7ffdc994fb34,157564183,0,0x0,8
tick,0x7ffdc994fb34,157580246,0,0x0,8
tick,0x7ffdc994fb34,157595834,0,0x0,8
tick,0x7ffdc994fb34,157611223,0,0x0,8
tick,0x7ffdc994fb34,157626711,0,0x0,8
tick,0x7ffdc994fb34,157642566,0,0x0,8
tick,0x7ffdc994fb34,157657988,0,0x0,8
tick,0x7ffdc994fb34,157673036,0,0x0,8
tick,0x7ffdc994fb34,157689098,0,0x0,8
tick,0x7ffdc994fb34,157704597,0,0x0,8
tick,0x7ffdc994fb34,157720728,0,0x0,8
tick,0x7ffdc994fb34,157736622,0,0x0,8
tick,0x7ffdc994fb34,157751548,0,0x0,8
tick,0x7ffdc994fb34,157767719,0,0x0,8
tick,0x7ffdc994fb34,157783102,0,0x0,8
tick,0x7ffdc994fb34,157798532,0,0x0,8
tick,0x7ffdc994fb34,157814268,0,0x0,8
tick,0x7ffdc994fb34,157829691,0,0x0,8
tick,0x7ffdc994fb34,157845058,0,0x0,8
tick,0x7ffdc994fb34,157860507,0,0x0,8
tick,0x7ffdc994fb34,157875871,0,0x0,8
tick,0x7ffdc994fb34,157891715,0,0x0,8
tick,0x7ffdc994fb34,157907146,0,0x0,8
tick,0x7ffdc994fb34,157922778,0,0x0,8
tick,0x7ffdc994fb34,157937505,0,0x0,8
tick,0x7ffdc994fb34,157952930,0,0x0,8
tick,0x7ffdc994fb34,157968905,0,0x0,8
tick,0x7ffdc994fb34,157984378,0,0x0,8
tick,0x7ffdc994fb34,157999575,0,0x0,8
tick,0x7ffdc994fb34,158015591,0,0x0,8
tick,0x7ffdc994fb34,158031190,0,0x0,8
tick,0x7ffdc994fb34,158046745,0,0x0,8
tick,0x7ffdc994fb34,158062243,0,0x0,8
tick,0x7ffdc994fb34,158077517,0,0x0,8
tick,0x7ffdc994fb34,158093207,0,0x0,8
tick,0x7ffdc994fb34,158108826,0,0x0,8
tick,0x7ffdc994fb34,158124269,0,0x0,8
tick,0x7ffdc994fb34,158139878,0,0x0,8
tick,0x7ffdc994fb34,158154991,0,0x0,8
tick,0x7ffdc994fb34,158171127,0,0x0,8
tick,0x7ffdc994fb34,158186362,0,0x0,8
tick,0x7ffdc994fb34,158202075,0,0x0,8
tick,0x7ffdc994fb34,158218076,0,0x0,8
tick,0x7ffdc994fb34,158233471,0,0x0,8
tick,0x7ffdc994fb34,158249575,0,0x0,8
tick,0x7ffdc994fb34,158265472,0,0x0,8
tick,0x7ffdc994fb34,158281157,0,0x0,8
tick,0x7ffdc994fb34,158296922,0,0x0,8
tick,0x7ffdc994fb34,158313164,0,0x0,8
tick,0x7ffdc994fb34,158329048,0,0x0,8
tick,0x7ffdc994fb34,158344793,0,0x0,8
tick,0x7ffdc994fb34,158360050,0,0x0,8
tick,0x7ffdc994fb34,158375757,0,0x0,8
tick,0x7ffdc994fb34,158391528,0,0x0,8
tick,0x7ffdc994fb34,158407082,0,0x0,8
tick,0x7ffdc994fb34,158422541,0,0x0,8
tick,0x7ffdc994fb34,158438195,0,0x0,8
tick,0x7ffdc994fb34,158453781,0,0x0,8
tick,0x7ffdc994fb34,158469822,0,0x0,8
tick,0x7ffdc994fb34,158485586,0,0x0,8
tick,0x7ffdc994fb34,158501507,0,0x0,8
tick,0x7ffdc994fb34,158517021,0,0x0,8
tick,0x7ffdc994fb34,158532561,0,0x0,8
tick,0x7ffdc994fb34,158548395,0,0x0,8
tick,0x7ffdc994fb34,158563882,0,0x0,8
tick,0x7ffdc994fb34,158579337,0,0x0,8
tick,0x7ffdc994fb34,158594836,0,0x0,8
tick,0x7ffdc994fb34,158610361,0,0x0,8
tick,0x7ffdc994fb34,158625649,0,0x0,8
tick,0x7ffdc994fb34,158641244,0,0x0,8
tick,0x7ffdc994fb34,158656494,0,0x0,8
tick,0x7ffdc994fb34,158672474,0,0x0,8
tick,0x7ffdc994fb34,158688360,0,0x0,8
tick,0x7ffdc994fb34,158703746,0,0x0,8
tick,0x7ffdc994fb34,158719586,0,0x0,8
tick,0x7ffdc994fb34,158735249,0,0x0,8
tick,0x7ffdc994fb34,158751331,0,0x0,8
tick,0x7ffdc994fb34,158766291,0,0x0,8
tick,0x7ffdc994fb34,158781720,0,0x0,8
tick,0x7ffdc994fb34,158797079,0,0x0,8
tick,0x7ffdc994fb34,158812661,0,0x0,8
tick,0x7ffdc994fb34,158828610,0,0x0,8
tick,0x7ffdc994fb34,158843871,0,0x0,8
tick,0x7ffdc994fb34,158859421,0,0x0,8
tick,0x7ffdc994fb34,158875102,0,0x0,8
tick,0x7ffdc994fb34,158891181,0,0x0,8
tick,0x7ffdc994fb34,158907358,0,0x0,8
tick,0x7ffdc994fb34,158922887,0,0x0,8
tick,0x7ffdc994fb34,158938255,0,0x0,8
tick,0x7ffdc994fb34,158954482,0,0x0,8
tick,0x7ffdc994fb34,158970284,0,0x0,8
tick,0x7ffdc994fb34,158985920,0,0x0,8
tick,0x7ffdc994fb34,159001129,0,0x0,8
tick,0x7ffdc994fb34,159016160,0,0x0,8
tick,0x7ffdc994fb34,159032064,0,0x0,8
tick,0x7ffdc994fb34,159047929,0,0x0,8
tick,0x7ffdc994fb34,159064167,0,0x0,8
tick,0x7ffdc994fb34,159079718,0,0x0,8
tick,0x7ffdc994fb34,159094380,0,0x0,8
tick,0x7ffdc994fb34,159109852,0,0x0,8
tick,0x7ffdc994fb34,159125289,0,0x0,8
tick,0x7ffdc994fb34,159141013,0,0x0,8
tick,0x7ffdc994fb34,159156175,0,0x0,8
tick,0x7ffdc994fb34,159171525,0,0x0,8
tick,0x7ffdc994fb34,159187798,0,0x0,8
tick,0x7ffdc994fb34,159203688,0,0x0,8
tick,0x7ffdc994fb34,159219248,0,0x0,8
tick,0x7ffdc994fb34,159234559,0,0x0,8
tick,0x7ffdc994fb34,159250858,0,0x0,8
tick,0x7ffdc994fb34,159266728,0,0x0,8
tick,0x7ffdc994fb34,159282289,0,0x0,8
tick,0x7ffdc994fb34,159298192,0,0x0,8
tick,0x7ffdc994fb34,159313862,0,0x0,8
tick,0x7ffdc994fb34,159329335,0,0x0,8
tick,0x7ffdc994fb34,159344797,0,0x0,8
tick,0x7ffdc994fb34,159360557,0,0x0,8
tick,0x7ffdc994fb34,159375945,0,0x0,8
tick,0x7ffdc994fb34,159391306,0,0x0,8
tick,0x7ffdc994fb34,159407056,0,0x0,8
tick,0x7ffdc994fb34,159422809,0,0x0,8
tick,0x7ffdc994fb34,159438390,0,0x0,8
tick,0x7ffdc994fb34,159454202,0,0x0,8
tick,0x7ffdc994fb34,159469497,0,0x0,8
tick,0x7ffdc994fb34,159485035,0,0x0,8
tick,0x7ffdc994fb34,159500475,0,0x0,8
tick,0x7ffdc994fb34,159515777,0,0x0,8
tick,0x7ffdc994fb34,159531023,0,0x0,8
tick,0x7ffdc994fb34,159546966,0,0x0,8
tick,0x7ffdc994fb34,159562773,0,0x0,8
tick,0x7ffdc994fb34,159578192,0,0x0,8
tick,0x7ffdc994fb34,159593927,0,0x0,8
tick,0x7ffdc994fb34,159609392,0,0x0,8
tick,0x7ffdc994fb34,159626626,0,0x0,8
tick,0x7ffdc994fb34,159640860,0,0x0,8
tick,0x7ffdc994fb34,159655641,0,0x0,8
tick,0x7ffdc994fb34,159671739,0,0x0,8
tick,0x7ffdc994fb34,159687268,0,0x0,8
tick,0x7ffdc994fb34,159703087,0,0x0,8
tick,0x7ffdc994fb34,159718690,0,0x0,8
tick,0x7ffdc994fb34,159734050,0,0x0,8
tick,0x7ffdc994fb34,159749504,0,0x0,8
tick,0x7ffdc994fb34,159764847,0,0x0,8
tick,0x7ffdc994fb34,159780744,0,0x0,8
tick,0x7ffdc994fb34,159796265,0,0x0,8
tick,0x7ffdc994fb34,159811518,0,0x0,8
tick,0x7ffdc994fb34,159827065,0,0x0,8
tick,0x7ffdc994fb34,159842472,0,0x0,8
tick,0x7ffdc994fb34,159858027,0,0x0,8
tick,0x7ffdc994fb34,159874046,0,0x0,8
tick,0x7ffdc994fb34,159889624,0,0x0,8
tick,0x7ffdc994fb34,159905266,0,0x0,8
tick,0x7ffdc994fb34,159921071,0,0x0,8
tick,0x7ffdc994fb34,159936987,0,0x0,8
tick,0x7ffdc994fb34,159952262,0,0x0,8
tick,0x7ffdc994fb34,159968442,0,0x0,8
tick,0x7ffdc994fb34,159983783,0,0x0,8
tick,0x7ffdc994fb34,159999332,0,0x0,8
tick,0x7ffdc994fb34,160014776,0,0x0,8
tick,0x7ffdc994fb34,160030077,0,0x0,8
tick,0x7ffdc994fb34,160045238,0,0x0,8
tick,0x7ffdc994fb34,160060753,0,0x0,8
tick,0x7ffdc994fb34,160076703,0,0x0,8
tick,0x7ffdc994fb34,160091956,0,0x0,8
tick,0x7ffdc994fb34,160107581,0,0x0,8
tick,0x7ffdc994fb34,160123291,0,0x0,8
tick,0x7ffdc994fb34,160138482,0,0x0,8
tick,0x7ffdc994fb34,160154271,0,0x0,8
tick,0x7ffdc994fb34,160169749,0,0x0,8
tick,0x7ffdc994fb34,160184939,0,0x0,8
tick,0x7ffdc994fb34,160200311,0,0x0,8
tick,0x7ffdc994fb34,160215975,0,0x0,8
tick,0x7ffdc994fb34,160231486,0,0x0,8
tick,0x7ffdc994fb34,160247264,0,0x0,8
tick,0x7ffdc994fb34,160262432,0,0x0,8
tick,0x7ffdc994fb34,160277696,0,0x0,8
tick,0x7ffdc994fb34,160293271,0,0x0,8
tick,0x7ffdc994fb34,160308624,0,0x0,8
tick,0x7ffdc994fb34,160324187,0,0x0,8
tick,0x7ffdc994fb34,160340238,0,0x0,8
tick,0x7ffdc994fb34,160355949,0,0x0,8
tick,0x7ffdc994fb34,160371452,0,0x0,8
tick,0x7ffdc994fb34,160386560,0,0x0,8
tick,0x7ffdc994fb34,160402688,0,0x0,8
tick,0x7ffdc994fb34,160417606,0,0x0,8
tick,0x7ffdc994fb34,160433865,0,0x0,8
tick,0x7ffdc994fb34,160449662,0,0x0,8
tick,0x7ffdc994fb34,160464950,0,0x0,8
tick,0x7ffdc994fb34,160480090,0,0x0,8
tick,0x7ffdc994fb34,160494855,0,0x0,8
tick,0x7ffdc994fb34,160510167,0,0x0,8
tick,0x7ffdc994fb34,160525868,0,0x0,8
tick,0x7ffdc994fb34,160541670,0,0x0,8
tick,0x7ffdc994fb34,160556596,0,0x0,8
tick,0x7ffdc994fb34,160572497,0,0x0,8
tick,0x7ffdc994fb34,160587689,0,0x0,8
tick,0x7ffdc994fb34,160603522,0,0x0,8
tick,0x7ffdc994fb34,160618555,0,0x0,8
tick,0x7ffdc994fb34,160634807,0,0x0,8
tick,0x7ffdc994fb34,160650180,0,0x0,8
tick,0x7ffdc994fb34,160666050,0,0x0,8
tick,0x7ffdc994fb34,160682027,0,0x0,8
tick,0x7ffdc994fb34,160697495,0,0x0,8
tick,0x7ffdc994fb34,160712759,0,0x0,8
tick,0x7ffdc994fb34,160728279,0,0x0,8
tick,0x7ffdc994fb34,160743954,0,0x0,8
tick,0x7ffdc994fb34,160759699,0,0x0,8
tick,0x7ffdc994fb34,160776070,0,0x0,8
tick,0x7ffdc994fb34,160792396,0,0x0,8
tick,0x7ffdc994fb34,160807929,0,0x0,8
tick,0x7ffdc994fb34,160822962,0,0x0,8
tick,0x7ffdc994fb34,160838662,0,0x0,8
tick,0x7ffdc994fb34,160853947,0,0x0,8
tick,0x7ffdc994fb34,160869647,0,0x0,8
tick,0x7ffdc994fb34,160884996,0,0x0,8
tick,0x7ffdc994fb34,160900876,0,0x0,8
tick,0x7ffdc994fb34,160916011,0,0x0,8
tick,0x7ffdc994fb34,160932029,0,0x0,8
tick,0x7ffdc994fb34,160947256,0,0x0,8
tick,0x7ffdc994fb34,160962961,0,0x0,8
tick,0x7ffdc994fb34,160978944,0,0x0,8
tick,0x7ffdc994fb34,160994907,0,0x0,8
tick,0x7ffdc994fb34,161010391,0,0x0,8
tick,0x7ffdc994fb34,161026118,0,0x0,8
tick,0x7ffdc994fb34,161041486,0,0x0,8
tick,0x7ffdc994fb34,161056781,0,0x0,8
tick,0x7ffdc994fb34,161073173,0,0x0,8
tick,0x7ffdc994fb34,161088631,0,0x0,8
tick,0x7ffdc994fb34,161104217,0,0x0,8
tick,0x7ffdc994fb34,161119579,0,0x0,8
tick,0x7ffdc994fb34,161134662,0,0x0,8
tick,0x7ffdc994fb34,161150484,0,0x0,8
tick,0x7ffdc994fb34,161166160,0,0x0,8
tick,0x7ffdc994fb34,161181325,0,0x0,8
tick,0x7ffdc994fb34,161197624,0,0x0,8
tick,0x7ffdc994fb34,161213635,0,0x0,8
tick,0x7ffdc994fb34,161229947,0,0x0,8
tick,0x7ffdc994fb34,161246001,0,0x0,8
tick,0x7ffdc994fb34,161261503,0,0x0,8
tick,0x7ffdc994fb34,161277677,0,0x0,8
tick,0x7ffdc994fb34,161292880,0,0x0,8
tick,0x7ffdc994fb34,161308230,0,0x0,8
tick,0x7ffdc994fb34,161324487,0,0x0,8
tick,0x7ffdc994fb34,161340008,0,0x0,8
tick,0x7ffdc994fb34,161355552,0,0x0,8
tick,0x7ffdc994fb34,161370875,0,0x0,8
tick,0x7ffdc994fb34,161386118,0,0x0,8
tick,0x7ffdc994fb34,161401894,0,0x0,8
tick,0x7ffdc994fb34,161417315,0,0x0,8
tick,0x7ffdc994fb34,161432908,0,0x0,8
tick,0x7ffdc994fb34,161448374,0,0x0,8
tick,0x7ffdc994fb34,161463973,0,0x0,8
tick,0x7ffdc994fb34,161478874,0,0x0,8
tick,0x7ffdc994fb34,161494296,0,0x0,8
tick,0x7ffdc994fb34,161509582,0,0x0,8
tick,0x7ffdc994fb34,161525197,0,0x0,8
tick,0x7ffdc994fb34,161541066,0,0x0,8
tick,0x7ffdc994fb34,161556189,0,0x0,8
tick,0x7ffdc994fb34,161572045,0,0x0,8
tick,0x7ffdc994fb34,161587314,0,0x0,8
tick,0x7ffdc994fb34,161603075,0,0x0,8
tick,0x7ffdc994fb34,161618374,0,0x0,8
tick,0x7ffdc994fb34,161633891,0,0x0,8
tick,0x7ffdc994fb34,161649517,0,0x0,8
tick,0x7ffdc994fb34,161664833,0,0x0,8
tick,0x7ffdc994fb34,161680231,0,0x0,8
tick,0x7ffdc994fb34,161695830,0,0x0,8
tick,0x7ffdc994fb34,161711506,0,0x0,8
tick,0x7ffdc994fb34,161726765,0,0x0,8
tick,0x7ffdc994fb34,161742681,0,0x0,8
tick,0x7ffdc994fb34,161758483,0,0x0,8
tick,0x7ffdc994fb34,161774533,0,0x0,8
tick,0x7ffdc994fb34,161789716,0,0x0,8
tick,0x7ffdc994fb34,161805003,0,0x0,8
tick,0x7ffdc994fb34,161820444,0,0x0,8
tick,0x7ffdc994fb34,161835959,0,0x0,8
tick,0x7ffdc994fb34,161851203,0,0x0,8
tick,0x7ffdc994fb34,161866926,0,0x0,8
tick,0x7ffdc994fb34,161882451,0,0x0,8
tick,0x7ffdc994fb34,161898229,0,0x0,8
tick,0x7ffdc994fb34,161913798,0,0x0,8
tick,0x7ffdc994fb34,161929776,0,0x0,8
tick,0x7ffdc994fb34,161944957,0,0x0,8
tick,0x7ffdc994fb34,161961200,0,0x0,8
tick,0x7ffdc994fb34,161977199,0,0x0,8
tick,0x7ffdc994fb34,161992684,0,0x0,8
tick,0x7ffdc994fb34,162008564,0,0x0,8
tick,0x7ffdc994fb34,162024991,0,0x0,8
tick,0x7ffdc994fb34,162040188,0,0x0,8
tick,0x7ffdc994fb34,162055154,0,0x0,8
tick,0x7ffdc994fb34,162070923,0,0x0,8
tick,0x7ffdc994fb34,162086297,0,0x0,8
tick,0x7ffdc994fb34,162101570,0,0x0,8
tick,0x7ffdc994fb34,162117341,0,0x0,8
tick,0x7ffdc994fb34,162132782,0,0x0,8
tick,0x7ffdc994fb34,162148387,0,0x0,8
tick,0x7ffdc994fb34,162163628,0,0x0,8
tick,0x7ffdc994fb34,162179159,0,0x0,8
tick,0x7ffdc994fb34,162194685,0,0x0,8
tick,0x7ffdc994fb34,162210803,0,0x0,8
tick,0x7ffdc994fb34,162226099,0,0x0,8
tick,0x7ffdc994fb34,162241716,0,0x0,8
tick,0x7ffdc994fb34,162257460,0,0x0,8
tick,0x7ffdc994fb34,162272559,0,0x0,8
tick,0x7ffdc994fb34,162288128,0,0x0,8
tick,0x7ffdc994fb34,162303933,0,0x0,8
tick,0x7ffdc994fb34,162319574,0,0x0,8
tick,0x7ffdc994fb34,162335050,0,0x0,8
tick,0x7ffdc994fb34,162350494,0,0x0,8
tick,0x7ffdc994fb34,162365943,0,0x0,8
tick,0x7ffdc994fb34,162381558,0,0x0,8
tick,0x7ffdc994fb34,162396836,0,0x0,8
tick,0x7ffdc994fb34,162412174,0,0x0,8
tick,0x7ffdc994fb34,162427274,0,0x0,8
tick,0x7ffdc994fb34,162443076,0,0x0,8
tick,0x7ffdc994fb34,162458762,0,0x0,8
tick,0x7ffdc994fb34,162474195,0,0x0,8
tick,0x7ffdc994fb34,162490135,0,0x0,8
tick,0x7ffdc994fb34,162505975,0,0x0,8
tick,0x7ffdc994fb34,162521300,0,0x0,8
tick,0x7ffdc994fb34,162537208,0,0x0,8
tick,0x7ffdc994fb34,162552793,0,0x0,8
tick,0x7ffdc994fb34,162568338,0,0x0,8
tick,0x7ffdc994fb34,162583572,0,0x0,8
tick,0x7ffdc994fb34,162599129,0,0x0,8
tick,0x7ffdc994fb34,162614583,0,0x0,8
tick,0x7ffdc994fb34,162630628,0,0x0,8
tick,0x7ffdc994fb34,162646131,0,0x0,8
tick,0x7ffdc994fb34,162661975,0,0x0,8
tick,0x7ffdc994fb34,162677480,0,0x0,8
tick,0x7ffdc994fb34,162693671,0,0x0,8
tick,0x7ffdc994fb34,162709107,0,0x0,8
tick,0x7ffdc994fb34,162724696,0,0x0,8
tick,0x7ffdc994fb34,162740536,0,0x0,8
tick,0x7ffdc994fb34,162755892,0,0x0,8
tick,0x7ffdc994fb34,162770982,0,0x0,8
tick,0x7ffdc994fb34,162786295,0,0x0,8
tick,0x7ffdc994fb34,162802013,0,0x0,8
tick,0x7ffdc994fb34,162817180,0,0x0,8
tick,0x7ffdc994fb34,162833328,0,0x0,8
tick,0x7ffdc994fb34,162848959,0,0x0,8
tick,0x7ffdc994fb34,162864134,0,0x0,8
tick,0x7ffdc994fb34,162879805,0,0x0,8
tick,0x7ffdc994fb34,162895583,0,0x0,8
tick,0x7ffdc994fb34,162911041,0,0x0,8
tick,0x7ffdc994fb34,162926653,0,0x0,8
tick,0x7ffdc994fb34,162942035,0,0x0,8
tick,0x7ffdc994fb34,162957545,0,0x0,8
tick,0x7ffdc994fb34,162973012,0,0x0,8
tick,0x7ffdc994fb34,162988871,0,0x0,8
tick,0x7ffdc994fb34,163004090,0,0x0,8
tick,0x7ffdc994fb34,163019763,0,0x0,8
tick,0x7ffdc994fb34,163035507,0,0x0,8
tick,0x7ffdc994fb34,163051026,0,0x0,8
tick,0x7ffdc994fb34,163065682,0,0x0,8
tick,0x7ffdc994fb34,163080874,0,0x0,8
tick,0x7ffdc994fb34,163096836,0,0x0,8
tick,0x7ffdc994fb34,163112162,0,0x0,8
tick,0x7ffdc994fb34,163127728,0,0x0,8
tick,0x7ffdc994fb34,163143097,0,0x0,8
tick,0x7ffdc994fb34,163158690,0,0x0,8
tick,0x7ffdc994fb34,163174194,0,0x0,8
tick,0x7ffdc994fb34,163190304,0,0x0,8
tick,0x7ffdc994fb34,163206113,0,0x0,8
tick,0x7ffdc994fb34,163222486,0,0x0,8
tick,0x7ffdc994fb34,163238120,0,0x0,8
tick,0x7ffdc994fb34,163253384,0,0x0,8
tick,0x7ffdc994fb34,163269503,0,0x0,8
tick,0x7ffdc994fb34,163285351,0,0x0,8
tick,0x7ffdc994fb34,163300759,0,0x0,8
tick,0x7ffdc994fb34,163316143,0,0x0,8
tick,0x7ffdc994fb34,163332233,0,0x0,8
tick,0x7ffdc994fb34,163348236,0,0x0,8
tick,0x7ffdc994fb34,163363718,0,0x0,8
tick,0x7ffdc994fb34,163379622,0,0x0,8
tick,0x7ffdc994fb34,163395535,0,0x0,8
tick,0x7ffdc994fb34,163411030,0,0x0,8
tick,0x7ffdc994fb34,163426626,0,0x0,8
tick,0x7ffdc994fb34,163442228,0,0x0,8
tick,0x7ffdc994fb34,163457749,0,0x0,8
tick,0x7ffdc994fb34,163473184,0,0x0,8
tick,0x7ffdc994fb34,163488745,0,0x0,8
tick,0x7ffdc994fb34,163504197,0,0x0,8
tick,0x7ffdc994fb34,163519803,0,0x0,8
tick,0x7ffdc994fb34,163535621,0,0x0,8
tick,0x7ffdc994fb34,163551799,0,0x0,8
tick,0x7ffdc994fb34,163567489,0,0x0,8
tick,0x7ffdc994fb34,163582803,0,0x0,8
tick,0x7ffdc994fb34,163598255,0,0x0,8
tick,0x7ffdc994fb34,163613520,0,0x0,8
tick,0x7ffdc994fb34,163629084,0,0x0,8
tick,0x7ffdc994fb34,163644320,0,0x0,8
tick,0x7ffdc994fb34,163659930,0,0x0,8
tick,0x7ffdc994fb34,163675461,0,0x0,8
tick,0x7ffdc994fb34,163691175,0,0x0,8
tick,0x7ffdc994fb34,163706930,0,0x0,8
tick,0x7ffdc994fb34,163722449,0,0x0,8
tick,0x7ffdc994fb34,163737449,0,0x0,8
tick,0x7ffdc994fb34,163753172,0,0x0,8
tick,0x7ffdc994fb34,163768356,0,0x0,8
tick,0x7ffdc994fb34,163784136,0,0x0,8
tick,0x7ffdc994fb34,163799555,0,0x0,8
tick,0x7ffdc994fb34,163815263,0,0x0,8
tick,0x7ffdc994fb34,163831149,0,0x0,8
tick,0x7ffdc994fb34,163846605,0,0x0,8
tick,0x7ffdc994fb34,163862296,0,0x0,8
tick,0x7ffdc994fb34,163878177,0,0x0,8
tick,0x7ffdc994fb34,163893810,0,0x0,8
tick,0x7ffdc994fb34,163909231,0,0x0,8
tick,0x7ffdc994fb34,163924712,0,0x0,8
tick,0x7ffdc994fb34,163940474,0,0x0,8
tick,0x7ffdc994fb34,163956101,0,0x0,8
tick,0x7ffdc994fb34,163971067,0,0x0,8
tick,0x7ffdc994fb34,163986817,0,0x0,8
tick,0x7ffdc994fb34,164002978,0,0x0,8
tick,0x7ffdc994fb34,164019235,0,0x0,8
tick,0x7ffdc994fb34,164034488,0,0x0,8
tick,0x7ffdc994fb34,164050202,0,0x0,8
tick,0x7ffdc994fb34,164066038,0,0x0,8
tick,0x7ffdc994fb34,164081785,0,0x0,8
tick,0x7ffdc994fb34,164097095,0,0x0,8
tick,0x7ffdc994fb34,164112262,0,0x0,8
tick,0x7ffdc994fb34,164127740,0,0x0,8
tick,0x7ffdc994fb34,164143336,0,0x0,8
tick,0x7ffdc994fb34,164158829,0,0x0,8
tick,0x7ffdc994fb34,164174689,0,0x0,8
tick,0x7ffdc994fb34,164190121,0,0x0,8
tick,0x7ffdc994fb34,164205824,0,0x0,8
tick,0x7ffdc994fb34,164221353,0,0x0,8
tick,0x7ffdc994fb34,164236724,0,0x0,8
tick,0x7ffdc994fb34,164252395,0,0x0,8
tick,0x7ffdc994fb34,164267641,0,0x0,8
tick,0x7ffdc994fb34,164283930,0,0x0,8
tick,0x7ffdc994fb34,164299542,0,0x0,8
tick,0x7ffdc994fb34,164314784,0,0x0,8
tick,0x7ffdc994fb34,164330384,0,0x0,8
tick,0x7ffdc994fb34,164346219,0,0x0,8
tick,0x7ffdc994fb34,164361505,0,0x0,8
tick,0x7ffdc994fb34,164376818,0,0x0,8
tick,0x7ffdc994fb34,164392699,0,0x0,8
tick,0x7ffdc994fb34,164408420,0,0x0,8
tick,0x7ffdc994fb34,164423661,0,0x0,8
tick,0x7ffdc994fb34,164439387,0,0x0,8
tick,0x7ffdc994fb34,164454992,0,0x0,8
tick,0x7ffdc994fb34,164470636,0,0x0,8
tick,0x7ffdc994fb34,164486390,0,0x0,8
tick,0x7ffdc994fb34,164501869,0,0x0,8
tick,0x7ffdc994fb34,164517539,0,0x0,8
tick,0x7ffdc994fb34,164532943,0,0x0,8
tick,0x7ffdc994fb34,164548706,0,0x0,8
tick,0x7ffdc994fb34,164563857,0,0x0,8
tick,0x7ffdc994fb34,164579929,0,0x0,8
tick,0x7ffdc994fb34,164594953,0,0x0,8
tick,0x7ffdc994fb34,164610568,0,0x0,8
tick,0x7ffdc994fb34,164626112,0,0x0,8
tick,0x7ffdc994fb34,164641880,0,0x0,8
tick,0x7ffdc994fb34,164657314,0,0x0,8
tick,0x7ffdc994fb34,164672829,0,0x0,8
tick,0x7ffdc994fb34,164688019,0,0x0,8
tick,0x7ffdc994fb34,164703793,0,0x0,8
tick,0x7ffdc994fb34,164719042,0,0x0,8
tick,0x7ffdc994fb34,164734420,0,0x0,8
tick,0x7ffdc994fb34,164749787,0,0x0,8
tick,0x7ffdc994fb34,164765200,0,0x0,8
tick,0x7ffdc994fb34,164780561,0,0x0,8
tick,0x7ffdc994fb34,164796829,0,0x0,8
tick,0x7ffdc994fb34,164812524,0,0x0,8
tick,0x7ffdc994fb34,164827935,0,0x0,8
tick,0x7ffdc994fb34,164843565,0,0x0,8
tick,0x7ffdc994fb34,164858985,0,0x0,8
tick,0x7ffdc994fb34,164874227,0,0x0,8
tick,0x7ffdc994fb34,164889575,0,0x0,8
tick,0x7ffdc994fb34,164904761,0,0x0,8
tick,0x7ffdc994fb34,164920848,0,0x0,8
tick,0x7ffdc994fb34,164935783,0,0x0,8
tick,0x7ffdc994fb34,164951949,0,0x0,8
tick,0x7ffdc994fb34,164967875,0,0x0,8
tick,0x7ffdc994fb34,164983279,0,0x0,8
tick,0x7ffdc994fb34,164999159,0,0x0,8
tick,0x7ffdc994fb34,165014454,0,0x0,8
tick,0x7ffdc994fb34,165030279,0,0x0,8
tick,0x7ffdc994fb34,165046551,0,0x0,8
tick,0x7ffdc994fb34,165061368,0,0x0,8
tick,0x7ffdc994fb34,165076948,0,0x0,8
tick,0x7ffdc994fb34,165092331,0,0x0,8
tick,0x7ffdc994fb34,165108137,0,0x0,8
tick,0x7ffdc994fb34,165123358,0,0x0,8
tick,0x7ffdc994fb34,165138981,0,0x0,8
tick,0x7ffdc994fb34,165154248,0,0x0,8
tick,0x7ffdc994fb34,165169630,0,0x0,8
tick,0x7ffdc994fb34,165184770,0,0x0,8
tick,0x7ffdc994fb34,165200416,0,0x0,8
tick,0x7ffdc994fb34,165215839,0,0x0,8
tick,0x7ffdc994fb34,165231819,0,0x0,8
tick,0x7ffdc994fb34,165247823,0,0x0,8
tick,0x7ffdc994fb34,165263005,0,0x0,8
tick,0x7ffdc994fb34,165278599,0,0x0,8
tick,0x7ffdc994fb34,165293976,0,0x0,8
tick,0x7ffdc994fb34,165309552,0,0x0,8
tick,0x7ffdc994fb34,165325165,0,0x0,8
tick,0x7ffdc994fb34,165340938,0,0x0,8
tick,0x7ffdc994fb34,165356033,0,0x0,8
tick,0x7ffdc994fb34,165372091,0,0x0,8
tick,0x7ffdc994fb34,165387983,0,0x0,8
tick,0x7ffdc994fb34,165403080,0,0x0,8
tick,0x7ffdc994fb34,165418780,0,0x0,8
tick,0x7ffdc994fb34,165434405,0,0x0,8
tick,0x7ffdc994fb34,165449966,0,0x0,8
tick,0x7ffdc994fb34,165465208,0,0x0,8
tick,0x7ffdc994fb34,165481098,0,0x0,8
tick,0x7ffdc994fb34,165496769,0,0x0,8
tick,0x7ffdc994fb34,165511598,0,0x0,8
tick,0x7ffdc994fb34,165527318,0,0x0,8
tick,0x7ffdc994fb34,165542815,0,0x0,8
tick,0x7ffdc994fb34,165558451,0,0x0,8
tick,0x7ffdc994fb34,165573964,0,0x0,8
tick,0x7ffdc994fb34,165589423,0,0x0,8
tick,0x7ffdc994fb34,165605456,0,0x0,8
tick,0x7ffdc994fb34,165620519,0,0x0,8
tick,0x7ffdc994fb34,165636084,0,0x0,8
tick,0x7ffdc994fb34,165651680,0,0x0,8
tick,0x7ffdc994fb34,165667335,0,0x0,8
tick,0x7ffdc994fb34,165682560,0,0x0,8
tick,0x7ffdc994fb34,165698163,0,0x0,8
tick,0x7ffdc994fb34,165713474,0,0x0,8
tick,0x7ffdc994fb34,165728805,0,0x0,8
tick,0x7ffdc994fb34,165744276,0,0x0,8
tick,0x7ffdc994fb34,165759894,0,0x0,8
tick,0x7ffdc994fb34,165774995,0,0x0,8
tick,0x7ffdc994fb34,165790680,0,0x0,8
tick,0x7ffdc994fb34,165806092,0,0x0,8
tick,0x7ffdc994fb34,165821158,0,0x0,8
tick,0x7ffdc994fb34,165837232,0,0x0,8
tick,0x7ffdc994fb34,165852894,0,0x0,8
tick,0x7ffdc994fb34,165869243,0,0x0,8
tick,0x7ffdc994fb34,165883635,0,0x0,8
tick,0x7ffdc994fb34,165899709,0,0x0,8
tick,0x7ffdc994fb34,165915162,0,0x0,8
tick,0x7ffdc994fb34,165930338,0,0x0,8
tick,0x7ffdc994fb34,165945939,0,0x0,8
tick,0x7ffdc994fb34,165961098,0,0x0,8
tick,0x7ffdc994fb34,165976990,0,0x0,8
tick,0x7ffdc994fb34,165993132,0,0x0,8
tick,0x7ffdc994fb34,166008319,0,0x0,8
tick,0x7ffdc994fb34,166024313,0,0x0,8
tick,0x7ffdc994fb34,166039389,0,0x0,8
tick,0x7ffdc994fb34,166054821,0,0x0,8
tick,0x7ffdc994fb34,166070758,0,0x0,8
tick,0x7ffdc994fb34,166087028,0,0x0,8
tick,0x7ffdc994fb34,166102491,0,0x0,8
tick,0x7ffdc994fb34,166117982,0,0x0,8
tick,0x7ffdc994fb34,166133092,0,0x0,8
tick,0x7ffdc994fb34,166148791,0,0x0,8
tick,0x7ffdc994fb34,166164632,0,0x0,8
tick,0x7ffdc994fb34,166180513,0,0x0,8
tick,0x7ffdc994fb34,166195452,0,0x0,8
tick,0x7ffdc994fb34,166210461,0,0x0,8
tick,0x7ffdc994fb34,166226026,0,0x0,8
tick,0x7ffdc994fb34,166241787,0,0x0,8
tick,0x7ffdc994fb34,166256835,0,0x0,8
tick,0x7ffdc994fb34,166272667,0,0x0,8
tick,0x7ffdc994fb34,166288015,0,0x0,8
tick,0x7ffdc994fb34,166303937,0,0x0,8
tick,0x7ffdc994fb34,166319881,0,0x0,8
tick,0x7ffdc994fb34,166335744,0,0x0,8
tick,0x7ffdc994fb34,166351478,0,0x0,8
tick,0x7ffdc994fb34,166366993,0,0x0,8
tick,0x7ffdc994fb34,166382630,0,0x0,8
tick,0x7ffdc994fb34,166397931,0,0x0,8
tick,0x7ffdc994fb34,166414062,0,0x0,8
tick,0x7ffdc994fb34,166429847,0,0x0,8
tick,0x7ffdc994fb34,166445543,0,0x0,8
tick,0x7ffdc994fb34,166460257,0,0x0,8
tick,0x7ffdc994fb34,166475848,0,0x0,8
tick,0x7ffdc994fb34,166491038,0,0x0,8
tick,0x7ffdc994fb34,166506363,0,0x0,8
tick,0x7ffdc994fb34,166521760,0,0x0,8
tick,0x7ffdc994fb34,166537247,0,0x0,8
tick,0x7ffdc994fb34,166553290,0,0x0,8
tick,0x7ffdc994fb34,166568609,0,0x0,8
tick,0x7ffdc994fb34,166584266,0,0x0,8
tick,0x7ffdc994fb34,166599267,0,0x0,8
tick,0x7ffdc994fb34,166614925,0,0x0,8
tick,0x7ffdc994fb34,166630512,0,0x0,8
tick,0x7ffdc994fb34,166646675,0,0x0,8
tick,0x7ffdc994fb34,166662807,0,0x0,8
tick,0x7ffdc994fb34,166678289,0,0x0,8
tick,0x7ffdc994fb34,166693823,0,0x0,8
tick,0x7ffdc994fb34,166709534,0,0x0,8
tick,0x7ffdc994fb34,166724580,0,0x0,8
tick,0x7ffdc994fb34,166740545,0,0x0,8
tick,0x7ffdc994fb34,166756206,0,0x0,8
tick,0x7ffdc994fb34,166771773,0,0x0,8
tick,0x7ffdc994fb34,166786909,0,0x0,8
tick,0x7ffdc994fb34,166802027,0,0x0,8
tick,0x7ffdc994fb34,166818342,0,0x0,8
tick,0x7ffdc994fb34,166833847,0,0x0,8
tick,0x7ffdc994fb34,166849043,0,0x0,8
tick,0x7ffdc994fb34,166864920,0,0x0,8
tick,0x7ffdc994fb34,166880481,0,0x0,8
tick,0x7ffdc994fb34,166896101,0,0x0,8
tick,0x7ffdc994fb34,166911406,0,0x0,8
tick,0x7ffdc994fb34,166927085,0,0x0,8
tick,0x7ffdc994fb34,166942730,0,0x0,8
tick,0x7ffdc994fb34,166958007,0,0x0,8
tick,0x7ffdc994fb34,166973566,0,0x0,8
tick,0x7ffdc994fb34,166988622,0,0x0,8
tick,0x7ffdc994fb34,167004500,0,0x0,8
tick,0x7ffdc994fb34,167020344,0,0x0,8
tick,0x7ffdc994fb34,167035862,0,0x0,8
tick,0x7ffdc994fb34,167051190,0,0x0,8
tick,0x7ffdc994fb34,167066937,0,0x0,8
tick,0x7ffdc994fb34,167083014,0,0x0,8
tick,0x7ffdc994fb34,167098552,0,0x0,8
tick,0x7ffdc994fb34,167113583,0,0x0,8
tick,0x7ffdc994fb34,167129396,0,0x0,8
tick,0x7ffdc994fb34,167145278,0,0x0,8
tick,0x7ffdc994fb34,167160987,0,0x0,8
tick,0x7ffdc994fb34,167175972,0,0x0,8
tick,0x7ffdc994fb34,167192310,0,0x0,8
tick,0x7ffdc994fb34,167207578,0,0x0,8
tick,0x7ffdc994fb34,167223468,0,0x0,8
tick,0x7ffdc994fb34,167238985,0,0x0,8
tick,0x7ffdc994fb34,167254754,0,0x0,8
tick,0x7ffdc994fb34,167270122,0,0x0,8
tick,0x7ffdc994fb34,167284912,0,0x0,8
tick,0x7ffdc994fb34,167300859,0,0x0,8
tick,0x7ffdc994fb34,167316997,0,0x0,8
tick,0x7ffdc994fb34,167332872,0,0x0,8
tick,0x7ffdc994fb34,167348234,0,0x0,8
tick,0x7ffdc994fb34,167364396,0,0x0,8
tick,0x7ffdc994fb34,167380354,0,0x0,8
tick,0x7ffdc994fb34,167396446,0,0x0,8
tick,0x7ffdc994fb34,167411625,0,0x0,8
tick,0x7ffdc994fb34,167427355,0,0x0,8
tick,0x7ffdc994fb34,167443198,0,0x0,8
tick,0x7ffdc994fb34,167459101,0,0x0,8
tick,0x7ffdc994fb34,167474478,0,0x0,8
tick,0x7ffdc994fb34,167490013,0,0x0,8
tick,0x7ffdc994fb34,167505646,0,0x0,8
tick,0x7ffdc994fb34,167520905,0,0x0,8
tick,0x7ffdc994fb34,167536744,0,0x0,8
tick,0x7ffdc994fb34,167552708,0,0x0,8
tick,0x7ffdc994fb34,167568941,0,0x0,8
tick,0x7ffdc994fb34,167584676,0,0x0,8
tick,0x7ffdc994fb34,167600721,0,0x0,8
tick,0x7ffdc994fb34,167616032,0,0x0,8
tick,0x7ffdc994fb34,167631568,0,0x0,8
tick,0x7ffdc994fb34,167646736,0,0x0,8
tick,0x7ffdc994fb34,167662528,0,0x0,8
tick,0x7ffdc994fb34,167679664,0,0x0,8
tick,0x7ffdc994fb34,167693104,0,0x0,8
tick,0x7ffdc994fb34,167707861,0,0x0,8
tick,0x7ffdc994fb34,167723397,0,0x0,8
tick,0x7ffdc994fb34,167738197,0,0x0,8
tick,0x7ffdc994fb34,167753298,0,0x0,8
tick,0x7ffdc994fb34,167769019,0,0x0,8
tick,0x7ffdc994fb34,167784191,0,0x0,8
tick,0x7ffdc994fb34,167799744,0,0x0,8
tick,0x7ffdc994fb34,167815500,0,0x0,8
tick,0x7ffdc994fb34,167831744,0,0x0,8
tick,0x7ffdc994fb34,167847119,0,0x0,8
tick,0x7ffdc994fb34,167862695,0,0x0,8
tick,0x7ffdc994fb34,167878187,0,0x0,8
tick,0x7ffdc994fb34,167894063,0,0x0,8
tick,0x7ffdc994fb34,167909535,0,0x0,8
tick,0x7ffdc994fb34,167925445,0,0x0,8
tick,0x7ffdc994fb34,167941216,0,0x0,8
tick,0x7ffdc994fb34,167956949,0,0x0,8
tick,0x7ffdc994fb34,167972616,0,0x0,8
tick,0x7ffdc994fb34,167988301,0,0x0,8
tick,0x7ffdc994fb34,168003779,0,0x0,8
tick,0x7ffdc994fb34,168019140,0,0x0,8
tick,0x7ffdc994fb34,168033892,0,0x0,8
tick,0x7ffdc994fb34,168049499,0,0x0,8
tick,0x7ffdc994fb34,168064646,0,0x0,8
tick,0x7ffdc994fb34,168080813,0,0x0,8
tick,0x7ffdc994fb34,168096844,0,0x0,8
tick,0x7ffdc994fb34,168111894,0,0x0,8
tick,0x7ffdc994fb34,168128026,0,0x0,8
tick,0x7ffdc994fb34,168143450,0,0x0,8
tick,0x7ffdc994fb34,168159430,0,0x0,8
tick,0x7ffdc994fb34,168174748,0,0x0,8
tick,0x7ffdc994fb34,168190780,0,0x0,8
tick,0x7ffdc994fb34,168206625,0,0x0,8
tick,0x7ffdc994fb34,168222532,0,0x0,8
tick,0x7ffdc994fb34,168238171,0,0x0,8
tick,0x7ffdc994fb34,168254262,0,0x0,8
tick,0x7ffdc994fb34,168270401,0,0x0,8
tick,0x7ffdc994fb34,168284785,0,0x0,8
tick,0x7ffdc994fb34,168301004,0,0x0,8
tick,0x7ffdc994fb34,168316781,0,0x0,8
tick,0x7ffdc994fb34,168332903,0,0x0,8
tick,0x7ffdc994fb34,168347947,0,0x0,8
tick,0x7ffdc994fb34,168363116,0,0x0,8
tick,0x7ffdc994fb34,168378669,0,0x0,8
tick,0x7ffdc994fb34,168394071,0,0x0,8
tick,0x7ffdc994fb34,168409374,0,0x0,8
tick,0x7ffdc994fb34,168424773,0,0x0,8
tick,0x7ffdc994fb34,168440266,0,0x0,8
tick,0x7ffdc994fb34,168455994,0,0x0,8
tick,0x7ffdc994fb34,168471168,0,0x0,8
tick,0x7ffdc994fb34,168487120,0,0x0,8
tick,0x7ffdc994fb34,168502648,0,0x0,8
tick,0x7ffdc994fb34,168518597,0,0x0,8
tick,0x7ffdc994fb34,168534714,0,0x0,8
tick,0x7ffdc994fb34,168549812,0,0x0,8
tick,0x7ffdc994fb34,168565003,0,0x0,8
tick,0x7ffdc994fb34,168581084,0,0x0,8
tick,0x7ffdc994fb34,168597003,0,0x0,8
tick,0x7ffdc994fb34,168612418,0,0x0,8
tick,0x7ffdc994fb34,168627740,0,0x0,8
tick,0x7ffdc994fb34,168643705,0,0x0,8
tick,0x7ffdc994fb34,168659296,0,0x0,8
tick,0x7ffdc994fb34,168674535,0,0x0,8
tick,0x7ffdc994fb34,168689715,0,0x0,8
tick,0x7ffdc994fb34,168705544,0,0x0,8
tick,0x7ffdc994fb34,168720963,0,0x0,8
tick,0x7ffdc994fb34,168736091,0,0x0,8
tick,0x7ffdc994fb34,168751712,0,0x0,8
tick,0x7ffdc994fb34,168766967,0,0x0,8
tick,0x7ffdc994fb34,168783182,0,0x0,8
tick,0x7ffdc994fb34,168798594,0,0x0,8
tick,0x7ffdc994fb34,168814157,0,0x0,8
tick,0x7ffdc994fb34,168829906,0,0x0,8
tick,0x7ffdc994fb34,168845155,0,0x0,8
tick,0x7ffdc994fb34,168860853,0,0x0,8
tick,0x7ffdc994fb34,168876172,0,0x0,8
tick,0x7ffdc994fb34,168892136,0,0x0,8
tick,0x7ffdc994fb34,168908143,0,0x0,8
tick,0x7ffdc994fb34,168923340,0,0x0,8
tick,0x7ffdc994fb34,168938922,0,0x0,8
tick,0x7ffdc994fb34,168954140,0,0x0,8
tick,0x7ffdc994fb34,168969660,0,0x0,8
tick,0x7ffdc994fb34,168984930,0,0x0,8
tick,0x7ffdc994fb34,169000436,0,0x0,8
tick,0x7ffdc994fb34,169015820,0,0x0,8
tick,0x7ffdc994fb34,169031680,0,0x0,8
tick,0x7ffdc994fb34,169046790,0,0x0,8
tick,0x7ffdc994fb34,169061933,0,0x0,8
tick,0x7ffdc994fb34,169078133,0,0x0,8
tick,0x7ffdc994fb34,169093236,0,0x0,8
tick,0x7ffdc994fb34,169109022,0,0x0,8
tick,0x7ffdc994fb34,169124385,0,0x0,8
tick,0x7ffdc994fb34,169140096,0,0x0,8
tick,0x7ffdc994fb34,169155675,0,0x0,8
tick,0x7ffdc994fb34,169171129,0,0x0,8
tick,0x7ffdc994fb34,169186697,0,0x0,8
tick,0x7ffdc994fb34,169202058,0,0x0,8
tick,0x7ffdc994fb34,169217601,0,0x0,8
tick,0x7ffdc994fb34,169233089,0,0x0,8
tick,0x7ffdc994fb34,169248838,0,0x0,8
tick,0x7ffdc994fb34,169264175,0,0x0,8
tick,0x7ffdc994fb34,169279687,0,0x0,8
tick,0x7ffdc994fb34,169295270,0,0x0,8
tick,0x7ffdc994fb34,169310838,0,0x0,8
tick,0x7ffdc994fb34,169326347,0,0x0,8
tick,0x7ffdc994fb34,169341891,0,0x0,8
tick,0x7ffdc994fb34,169357860,0,0x0,8
tick,0x7ffdc994fb34,169373442,0,0x0,8
tick,0x7ffdc994fb34,169388736,0,0x0,8
tick,0x7ffdc994fb34,169404069,0,0x0,8
tick,0x7ffdc994fb34,169419230,0,0x0,8
tick,0x7ffdc994fb34,169435143,0,0x0,8
tick,0x7ffdc994fb34,169451233,0,0x0,8
tick,0x7ffdc994fb34,169466674,0,0x0,8
tick,0x7ffdc994fb34,169481879,0,0x0,8
tick,0x7ffdc994fb34,169497358,0,0x0,8
tick,0x7ffdc994fb34,169512921,0,0x0,8
tick,0x7ffdc994fb34,169528499,0,0x0,8
tick,0x7ffdc994fb34,169544066,0,0x0,8
tick,0x7ffdc994fb34,169559744,0,0x0,8
tick,0x7ffdc994fb34,169574869,0,0x0,8
tick,0x7ffdc994fb34,169590434,0,0x0,8
tick,0x7ffdc994fb34,169605864,0,0x0,8
tick,0x7ffdc994fb34,169621397,0,0x0,8
tick,0x7ffdc994fb34,169636873,0,0x0,8
tick,0x7ffdc994fb34,169652600,0,0x0,8
tick,0x7ffdc994fb34,169667936,0,0x0,8
tick,0x7ffdc994fb34,169684012,0,0x0,8
tick,0x7ffdc994fb34,169699177,0,0x0,8
tick,0x7ffdc994fb34,169715225,0,0x0,8
tick,0x7ffdc994fb34,169731261,0,0x0,8
tick,0x7ffdc994fb34,169746914,0,0x0,8
tick,0x7ffdc994fb34,169763364,0,0x0,8
tick,0x7ffdc994fb34,169778750,0,0x0,8
tick,0x7ffdc994fb34,169794288,0,0x0,8
tick,0x7ffdc994fb34,169810001,0,0x0,8
tick,0x7ffdc994fb34,169825440,0,0x0,8
tick,0x7ffdc994fb34,169841195,0,0x0,8
tick,0x7ffdc994fb34,169856824,0,0x0,8
tick,0x7ffdc994fb34,169872576,0,0x0,8
tick,0x7ffdc994fb34,169888075,0,0x0,8
tick,0x7ffdc994fb34,169903196,0,0x0,8
tick,0x7ffdc994fb34,169918879,0,0x0,8
tick,0x7ffdc994fb34,169934002,0,0x0,8
tick,0x7ffdc994fb34,169949572,0,0x0,8
tick,0x7ffdc994fb34,169965192,0,0x0,8
tick,0x7ffdc994fb34,169980801,0,0x0,8
tick,0x7ffdc994fb34,169996065,0,0x0,8
tick,0x7ffdc994fb34,170011568,0,0x0,8
tick,0x7ffdc994fb34,170027263,0,0x0,8
tick,0x7ffdc994fb34,170042078,0,0x0,8
tick,0x7ffdc994fb34,170057606,0,0x0,8
tick,0x7ffdc994fb34,170072860,0,0x0,8
tick,0x7ffdc994fb34,170088223,0,0x0,8
tick,0x7ffdc994fb34,170103637,0,0x0,8
tick,0x7ffdc994fb34,170118939,0,0x0,8
tick,0x7ffdc994fb34,170134720,0,0x0,8
tick,0x7ffdc994fb34,170150258,0,0x0,8
tick,0x7ffdc994fb34,170165646,0,0x0,8
tick,0x7ffdc994fb34,170181239,0,0x0,8
tick,0x7ffdc994fb34,170196739,0,0x0,8
tick,0x7ffdc994fb34,170212296,0,0x0,8
tick,0x7ffdc994fb34,170227566,0,0x0,8
tick,0x7ffdc994fb34,170243609,0,0x0,8
tick,0x7ffdc994fb34,170259669,0,0x0,8
tick,0x7ffdc994fb34,170274889,0,0x0,8
tick,0x7ffdc994fb34,170290419,0,0x0,8
tick,0x7ffdc994fb34,170305936,0,0x0,8
tick,0x7ffdc994fb34,170321399,0,0x0,8
tick,0x7ffdc994fb34,170336832,0,0x0,8
tick,0x7ffdc994fb34,170352534,0,0x0,8
tick,0x7ffdc994fb34,170367848,0,0x0,8
tick,0x7ffdc994fb34,170383185,0,0x0,8
tick,0x7ffdc994fb34,170398030,0,0x0,8
tick,0x7ffdc994fb34,170413688,0,0x0,8
tick,0x7ffdc994fb34,170429476,0,0x0,8
tick,0x7ffdc994fb34,170445069,0,0x0,8
tick,0x7ffdc994fb34,170460812,0,0x0,8
tick,0x7ffdc994fb34,170476412,0,0x0,8
tick,0x7ffdc994fb34,170491706,0,0x0,8
tick,0x7ffdc994fb34,170507583,0,0x0,8
tick,0x7ffdc994fb34,170522991,0,0x0,8
tick,0x7ffdc994fb34,170538326,0,0x0,8
tick,0x7ffdc994fb34,170554303,0,0x0,8
tick,0x7ffdc994fb34,170569560,0,0x0,8
tick,0x7ffdc994fb34,170585524,0,0x0,8
tick,0x7ffdc994fb34,170600941,0,0x0,8
tick,0x7ffdc994fb34,170616349,0,0x0,8
tick,0x7ffdc994fb34,170631749,0,0x0,8
tick,0x7ffdc994fb34,170647570,0,0x0,8
tick,0x7ffdc994fb34,170663032,0,0x0,8
tick,0x7ffdc994fb34,170679033,0,0x0,8
tick,0x7ffdc994fb34,170694637,0,0x0,8
tick,0x7ffdc994fb34,170710381,0,0x0,8
tick,0x7ffdc994fb34,170725947,0,0x0,8
tick,0x7ffdc994fb34,170741433,0,0x0,8
tick,0x7ffdc994fb34,170757012,0,0x0,8
tick,0x7ffdc994fb34,170772964,0,0x0,8
tick,0x7ffdc994fb34,170788691,0,0x0,8
tick,0x7ffdc994fb34,170804907,0,0x0,8
tick,0x7ffdc994fb34,170820027,0,0x0,8
tick,0x7ffdc994fb34,170835683,0,0x0,8
tick,0x7ffdc994fb34,170851211,0,0x0,8
tick,0x7ffdc994fb34,170867096,0,0x0,8
tick,0x7ffdc994fb34,170882573,0,0x0,8
tick,0x7ffdc994fb34,170897668,0,0x0,8
tick,0x7ffdc994fb34,170913463,0,0x0,8
tick,0x7ffdc994fb34,170929433,0,0x0,8
tick,0x7ffdc994fb34,170944950,0,0x0,8
tick,0x7ffdc994fb34,170960669,0,0x0,8
tick,0x7ffdc994fb34,170975518,0,0x0,8
tick,0x7ffdc994fb34,170991784,0,0x0,8
tick,0x7ffdc994fb34,171007236,0,0x0,8
tick,0x7ffdc994fb34,171023374,0,0x0,8
tick,0x7ffdc994fb34,171039371,0,0x0,8
tick,0x7ffdc994fb34,171054846,0,0x0,8
tick,0x7ffdc994fb34,171070299,0,0x0,8
tick,0x7ffdc994fb34,171086342,0,0x0,8
tick,0x7ffdc994fb34,171102518,0,0x0,8
tick,0x7ffdc994fb34,171117516,0,0x0,8
tick,0x7ffdc994fb34,171133704,0,0x0,8
tick,0x7ffdc994fb34,171149694,0,0x0,8
tick,0x7ffdc994fb34,171164851,0,0x0,8
tick,0x7ffdc994fb34,171180673,0,0x0,8
tick,0x7ffdc994fb34,171196642,0,0x0,8
tick,0x7ffdc994fb34,171211628,0,0x0,8
tick,0x7ffdc994fb34,171226896,0,0x0,8
tick,0x7ffdc994fb34,171242341,0,0x0,8
tick,0x7ffdc994fb34,171257914,0,0x0,8
tick,0x7ffdc994fb34,171273689,0,0x0,8
tick,0x7ffdc994fb34,171288970,0,0x0,8
tick,0x7ffdc994fb34,171304732,0,0x0,8
tick,0x7ffdc994fb34,171320452,0,0x0,8
tick,0x7ffdc994fb34,171335941,0,0x0,8
tick,0x7ffdc994fb34,171351635,0,0x0,8
tick,0x7ffdc994fb34,171367072,0,0x0,8
tick,0x7ffdc994fb34,171382737,0,0x0,8
tick,0x7ffdc994fb34,171397778,0,0x0,8
tick,0x7ffdc994fb34,171413358,0,0x0,8
tick,0x7ffdc994fb34,171429003,0,0x0,8
tick,0x7ffdc994fb34,171444202,0,0x0,8
tick,0x7ffdc994fb34,171459932,0,0x0,8
tick,0x7ffdc994fb34,171475293,0,0x0,8
tick,0x7ffdc994fb34,171490926,0,0x0,8
tick,0x7ffdc994fb34,171506546,0,0x0,8
tick,0x7ffdc994fb34,171522629,0,0x0,8
tick,0x7ffdc994fb34,171538267,0,0x0,8
tick,0x7ffdc994fb34,171553973,0,0x0,8
tick,0x7ffdc994fb34,171569593,0,0x0,8
tick,0x7ffdc994fb34,171584814,0,0x0,8
tick,0x7ffdc994fb34,171600045,0,0x0,8
tick,0x7ffdc994fb34,171615707,0,0x0,8
tick,0x7ffdc994fb34,171631538,0,0x0,8
tick,0x7ffdc994fb34,171647054,0,0x0,8
tick,0x7ffdc994fb34,171662755,0,0x0,8
tick,0x7ffdc994fb34,171678114,0,0x0,8
tick,0x7ffdc994fb34,171693524,0,0x0,8
tick,0x7ffdc994fb34,171708448,0,0x0,8
tick,0x7ffdc994fb34,171724362,0,0x0,8
tick,0x7ffdc994fb34,171739655,0,0x0,8
tick,0x7ffdc994fb34,171754924,0,0x0,8
tick,0x7ffdc994fb34,171770672,0,0x0,8
tick,0x7ffdc994fb34,171786025,0,0x0,8
tick,0x7ffdc994fb34,171801410,0,0x0,8
tick,0x7ffdc994fb34,171816820,0,0x0,8
tick,0x7ffdc994fb34,171832610,0,0x0,8
tick,0x7ffdc994fb34,171847755,0,0x0,8
tick,0x7ffdc994fb34,171863477,0,0x0,8
tick,0x7ffdc994fb34,171879149,0,0x0,8
tick,0x7ffdc994fb34,171894545,0,0x0,8
tick,0x7ffdc994fb34,171910398,0,0x0,8
tick,0x7ffdc994fb34,171926024,0,0x0,8
tick,0x7ffdc994fb34,171941982,0,0x0,8
tick,0x7ffdc994fb34,171957385,0,0x0,8
tick,0x7ffdc994fb34,171972738,0,0x0,8
tick,0x7ffdc994fb34,171988370,0,0x0,8
tick,0x7ffdc994fb34,172003771,0,0x0,8
tick,0x7ffdc994fb34,172019410,0,0x0,8
tick,0x7ffdc994fb34,172034892,0,0x0,8
tick,0x7ffdc994fb34,172050747,0,0x0,8
tick,0x7ffdc994fb34,172066583,0,0x0,8
tick,0x7ffdc994fb34,172082643,0,0x0,8
tick,0x7ffdc994fb34,172098093,0,0x0,8
tick,0x7ffdc994fb34,172113349,0,0x0,8
tick,0x7ffdc994fb34,172128965,0,0x0,8
tick,0x7ffdc994fb34,172144556,0,0x0,8
tick,0x7ffdc994fb34,172160239,0,0x0,8
tick,0x7ffdc994fb34,172175626,0,0x0,8
tick,0x7ffdc994fb34,172191154,0,0x0,8
tick,0x7ffdc994fb34,172205957,0,0x0,8
tick,0x7ffdc994fb34,172221722,0,0x0,8
tick,0x7ffdc994fb34,172236716,0,0x0,8
tick,0x7ffdc994fb34,172252451,0,0x0,8
tick,0x7ffdc994fb34,172267895,0,0x0,8
tick,0x7ffdc994fb34,172283152,0,0x0,8
tick,0x7ffdc994fb34,172299230,0,0x0,8
tick,0x7ffdc994fb34,172314348,0,0x0,8
tick,0x7ffdc994fb34,172330446,0,0x0,8
tick,0x7ffdc994fb34,172345575,0,0x0,8
tick,0x7ffdc994fb34,172361098,0,0x0,8
tick,0x7ffdc994fb34,172376218,0,0x0,8
tick,0x7ffdc994fb34,172391809,0,0x0,8
tick,0x7ffdc994fb34,172407276,0,0x0,8
tick,0x7ffdc994fb34,172423359,0,0x0,8
tick,0x7ffdc994fb34,172439120,0,0x0,8
tick,0x7ffdc994fb34,172454528,0,0x0,8
tick,0x7ffdc994fb34,172469998,0,0x0,8
tick,0x7ffdc994fb34,172485373,0,0x0,8
tick,0x7ffdc994fb34,172500993,0,0x0,8
tick,0x7ffdc994fb34,172516488,0,0x0,8
tick,0x7ffdc994fb34,172532034,0,0x0,8
tick,0x7ffdc994fb34,172547477,0,0x0,8
tick,0x7ffdc994fb34,172563141,0,0x0,8
tick,0x7ffdc994fb34,172578606,0,0x0,8
tick,0x7ffdc994fb34,172593967,0,0x0,8
tick,0x7ffdc994fb34,172609752,0,0x0,8
tick,0x7ffdc994fb34,172625433,0,0x0,8
tick,0x7ffdc994fb34,172641609,0,0x0,8
tick,0x7ffdc994fb34,172656907,0,0x0,8
tick,0x7ffdc994fb34,172672464,0,0x0,8
tick,0x7ffdc994fb34,172688086,0,0x0,8
tick,0x7ffdc994fb34,172703419,0,0x0,8
tick,0x7ffdc994fb34,172718716,0,0x0,8
tick,0x7ffdc994fb34,172734666,0,0x0,8
tick,0x7ffdc994fb34,172749857,0,0x0,8
tick,0x7ffdc994fb34,172765196,0,0x0,8
tick,0x7ffdc994fb34,172780646,0,0x0,8
tick,0x7ffdc994fb34,172796313,0,0x0,8
tick,0x7ffdc994fb34,172812068,0,0x0,8
tick,0x7ffdc994fb34,172828448,0,0x0,8
tick,0x7ffdc994fb34,172843880,0,0x0,8
tick,0x7ffdc994fb34,172859236,0,0x0,8
tick,0x7ffdc994fb34,172874407,0,0x0,8
tick,0x7ffdc994fb34,172889914,0,0x0,8
tick,0x7ffdc994fb34,172905371,0,0x0,8
tick,0x7ffdc994fb34,172920972,0,0x0,8
tick,0x7ffdc994fb34,172936268,0,0x0,8
tick,0x7ffdc994fb34,172952059,0,0x0,8
tick,0x7ffdc994fb34,172967182,0,0x0,8
tick,0x7ffdc994fb34,172983224,0,0x0,8
tick,0x7ffdc994fb34,172998022,0,0x0,8
tick,0x7ffdc994fb34,173013347,0,0x0,8
tick,0x7ffdc994fb34,173029431,0,0x0,8
tick,0x7ffdc994fb34,173044577,0,0x0,8
tick,0x7ffdc994fb34,173060481,0,0x0,8
tick,0x7ffdc994fb34,173075597,0,0x0,8
tick,0x7ffdc994fb34,173091096,0,0x0,8
tick,0x7ffdc994fb34,173106800,0,0x0,8
tick,0x7ffdc994fb34,173122465,0,0x0,8
tick,0x7ffdc994fb34,173137954,0,0x0,8
tick,0x7ffdc994fb34,173153245,0,0x0,8
tick,0x7ffdc994fb34,173168968,0,0x0,8
tick,0x7ffdc994fb34,173184128,0,0x0,8
tick,0x7ffdc994fb34,173199901,0,0x0,8
tick,0x7ffdc994fb34,173215396,0,0x0,8
tick,0x7ffdc994fb34,173230839,0,0x0,8
tick,0x7ffdc994fb34,173246149,0,0x0,8
tick,0x7ffdc994fb34,173261473,0,0x0,8
tick,0x7ffdc994fb34,173277277,0,0x0,8
tick,0x7ffdc994fb34,173293067,0,0x0,8
tick,0x7ffdc994fb34,173308557,0,0x0,8
tick,0x7ffdc994fb34,173323951,0,0x0,8
tick,0x7ffdc994fb34,173339444,0,0x0,8
tick,0x7ffdc994fb34,173355068,0,0x0,8
tick,0x7ffdc994fb34,173370322,0,0x0,8
tick,0x7ffdc994fb34,173386022,0,0x0,8
tick,0x7ffdc994fb34,173401442,0,0x0,8
tick,0x7ffdc994fb34,173417331,0,0x0,8
tick,0x7ffdc994fb34,173432605,0,0x0,8
tick,0x7ffdc994fb34,173448794,0,0x0,8
tick,0x7ffdc994fb34,173464247,0,0x0,8
tick,0x7ffdc994fb34,173479983,0,0x0,8
tick,0x7ffdc994fb34,173495439,0,0x0,8
tick,0x7ffdc994fb34,173510921,0,0x0,8
tick,0x7ffdc994fb34,173526434,0,0x0,8
tick,0x7ffdc994fb34,173541758,0,0x0,8
tick,0x7ffdc994fb34,173557363,0,0x0,8
tick,0x7ffdc994fb34,173572950,0,0x0,8
tick,0x7ffdc994fb34,173588602,0,0x0,8
tick,0x7ffdc994fb34,173603910,0,0x0,8
tick,0x7ffdc994fb34,173619697,0,0x0,8
tick,0x7ffdc994fb34,173634918,0,0x0,8
tick,0x7ffdc994fb34,173650609,0,0x0,8
tick,0x7ffdc994fb34,173666087,0,0x0,8
tick,0x7ffdc994fb34,173681892,0,0x0,8
tick,0x7ffdc994fb34,173697190,0,0x0,8
tick,0x7ffdc994fb34,173713309,0,0x0,8
tick,0x7ffdc994fb34,173728696,0,0x0,8
tick,0x7ffdc994fb34,173744204,0,0x0,8
tick,0x7ffdc994fb34,173759786,0,0x0,8
tick,0x7ffdc994fb34,173775316,0,0x0,8
tick,0x7ffdc994fb34,173791222,0,0x0,8
tick,0x7ffdc994fb34,173806472,0,0x0,8
tick,0x7ffdc994fb34,173822049,0,0x0,8
tick,0x7ffdc994fb34,173837456,0,0x0,8
tick,0x7ffdc994fb34,173853276,0,0x0,8
tick,0x7ffdc994fb34,173868568,0,0x0,8
tick,0x7ffdc994fb34,173884224,0,0x0,8
tick,0x7ffdc994fb34,173899705,0,0x0,8
tick,0x7ffdc994fb34,173915013,0,0x0,8
tick,0x7ffdc994fb34,173930756,0,0x0,8
tick,0x7ffdc994fb34,173946077,0,0x0,8
tick,0x7ffdc994fb34,173961726,0,0x0,8
tick,0x7ffdc994fb34,173977228,0,0x0,8
tick,0x7ffdc994fb34,173992779,0,0x0,8
tick,0x7ffdc994fb34,174007965,0,0x0,8
tick,0x7ffdc994fb34,174023206,0,0x0,8
tick,0x7ffdc994fb34,174038997,0,0x0,8
tick,0x7ffdc994fb34,174054107,0,0x0,8
tick,0x7ffdc994fb34,174069726,0,0x0,8
tick,0x7ffdc994fb34,174085199,0,0x0,8
tick,0x7ffdc994fb34,174100859,0,0x0,8
tick,0x7ffdc994fb34,174116392,0,0x0,8
tick,0x7ffdc994fb34,174132004,0,0x0,8
tick,0x7ffdc994fb34,174147270,0,0x0,8
tick,0x7ffdc994fb34,174162993,0,0x0,8
tick,0x7ffdc994fb34,174178925,0,0x0,8
tick,0x7ffdc994fb34,174194931,0,0x0,8
tick,0x7ffdc994fb34,174210083,0,0x0,8
tick,0x7ffdc994fb34,174226083,0,0x0,8
tick,0x7ffdc994fb34,174241807,0,0x0,8
tick,0x7ffdc994fb34,174256935,0,0x0,8
tick,0x7ffdc994fb34,174272213,0,0x0,8
tick,0x7ffdc994fb34,174288033,0,0x0,8
tick,0x7ffdc994fb34,174303454,0,0x0,8
tick,0x7ffdc994fb34,174319124,0,0x0,8
tick,0x7ffdc994fb34,174334310,0,0x0,8
tick,0x7ffdc994fb34,174349921,0,0x0,8
tick,0x7ffdc994fb34,174365674,0,0x0,8
tick,0x7ffdc994fb34,174381150,0,0x0,8
tick,0x7ffdc994fb34,174396741,0,0x0,8
tick,0x7ffdc994fb34,174411951,0,0x0,8
tick,0x7ffdc994fb34,174427912,0,0x0,8
tick,0x7ffdc994fb34,174443257,0,0x0,8
tick,0x7ffdc994fb34,174458996,0,0x0,8
tick,0x7ffdc994fb34,174474017,0,0x0,8
tick,0x7ffdc994fb34,174489823,0,0x0,8
tick,0x7ffdc994fb34,174506101,0,0x0,8
tick,0x7ffdc994fb34,174522146,0,0x0,8
tick,0x7ffdc994fb34,174538162,0,0x0,8
tick,0x7ffdc994fb34,174553294,0,0x0,8
tick,0x7ffdc994fb34,174568364,0,0x0,8
tick,0x7ffdc994fb34,174583709,0,0x0,8
tick,0x7ffdc994fb34,174599108,0,0x0,8
tick,0x7ffdc994fb34,174614294,0,0x0,8
tick,0x7ffdc994fb34,174629723,0,0x0,8
tick,0x7ffdc994fb34,174645402,0,0x0,8
tick,0x7ffdc994fb34,174661106,0,0x0,8
tick,0x7ffdc994fb34,174677155,0,0x0,8
tick,0x7ffdc994fb34,174693188,0,0x0,8
tick,0x7ffdc994fb34,174708997,0,0x0,8
tick,0x7ffdc994fb34,174724411,0,0x0,8
tick,0x7ffdc994fb34,174739845,0,0x0,8
tick,0x7ffdc994fb34,174755648,0,0x0,8
tick,0x7ffdc994fb34,174771688,0,0x0,8
tick,0x7ffdc994fb34,174787085,0,0x0,8
tick,0x7ffdc994fb34,174802724,0,0x0,8
tick,0x7ffdc994fb34,174817941,0,0x0,8
tick,0x7ffdc994fb34,174833806,0,0x0,8
tick,0x7ffdc994fb34,174849226,0,0x0,8
tick,0x7ffdc994fb34,174864540,0,0x0,8
tick,0x7ffdc994fb34,174880021,0,0x0,8
tick,0x7ffdc994fb34,174895503,0,0x0,8
tick,0x7ffdc994fb34,174911277,0,0x0,8
tick,0x7ffdc994fb34,174926414,0,0x0,8
tick,0x7ffdc994fb34,174942094,0,0x0,8
tick,0x7ffdc994fb34,174957441,0,0x0,8
tick,0x7ffdc994fb34,174972744,0,0x0,8
tick,0x7ffdc994fb34,174988575,0,0x0,8
tick,0x7ffdc994fb34,175004504,0,0x0,8
tick,0x7ffdc994fb34,175020269,0,0x0,8
tick,0x7ffdc994fb34,175036252,0,0x0,8
tick,0x7ffdc994fb34,175052245,0,0x0,8
tick,0x7ffdc994fb34,175068139,0,0x0,8
tick,0x7ffdc994fb34,175083886,0,0x0,8
tick,0x7ffdc994fb34,175099675,0,0x0,8
tick,0x7ffdc994fb34,175115079,0,0x0,8
tick,0x7ffdc994fb34,175130840,0,0x0,8
tick,0x7ffdc994fb34,175146198,0,0x0,8
tick,0x7ffdc994fb34,175161778,0,0x0,8
tick,0x7ffdc994fb34,175177361,0,0x0,8
tick,0x7ffdc994fb34,175192858,0,0x0,8
tick,0x7ffdc994fb34,175208282,0,0x0,8
tick,0x7ffdc994fb34,175224202,0,0x0,8
tick,0x7ffdc994fb34,175240124,0,0x0,8
tick,0x7ffdc994fb34,175255674,0,0x0,8
tick,0x7ffdc994fb34,175271194,0,0x0,8
tick,0x7ffdc994fb34,175286350,0,0x0,8
tick,0x7ffdc994fb34,175301924,0,0x0,8
tick,0x7ffdc994fb34,175317766,0,0x0,8
tick,0x7ffdc994fb34,175333078,0,0x0,8
tick,0x7ffdc994fb34,175348668,0,0x0,8
tick,0x7ffdc994fb34,175364195,0,0x0,8
tick,0x7ffdc994fb34,175379361,0,0x0,8
tick,0x7ffdc994fb34,175394704,0,0x0,8
tick,0x7ffdc994fb34,175410545,0,0x0,8
tick,0x7ffdc994fb34,175425880,0,0x0,8
tick,0x7ffdc994fb34,175441138,0,0x0,8
tick,0x7ffdc994fb34,175457286,0,0x0,8
tick,0x7ffdc994fb34,175472735,0,0x0,8
tick,0x7ffdc994fb34,175488769,0,0x0,8
tick,0x7ffdc994fb34,175504205,0,0x0,8
tick,0x7ffdc994fb34,175519873,0,0x0,8
tick,0x7ffdc994fb34,175535306,0,0x0,8
tick,0x7ffdc994fb34,175550540,0,0x0,8
tick,0x7ffdc994fb34,175566407,0,0x0,8
tick,0x7ffdc994fb34,175582528,0,0x0,8
tick,0x7ffdc994fb34,175597603,0,0x0,8
tick,0x7ffdc994fb34,175613897,0,0x0,8
tick,0x7ffdc994fb34,175628945,0,0x0,8
tick,0x7ffdc994fb34,175644711,0,0x0,8
tick,0x7ffdc994fb34,175660316,0,0x0,8
tick,0x7ffdc994fb34,175675724,0,0x0,8
tick,0x7ffdc994fb34,175691232,0,0x0,8
tick,0x7ffdc994fb34,175706815,0,0x0,8
tick,0x7ffdc994fb34,175722227,0,0x0,8
tick,0x7ffdc994fb34,175737750,0,0x0,8
tick,0x7ffdc994fb34,175753240,0,0x0,8
tick,0x7ffdc994fb34,175769036,0,0x0,8
tick,0x7ffdc994fb34,175784906,0,0x0,8
tick,0x7ffdc994fb34,175800452,0,0x0,8
tick,0x7ffdc994fb34,175816023,0,0x0,8
tick,0x7ffdc994fb34,175831941,0,0x0,8
tick,0x7ffdc994fb34,175847390,0,0x0,8
tick,0x7ffdc994fb34,175862694,0,0x0,8
tick,0x7ffdc994fb34,175878351,0,0x0,8
tick,0x7ffdc994fb34,175893551,0,0x0,8
tick,0x7ffdc994fb34,175909358,0,0x0,8
tick,0x7ffdc994fb34,175924466,0,0x0,8
tick,0x7ffdc994fb34,175939857,0,0x0,8
tick,0x7ffdc994fb34,175955240,0,0x0,8
tick,0x7ffdc994fb34,175970830,0,0x0,8
tick,0x7ffdc994fb34,175986651,0,0x0,8
tick,0x7ffdc994fb34,176002126,0,0x0,8
tick,0x7ffdc994fb34,176017529,0,0x0,8
tick,0x7ffdc994fb34,176032754,0,0x0,8
tick,0x7ffdc994fb34,176048456,0,0x0,8
tick,0x7ffdc994fb34,176064289,0,0x0,8
tick,0x7ffdc994fb34,176079769,0,0x0,8
tick,0x7ffdc994fb34,176095302,0,0x0,8
tick,0x7ffdc994fb34,176110888,0,0x0,8
tick,0x7ffdc994fb34,176126321,0,0x0,8
tick,0x7ffdc994fb34,176142053,0,0x0,8
tick,0x7ffdc994fb34,176157239,0,0x0,8
tick,0x7ffdc994fb34,176172921,0,0x0,8
tick,0x7ffdc994fb34,176188197,0,0x0,8
tick,0x7ffdc994fb34,176203905,0,0x0,8
tick,0x7ffdc994fb34,176219315,0,0x0,8
tick,0x7ffdc994fb34,176234538,0,0x0,8
tick,0x7ffdc994fb34,176249909,0,0x0,8
tick,0x7ffdc994fb34,176265471,0,0x0,8
tick,0x7ffdc994fb34,176281224,0,0x0,8
tick,0x7ffdc994fb34,176297341,0,0x0,8
tick,0x7ffdc994fb34,176312482,0,0x0,8
tick,0x7ffdc994fb34,176327657,0,0x0,8
tick,0x7ffdc994fb34,176342867,0,0x0,8
tick,0x7ffdc994fb34,176358775,0,0x0,8
tick,0x7ffdc994fb34,176374264,0,0x0,8
tick,0x7ffdc994fb34,176390635,0,0x0,8
tick,0x7ffdc994fb34,176406261,0,0x0,8
tick,0x7ffdc994fb34,176421442,0,0x0,8
tick,0x7ffdc994fb34,176437285,0,0x0,8
tick,0x7ffdc994fb34,176452509,0,0x0,8
tick,0x7ffdc994fb34,176468129,0,0x0,8
tick,0x7ffdc994fb34,176483549,0,0x0,8
tick,0x7ffdc994fb34,176498800,0,0x0,8
tick,0x7ffdc994fb34,176514307,0,0x0,8
tick,0x7ffdc994fb34,176530206,0,0x0,8
tick,0x7ffdc994fb34,176545255,0,0x0,8
tick,0x7ffdc994fb34,176560888,0,0x0,8
tick,0x7ffdc994fb34,176576722,0,0x0,8
tick,0x7ffdc994fb34,176592163,0,0x0,8
tick,0x7ffdc994fb34,176608018,0,0x0,8
tick,0x7ffdc994fb34,176623101,0,0x0,8
tick,0x7ffdc994fb34,176639290,0,0x0,8
tick,0x7ffdc994fb34,176655242,0,0x0,8
tick,0x7ffdc994fb34,176670466,0,0x0,8
tick,0x7ffdc994fb34,176686046,0,0x0,8
tick,0x7ffdc994fb34,176701386,0,0x0,8
tick,0x7ffdc994fb34,176717068,0,0x0,8
tick,0x7ffdc994fb34,176732317,0,0x0,8
tick,0x7ffdc994fb34,176747747,0,0x0,8
tick,0x7ffdc994fb34,176763448,0,0x0,8
tick,0x7ffdc994fb34,176778894,0,0x0,8
tick,0x7ffdc994fb34,176794262,0,0x0,8
tick,0x7ffdc994fb34,176809710,0,0x0,8
tick,0x7ffdc994fb34,176824949,0,0x0,8
tick,0x7ffdc994fb34,176840683,0,0x0,8
tick,0x7ffdc994fb34,176855754,0,0x0,8
tick,0x7ffdc994fb34,176871634,0,0x0,8
tick,0x7ffdc994fb34,176887258,0,0x0,8
tick,0x7ffdc994fb34,176902591,0,0x0,8
tick,0x7ffdc994fb34,176917717,0,0x0,8
tick,0x7ffdc994fb34,176933529,0,0x0,8
tick,0x7ffdc994fb34,176949097,0,0x0,8
tick,0x7ffdc994fb34,176964483,0,0x0,8
tick,0x7ffdc994fb34,176980460,0,0x0,8
tick,0x7ffdc994fb34,176996042,0,0x0,8
tick,0x7ffdc994fb34,177012191,0,0x0,8
tick,0x7ffdc994fb34,177027881,0,0x0,8
tick,0x7ffdc994fb34,177043930,0,0x0,8
tick,0x7ffdc994fb34,177059752,0,0x0,8
tick,0x7ffdc994fb34,177075301,0,0x0,8
tick,0x7ffdc994fb34,177090572,0,0x0,8
tick,0x7ffdc994fb34,177106626,0,0x0,8
tick,0x7ffdc994fb34,177121857,0,0x0,8
tick,0x7ffdc994fb34,177137449,0,0x0,8
tick,0x7ffdc994fb34,177153064,0,0x0,8
tick,0x7ffdc994fb34,177168677,0,0x0,8
tick,0x7ffdc994fb34,177183763,0,0x0,8
tick,0x7ffdc994fb34,177199507,0,0x0,8
tick,0x7ffdc994fb34,177214761,0,0x0,8
tick,0x7ffdc994fb34,177230471,0,0x0,8
tick,0x7ffdc994fb34,177245798,0,0x0,8
tick,0x7ffdc994fb34,177261371,0,0x0,8
tick,0x7ffdc994fb34,177277262,0,0x0,8
tick,0x7ffdc994fb34,177292313,0,0x0,8
tick,0x7ffdc994fb34,177307752,0,0x0,8
tick,0x7ffdc994fb34,177323047,0,0x0,8
tick,0x7ffdc994fb34,177339061,0,0x0,8
tick,0x7ffdc994fb34,177354192,0,0x0,8
tick,0x7ffdc994fb34,177369894,0,0x0,8
tick,0x7ffdc994fb34,177385276,0,0x0,8
tick,0x7ffdc994fb34,177400856,0,0x0,8
tick,0x7ffdc994fb34,177416660,0,0x0,8
tick,0x7ffdc994fb34,177432504,0,0x0,8
tick,0x7ffdc994fb34,177447831,0,0x0,8
tick,0x7ffdc994fb34,177464010,0,0x0,8
tick,0x7ffdc994fb34,177479497,0,0x0,8
tick,0x7ffdc994fb34,177495140,0,0x0,8
tick,0x7ffdc994fb34,177510519,0,0x0,8
tick,0x7ffdc994fb34,177526101,0,0x0,8
tick,0x7ffdc994fb34,177541974,0,0x0,8
tick,0x7ffdc994fb34,177557776,0,0x0,8
tick,0x7ffdc994fb34,177572923,0,0x0,8
tick,0x7ffdc994fb34,177588659,0,0x0,8
tick,0x7ffdc994fb34,177604002,0,0x0,8
tick,0x7ffdc994fb34,177619752,0,0x0,8
tick,0x7ffdc994fb34,177635440,0,0x0,8
tick,0x7ffdc994fb34,177651503,0,0x0,8
tick,0x7ffdc994fb34,177667525,0,0x0,8
tick,0x7ffdc994fb34,177683522,0,0x0,8
tick,0x7ffdc994fb34,177699232,0,0x0,8
tick,0x7ffdc994fb34,177714717,0,0x0,8
tick,0x7ffdc994fb34,177730219,0,0x0,8
tick,0x7ffdc994fb34,177745286,0,0x0,8
tick,0x7ffdc994fb34,177760734,0,0x0,8
tick,0x7ffdc994fb34,177776361,0,0x0,8
tick,0x7ffdc994fb34,177792093,0,0x0,8
tick,0x7ffdc994fb34,177807926,0,0x0,8
tick,0x7ffdc994fb34,177823188,0,0x0,8
tick,0x7ffdc994fb34,177838472,0,0x0,8
tick,0x7ffdc994fb34,177853984,0,0x0,8
tick,0x7ffdc994fb34,177869412,0,0x0,8
tick,0x7ffdc994fb34,177884700,0,0x0,8
tick,0x7ffdc994fb34,177900434,0,0x0,8
tick,0x7ffdc994fb34,177915831,0,0x0,8
tick,0x7ffdc994fb34,177931764,0,0x0,8
tick,0x7ffdc994fb34,177947151,0,0x0,8
tick,0x7ffdc994fb34,177962793,0,0x0,8
tick,0x7ffdc994fb34,177978286,0,0x0,8
tick,0x7ffdc994fb34,177993763,0,0x0,8
tick,0x7ffdc994fb34,178009218,0,0x0,8
tick,0x7ffdc994fb34,178024542,0,0x0,8
tick,0x7ffdc994fb34,178039942,0,0x0,8
tick,0x7ffdc994fb34,178055204,0,0x0,8
tick,0x7ffdc994fb34,178070709,0,0x0,8
tick,0x7ffdc994fb34,178086291,0,0x0,8
tick,0x7ffdc994fb34,178102043,0,0x0,8
tick,0x7ffdc994fb34,178117466,0,0x0,8
tick,0x7ffdc994fb34,178133081,0,0x0,8
tick,0x7ffdc994fb34,178148434,0,0x0,8
tick,0x7ffdc994fb34,178164568,0,0x0,8
tick,0x7ffdc994fb34,178180028,0,0x0,8
tick,0x7ffdc994fb34,178195417,0,0x0,8
tick,0x7ffdc994fb34,178211176,0,0x0,8
tick,0x7ffdc994fb34,178226527,0,0x0,8
tick,0x7ffdc994fb34,178242256,0,0x0,8
tick,0x7ffdc994fb34,178257740,0,0x0,8
tick,0x7ffdc994fb34,178273151,0,0x0,8
tick,0x7ffdc994fb34,178289246,0,0x0,8
tick,0x7ffdc994fb34,178304587,0,0x0,8
tick,0x7ffdc994fb34,178319845,0,0x0,8
tick,0x7ffdc994fb34,178335535,0,0x0,8
tick,0x7ffdc994fb34,178351011,0,0x0,8
tick,0x7ffdc994fb34,178366371,0,0x0,8
tick,0x7ffdc994fb34,178381863,0,0x0,8
tick,0x7ffdc994fb34,178397135,0,0x0,8
tick,0x7ffdc994fb34,178412911,0,0x0,8
tick,0x7ffdc994fb34,178428482,0,0x0,8
tick,0x7ffdc994fb34,178444177,0,0x0,8
tick,0x7ffdc994fb34,178459643,0,0x0,8
tick,0x7ffdc994fb34,178474858,0,0x0,8
tick,0x7ffdc994fb34,178490447,0,0x0,8
tick,0x7ffdc994fb34,178506141,0,0x0,8
tick,0x7ffdc994fb34,178521445,0,0x0,8
tick,0x7ffdc994fb34,178537074,0,0x0,8
tick,0x7ffdc994fb34,178552457,0,0x0,8
tick,0x7ffdc994fb34,178567501,0,0x0,8
tick,0x7ffdc994fb34,178583041,0,0x0,8
tick,0x7ffdc994fb34,178598702,0,0x0,8
tick,0x7ffdc994fb34,178614099,0,0x0,8
tick,0x7ffdc994fb34,178630227,0,0x0,8
tick,0x7ffdc994fb34,178645628,0,0x0,8
tick,0x7ffdc994fb34,178661153,0,0x0,8
tick,0x7ffdc994fb34,178676751,0,0x0,8
tick,0x7ffdc994fb34,178692390,0,0x0,8
tick,0x7ffdc994fb34,178707915,0,0x0,8
tick,0x7ffdc994fb34,178723307,0,0x0,8
tick,0x7ffdc994fb34,178738921,0,0x0,8
tick,0x7ffdc994fb34,178754219,0,0x0,8
tick,0x7ffdc994fb34,178770236,0,0x0,8
tick,0x7ffdc994fb34,178785590,0,0x0,8
tick,0x7ffdc994fb34,178800593,0,0x0,8
tick,0x7ffdc994fb34,178816495,0,0x0,8
tick,0x7ffdc994fb34,178831789,0,0x0,8
tick,0x7ffdc994fb34,178847359,0,0x0,8
tick,0x7ffdc994fb34,178862950,0,0x0,8
tick,0x7ffdc994fb34,178878701,0,0x0,8
tick,0x7ffdc994fb34,178894262,0,0x0,8
tick,0x7ffdc994fb34,178909976,0,0x0,8
tick,0x7ffdc994fb34,178925290,0,0x0,8
tick,0x7ffdc994fb34,178940736,0,0x0,8
tick,0x7ffdc994fb34,178956179,0,0x0,8
tick,0x7ffdc994fb34,178971843,0,0x0,8
tick,0x7ffdc994fb34,178987337,0,0x0,8
tick,0x7ffdc994fb34,179002992,0,0x0,8
tick,0x7ffdc994fb34,179018154,0,0x0,8
tick,0x7ffdc994fb34,179033913,0,0x0,8
tick,0x7ffdc994fb34,179049401,0,0x0,8
tick,0x7ffdc994fb34,179064399,0,0x0,8
tick,0x7ffdc994fb34,179080088,0,0x0,8
tick,0x7ffdc994fb34,179095922,0,0x0,8
tick,0x7ffdc994fb34,179111860,0,0x0,8
tick,0x7ffdc994fb34,179127862,0,0x0,8
tick,0x7ffdc994fb34,179143162,0,0x0,8
tick,0x7ffdc994fb34,179158916,0,0x0,8
tick,0x7ffdc994fb34,179174268,0,0x0,8
tick,0x7ffdc994fb34,179189908,0,0x0,8
tick,0x7ffdc994fb34,179205376,0,0x0,8
tick,0x7ffdc994fb34,179221655,0,0x0,8
tick,0x7ffdc994fb34,179237036,0,0x0,8
tick,0x7ffdc994fb34,179252763,0,0x0,8
tick,0x7ffdc994fb34,179268181,0,0x0,8
tick,0x7ffdc994fb34,179283972,0,0x0,8
tick,0x7ffdc994fb34,179299409,0,0x0,8
tick,0x7ffdc994fb34,179314651,0,0x0,8
tick,0x7ffdc994fb34,179330709,0,0x0,8
tick,0x7ffdc994fb34,179345837,0,0x0,8
tick,0x7ffdc994fb34,179361771,0,0x0,8
tick,0x7ffdc994fb34,179377050,0,0x0,8
tick,0x7ffdc994fb34,179392743,0,0x0,8
tick,0x7ffdc994fb34,179408231,0,0x0,8
tick,0x7ffdc994fb34,179423439,0,0x0,8
tick,0x7ffdc994fb34,179439217,0,0x0,8
tick,0x7ffdc994fb34,179455277,0,0x0,8
tick,0x7ffdc994fb34,179471133,0,0x0,8
tick,0x7ffdc994fb34,179486226,0,0x0,8
tick,0x7ffdc994fb34,179502055,0,0x0,8
tick,0x7ffdc994fb34,179517531,0,0x0,8
tick,0x7ffdc994fb34,179533077,0,0x0,8
tick,0x7ffdc994fb34,179548679,0,0x0,8
tick,0x7ffdc994fb34,179563980,0,0x0,8
tick,0x7ffdc994fb34,179579756,0,0x0,8
tick,0x7ffdc994fb34,179594680,0,0x0,8
tick,0x7ffdc994fb34,179610481,0,0x0,8
tick,0x7ffdc994fb34,179626031,0,0x0,8
tick,0x7ffdc994fb34,179641853,0,0x0,8
tick,0x7ffdc994fb34,179657051,0,0x0,8
tick,0x7ffdc994fb34,179672744,0,0x0,8
tick,0x7ffdc994fb34,179688250,0,0x0,8
tick,0x7ffdc994fb34,179703603,0,0x0,8
tick,0x7ffdc994fb34,179719186,0,0x0,8
tick,0x7ffdc994fb34,179734458,0,0x0,8
tick,0x7ffdc994fb34,179750034,0,0x0,8
tick,0x7ffdc994fb34,179765984,0,0x0,8
tick,0x7ffdc994fb34,179781489,0,0x0,8
tick,0x7ffdc994fb34,179796952,0,0x0,8
tick,0x7ffdc994fb34,179812394,0,0x0,8
tick,0x7ffdc994fb34,179828352,0,0x0,8
tick,0x7ffdc994fb34,179843232,0,0x0,8
tick,0x7ffdc994fb34,179858588,0,0x0,8
tick,0x7ffdc994fb34,179873798,0,0x0,8
tick,0x7ffdc994fb34,179889455,0,0x0,8
tick,0x7ffdc994fb34,179904848,0,0x0,8
tick,0x7ffdc994fb34,179920441,0,0x0,8
tick,0x7ffdc994fb34,179936429,0,0x0,8
tick,0x7ffdc994fb34,179951961,0,0x0,8
tick,0x7ffdc994fb34,179968211,0,0x0,8
tick,0x7ffdc994fb34,179983219,0,0x0,8
tick,0x7ffdc994fb34,179999182,0,0x0,8
tick,0x7ffdc994fb34,180014675,0,0x0,8
tick,0x7ffdc994fb34,180030473,0,0x0,8
tick,0x7ffdc994fb34,180046372,0,0x0,8
tick,0x7ffdc994fb34,180061656,0,0x0,8
tick,0x7ffdc994fb34,180077178,0,0x0,8
tick,0x7ffdc994fb34,180092695,0,0x0,8
tick,0x7ffdc994fb34,180108258,0,0x0,8
tick,0x7ffdc994fb34,180123705,0,0x0,8
tick,0x7ffdc994fb34,180139646,0,0x0,8
tick,0x7ffdc994fb34,180154650,0,0x0,8
tick,0x7ffdc994fb34,180170433,0,0x0,8
tick,0x7ffdc994fb34,180185997,0,0x0,8
tick,0x7ffdc994fb34,180201613,0,0x0,8
tick,0x7ffdc994fb34,180217099,0,0x0,8
tick,0x7ffdc994fb34,180232580,0,0x0,8
tick,0x7ffdc994fb34,180248268,0,0x0,8
tick,0x7ffdc994fb34,180263726,0,0x0,8
tick,0x7ffdc994fb34,180279388,0,0x0,8
tick,0x7ffdc994fb34,180295006,0,0x0,8
tick,0x7ffdc994fb34,180310800,0,0x0,8
tick,0x7ffdc994fb34,180325966,0,0x0,8
tick,0x7ffdc994fb34,180341823,0,0x0,8
tick,0x7ffdc994fb34,180357738,0,0x0,8
tick,0x7ffdc994fb34,180373009,0,0x0,8
tick,0x7ffdc994fb34,180388858,0,0x0,8
tick,0x7ffdc994fb34,180404116,0,0x0,8
tick,0x7ffdc994fb34,180419649,0,0x0,8
tick,0x7ffdc994fb34,180434878,0,0x0,8
tick,0x7ffdc994fb34,180450518,0,0x0,8
tick,0x7ffdc994fb34,180466047,0,0x0,8
tick,0x7ffdc994fb34,180481607,0,0x0,8
tick,0x7ffdc994fb34,180496848,0,0x0,8
tick,0x7ffdc994fb34,180512687,0,0x0,8
tick,0x7ffdc994fb34,180527938,0,0x0,8
tick,0x7ffdc994fb34,180544035,0,0x0,8
tick,0x7ffdc994fb34,180559495,0,0x0,8
tick,0x7ffdc994fb34,180575273,0,0x0,8
tick,0x7ffdc994fb34,180590306,0,0x0,8
tick,0x7ffdc994fb34,180606331,0,0x0,8
tick,0x7ffdc994fb34,180621298,0,0x0,8
tick,0x7ffdc994fb34,180637355,0,0x0,8
tick,0x7ffdc994fb34,180653546,0,0x0,8
tick,0x7ffdc994fb34,180669253,0,0x0,8
tick,0x7ffdc994fb34,180684709,0,0x0,8
tick,0x7ffdc994fb34,180700154,0,0x0,8
tick,0x7ffdc994fb34,180715975,0,0x0,8
tick,0x7ffdc994fb34,180731876,0,0x0,8
tick,0x7ffdc994fb34,180747201,0,0x0,8
tick,0x7ffdc994fb34,180763359,0,0x0,8
tick,0x7ffdc994fb34,180778992,0,0x0,8
tick,0x7ffdc994fb34,180794564,0,0x0,8
tick,0x7ffdc994fb34,180810255,0,0x0,8
tick,0x7ffdc994fb34,180825928,0,0x0,8
tick,0x7ffdc994fb34,180841361,0,0x0,8
tick,0x7ffdc994fb34,180857253,0,0x0,8
tick,0x7ffdc994fb34,180872448,0,0x0,8
tick,0x7ffdc994fb34,180888216,0,0x0,8
tick,0x7ffdc994fb34,180903792,0,0x0,8
tick,0x7ffdc994fb34,180919420,0,0x0,8
tick,0x7ffdc994fb34,180934643,0,0x0,8
tick,0x7ffdc994fb34,180950541,0,0x0,8
tick,0x7ffdc994fb34,180965948,0,0x0,8
tick,0x7ffdc994fb34,180981729,0,0x0,8
tick,0x7ffdc994fb34,180997187,0,0x0,8
tick,0x7ffdc994fb34,181012633,0,0x0,8
tick,0x7ffdc994fb34,181028327,0,0x0,8
tick,0x7ffdc994fb34,181043774,0,0x0,8
tick,0x7ffdc994fb34,181059457,0,0x0,8
tick,0x7ffdc994fb34,181074189,0,0x0,8
tick,0x7ffdc994fb34,181089580,0,0x0,8
tick,0x7ffdc994fb34,181105417,0,0x0,8
tick,0x7ffdc994fb34,181120826,0,0x0,8
tick,0x7ffdc994fb34,181136582,0,0x0,8
tick,0x7ffdc994fb34,181152263,0,0x0,8
tick,0x7ffdc994fb34,181168052,0,0x0,8
tick,0x7ffdc994fb34,181183426,0,0x0,8
tick,0x7ffdc994fb34,181199126,0,0x0,8
tick,0x7ffdc994fb34,181214543,0,0x0,8
tick,0x7ffdc994fb34,181230266,0,0x0,8
tick,0x7ffdc994fb34,181246010,0,0x0,8
tick,0x7ffdc994fb34,181262256,0,0x0,8
tick,0x7ffdc994fb34,181278029,0,0x0,8
tick,0x7ffdc994fb34,181293066,0,0x0,8
tick,0x7ffdc994fb34,181308826,0,0x0,8
tick,0x7ffdc994fb34,181324229,0,0x0,8
tick,0x7ffdc994fb34,181340188,0,0x0,8
tick,0x7ffdc994fb34,181356329,0,0x0,8
tick,0x7ffdc994fb34,181372032,0,0x0,8
tick,0x7ffdc994fb34,181387557,0,0x0,8
tick,0x7ffdc994fb34,181403209,0,0x0,8
tick,0x7ffdc994fb34,181418607,0,0x0,8
tick,0x7ffdc994fb34,181434000,0,0x0,8
tick,0x7ffdc994fb34,181449889,0,0x0,8
tick,0x7ffdc994fb34,181465976,0,0x0,8
tick,0x7ffdc994fb34,181481234,0,0x0,8
tick,0x7ffdc994fb34,181496933,0,0x0,8
tick,0x7ffdc994fb34,181512160,0,0x0,8
tick,0x7ffdc994fb34,181528071,0,0x0,8
tick,0x7ffdc994fb34,181542937,0,0x0,8
tick,0x7ffdc994fb34,181557730,0,0x0,8
tick,0x7ffdc994fb34,181573825,0,0x0,8
tick,0x7ffdc994fb34,181589489,0,0x0,8
tick,0x7ffdc994fb34,181604948,0,0x0,8
tick,0x7ffdc994fb34,181620602,0,0x0,8
tick,0x7ffdc994fb34,181635850,0,0x0,8
tick,0x7ffdc994fb34,181651360,0,0x0,8
tick,0x7ffdc994fb34,181667130,0,0x0,8
tick,0x7ffdc994fb34,181682400,0,0x0,8
tick,0x7ffdc994fb34,181697983,0,0x0,8
tick,0x7ffdc994fb34,181713179,0,0x0,8
tick,0x7ffdc994fb34,181729152,0,0x0,8
tick,0x7ffdc994fb34,181744066,0,0x0,8
tick,0x7ffdc994fb34,181759939,0,0x0,8
tick,0x7ffdc994fb34,181775229,0,0x0,8
tick,0x7ffdc994fb34,181790708,0,0x0,8
tick,0x7ffdc994fb34,181806215,0,0x0,8
tick,0x7ffdc994fb34,181821808,0,0x0,8
tick,0x7ffdc994fb34,181837243,0,0x0,8
tick,0x7ffdc994fb34,181852764,0,0x0,8
tick,0x7ffdc994fb34,181868862,0,0x0,8
tick,0x7ffdc994fb34,181884197,0,0x0,8
tick,0x7ffdc994fb34,181899667,0,0x0,8
tick,0x7ffdc994fb34,181915095,0,0x0,8
tick,0x7ffdc994fb34,181931120,0,0x0,8
tick,0x7ffdc994fb34,181947311,0,0x0,8
tick,0x7ffdc994fb34,181962869,0,0x0,8
tick,0x7ffdc994fb34,181978147,0,0x0,8
tick,0x7ffdc994fb34,181993980,0,0x0,8
tick,0x7ffdc994fb34,182009504,0,0x0,8
tick,0x7ffdc994fb34,182024662,0,0x0,8
tick,0x7ffdc994fb34,182040245,0,0x0,8
tick,0x7ffdc994fb34,182055263,0,0x0,8
tick,0x7ffdc994fb34,182070793,0,0x0,8
tick,0x7ffdc994fb34,182086282,0,0x0,8
tick,0x7ffdc994fb34,182101636,0,0x0,8
tick,0x7ffdc994fb34,182117404,0,0x0,8
tick,0x7ffdc994fb34,182132549,0,0x0,8
tick,0x7ffdc994fb34,182148145,0,0x0,8
tick,0x7ffdc994fb34,182163375,0,0x0,8
tick,0x7ffdc994fb34,182179097,0,0x0,8
tick,0x7ffdc994fb34,182194337,0,0x0,8
tick,0x7ffdc994fb34,182209970,0,0x0,8
tick,0x7ffdc994fb34,182225462,0,0x0,8
tick,0x7ffdc994fb34,182241154,0,0x0,8
tick,0x7ffdc994fb34,182256308,0,0x0,8
tick,0x7ffdc994fb34,182272230,0,0x0,8
tick,0x7ffdc994fb34,182287750,0,0x0,8
tick,0x7ffdc994fb34,182303202,0,0x0,8
tick,0x7ffdc994fb34,182318539,0,0x0,8
tick,0x7ffdc994fb34,182333834,0,0x0,8
tick,0x7ffdc994fb34,182349855,0,0x0,8
tick,0x7ffdc994fb34,182365350,0,0x0,8
tick,0x7ffdc994fb34,182381133,0,0x0,8
tick,0x7ffdc994fb34,182396536,0,0x0,8
tick,0x7ffdc994fb34,182412194,0,0x0,8
tick,0x7ffdc994fb34,182428206,0,0x0,8
tick,0x7ffdc994fb34,182443686,0,0x0,8
tick,0x7ffdc994fb34,182459430,0,0x0,8
tick,0x7ffdc994fb34,182474810,0,0x0,8
tick,0x7ffdc994fb34,182490155,0,0x0,8
tick,0x7ffdc994fb34,182506122,0,0x0,8
tick,0x7ffdc994fb34,182521310,0,0x0,8
tick,0x7ffdc994fb34,182536886,0,0x0,8
tick,0x7ffdc994fb34,182552318,0,0x0,8
tick,0x7ffdc994fb34,182567961,0,0x0,8
tick,0x7ffdc994fb34,182583024,0,0x0,8
tick,0x7ffdc994fb34,182598704,0,0x0,8
tick,0x7ffdc994fb34,182613878,0,0x0,8
tick,0x7ffdc994fb34,182629870,0,0x0,8
tick,0x7ffdc994fb34,182646168,0,0x0,8
tick,0x7ffdc994fb34,182662097,0,0x0,8
tick,0x7ffdc994fb34,182676780,0,0x0,8
tick,0x7ffdc994fb34,182692888,0,0x0,8
tick,0x7ffdc994fb34,182708662,0,0x0,8
tick,0x7ffdc994fb34,182724004,0,0x0,8
tick,0x7ffdc994fb34,182739518,0,0x0,8
tick,0x7ffdc994fb34,182755015,0,0x0,8
tick,0x7ffdc994fb34,182770968,0,0x0,8
tick,0x7ffdc994fb34,182786401,0,0x0,8
tick,0x7ffdc994fb34,182802153,0,0x0,8
tick,0x7ffdc994fb34,182817563,0,0x0,8
tick,0x7ffdc994fb34,182833268,0,0x0,8
tick,0x7ffdc994fb34,182849028,0,0x0,8
tick,0x7ffdc994fb34,182864626,0,0x0,8
tick,0x7ffdc994fb34,182879693,0,0x0,8
tick,0x7ffdc994fb34,182895335,0,0x0,8
tick,0x7ffdc994fb34,182910756,0,0x0,8
tick,0x7ffdc994fb34,182926248,0,0x0,8
tick,0x7ffdc994fb34,182941606,0,0x0,8
tick,0x7ffdc994fb34,182956974,0,0x0,8
tick,0x7ffdc994fb34,182972682,0,0x0,8
tick,0x7ffdc994fb34,182988840,0,0x0,8
tick,0x7ffdc994fb34,183004624,0,0x0,8
tick,0x7ffdc994fb34,183019960,0,0x0,8
tick,0x7ffdc994fb34,183036056,0,0x0,8
tick,0x7ffdc994fb34,183052704,0,0x0,8
tick,0x7ffdc994fb34,183067830,0,0x0,8
tick,0x7ffdc994fb34,183083218,0,0x0,8
tick,0x7ffdc994fb34,183098520,0,0x0,8
tick,0x7ffdc994fb34,183113708,0,0x0,8
tick,0x7ffdc994fb34,183129415,0,0x0,8
tick,0x7ffdc994fb34,183144747,0,0x0,8
tick,0x7ffdc994fb34,183160581,0,0x0,8
tick,0x7ffdc994fb34,183175731,0,0x0,8
tick,0x7ffdc994fb34,183191107,0,0x0,8
tick,0x7ffdc994fb34,183206794,0,0x0,8
tick,0x7ffdc994fb34,183222534,0,0x0,8
tick,0x7ffdc994fb34,183237591,0,0x0,8
tick,0x7ffdc994fb34,183253115,0,0x0,8
tick,0x7ffdc994fb34,183268774,0,0x0,8
tick,0x7ffdc994fb34,183284142,0,0x0,8
tick,0x7ffdc994fb34,183299689,0,0x0,8
tick,0x7ffdc994fb34,183315498,0,0x0,8
tick,0x7ffdc994fb34,183330936,0,0x0,8
tick,0x7ffdc994fb34,183346213,0,0x0,8
tick,0x7ffdc994fb34,183362026,0,0x0,8
tick,0x7ffdc994fb34,183377542,0,0x0,8
tick,0x7ffdc994fb34,183392691,0,0x0,8
tick,0x7ffdc994fb34,183408541,0,0x0,8
tick,0x7ffdc994fb34,183423840,0,0x0,8
tick,0x7ffdc994fb34,183439444,0,0x0,8
tick,0x7ffdc994fb34,183455096,0,0x0,8
tick,0x7ffdc994fb34,183470647,0,0x0,8
tick,0x7ffdc994fb34,183486335,0,0x0,8
tick,0x7ffdc994fb34,183502039,0,0x0,8
tick,0x7ffdc994fb34,183517699,0,0x0,8
tick,0x7ffdc994fb34,183533292,0,0x0,8
tick,0x7ffdc994fb34,183548331,0,0x0,8
tick,0x7ffdc994fb34,183564127,0,0x0,8
tick,0x7ffdc994fb34,183579826,0,0x0,8
tick,0x7ffdc994fb34,183595136,0,0x0,8
tick,0x7ffdc994fb34,183610829,0,0x0,8
tick,0x7ffdc994fb34,183626256,0,0x0,8
tick,0x7ffdc994fb34,183642027,0,0x0,8
tick,0x7ffdc994fb34,183657599,0,0x0,8
tick,0x7ffdc994fb34,183673145,0,0x0,8
tick,0x7ffdc994fb34,183688447,0,0x0,8
tick,0x7ffdc994fb34,183703379,0,0x0,8
tick,0x7ffdc994fb34,183719177,0,0x0,8
tick,0x7ffdc994fb34,183734629,0,0x0,8
tick,0x7ffdc994fb34,183749809,0,0x0,8
tick,0x7ffdc994fb34,183766180,0,0x0,8
tick,0x7ffdc994fb34,183781646,0,0x0,8
tick,0x7ffdc994fb34,183796873,0,0x0,8
tick,0x7ffdc994fb34,183812604,0,0x0,8
tick,0x7ffdc994fb34,183828416,0,0x0,8
tick,0x7ffdc994fb34,183843786,0,0x0,8
tick,0x7ffdc994fb34,183859696,0,0x0,8
tick,0x7ffdc994fb34,183874868,0,0x0,8
tick,0x7ffdc994fb34,183890499,0,0x0,8
tick,0x7ffdc994fb34,183906079,0,0x0,8
tick,0x7ffdc994fb34,183921470,0,0x0,8
tick,0x7ffdc994fb34,183936870,0,0x0,8
tick,0x7ffdc994fb34,183952467,0,0x0,8
tick,0x7ffdc994fb34,183968532,0,0x0,8
tick,0x7ffdc994fb34,183984036,0,0x0,8
tick,0x7ffdc994fb34,183999677,0,0x0,8
tick,0x7ffdc994fb34,184015480,0,0x0,8
tick,0x7ffdc994fb34,184031019,0,0x0,8
tick,0x7ffdc994fb34,184046589,0,0x0,8
tick,0x7ffdc994fb34,184061744,0,0x0,8
tick,0x7ffdc994fb34,184076794,0,0x0,8
tick,0x7ffdc994fb34,184092366,0,0x0,8
tick,0x7ffdc994fb34,184107855,0,0x0,8
tick,0x7ffdc994fb34,184123617,0,0x0,8
tick,0x7ffdc994fb34,184139352,0,0x0,8
tick,0x7ffdc994fb34,184154400,0,0x0,8
tick,0x7ffdc994fb34,184169826,0,0x0,8
tick,0x7ffdc994fb34,184185393,0,0x0,8
tick,0x7ffdc994fb34,184200757,0,0x0,8
tick,0x7ffdc994fb34,184216374,0,0x0,8
tick,0x7ffdc994fb34,184231951,0,0x0,8
tick,0x7ffdc994fb34,184247417,0,0x0,8
tick,0x7ffdc994fb34,184263540,0,0x0,8
tick,0x7ffdc994fb34,184279378,0,0x0,8
tick,0x7ffdc994fb34,184293886,0,0x0,8
tick,0x7ffdc994fb34,184309831,0,0x0,8
tick,0x7ffdc994fb34,184324964,0,0x0,8
tick,0x7ffdc994fb34,184340276,0,0x0,8
tick,0x7ffdc994fb34,184355799,0,0x0,8
tick,0x7ffdc994fb34,184371053,0,0x0,8
tick,0x7ffdc994fb34,184385842,0,0x0,8
tick,0x7ffdc994fb34,184401321,0,0x0,8
tick,0x7ffdc994fb34,184416921,0,0x0,8
tick,0x7ffdc994fb34,184432275,0,0x0,8
tick,0x7ffdc994fb34,184448009,0,0x0,8
tick,0x7ffdc994fb34,184463168,0,0x0,8
tick,0x7ffdc994fb34,184479236,0,0x0,8
tick,0x7ffdc994fb34,184494358,0,0x0,8
tick,0x7ffdc994fb34,184510264,0,0x0,8
tick,0x7ffdc994fb34,184525682,0,0x0,8
tick,0x7ffdc994fb34,184540989,0,0x0,8
tick,0x7ffdc994fb34,184556403,0,0x0,8
tick,0x7ffdc994fb34,184572800,0,0x0,8
tick,0x7ffdc994fb34,184588205,0,0x0,8
tick,0x7ffdc994fb34,184604514,0,0x0,8
tick,0x7ffdc994fb34,184619925,0,0x0,8
tick,0x7ffdc994fb34,184635570,0,0x0,8
tick,0x7ffdc994fb34,184651158,0,0x0,8
tick,0x7ffdc994fb34,184666477,0,0x0,8
tick,0x7ffdc994fb34,184682368,0,0x0,8
tick,0x7ffdc994fb34,184697785,0,0x0,8
tick,0x7ffdc994fb34,184712793,0,0x0,8
tick,0x7ffdc994fb34,184728655,0,0x0,8
tick,0x7ffdc994fb34,184744197,0,0x0,8
tick,0x7ffdc994fb34,184759511,0,0x0,8
tick,0x7ffdc994fb34,184774724,0,0x0,8
tick,0x7ffdc994fb34,184791077,0,0x0,8
tick,0x7ffdc994fb34,184806336,0,0x0,8
tick,0x7ffdc994fb34,184822146,0,0x0,8
tick,0x7ffdc994fb34,184837115,0,0x0,8
tick,0x7ffdc994fb34,184852925,0,0x0,8
tick,0x7ffdc994fb34,184868876,0,0x0,8
tick,0x7ffdc994fb34,184884089,0,0x0,8
tick,0x7ffdc994fb34,184899677,0,0x0,8
tick,0x7ffdc994fb34,184915950,0,0x0,8
tick,0x7ffdc994fb34,184931121,0,0x0,8
tick,0x7ffdc994fb34,184946141,0,0x0,8
tick,0x7ffdc994fb34,184962149,0,0x0,8
tick,0x7ffdc994fb34,184977765,0,0x0,8
tick,0x7ffdc994fb34,184992951,0,0x0,8
tick,0x7ffdc994fb34,185008942,0,0x0,8
tick,0x7ffdc994fb34,185024264,0,0x0,8
tick,0x7ffdc994fb34,185039853,0,0x0,8
tick,0x7ffdc994fb34,185055264,0,0x0,8
tick,0x7ffdc994fb34,185070620,0,0x0,8
tick,0x7ffdc994fb34,185086416,0,0x0,8
tick,0x7ffdc994fb34,185101935,0,0x0,8
tick,0x7ffdc994fb34,185117872,0,0x0,8
tick,0x7ffdc994fb34,185133242,0,0x0,8
tick,0x7ffdc994fb34,185148921,0,0x0,8
tick,0x7ffdc994fb34,185164285,0,0x0,8
tick,0x7ffdc994fb34,185179808,0,0x0,8
tick,0x7ffdc994fb34,185194907,0,0x0,8
tick,0x7ffdc994fb34,185210594,0,0x0,8
tick,0x7ffdc994fb34,185226293,0,0x0,8
tick,0x7ffdc994fb34,185241480,0,0x0,8
tick,0x7ffdc994fb34,185256964,0,0x0,8
tick,0x7ffdc994fb34,185273038,0,0x0,8
tick,0x7ffdc994fb34,185289052,0,0x0,8
tick,0x7ffdc994fb34,185304389,0,0x0,8
tick,0x7ffdc994fb34,185319984,0,0x0,8
tick,0x7ffdc994fb34,185335342,0,0x0,8
tick,0x7ffdc994fb34,185350743,0,0x0,8
tick,0x7ffdc994fb34,185365825,0,0x0,8
tick,0x7ffdc994fb34,185381630,0,0x0,8
tick,0x7ffdc994fb34,185396833,0,0x0,8
tick,0x7ffdc994fb34,185412358,0,0x0,8
tick,0x7ffdc994fb34,185427630,0,0x0,8
tick,0x7ffdc994fb34,185443061,0,0x0,8
tick,0x7ffdc994fb34,185458568,0,0x0,8
tick,0x7ffdc994fb34,185473919,0,0x0,8
tick,0x7ffdc994fb34,185489382,0,0x0,8
tick,0x7ffdc994fb34,185504926,0,0x0,8
tick,0x7ffdc994fb34,185520529,0,0x0,8
tick,0x7ffdc994fb34,185536092,0,0x0,8
tick,0x7ffdc994fb34,185551421,0,0x0,8
tick,0x7ffdc994fb34,185566910,0,0x0,8
tick,0x7ffdc994fb34,185582442,0,0x0,8
tick,0x7ffdc994fb34,185597805,0,0x0,8
tick,0x7ffdc994fb34,185613407,0,0x0,8
tick,0x7ffdc994fb34,185629016,0,0x0,8
tick,0x7ffdc994fb34,185644279,0,0x0,8
tick,0x7ffdc994fb34,185659591,0,0x0,8
tick,0x7ffdc994fb34,185675031,0,0x0,8
tick,0x7ffdc994fb34,185690086,0,0x0,8
tick,0x7ffdc994fb34,185705332,0,0x0,8
tick,0x7ffdc994fb34,185720767,0,0x0,8
tick,0x7ffdc994fb34,185736822,0,0x0,8
tick,0x7ffdc994fb34,185752249,0,0x0,8
tick,0x7ffdc994fb34,185767892,0,0x0,8
tick,0x7ffdc994fb34,185783365,0,0x0,8
tick,0x7ffdc994fb34,185799085,0,0x0,8
tick,0x7ffdc994fb34,185814322,0,0x0,8
tick,0x7ffdc994fb34,185830203,0,0x0,8
tick,0x7ffdc994fb34,185845282,0,0x0,8
tick,0x7ffdc994fb34,185861156,0,0x0,8
tick,0x7ffdc994fb34,185876328,0,0x0,8
tick,0x7ffdc994fb34,185891772,0,0x0,8
tick,0x7ffdc994fb34,185907108,0,0x0,8
tick,0x7ffdc994fb34,185922655,0,0x0,8
tick,0x7ffdc994fb34,185938778,0,0x0,8
tick,0x7ffdc994fb34,185953878,0,0x0,8
tick,0x7ffdc994fb34,185969355,0,0x0,8
tick,0x7ffdc994fb34,185984697,0,0x0,8
tick,0x7ffdc994fb34,186000242,0,0x0,8
tick,0x7ffdc994fb34,186015727,0,0x0,8
tick,0x7ffdc994fb34,186031705,0,0x0,8
tick,0x7ffdc994fb34,186047519,0,0x0,8
tick,0x7ffdc994fb34,186062770,0,0x0,8
tick,0x7ffdc994fb34,186078497,0,0x0,8
tick,0x7ffdc994fb34,186093565,0,0x0,8
tick,0x7ffdc994fb34,186109182,0,0x0,8
tick,0x7ffdc994fb34,186124679,0,0x0,8
tick,0x7ffdc994fb34,186140958,0,0x0,8
tick,0x7ffdc994fb34,186156818,0,0x0,8
tick,0x7ffdc994fb34,186172841,0,0x0,8
tick,0x7ffdc994fb34,186188308,0,0x0,8
tick,0x7ffdc994fb34,186203633,0,0x0,8
tick,0x7ffdc994fb34,186219777,0,0x0,8
tick,0x7ffdc994fb34,186235086,0,0x0,8
tick,0x7ffdc994fb34,186250849,0,0x0,8
tick,0x7ffdc994fb34,186266065,0,0x0,8
tick,0x7ffdc994fb34,186281557,0,0x0,8
tick,0x7ffdc994fb34,186297021,0,0x0,8
tick,0x7ffdc994fb34,186312909,0,0x0,8
tick,0x7ffdc994fb34,186328072,0,0x0,8
tick,0x7ffdc994fb34,186343544,0,0x0,8
tick,0x7ffdc994fb34,186358687,0,0x0,8
tick,0x7ffdc994fb34,186374393,0,0x0,8
tick,0x7ffdc994fb34,186389664,0,0x0,8
tick,0x7ffdc994fb34,186404877,0,0x0,8
tick,0x7ffdc994fb34,186420612,0,0x0,8
tick,0x7ffdc994fb34,186436113,0,0x0,8
tick,0x7ffdc994fb34,186451710,0,0x0,8
tick,0x7ffdc994fb34,186467286,0,0x0,8
tick,0x7ffdc994fb34,186482627,0,0x0,8
tick,0x7ffdc994fb34,186498582,0,0x0,8
tick,0x7ffdc994fb34,186514365,0,0x0,8
tick,0x7ffdc994fb34,186529623,0,0x0,8
tick,0x7ffdc994fb34,186544953,0,0x0,8
tick,0x7ffdc994fb34,186560440,0,0x0,8
tick,0x7ffdc994fb34,186576193,0,0x0,8
tick,0x7ffdc994fb34,186591416,0,0x0,8
tick,0x7ffdc994fb34,186607080,0,0x0,8
tick,0x7ffdc994fb34,186622909,0,0x0,8
tick,0x7ffdc994fb34,186639075,0,0x0,8
tick,0x7ffdc994fb34,186654485,0,0x0,8
tick,0x7ffdc994fb34,186670161,0,0x0,8
tick,0x7ffdc994fb34,186685490,0,0x0,8
tick,0x7ffdc994fb34,186701318,0,0x0,8
tick,0x7ffdc994fb34,186716809,0,0x0,8
tick,0x7ffdc994fb34,186732353,0,0x0,8
tick,0x7ffdc994fb34,186747773,0,0x0,8
tick,0x7ffdc994fb34,186763736,0,0x0,8
tick,0x7ffdc994fb34,186779604,0,0x0,8
tick,0x7ffdc994fb34,186794425,0,0x0,8
tick,0x7ffdc994fb34,186810224,0,0x0,8
tick,0x7ffdc994fb34,186825450,0,0x0,8
tick,0x7ffdc994fb34,186841193,0,0x0,8
tick,0x7ffdc994fb34,186856473,0,0x0,8
tick,0x7ffdc994fb34,186871886,0,0x0,8
tick,0x7ffdc994fb34,186887132,0,0x0,8
tick,0x7ffdc994fb34,186903024,0,0x0,8
tick,0x7ffdc994fb34,186918248,0,0x0,8
tick,0x7ffdc994fb34,186933937,0,0x0,8
tick,0x7ffdc994fb34,186949460,0,0x0,8
tick,0x7ffdc994fb34,186964858,0,0x0,8
tick,0x7ffdc994fb34,186980315,0,0x0,8
tick,0x7ffdc994fb34,186996364,0,0x0,8
tick,0x7ffdc994fb34,187011618,0,0x0,8
tick,0x7ffdc994fb34,187027684,0,0x0,8
tick,0x7ffdc994fb34,187042901,0,0x0,8
tick,0x7ffdc994fb34,187058840,0,0x0,8
tick,0x7ffdc994fb34,187074880,0,0x0,8
tick,0x7ffdc994fb34,187090594,0,0x0,8
tick,0x7ffdc994fb34,187105774,0,0x0,8
tick,0x7ffdc994fb34,187121498,0,0x0,8
tick,0x7ffdc994fb34,187137211,0,0x0,8
tick,0x7ffdc994fb34,187153008,0,0x0,8
tick,0x7ffdc994fb34,187168445,0,0x0,8
tick,0x7ffdc994fb34,187184030,0,0x0,8
tick,0x7ffdc994fb34,187199694,0,0x0,8
tick,0x7ffdc994fb34,187215361,0,0x0,8
tick,0x7ffdc994fb34,187230747,0,0x0,8
tick,0x7ffdc994fb34,187246615,0,0x0,8
tick,0x7ffdc994fb34,187262062,0,0x0,8
tick,0x7ffdc994fb34,187277875,0,0x0,8
tick,0x7ffdc994fb34,187293281,0,0x0,8
tick,0x7ffdc994fb34,187308763,0,0x0,8
tick,0x7ffdc994fb34,187324314,0,0x0,8
tick,0x7ffdc994fb34,187339559,0,0x0,8
tick,0x7ffdc994fb34,187354760,0,0x0,8
tick,0x7ffdc994fb34,187370930,0,0x0,8
tick,0x7ffdc994fb34,187386056,0,0x0,8
tick,0x7ffdc994fb34,187401671,0,0x0,8
tick,0x7ffdc994fb34,187416859,0,0x0,8
tick,0x7ffdc994fb34,187432519,0,0x0,8
tick,0x7ffdc994fb34,187448689,0,0x0,8
tick,0x7ffdc994fb34,187464426,0,0x0,8
tick,0x7ffdc994fb34,187480053,0,0x0,8
tick,0x7ffdc994fb34,187495785,0,0x0,8
tick,0x7ffdc994fb34,187511403,0,0x0,8
tick,0x7ffdc994fb34,187526751,0,0x0,8
tick,0x7ffdc994fb34,187542401,0,0x0,8
tick,0x7ffdc994fb34,187558084,0,0x0,8
tick,0x7ffdc994fb34,187573365,0,0x0,8
tick,0x7ffdc994fb34,187589022,0,0x0,8
tick,0x7ffdc994fb34,187604264,0,0x0,8
tick,0x7ffdc994fb34,187619949,0,0x0,8
tick,0x7ffdc994fb34,187636320,0,0x0,8
tick,0x7ffdc994fb34,187651835,0,0x0,8
tick,0x7ffdc994fb34,187666893,0,0x0,8
tick,0x7ffdc994fb34,187682413,0,0x0,8
tick,0x7ffdc994fb34,187698512,0,0x0,8
tick,0x7ffdc994fb34,187714339,0,0x0,8
tick,0x7ffdc994fb34,187729531,0,0x0,8
tick,0x7ffdc994fb34,187745049,0,0x0,8
tick,0x7ffdc994fb34,187760881,0,0x0,8
tick,0x7ffdc994fb34,187776636,0,0x0,8
tick,0x7ffdc994fb34,187792545,0,0x0,8
tick,0x7ffdc994fb34,187808655,0,0x0,8
tick,0x7ffdc994fb34,187824216,0,0x0,8
tick,0x7ffdc994fb34,187839845,0,0x0,8
tick,0x7ffdc994fb34,187855288,0,0x0,8
tick,0x7ffdc994fb34,187870843,0,0x0,8
tick,0x7ffdc994fb34,187886593,0,0x0,8
tick,0x7ffdc994fb34,187902854,0,0x0,8
tick,0x7ffdc994fb34,187918708,0,0x0,8
tick,0x7ffdc994fb34,187934575,0,0x0,8
tick,0x7ffdc994fb34,187950286,0,0x0,8
tick,0x7ffdc994fb34,187965903,0,0x0,8
tick,0x7ffdc994fb34,187981257,0,0x0,8
tick,0x7ffdc994fb34,187996853,0,0x0,8
tick,0x7ffdc994fb34,188012720,0,0x0,8
tick,0x7ffdc994fb34,188028194,0,0x0,8
tick,0x7ffdc994fb34,188043290,0,0x0,8
tick,0x7ffdc994fb34,188058619,0,0x0,8
tick,0x7ffdc994fb34,188074069,0,0x0,8
tick,0x7ffdc994fb34,188089567,0,0x0,8
tick,0x7ffdc994fb34,188104950,0,0x0,8
tick,0x7ffdc994fb34,188120563,0,0x0,8
tick,0x7ffdc994fb34,188135676,0,0x0,8
tick,0x7ffdc994fb34,188151358,0,0x0,8
tick,0x7ffdc994fb34,188166908,0,0x0,8
tick,0x7ffdc994fb34,188182557,0,0x0,8
tick,0x7ffdc994fb34,188198240,0,0x0,8
tick,0x7ffdc994fb34,188213735,0,0x0,8
tick,0x7ffdc994fb34,188229051,0,0x0,8
tick,0x7ffdc994fb34,188244417,0,0x0,8
tick,0x7ffdc994fb34,188259970,0,0x0,8
tick,0x7ffdc994fb34,188275391,0,0x0,8
tick,0x7ffdc994fb34,188290996,0,0x0,8
tick,0x7ffdc994fb34,188306949,0,0x0,8
tick,0x7ffdc994fb34,188322578,0,0x0,8
tick,0x7ffdc994fb34,188337930,0,0x0,8
tick,0x7ffdc994fb34,188353560,0,0x0,8
tick,0x7ffdc994fb34,188368961,0,0x0,8
tick,0x7ffdc994fb34,188384290,0,0x0,8
tick,0x7ffdc994fb34,188400061,0,0x0,8
tick,0x7ffdc994fb34,188415178,0,0x0,8
tick,0x7ffdc994fb34,188430961,0,0x0,8
tick,0x7ffdc994fb34,188446377,0,0x0,8
tick,0x7ffdc994fb34,188461596,0,0x0,8
tick,0x7ffdc994fb34,188477007,0,0x0,8
tick,0x7ffdc994fb34,188492765,0,0x0,8
tick,0x7ffdc994fb34,188508007,0,0x0,8
tick,0x7ffdc994fb34,188523690,0,0x0,8
tick,0x7ffdc994fb34,188539528,0,0x0,8
tick,0x7ffdc994fb34,188554733,0,0x0,8
tick,0x7ffdc994fb34,188570383,0,0x0,8
tick,0x7ffdc994fb34,188585711,0,0x0,8
tick,0x7ffdc994fb34,188601082,0,0x0,8
tick,0x7ffdc994fb34,188617041,0,0x0,8
tick,0x7ffdc994fb34,188632211,0,0x0,8
tick,0x7ffdc994fb34,188647640,0,0x0,8
tick,0x7ffdc994fb34,188662767,0,0x0,8
tick,0x7ffdc994fb34,188678671,0,0x0,8
tick,0x7ffdc994fb34,188693963,0,0x0,8
tick,0x7ffdc994fb34,188709538,0,0x0,8
tick,0x7ffdc994fb34,188724967,0,0x0,8
tick,0x7ffdc994fb34,188740914,0,0x0,8
tick,0x7ffdc994fb34,188756441,0,0x0,8
tick,0x7ffdc994fb34,188772123,0,0x0,8
tick,0x7ffdc994fb34,188788558,0,0x0,8
tick,0x7ffdc994fb34,188803841,0,0x0,8
tick,0x7ffdc994fb34,188819473,0,0x0,8
tick,0x7ffdc994fb34,188834638,0,0x0,8
tick,0x7ffdc994fb34,188850587,0,0x0,8
tick,0x7ffdc994fb34,188865739,0,0x0,8
tick,0x7ffdc994fb34,188881915,0,0x0,8
tick,0x7ffdc994fb34,188897509,0,0x0,8
tick,0x7ffdc994fb34,188912806,0,0x0,8
tick,0x7ffdc994fb34,188928716,0,0x0,8
tick,0x7ffdc994fb34,188943943,0,0x0,8
tick,0x7ffdc994fb34,188959393,0,0x0,8
tick,0x7ffdc994fb34,188974962,0,0x0,8
tick,0x7ffdc994fb34,188990690,0,0x0,8
tick,0x7ffdc994fb34,189005961,0,0x0,8
tick,0x7ffdc994fb34,189021588,0,0x0,8
tick,0x7ffdc994fb34,189037151,0,0x0,8
tick,0x7ffdc994fb34,189052600,0,0x0,8
tick,0x7ffdc994fb34,189067796,0,0x0,8
tick,0x7ffdc994fb34,189083440,0,0x0,8
tick,0x7ffdc994fb34,189099500,0,0x0,8
tick,0x7ffdc994fb34,189115355,0,0x0,8
tick,0x7ffdc994fb34,189130899,0,0x0,8
tick,0x7ffdc994fb34,189146297,0,0x0,8
tick,0x7ffdc994fb34,189162590,0,0x0,8
tick,0x7ffdc994fb34,189177682,0,0x0,8
tick,0x7ffdc994fb34,189193373,0,0x0,8
tick,0x7ffdc994fb34,189208186,0,0x0,8
tick,0x7ffdc994fb34,189223791,0,0x0,8
tick,0x7ffdc994fb34,189239193,0,0x0,8
tick,0x7ffdc994fb34,189254473,0,0x0,8
tick,0x7ffdc994fb34,189270106,0,0x0,8
tick,0x7ffdc994fb34,189285526,0,0x0,8
tick,0x7ffdc994fb34,189300746,0,0x0,8
tick,0x7ffdc994fb34,189316403,0,0x0,8
tick,0x7ffdc994fb34,189332162,0,0x0,8
tick,0x7ffdc994fb34,189347607,0,0x0,8
tick,0x7ffdc994fb34,189363274,0,0x0,8
tick,0x7ffdc994fb34,189378772,0,0x0,8
tick,0x7ffdc994fb34,189394084,0,0x0,8
tick,0x7ffdc994fb34,189410259,0,0x0,8
tick,0x7ffdc994fb34,189425718,0,0x0,8
tick,0x7ffdc994fb34,189441286,0,0x0,8
tick,0x7ffdc994fb34,189456635,0,0x0,8
tick,0x7ffdc994fb34,189472207,0,0x0,8
tick,0x7ffdc994fb34,189487645,0,0x0,8
tick,0x7ffdc994fb34,189503142,0,0x0,8
tick,0x7ffdc994fb34,189518944,0,0x0,8
tick,0x7ffdc994fb34,189534172,0,0x0,8
tick,0x7ffdc994fb34,189549914,0,0x0,8
tick,0x7ffdc994fb34,189565144,0,0x0,8
tick,0x7ffdc994fb34,189580869,0,0x0,8
tick,0x7ffdc994fb34,189596368,0,0x0,8
tick,0x7ffdc994fb34,189612206,0,0x0,8
tick,0x7ffdc994fb34,189627367,0,0x0,8
tick,0x7ffdc994fb34,189643451,0,0x0,8
tick,0x7ffdc994fb34,189658852,0,0x0,8
tick,0x7ffdc994fb34,189674605,0,0x0,8
tick,0x7ffdc994fb34,189690533,0,0x0,8
tick,0x7ffdc994fb34,189706691,0,0x0,8
tick,0x7ffdc994fb34,189722768,0,0x0,8
tick,0x7ffdc994fb34,189738824,0,0x0,8
tick,0x7ffdc994fb34,189754058,0,0x0,8
tick,0x7ffdc994fb34,189769746,0,0x0,8
tick,0x7ffdc994fb34,189784912,0,0x0,8
tick,0x7ffdc994fb34,189800787,0,0x0,8
tick,0x7ffdc994fb34,189815857,0,0x0,8
tick,0x7ffdc994fb34,189831572,0,0x0,8
tick,0x7ffdc994fb34,189846573,0,0x0,8
tick,0x7ffdc994fb34,189861822,0,0x0,8
tick,0x7ffdc994fb34,189877213,0,0x0,8
tick,0x7ffdc994fb34,189893501,0,0x0,8
tick,0x7ffdc994fb34,189909068,0,0x0,8
tick,0x7ffdc994fb34,189925234,0,0x0,8
tick,0x7ffdc994fb34,189940917,0,0x0,8
tick,0x7ffdc994fb34,189956286,0,0x0,8
tick,0x7ffdc994fb34,189971607,0,0x0,8
tick,0x7ffdc994fb34,189987297,0,0x0,8
tick,0x7ffdc994fb34,190002614,0,0x0,8
tick,0x7ffdc994fb34,190018543,0,0x0,8
tick,0x7ffdc994fb34,190033598,0,0x0,8
tick,0x7ffdc994fb34,190049179,0,0x0,8
tick,0x7ffdc994fb34,190064649,0,0x0,8
tick,0x7ffdc994fb34,190079904,0,0x0,8
tick,0x7ffdc994fb34,190095093,0,0x0,8
tick,0x7ffdc994fb34,190110793,0,0x0,8
tick,0x7ffdc994fb34,190126322,0,0x0,8
tick,0x7ffdc994fb34,190141668,0,0x0,8
tick,0x7ffdc994fb34,190157394,0,0x0,8
tick,0x7ffdc994fb34,190173400,0,0x0,8
tick,0x7ffdc994fb34,190189498,0,0x0,8
tick,0x7ffdc994fb34,190204816,0,0x0,8
tick,0x7ffdc994fb34,190220455,0,0x0,8
tick,0x7ffdc994fb34,190236047,0,0x0,8
tick,0x7ffdc994fb34,190252033,0,0x0,8
tick,0x7ffdc994fb34,190267785,0,0x0,8
tick,0x7ffdc994fb34,190283784,0,0x0,8
tick,0x7ffdc994fb34,190298785,0,0x0,8
tick,0x7ffdc994fb34,190314453,0,0x0,8
tick,0x7ffdc994fb34,190329670,0,0x0,8
tick,0x7ffdc994fb34,190345347,0,0x0,8
tick,0x7ffdc994fb34,190361750,0,0x0,8
tick,0x7ffdc994fb34,190377671,0,0x0,8
tick,0x7ffdc994fb34,190393753,0,0x0,8
tick,0x7ffdc994fb34,190409723,0,0x0,8
tick,0x7ffdc994fb34,190425083,0,0x0,8
tick,0x7ffdc994fb34,190440759,0,0x0,8
tick,0x7ffdc994fb34,190456372,0,0x0,8
tick,0x7ffdc994fb34,190471840,0,0x0,8
tick,0x7ffdc994fb34,190487080,0,0x0,8
tick,0x7ffdc994fb34,190502802,0,0x0,8
tick,0x7ffdc994fb34,190518413,0,0x0,8
tick,0x7ffdc994fb34,190534413,0,0x0,8
tick,0x7ffdc994fb34,190550337,0,0x0,8
tick,0x7ffdc994fb34,190565768,0,0x0,8
tick,0x7ffdc994fb34,190581477,0,0x0,8
tick,0x7ffdc994fb34,190596989,0,0x0,8
tick,0x7ffdc994fb34,190612400,0,0x0,8
tick,0x7ffdc994fb34,190628136,0,0x0,8
tick,0x7ffdc994fb34,190643567,0,0x0,8
tick,0x7ffdc994fb34,190659130,0,0x0,8
tick,0x7ffdc994fb34,190675121,0,0x0,8
tick,0x7ffdc994fb34,190689862,0,0x0,8
tick,0x7ffdc994fb34,190706013,0,0x0,8
tick,0x7ffdc994fb34,190721684,0,0x0,8
tick,0x7ffdc994fb34,190737140,0,0x0,8
tick,0x7ffdc994fb34,190753017,0,0x0,8
tick,0x7ffdc994fb34,190768569,0,0x0,8
tick,0x7ffdc994fb34,190783917,0,0x0,8
tick,0x7ffdc994fb34,190799611,0,0x0,8
tick,0x7ffdc994fb34,190814867,0,0x0,8
tick,0x7ffdc994fb34,190830506,0,0x0,8
tick,0x7ffdc994fb34,190845947,0,0x0,8
tick,0x7ffdc994fb34,190861510,0,0x0,8
tick,0x7ffdc994fb34,190877450,0,0x0,8
tick,0x7ffdc994fb34,190892515,0,0x0,8
tick,0x7ffdc994fb34,190908488,0,0x0,8
tick,0x7ffdc994fb34,190923553,0,0x0,8
tick,0x7ffdc994fb34,190939588,0,0x0,8
tick,0x7ffdc994fb34,190955038,0,0x0,8
tick,0x7ffdc994fb34,190970666,0,0x0,8
tick,0x7ffdc994fb34,190986115,0,0x0,8
tick,0x7ffdc994fb34,191001606,0,0x0,8
tick,0x7ffdc994fb34,191017086,0,0x0,8
tick,0x7ffdc994fb34,191032771,0,0x0,8
tick,0x7ffdc994fb34,191048018,0,0x0,8
tick,0x7ffdc994fb34,191064188,0,0x0,8
tick,0x7ffdc994fb34,191080403,0,0x0,8
tick,0x7ffdc994fb34,191096068,0,0x0,8
tick,0x7ffdc994fb34,191111679,0,0x0,8
tick,0x7ffdc994fb34,191126903,0,0x0,8
tick,0x7ffdc994fb34,191142465,0,0x0,8
tick,0x7ffdc994fb34,191157923,0,0x0,8
tick,0x7ffdc994fb34,191173169,0,0x0,8
tick,0x7ffdc994fb34,191188891,0,0x0,8
tick,0x7ffdc994fb34,191204238,0,0x0,8
tick,0x7ffdc994fb34,191219861,0,0x0,8
tick,0x7ffdc994fb34,191235255,0,0x0,8
tick,0x7ffdc994fb34,191251305,0,0x0,8
tick,0x7ffdc994fb34,191266960,0,0x0,8
tick,0x7ffdc994fb34,191282438,0,0x0,8
tick,0x7ffdc994fb34,191297567,0,0x0,8
tick,0x7ffdc994fb34,191313059,0,0x0,8
tick,0x7ffdc994fb34,191328563,0,0x0,8
tick,0x7ffdc994fb34,191343982,0,0x0,8
tick,0x7ffdc994fb34,191359353,0,0x0,8
tick,0x7ffdc994fb34,191374667,0,0x0,8
tick,0x7ffdc994fb34,191390244,0,0x0,8
tick,0x7ffdc994fb34,191406183,0,0x0,8
tick,0x7ffdc994fb34,191421410,0,0x0,8
tick,0x7ffdc994fb34,191437127,0,0x0,8
tick,0x7ffdc994fb34,191452879,0,0x0,8
tick,0x7ffdc994fb34,191468354,0,0x0,8
tick,0x7ffdc994fb34,191483747,0,0x0,8
tick,0x7ffdc994fb34,191499689,0,0x0,8
tick,0x7ffdc994fb34,191514863,0,0x0,8
tick,0x7ffdc994fb34,191530563,0,0x0,8
tick,0x7ffdc994fb34,191545767,0,0x0,8
tick,0x7ffdc994fb34,191561361,0,0x0,8
tick,0x7ffdc994fb34,191576711,0,0x0,8
tick,0x7ffdc994fb34,191592537,0,0x0,8
tick,0x7ffdc994fb34,191607516,0,0x0,8
tick,0x7ffdc994fb34,191623483,0,0x0,8
tick,0x7ffdc994fb34,191639014,0,0x0,8
tick,0x7ffdc994fb34,191654753,0,0x0,8
tick,0x7ffdc994fb34,191670493,0,0x0,8
tick,0x7ffdc994fb34,191685914,0,0x0,8
tick,0x7ffdc994fb34,191701075,0,0x0,8
tick,0x7ffdc994fb34,191716830,0,0x0,8
tick,0x7ffdc994fb34,191731874,0,0x0,8
tick,0x7ffdc994fb34,191747253,0,0x0,8
tick,0x7ffdc994fb34,191762785,0,0x0,8
tick,0x7ffdc994fb34,191778482,0,0x0,8
tick,0x7ffdc994fb34,191793834,0,0x0,8
tick,0x7ffdc994fb34,191809656,0,0x0,8
tick,0x7ffdc994fb34,191824809,0,0x0,8
tick,0x7ffdc994fb34,191840547,0,0x0,8
tick,0x7ffdc994fb34,191855992,0,0x0,8
tick,0x7ffdc994fb34,191871862,0,0x0,8
tick,0x7ffdc994fb34,191887856,0,0x0,8
tick,0x7ffdc994fb34,191903505,0,0x0,8
tick,0x7ffdc994fb34,191919007,0,0x0,8
tick,0x7ffdc994fb34,191934972,0,0x0,8
tick,0x7ffdc994fb34,191950197,0,0x0,8
tick,0x7ffdc994fb34,191966001,0,0x0,8
tick,0x7ffdc994fb34,191981297,0,0x0,8
tick,0x7ffdc994fb34,191997009,0,0x0,8
tick,0x7ffdc994fb34,192012582,0,0x0,8
tick,0x7ffdc994fb34,192028068,0,0x0,8
tick,0x7ffdc994fb34,192043523,0,0x0,8
tick,0x7ffdc994fb34,192058986,0,0x0,8
tick,0x7ffdc994fb34,192074008,0,0x0,8
tick,0x7ffdc994fb34,192089751,0,0x0,8
tick,0x7ffdc994fb34,192105716,0,0x0,8
tick,0x7ffdc994fb34,192121032,0,0x0,8
tick,0x7ffdc994fb34,192136601,0,0x0,8
tick,0x7ffdc994fb34,192152702,0,0x0,8
tick,0x7ffdc994fb34,192168438,0,0x0,8
tick,0x7ffdc994fb34,192183721,0,0x0,8
tick,0x7ffdc994fb34,192199285,0,0x0,8
tick,0x7ffdc994fb34,192214558,0,0x0,8
tick,0x7ffdc994fb34,192230514,0,0x0,8
tick,0x7ffdc994fb34,192245661,0,0x0,8
tick,0x7ffdc994fb34,192261142,0,0x0,8
tick,0x7ffdc994fb34,192276076,0,0x0,8
tick,0x7ffdc994fb34,192292334,0,0x0,8
tick,0x7ffdc994fb34,192307589,0,0x0,8
tick,0x7ffdc994fb34,192322914,0,0x0,8
tick,0x7ffdc994fb34,192338635,0,0x0,8
tick,0x7ffdc994fb34,192353977,0,0x0,8
tick,0x7ffdc994fb34,192369722,0,0x0,8
tick,0x7ffdc994fb34,192384940,0,0x0,8
tick,0x7ffdc994fb34,192400827,0,0x0,8
tick,0x7ffdc994fb34,192416342,0,0x0,8
tick,0x7ffdc994fb34,192432237,0,0x0,8
tick,0x7ffdc994fb34,192447736,0,0x0,8
tick,0x7ffdc994fb34,192463178,0,0x0,8
tick,0x7ffdc994fb34,192478545,0,0x0,8
tick,0x7ffdc994fb34,192494033,0,0x0,8
tick,0x7ffdc994fb34,192509667,0,0x0,8
tick,0x7ffdc994fb34,192524990,0,0x0,8
tick,0x7ffdc994fb34,192540286,0,0x0,8
tick,0x7ffdc994fb34,192555997,0,0x0,8
tick,0x7ffdc994fb34,192571492,0,0x0,8
tick,0x7ffdc994fb34,192586434,0,0x0,8
tick,0x7ffdc994fb34,192601462,0,0x0,8
tick,0x7ffdc994fb34,192617000,0,0x0,8
tick,0x7ffdc994fb34,192632737,0,0x0,8
tick,0x7ffdc994fb34,192648369,0,0x0,8
tick,0x7ffdc994fb34,192664165,0,0x0,8
tick,0x7ffdc994fb34,192680103,0,0x0,8
tick,0x7ffdc994fb34,192695392,0,0x0,8
tick,0x7ffdc994fb34,192711110,0,0x0,8
tick,0x7ffdc994fb34,192726523,0,0x0,8
tick,0x7ffdc994fb34,192741871,0,0x0,8
tick,0x7ffdc994fb34,192757679,0,0x0,8
tick,0x7ffdc994fb34,192772795,0,0x0,8
tick,0x7ffdc994fb34,192788742,0,0x0,8
tick,0x7ffdc994fb34,192804846,0,0x0,8
tick,0x7ffdc994fb34,192820410,0,0x0,8
tick,0x7ffdc994fb34,192835830,0,0x0,8
tick,0x7ffdc994fb34,192851849,0,0x0,8
tick,0x7ffdc994fb34,192866708,0,0x0,8
tick,0x7ffdc994fb34,192882598,0,0x0,8
tick,0x7ffdc994fb34,192898035,0,0x0,8
tick,0x7ffdc994fb34,192913445,0,0x0,8
tick,0x7ffdc994fb34,192929311,0,0x0,8
tick,0x7ffdc994fb34,192944487,0,0x0,8
tick,0x7ffdc994fb34,192960264,0,0x0,8
tick,0x7ffdc994fb34,192975896,0,0x0,8
tick,0x7ffdc994fb34,192991217,0,0x0,8
tick,0x7ffdc994fb34,193006754,0,0x0,8
tick,0x7ffdc994fb34,193021989,0,0x0,8
tick,0x7ffdc994fb34,193037695,0,0x0,8
tick,0x7ffdc994fb34,193053138,0,0x0,8
tick,0x7ffdc994fb34,193068718,0,0x0,8
tick,0x7ffdc994fb34,193084193,0,0x0,8
tick,0x7ffdc994fb34,193099466,0,0x0,8
tick,0x7ffdc994fb34,193115318,0,0x0,8
tick,0x7ffdc994fb34,193131306,0,0x0,8
tick,0x7ffdc994fb34,193146472,0,0x0,8
tick,0x7ffdc994fb34,193161994,0,0x0,8
tick,0x7ffdc994fb34,193177644,0,0x0,8
tick,0x7ffdc994fb34,193193667,0,0x0,8
tick,0x7ffdc994fb34,193210018,0,0x0,8
tick,0x7ffdc994fb34,193225475,0,0x0,8
tick,0x7ffdc994fb34,193241953,0,0x0,8
tick,0x7ffdc994fb34,193257747,0,0x0,8
tick,0x7ffdc994fb34,193272985,0,0x0,8
tick,0x7ffdc994fb34,193288848,0,0x0,8
tick,0x7ffdc994fb34,193304027,0,0x0,8
tick,0x7ffdc994fb34,193319977,0,0x0,8
tick,0x7ffdc994fb34,193335260,0,0x0,8
tick,0x7ffdc994fb34,193350906,0,0x0,8
tick,0x7ffdc994fb34,193366441,0,0x0,8
tick,0x7ffdc994fb34,193381949,0,0x0,8
tick,0x7ffdc994fb34,193397572,0,0x0,8
tick,0x7ffdc994fb34,193412969,0,0x0,8
tick,0x7ffdc994fb34,193428397,0,0x0,8
tick,0x7ffdc994fb34,193443668,0,0x0,8
tick,0x7ffdc994fb34,193459610,0,0x0,8
tick,0x7ffdc994fb34,193475592,0,0x0,8
tick,0x7ffdc994fb34,193490818,0,0x0,8
tick,0x7ffdc994fb34,193506104,0,0x0,8
tick,0x7ffdc994fb34,193521993,0,0x0,8
tick,0x7ffdc994fb34,193537201,0,0x0,8
tick,0x7ffdc994fb34,193553189,0,0x0,8
tick,0x7ffdc994fb34,193569020,0,0x0,8
tick,0x7ffdc994fb34,193584428,0,0x0,8
tick,0x7ffdc994fb34,193599955,0,0x0,8
tick,0x7ffdc994fb34,193615345,0,0x0,8
tick,0x7ffdc994fb34,193631030,0,0x0,8
tick,0x7ffdc994fb34,193646611,0,0x0,8
tick,0x7ffdc994fb34,193662983,0,0x0,8
tick,0x7ffdc994fb34,193678060,0,0x0,8
tick,0x7ffdc994fb34,193693997,0,0x0,8
tick,0x7ffdc994fb34,193709762,0,0x0,8
tick,0x7ffdc994fb34,193725097,0,0x0,8
tick,0x7ffdc994fb34,193740692,0,0x0,8
tick,0x7ffdc994fb34,193755951,0,0x0,8
tick,0x7ffdc994fb34,193771604,0,0x0,8
tick,0x7ffdc994fb34,193787030,0,0x0,8
tick,0x7ffdc994fb34,193802560,0,0x0,8
tick,0x7ffdc994fb34,193817724,0,0x0,8
tick,0x7ffdc994fb34,193833497,0,0x0,8
tick,0x7ffdc994fb34,193848919,0,0x0,8
tick,0x7ffdc994fb34,193864200,0,0x0,8
tick,0x7ffdc994fb34,193879597,0,0x0,8
tick,0x7ffdc994fb34,193894991,0,0x0,8
tick,0x7ffdc994fb34,193910525,0,0x0,8
tick,0x7ffdc994fb34,193925550,0,0x0,8
tick,0x7ffdc994fb34,193941478,0,0x0,8
tick,0x7ffdc994fb34,193957523,0,0x0,8
tick,0x7ffdc994fb34,193973108,0,0x0,8
tick,0x7ffdc994fb34,193987959,0,0x0,8
tick,0x7ffdc994fb34,194003871,0,0x0,8
tick,0x7ffdc994fb34,194019500,0,0x0,8
tick,0x7ffdc994fb34,194034716,0,0x0,8
tick,0x7ffdc994fb34,194050530,0,0x0,8
tick,0x7ffdc994fb34,194066174,0,0x0,8
tick,0x7ffdc994fb34,194081394,0,0x0,8
tick,0x7ffdc994fb34,194097085,0,0x0,8
tick,0x7ffdc994fb34,194113441,0,0x0,8
tick,0x7ffdc994fb34,194128837,0,0x0,8
tick,0x7ffdc994fb34,194144347,0,0x0,8
tick,0x7ffdc994fb34,194159743,0,0x0,8
tick,0x7ffdc994fb34,194175488,0,0x0,8
tick,0x7ffdc994fb34,194191128,0,0x0,8
tick,0x7ffdc994fb34,194206476,0,0x0,8
tick,0x7ffdc994fb34,194222020,0,0x0,8
tick,0x7ffdc994fb34,194237435,0,0x0,8
tick,0x7ffdc994fb34,194253356,0,0x0,8
tick,0x7ffdc994fb34,194268740,0,0x0,8
tick,0x7ffdc994fb34,194283978,0,0x0,8
tick,0x7ffdc994fb34,194300228,0,0x0,8
tick,0x7ffdc994fb34,194315653,0,0x0,8
tick,0x7ffdc994fb34,194331907,0,0x0,8
tick,0x7ffdc994fb34,194347526,0,0x0,8
tick,0x7ffdc994fb34,194362868,0,0x0,8
tick,0x7ffdc994fb34,194378679,0,0x0,8
tick,0x7ffdc994fb34,194393940,0,0x0,8
tick,0x7ffdc994fb34,194409913,0,0x0,8
tick,0x7ffdc994fb34,194425179,0,0x0,8
tick,0x7ffdc994fb34,194440777,0,0x0,8
tick,0x7ffdc994fb34,194456419,0,0x0,8
tick,0x7ffdc994fb34,194471891,0,0x0,8
tick,0x7ffdc994fb34,194487312,0,0x0,8
tick,0x7ffdc994fb34,194503149,0,0x0,8
tick,0x7ffdc994fb34,194518639,0,0x0,8
tick,0x7ffdc994fb34,194534286,0,0x0,8
tick,0x7ffdc994fb34,194550522,0,0x0,8
tick,0x7ffdc994fb34,194566316,0,0x0,8
tick,0x7ffdc994fb34,194581884,0,0x0,8
tick,0x7ffdc994fb34,194597307,0,0x0,8
tick,0x7ffdc994fb34,194612472,0,0x0,8
tick,0x7ffdc994fb34,194628186,0,0x0,8
tick,0x7ffdc994fb34,194643335,0,0x0,8
tick,0x7ffdc994fb34,194659168,0,0x0,8
tick,0x7ffdc994fb34,194674647,0,0x0,8
tick,0x7ffdc994fb34,194689813,0,0x0,8
tick,0x7ffdc994fb34,194705556,0,0x0,8
tick,0x7ffdc994fb34,194721024,0,0x0,8
tick,0x7ffdc994fb34,194736407,0,0x0,8
tick,0x7ffdc994fb34,194752073,0,0x0,8
tick,0x7ffdc994fb34,194767836,0,0x0,8
tick,0x7ffdc994fb34,194783308,0,0x0,8
tick,0x7ffdc994fb34,194799289,0,0x0,8
tick,0x7ffdc994fb34,194814315,0,0x0,8
tick,0x7ffdc994fb34,194830189,0,0x0,8
tick,0x7ffdc994fb34,194845640,0,0x0,8
tick,0x7ffdc994fb34,194861361,0,0x0,8
tick,0x7ffdc994fb34,194876597,0,0x0,8
tick,0x7ffdc994fb34,194892178,0,0x0,8
tick,0x7ffdc994fb34,194907734,0,0x0,8
tick,0x7ffdc994fb34,194923349,0,0x0,8
tick,0x7ffdc994fb34,194938827,0,0x0,8
tick,0x7ffdc994fb34,194953865,0,0x0,8
tick,0x7ffdc994fb34,194970098,0,0x0,8
tick,0x7ffdc994fb34,194985045,0,0x0,8
tick,0x7ffdc994fb34,195000950,0,0x0,8
tick,0x7ffdc994fb34,195016430,0,0x0,8
tick,0x7ffdc994fb34,195031627,0,0x0,8
tick,0x7ffdc994fb34,195047338,0,0x0,8
tick,0x7ffdc994fb34,195062562,0,0x0,8
tick,0x7ffdc994fb34,195078173,0,0x0,8
tick,0x7ffdc994fb34,195093655,0,0x0,8
tick,0x7ffdc994fb34,195109602,0,0x0,8
tick,0x7ffdc994fb34,195124733,0,0x0,8
tick,0x7ffdc994fb34,195140285,0,0x0,8
tick,0x7ffdc994fb34,195155674,0,0x0,8
tick,0x7ffdc994fb34,195171369,0,0x0,8
tick,0x7ffdc994fb34,195186605,0,0x0,8
tick,0x7ffdc994fb34,195202262,0,0x0,8
tick,0x7ffdc994fb34,195217385,0,0x0,8
tick,0x7ffdc994fb34,195232977,0,0x0,8
tick,0x7ffdc994fb34,195248671,0,0x0,8
tick,0x7ffdc994fb34,195264155,0,0x0,8
tick,0x7ffdc994fb34,195279752,0,0x0,8
tick,0x7ffdc994fb34,195295219,0,0x0,8
tick,0x7ffdc994fb34,195310923,0,0x0,8
tick,0x7ffdc994fb34,195326968,0,0x0,8
tick,0x7ffdc994fb34,195342782,0,0x0,8
tick,0x7ffdc994fb34,195358186,0,0x0,8
tick,0x7ffdc994fb34,195373658,0,0x0,8
tick,0x7ffdc994fb34,195389145,0,0x0,8
tick,0x7ffdc994fb34,195404825,0,0x0,8
tick,0x7ffdc994fb34,195420023,0,0x0,8
tick,0x7ffdc994fb34,195435950,0,0x0,8
tick,0x7ffdc994fb34,195451193,0,0x0,8
tick,0x7ffdc994fb34,195466994,0,0x0,8
tick,0x7ffdc994fb34,195482479,0,0x0,8
tick,0x7ffdc994fb34,195497926,0,0x0,8
tick,0x7ffdc994fb34,195513261,0,0x0,8
tick,0x7ffdc994fb34,195529142,0,0x0,8
tick,0x7ffdc994fb34,195544566,0,0x0,8
tick,0x7ffdc994fb34,195560067,0,0x0,8
tick,0x7ffdc994fb34,195575680,0,0x0,8
tick,0x7ffdc994fb34,195591613,0,0x0,8
tick,0x7ffdc994fb34,195607027,0,0x0,8
tick,0x7ffdc994fb34,195622525,0,0x0,8
tick,0x7ffdc994fb34,195638047,0,0x0,8
tick,0x7ffdc994fb34,195653709,0,0x0,8
tick,0x7ffdc994fb34,195669215,0,0x0,8
tick,0x7ffdc994fb34,195684653,0,0x0,8
tick,0x7ffdc994fb34,195700119,0,0x0,8
tick,0x7ffdc994fb34,195715546,0,0x0,8
tick,0x7ffdc994fb34,195731346,0,0x0,8
tick,0x7ffdc994fb34,195746771,0,0x0,8
tick,0x7ffdc994fb34,195762161,0,0x0,8
tick,0x7ffdc994fb34,195777674,0,0x0,8
tick,0x7ffdc994fb34,195793771,0,0x0,8
tick,0x7ffdc994fb34,195808410,0,0x0,8
tick,0x7ffdc994fb34,195823763,0,0x0,8
tick,0x7ffdc994fb34,195839541,0,0x0,8
tick,0x7ffdc994fb34,195854960,0,0x0,8
tick,0x7ffdc994fb34,195870705,0,0x0,8
tick,0x7ffdc994fb34,195885918,0,0x0,8
tick,0x7ffdc994fb34,195902192,0,0x0,8
tick,0x7ffdc994fb34,195917576,0,0x0,8
tick,0x7ffdc994fb34,195933465,0,0x0,8
tick,0x7ffdc994fb34,195949075,0,0x0,8
tick,0x7ffdc994fb34,195964346,0,0x0,8
tick,0x7ffdc994fb34,195979467,0,0x0,8
tick,0x7ffdc994fb34,195995467,0,0x0,8
tick,0x7ffdc994fb34,196010942,0,0x0,8
tick,0x7ffdc994fb34,196026664,0,0x0,8
tick,0x7ffdc994fb34,196042389,0,0x0,8
tick,0x7ffdc994fb34,196058095,0,0x0,8
tick,0x7ffdc994fb34,196073393,0,0x0,8
tick,0x7ffdc994fb34,196088812,0,0x0,8
tick,0x7ffdc994fb34,196104317,0,0x0,8
tick,0x7ffdc994fb34,196119653,0,0x0,8
tick,0x7ffdc994fb34,196134912,0,0x0,8
tick,0x7ffdc994fb34,196150720,0,0x0,8
tick,0x7ffdc994fb34,196166482,0,0x0,8
tick,0x7ffdc994fb34,196182279,0,0x0,8
tick,0x7ffdc994fb34,196197671,0,0x0,8
tick,0x7ffdc994fb34,196213468,0,0x0,8
tick,0x7ffdc994fb34,196229749,0,0x0,8
tick,0x7ffdc994fb34,196245331,0,0x0,8
tick,0x7ffdc994fb34,196260953,0,0x0,8
tick,0x7ffdc994fb34,196276655,0,0x0,8
tick,0x7ffdc994fb34,196292293,0,0x0,8
tick,0x7ffdc994fb34,196308033,0,0x0,8
tick,0x7ffdc994fb34,196323387,0,0x0,8
tick,0x7ffdc994fb34,196338980,0,0x0,8
tick,0x7ffdc994fb34,196354420,0,0x0,8
tick,0x7ffdc994fb34,196370089,0,0x0,8
tick,0x7ffdc994fb34,196385369,0,0x0,8
tick,0x7ffdc994fb34,196401134,0,0x0,8
tick,0x7ffdc994fb34,196416723,0,0x0,8
tick,0x7ffdc994fb34,196432956,0,0x0,8
tick,0x7ffdc994fb34,196448695,0,0x0,8
tick,0x7ffdc994fb34,196464144,0,0x0,8
tick,0x7ffdc994fb34,196479867,0,0x0,8
tick,0x7ffdc994fb34,196495392,0,0x0,8
tick,0x7ffdc994fb34,196510685,0,0x0,8
tick,0x7ffdc994fb34,196526362,0,0x0,8
tick,0x7ffdc994fb34,196541326,0,0x0,8
tick,0x7ffdc994fb34,196557122,0,0x0,8
tick,0x7ffdc994fb34,196573473,0,0x0,8
tick,0x7ffdc994fb34,196588990,0,0x0,8
tick,0x7ffdc994fb34,196604098,0,0x0,8
tick,0x7ffdc994fb34,196619908,0,0x0,8
tick,0x7ffdc994fb34,196634705,0,0x0,8
tick,0x7ffdc994fb34,196650429,0,0x0,8
tick,0x7ffdc994fb34,196666622,0,0x0,8
tick,0x7ffdc994fb34,196681919,0,0x0,8
tick,0x7ffdc994fb34,196697493,0,0x0,8
tick,0x7ffdc994fb34,196713151,0,0x0,8
tick,0x7ffdc994fb34,196728640,0,0x0,8
tick,0x7ffdc994fb34,196744087,0,0x0,8
tick,0x7ffdc994fb34,196759724,0,0x0,8
tick,0x7ffdc994fb34,196774749,0,0x0,8
tick,0x7ffdc994fb34,196790312,0,0x0,8
tick,0x7ffdc994fb34,196806028,0,0x0,8
tick,0x7ffdc994fb34,196821039,0,0x0,8
tick,0x7ffdc994fb34,196836637,0,0x0,8
tick,0x7ffdc994fb34,196851989,0,0x0,8
tick,0x7ffdc994fb34,196867879,0,0x0,8
tick,0x7ffdc994fb34,196883130,0,0x0,8
tick,0x7ffdc994fb34,196898871,0,0x0,8
tick,0x7ffdc994fb34,196914358,0,0x0,8
tick,0x7ffdc994fb34,196929832,0,0x0,8
tick,0x7ffdc994fb34,196945104,0,0x0,8
tick,0x7ffdc994fb34,196961436,0,0x0,8
tick,0x7ffdc994fb34,196977386,0,0x0,8
tick,0x7ffdc994fb34,196993193,0,0x0,8
tick,0x7ffdc994fb34,197008644,0,0x0,8
tick,0x7ffdc994fb34,197024770,0,0x0,8
tick,0x7ffdc994fb34,197040488,0,0x0,8
tick,0x7ffdc994fb34,197055911,0,0x0,8
tick,0x7ffdc994fb34,197071039,0,0x0,8
tick,0x7ffdc994fb34,197086361,0,0x0,8
tick,0x7ffdc994fb34,197101403,0,0x0,8
tick,0x7ffdc994fb34,197117493,0,0x0,8
tick,0x7ffdc994fb34,197132893,0,0x0,8
tick,0x7ffdc994fb34,197148580,0,0x0,8
tick,0x7ffdc994fb34,197163980,0,0x0,8
tick,0x7ffdc994fb34,197179688,0,0x0,8
tick,0x7ffdc994fb34,197194895,0,0x0,8
tick,0x7ffdc994fb34,197210861,0,0x0,8
tick,0x7ffdc994fb34,197226800,0,0x0,8
tick,0x7ffdc994fb34,197242468,0,0x0,8
tick,0x7ffdc994fb34,197258098,0,0x0,8
tick,0x7ffdc994fb34,197273443,0,0x0,8
tick,0x7ffdc994fb34,197289085,0,0x0,8
tick,0x7ffdc994fb34,197304772,0,0x0,8
tick,0x7ffdc994fb34,197320466,0,0x0,8
tick,0x7ffdc994fb34,197336366,0,0x0,8
tick,0x7ffdc994fb34,197351885,0,0x0,8
tick,0x7ffdc994fb34,197367616,0,0x0,8
tick,0x7ffdc994fb34,197383190,0,0x0,8
tick,0x7ffdc994fb34,197398865,0,0x0,8
tick,0x7ffdc994fb34,197414913,0,0x0,8
tick,0x7ffdc994fb34,197430327,0,0x0,8
tick,0x7ffdc994fb34,197446268,0,0x0,8
tick,0x7ffdc994fb34,197461677,0,0x0,8
tick,0x7ffdc994fb34,197477311,0,0x0,8
tick,0x7ffdc994fb34,197492638,0,0x0,8
tick,0x7ffdc994fb34,197507997,0,0x0,8
tick,0x7ffdc994fb34,197523829,0,0x0,8
tick,0x7ffdc994fb34,197539112,0,0x0,8
tick,0x7ffdc994fb34,197554907,0,0x0,8
tick,0x7ffdc994fb34,197570082,0,0x0,8
tick,0x7ffdc994fb34,197586324,0,0x0,8
tick,0x7ffdc994fb34,197601133,0,0x0,8
tick,0x7ffdc994fb34,197616981,0,0x0,8
tick,0x7ffdc994fb34,197632247,0,0x0,8
tick,0x7ffdc994fb34,197648030,0,0x0,8
tick,0x7ffdc994fb34,197663317,0,0x0,8
tick,0x7ffdc994fb34,197679238,0,0x0,8
tick,0x7ffdc994fb34,197694532,0,0x0,8
tick,0x7ffdc994fb34,197710353,0,0x0,8
tick,0x7ffdc994fb34,197726289,0,0x0,8
tick,0x7ffdc994fb34,197741820,0,0x0,8
tick,0x7ffdc994fb34,197757393,0,0x0,8
tick,0x7ffdc994fb34,197772953,0,0x0,8
tick,0x7ffdc994fb34,197788447,0,0x0,8
tick,0x7ffdc994fb34,197803793,0,0x0,8
tick,0x7ffdc994fb34,197819544,0,0x0,8
tick,0x7ffdc994fb34,197834973,0,0x0,8
tick,0x7ffdc994fb34,197850442,0,0x0,8
tick,0x7ffdc994fb34,197866196,0,0x0,8
tick,0x7ffdc994fb34,197882294,0,0x0,8
tick,0x7ffdc994fb34,197898424,0,0x0,8
tick,0x7ffdc994fb34,197913411,0,0x0,8
tick,0x7ffdc994fb34,197929310,0,0x0,8
tick,0x7ffdc994fb34,197944545,0,0x0,8
tick,0x7ffdc994fb34,197960215,0,0x0,8
tick,0x7ffdc994fb34,197975958,0,0x0,8
tick,0x7ffdc994fb34,197991720,0,0x0,8
tick,0x7ffdc994fb34,198007248,0,0x0,8
tick,0x7ffdc994fb34,198022981,0,0x0,8
tick,0x7ffdc994fb34,198038087,0,0x0,8
tick,0x7ffdc994fb34,198053438,0,0x0,8
tick,0x7ffdc994fb34,198069539,0,0x0,8
tick,0x7ffdc994fb34,198084797,0,0x0,8
tick,0x7ffdc994fb34,198100409,0,0x0,8
tick,0x7ffdc994fb34,198116120,0,0x0,8
tick,0x7ffdc994fb34,198132273,0,0x0,8
tick,0x7ffdc994fb34,198147429,0,0x0,8
tick,0x7ffdc994fb34,198163033,0,0x0,8
tick,0x7ffdc994fb34,198178765,0,0x0,8
tick,0x7ffdc994fb34,198194442,0,0x0,8
tick,0x7ffdc994fb34,198210276,0,0x0,8
tick,0x7ffdc994fb34,198226013,0,0x0,8
tick,0x7ffdc994fb34,198241262,0,0x0,8
tick,0x7ffdc994fb34,198257306,0,0x0,8
tick,0x7ffdc994fb34,198273440,0,0x0,8
tick,0x7ffdc994fb34,198289067,0,0x0,8
tick,0x7ffdc994fb34,198304267,0,0x0,8
tick,0x7ffdc994fb34,198319989,0,0x0,8
tick,0x7ffdc994fb34,198335794,0,0x0,8
tick,0x7ffdc994fb34,198350954,0,0x0,8
tick,0x7ffdc994fb34,198367023,0,0x0,8
tick,0x7ffdc994fb34,198382677,0,0x0,8
tick,0x7ffdc994fb34,198397985,0,0x0,8
tick,0x7ffdc994fb34,198413678,0,0x0,8
tick,0x7ffdc994fb34,198428942,0,0x0,8
tick,0x7ffdc994fb34,198445189,0,0x0,8
tick,0x7ffdc994fb34,198460249,0,0x0,8
tick,0x7ffdc994fb34,198475702,0,0x0,8
tick,0x7ffdc994fb34,198491793,0,0x0,8
tick,0x7ffdc994fb34,198507634,0,0x0,8
tick,0x7ffdc994fb34,198522521,0,0x0,8
tick,0x7ffdc994fb34,198537882,0,0x0,8
tick,0x7ffdc994fb34,198553380,0,0x0,8
tick,0x7ffdc994fb34,198569059,0,0x0,8
tick,0x7ffdc994fb34,198585232,0,0x0,8
tick,0x7ffdc994fb34,198600692,0,0x0,8
tick,0x7ffdc994fb34,198616467,0,0x0,8
tick,0x7ffdc994fb34,198631529,0,0x0,8
tick,0x7ffdc994fb34,198647287,0,0x0,8
tick,0x7ffdc994fb34,198663090,0,0x0,8
tick,0x7ffdc994fb34,198678387,0,0x0,8
tick,0x7ffdc994fb34,198693554,0,0x0,8
tick,0x7ffdc994fb34,198709315,0,0x0,8
tick,0x7ffdc994fb34,198725373,0,0x0,8
tick,0x7ffdc994fb34,198741500,0,0x0,8
tick,0x7ffdc994fb34,198757006,0,0x0,8
tick,0x7ffdc994fb34,198773152,0,0x0,8
tick,0x7ffdc994fb34,198789004,0,0x0,8
tick,0x7ffdc994fb34,198804631,0,0x0,8
tick,0x7ffdc994fb34,198819782,0,0x0,8
tick,0x7ffdc994fb34,198835477,0,0x0,8
tick,0x7ffdc994fb34,198851403,0,0x0,8
tick,0x7ffdc994fb34,198867496,0,0x0,8
tick,0x7ffdc994fb34,198883727,0,0x0,8
tick,0x7ffdc994fb34,198899521,0,0x0,8
tick,0x7ffdc994fb34,198914586,0,0x0,8
tick,0x7ffdc994fb34,198930284,0,0x0,8
tick,0x7ffdc994fb34,198945857,0,0x0,8
tick,0x7ffdc994fb34,198961907,0,0x0,8
tick,0x7ffdc994fb34,198977201,0,0x0,8
tick,0x7ffdc994fb34,198993356,0,0x0,8
tick,0x7ffdc994fb34,199009324,0,0x0,8
tick,0x7ffdc994fb34,199025209,0,0x0,8
tick,0x7ffdc994fb34,199040512,0,0x0,8
tick,0x7ffdc994fb34,199056270,0,0x0,8
tick,0x7ffdc994fb34,199072013,0,0x0,8
tick,0x7ffdc994fb34,199088109,0,0x0,8
tick,0x7ffdc994fb34,199103611,0,0x0,8
tick,0x7ffdc994fb34,199118724,0,0x0,8
tick,0x7ffdc994fb34,199134360,0,0x0,8
tick,0x7ffdc994fb34,199150399,0,0x0,8
tick,0x7ffdc994fb34,199165829,0,0x0,8
tick,0x7ffdc994fb34,199181454,0,0x0,8
tick,0x7ffdc994fb34,199196969,0,0x0,8
tick,0x7ffdc994fb34,199212422,0,0x0,8
tick,0x7ffdc994fb34,199228173,0,0x0,8
tick,0x7ffdc994fb34,199243399,0,0x0,8
tick,0x7ffdc994fb34,199258996,0,0x0,8
tick,0x7ffdc994fb34,199274454,0,0x0,8
tick,0x7ffdc994fb34,199290212,0,0x0,8
tick,0x7ffdc994fb34,199306168,0,0x0,8
tick,0x7ffdc994fb34,199321371,0,0x0,8
tick,0x7ffdc994fb34,199337178,0,0x0,8
tick,0x7ffdc994fb34,199352416,0,0x0,8
tick,0x7ffdc994fb34,199368494,0,0x0,8
tick,0x7ffdc994fb34,199384240,0,0x0,8
tick,0x7ffdc994fb34,199399554,0,0x0,8
tick,0x7ffdc994fb34,199415122,0,0x0,8
tick,0x7ffdc994fb34,199430518,0,0x0,8
tick,0x7ffdc994fb34,199445852,0,0x0,8
tick,0x7ffdc994fb34,199461314,0,0x0,8
tick,0x7ffdc994fb34,199476346,0,0x0,8
tick,0x7ffdc994fb34,199492122,0,0x0,8
tick,0x7ffdc994fb34,199507798,0,0x0,8
tick,0x7ffdc994fb34,199523123,0,0x0,8
tick,0x7ffdc994fb34,199538894,0,0x0,8
tick,0x7ffdc994fb34,199554435,0,0x0,8
tick,0x7ffdc994fb34,199569501,0,0x0,8
tick,0x7ffdc994fb34,199585333,0,0x0,8
tick,0x7ffdc994fb34,199601262,0,0x0,8
tick,0x7ffdc994fb34,199616888,0,0x0,8
tick,0x7ffdc994fb34,199632021,0,0x0,8
tick,0x7ffdc994fb34,199647969,0,0x0,8
tick,0x7ffdc994fb34,199663313,0,0x0,8
tick,0x7ffdc994fb34,199678842,0,0x0,8
tick,0x7ffdc994fb34,199694709,0,0x0,8
tick,0x7ffdc994fb34,199710215,0,0x0,8
tick,0x7ffdc994fb34,199725633,0,0x0,8
tick,0x7ffdc994fb34,199741446,0,0x0,8
tick,0x7ffdc994fb34,199757645,0,0x0,8
tick,0x7ffdc994fb34,199773036,0,0x0,8
tick,0x7ffdc994fb34,199788694,0,0x0,8
tick,0x7ffdc994fb34,199804392,0,0x0,8
tick,0x7ffdc994fb34,199819957,0,0x0,8
tick,0x7ffdc994fb34,199834665,0,0x0,8
tick,0x7ffdc994fb34,199850448,0,0x0,8
tick,0x7ffdc994fb34,199866386,0,0x0,8
tick,0x7ffdc994fb34,199881706,0,0x0,8
tick,0x7ffdc994fb34,199897044,0,0x0,8
tick,0x7ffdc994fb34,199912847,0,0x0,8
tick,0x7ffdc994fb34,199928402,0,0x0,8
tick,0x7ffdc994fb34,199943602,0,0x0,8
tick,0x7ffdc994fb34,199959114,0,0x0,8
tick,0x7ffdc994fb34,199974992,0,0x0,8
tick,0x7ffdc994fb34,199990186,0,0x0,8
tick,0x7ffdc994fb34,200006003,0,0x0,8
tick,0x7ffdc994fb34,200021085,0,0x0,8
tick,0x7ffdc994fb34,200036393,0,0x0,8
tick,0x7ffdc994fb34,200051884,0,0x0,8
tick,0x7ffdc994fb34,200067943,0,0x0,8
tick,0x7ffdc994fb34,200083249,0,0x0,8
tick,0x7ffdc994fb34,200098747,0,0x0,8
tick,0x7ffdc994fb34,200113939,0,0x0,8
tick,0x7ffdc994fb34,200129208,0,0x0,8
tick,0x7ffdc994fb34,200144328,0,0x0,8
tick,0x7ffdc994fb34,200159693,0,0x0,8
tick,0x7ffdc994fb34,200175079,0,0x0,8
tick,0x7ffdc994fb34,200190521,0,0x0,8
tick,0x7ffdc994fb34,200205609,0,0x0,8
tick,0x7ffdc994fb34,200221237,0,0x0,8
tick,0x7ffdc994fb34,200236467,0,0x0,8
tick,0x7ffdc994fb34,200252532,0,0x0,8
tick,0x7ffdc994fb34,200268236,0,0x0,8
tick,0x7ffdc994fb34,200284506,0,0x0,8
tick,0x7ffdc994fb34,200300292,0,0x0,8
tick,0x7ffdc994fb34,200315630,0,0x0,8
tick,0x7ffdc994fb34,200331748,0,0x0,8
tick,0x7ffdc994fb34,200347003,0,0x0,8
tick,0x7ffdc994fb34,200362609,0,0x0,8
tick,0x7ffdc994fb34,200377860,0,0x0,8
tick,0x7ffdc994fb34,200393134,0,0x0,8
tick,0x7ffdc994fb34,200408974,0,0x0,8
tick,0x7ffdc994fb34,200424028,0,0x0,8
tick,0x7ffdc994fb34,200439734,0,0x0,8
tick,0x7ffdc994fb34,200455135,0,0x0,8
tick,0x7ffdc994fb34,200470659,0,0x0,8
tick,0x7ffdc994fb34,200486417,0,0x0,8
tick,0x7ffdc994fb34,200502627,0,0x0,8
tick,0x7ffdc994fb34,200518524,0,0x0,8
tick,0x7ffdc994fb34,200533754,0,0x0,8
tick,0x7ffdc994fb34,200549579,0,0x0,8
tick,0x7ffdc994fb34,200564881,0,0x0,8
tick,0x7ffdc994fb34,200580902,0,0x0,8
tick,0x7ffdc994fb34,200596555,0,0x0,8
tick,0x7ffdc994fb34,200612799,0,0x0,8
tick,0x7ffdc994fb34,200628774,0,0x0,8
tick,0x7ffdc994fb34,200644013,0,0x0,8
tick,0x7ffdc994fb34,200659727,0,0x0,8
tick,0x7ffdc994fb34,200675094,0,0x0,8
tick,0x7ffdc994fb34,200690836,0,0x0,8
tick,0x7ffdc994fb34,200706225,0,0x0,8
tick,0x7ffdc994fb34,200721995,0,0x0,8
tick,0x7ffdc994fb34,200737842,0,0x0,8
tick,0x7ffdc994fb34,200753396,0,0x0,8
tick,0x7ffdc994fb34,200769511,0,0x0,8
tick,0x7ffdc994fb34,200785480,0,0x0,8
tick,0x7ffdc994fb34,200801642,0,0x0,8
tick,0x7ffdc994fb34,200817455,0,0x0,8
tick,0x7ffdc994fb34,200833022,0,0x0,8
tick,0x7ffdc994fb34,200848490,0,0x0,8
tick,0x7ffdc994fb34,200863935,0,0x0,8
tick,0x7ffdc994fb34,200879455,0,0x0,8
tick,0x7ffdc994fb34,200895015,0,0x0,8
tick,0x7ffdc994fb34,200910196,0,0x0,8
tick,0x7ffdc994fb34,200925408,0,0x0,8
tick,0x7ffdc994fb34,200941226,0,0x0,8
tick,0x7ffdc994fb34,200956405,0,0x0,8
tick,0x7ffdc994fb34,200972464,0,0x0,8
tick,0x7ffdc994fb34,200987978,0,0x0,8
tick,0x7ffdc994fb34,201004128,0,0x0,8
tick,0x7ffdc994fb34,201020309,0,0x0,8
tick,0x7ffdc994fb34,201035810,0,0x0,8
tick,0x7ffdc994fb34,201051035,0,0x0,8
tick,0x7ffdc994fb34,201067177,0,0x0,8
tick,0x7ffdc994fb34,201082163,0,0x0,8
tick,0x7ffdc994fb34,201097378,0,0x0,8
tick,0x7ffdc994fb34,201113593,0,0x0,8
tick,0x7ffdc994fb34,201129125,0,0x0,8
tick,0x7ffdc994fb34,201144716,0,0x0,8
tick,0x7ffdc994fb34,201160132,0,0x0,8
tick,0x7ffdc994fb34,201175850,0,0x0,8
tick,0x7ffdc994fb34,201191387,0,0x0,8
tick,0x7ffdc994fb34,201206941,0,0x0,8
tick,0x7ffdc994fb34,201222371,0,0x0,8
tick,0x7ffdc994fb34,201237971,0,0x0,8
tick,0x7ffdc994fb34,201253560,0,0x0,8
tick,0x7ffdc994fb34,201269452,0,0x0,8
tick,0x7ffdc994fb34,201284618,0,0x0,8
tick,0x7ffdc994fb34,201299699,0,0x0,8
tick,0x7ffdc994fb34,201315583,0,0x0,8
tick,0x7ffdc994fb34,201331017,0,0x0,8
tick,0x7ffdc994fb34,201346281,0,0x0,8
tick,0x7ffdc994fb34,201361677,0,0x0,8
tick,0x7ffdc994fb34,201376999,0,0x0,8
tick,0x7ffdc994fb34,201392426,0,0x0,8
tick,0x7ffdc994fb34,201407986,0,0x0,8
tick,0x7ffdc994fb34,201423611,0,0x0,8
tick,0x7ffdc994fb34,201438981,0,0x0,8
tick,0x7ffdc994fb34,201454592,0,0x0,8
tick,0x7ffdc994fb34,201470073,0,0x0,8
tick,0x7ffdc994fb34,201486098,0,0x0,8
tick,0x7ffdc994fb34,201501247,0,0x0,8
tick,0x7ffdc994fb34,201516738,0,0x0,8
tick,0x7ffdc994fb34,201533006,0,0x0,8
tick,0x7ffdc994fb34,201548209,0,0x0,8
tick,0x7ffdc994fb34,201563614,0,0x0,8
tick,0x7ffdc994fb34,201579023,0,0x0,8
tick,0x7ffdc994fb34,201594250,0,0x0,8
tick,0x7ffdc994fb34,201609953,0,0x0,8
tick,0x7ffdc994fb34,201625258,0,0x0,8
tick,0x7ffdc994fb34,201640738,0,0x0,8
tick,0x7ffdc994fb34,201656429,0,0x0,8
tick,0x7ffdc994fb34,201672082,0,0x0,8
tick,0x7ffdc994fb34,201687415,0,0x0,8
tick,0x7ffdc994fb34,201702989,0,0x0,8
tick,0x7ffdc994fb34,201718473,0,0x0,8
tick,0x7ffdc994fb34,201734104,0,0x0,8
tick,0x7ffdc994fb34,201750004,0,0x0,8
tick,0x7ffdc994fb34,201765280,0,0x0,8
tick,0x7ffdc994fb34,201781117,0,0x0,8
tick,0x7ffdc994fb34,201796095,0,0x0,8
tick,0x7ffdc994fb34,201811695,0,0x0,8
tick,0x7ffdc994fb34,201827282,0,0x0,8
tick,0x7ffdc994fb34,201843264,0,0x0,8
tick,0x7ffdc994fb34,201858932,0,0x0,8
tick,0x7ffdc994fb34,201874082,0,0x0,8
tick,0x7ffdc994fb34,201890322,0,0x0,8
tick,0x7ffdc994fb34,201906326,0,0x0,8
tick,0x7ffdc994fb34,201922412,0,0x0,8
tick,0x7ffdc994fb34,201938082,0,0x0,8
tick,0x7ffdc994fb34,201953476,0,0x0,8
tick,0x7ffdc994fb34,201969421,0,0x0,8
tick,0x7ffdc994fb34,201984459,0,0x0,8
tick,0x7ffdc994fb34,202000077,0,0x0,8
tick,0x7ffdc994fb34,202015467,0,0x0,8
tick,0x7ffdc994fb34,202031175,0,0x0,8
tick,0x7ffdc994fb34,202046388,0,0x0,8
tick,0x7ffdc994fb34,202062083,0,0x0,8
tick,0x7ffdc994fb34,202078008,0,0x0,8
tick,0x7ffdc994fb34,202093825,0,0x0,8
tick,0x7ffdc994fb34,202108770,0,0x0,8
tick,0x7ffdc994fb34,202124546,0,0x0,8
tick,0x7ffdc994fb34,202140000,0,0x0,8
tick,0x7ffdc994fb34,202155964,0,0x0,8
tick,0x7ffdc994fb34,202171628,0,0x0,8
tick,0x7ffdc994fb34,202187000,0,0x0,8
tick,0x7ffdc994fb34,202202433,0,0x0,8
tick,0x7ffdc994fb34,202217656,0,0x0,8
tick,0x7ffdc994fb34,202233451,0,0x0,8
tick,0x7ffdc994fb34,202248673,0,0x0,8
tick,0x7ffdc994fb34,202264885,0,0x0,8
tick,0x7ffdc994fb34,202280869,0,0x0,8
tick,0x7ffdc994fb34,202296844,0,0x0,8
tick,0x7ffdc994fb34,202312866,0,0x0,8
tick,0x7ffdc994fb34,202328060,0,0x0,8
tick,0x7ffdc994fb34,202343810,0,0x0,8
tick,0x7ffdc994fb34,202358896,0,0x0,8
tick,0x7ffdc994fb34,202374417,0,0x0,8
tick,0x7ffdc994fb34,202389718,0,0x0,8
tick,0x7ffdc994fb34,202405769,0,0x0,8
tick,0x7ffdc994fb34,202421114,0,0x0,8
tick,0x7ffdc994fb34,202436816,0,0x0,8
tick,0x7ffdc994fb34,202452899,0,0x0,8
tick,0x7ffdc994fb34,202468390,0,0x0,8
tick,0x7ffdc994fb34,202484618,0,0x0,8
tick,0x7ffdc994fb34,202500004,0,0x0,8
tick,0x7ffdc994fb34,202515821,0,0x0,8
tick,0x7ffdc994fb34,202531458,0,0x0,8
tick,0x7ffdc994fb34,202547089,0,0x0,8
tick,0x7ffdc994fb34,202562278,0,0x0,8
tick,0x7ffdc994fb34,202578273,0,0x0,8
tick,0x7ffdc994fb34,202593926,0,0x0,8
tick,0x7ffdc994fb34,202609562,0,0x0,8
tick,0x7ffdc994fb34,202624597,0,0x0,8
tick,0x7ffdc994fb34,202640159,0,0x0,8
tick,0x7ffdc994fb34,202655750,0,0x0,8
tick,0x7ffdc994fb34,202670746,0,0x0,8
tick,0x7ffdc994fb34,202686510,0,0x0,8
tick,0x7ffdc994fb34,202702228,0,0x0,8
tick,0x7ffdc994fb34,202717768,0,0x0,8
tick,0x7ffdc994fb34,202733236,0,0x0,8
tick,0x7ffdc994fb34,202748839,0,0x0,8
tick,0x7ffdc994fb34,202764400,0,0x0,8
tick,0x7ffdc994fb34,202779718,0,0x0,8
tick,0x7ffdc994fb34,202795656,0,0x0,8
tick,0x7ffdc994fb34,202811206,0,0x0,8
tick,0x7ffdc994fb34,202827051,0,0x0,8
tick,0x7ffdc994fb34,202842063,0,0x0,8
tick,0x7ffdc994fb34,202857445,0,0x0,8
tick,0x7ffdc994fb34,202873078,0,0x0,8
tick,0x7ffdc994fb34,202889252,0,0x0,8
tick,0x7ffdc994fb34,202904270,0,0x0,8
tick,0x7ffdc994fb34,202919685,0,0x0,8
tick,0x7ffdc994fb34,202934994,0,0x0,8
tick,0x7ffdc994fb34,202950859,0,0x0,8
tick,0x7ffdc994fb34,202966797,0,0x0,8
tick,0x7ffdc994fb34,202982517,0,0x0,8
tick,0x7ffdc994fb34,202997921,0,0x0,8
tick,0x7ffdc994fb34,203013641,0,0x0,8
tick,0x7ffdc994fb34,203029754,0,0x0,8
tick,0x7ffdc994fb34,203044988,0,0x0,8
tick,0x7ffdc994fb34,203060862,0,0x0,8
tick,0x7ffdc994fb34,203076558,0,0x0,8
tick,0x7ffdc994fb34,203091573,0,0x0,8
tick,0x7ffdc994fb34,203107014,0,0x0,8
tick,0x7ffdc994fb34,203123364,0,0x0,8
tick,0x7ffdc994fb34,203139130,0,0x0,8
tick,0x7ffdc994fb34,203154473,0,0x0,8
tick,0x7ffdc994fb34,203170424,0,0x0,8
tick,0x7ffdc994fb34,203186119,0,0x0,8
tick,0x7ffdc994fb34,203201643,0,0x0,8
tick,0x7ffdc994fb34,203217359,0,0x0,8
tick,0x7ffdc994fb34,203232694,0,0x0,8
tick,0x7ffdc994fb34,203248031,0,0x0,8
tick,0x7ffdc994fb34,203263285,0,0x0,8
tick,0x7ffdc994fb34,203279229,0,0x0,8
tick,0x7ffdc994fb34,203294488,0,0x0,8
tick,0x7ffdc994fb34,203310219,0,0x0,8
tick,0x7ffdc994fb34,203325459,0,0x0,8
tick,0x7ffdc994fb34,203341405,0,0x0,8
tick,0x7ffdc994fb34,203356637,0,0x0,8
tick,0x7ffdc994fb34,203372231,0,0x0,8
tick,0x7ffdc994fb34,203387790,0,0x0,8
tick,0x7ffdc994fb34,203403040,0,0x0,8
tick,0x7ffdc994fb34,203418956,0,0x0,8
tick,0x7ffdc994fb34,203433996,0,0x0,8
tick,0x7ffdc994fb34,203449492,0,0x0,8
tick,0x7ffdc994fb34,203464876,0,0x0,8
tick,0x7ffdc994fb34,203480544,0,0x0,8
tick,0x7ffdc994fb34,203495861,0,0x0,8
tick,0x7ffdc994fb34,203511455,0,0x0,8
tick,0x7ffdc994fb34,203526903,0,0x0,8
tick,0x7ffdc994fb34,203542486,0,0x0,8
tick,0x7ffdc994fb34,203558117,0,0x0,8
tick,0x7ffdc994fb34,203573431,0,0x0,8
tick,0x7ffdc994fb34,203589128,0,0x0,8
tick,0x7ffdc994fb34,203604653,0,0x0,8
tick,0x7ffdc994fb34,203620514,0,0x0,8
tick,0x7ffdc994fb34,203635999,0,0x0,8
tick,0x7ffdc994fb34,203651417,0,0x0,8
tick,0x7ffdc994fb34,203666939,0,0x0,8
tick,0x7ffdc994fb34,203682824,0,0x0,8
tick,0x7ffdc994fb34,203698384,0,0x0,8
tick,0x7ffdc994fb34,203714195,0,0x0,8
tick,0x7ffdc994fb34,203729483,0,0x0,8
tick,0x7ffdc994fb34,203744903,0,0x0,8
tick,0x7ffdc994fb34,203760493,0,0x0,8
tick,0x7ffdc994fb34,203775967,0,0x0,8
tick,0x7ffdc994fb34,203791318,0,0x0,8
tick,0x7ffdc994fb34,203807185,0,0x0,8
tick,0x7ffdc994fb34,203822482,0,0x0,8
tick,0x7ffdc994fb34,203837444,0,0x0,8
tick,0x7ffdc994fb34,203853059,0,0x0,8
tick,0x7ffdc994fb34,203868718,0,0x0,8
tick,0x7ffdc994fb34,203884043,0,0x0,8
tick,0x7ffdc994fb34,203900268,0,0x0,8
tick,0x7ffdc994fb34,203915877,0,0x0,8
tick,0x7ffdc994fb34,203931371,0,0x0,8
tick,0x7ffdc994fb34,203946654,0,0x0,8
tick,0x7ffdc994fb34,203961649,0,0x0,8
tick,0x7ffdc994fb34,203977530,0,0x0,8
tick,0x7ffdc994fb34,203992973,0,0x0,8
tick,0x7ffdc994fb34,204008347,0,0x0,8
tick,0x7ffdc994fb34,204023592,0,0x0,8
tick,0x7ffdc994fb34,204039537,0,0x0,8
tick,0x7ffdc994fb34,204055753,0,0x0,8
tick,0x7ffdc994fb34,204071677,0,0x0,8
tick,0x7ffdc994fb34,204087793,0,0x0,8
tick,0x7ffdc994fb34,204103680,0,0x0,8
tick,0x7ffdc994fb34,204119256,0,0x0,8
tick,0x7ffdc994fb34,204134808,0,0x0,8
tick,0x7ffdc994fb34,204149682,0,0x0,8
tick,0x7ffdc994fb34,204165289,0,0x0,8
tick,0x7ffdc994fb34,204181419,0,0x0,8
tick,0x7ffdc994fb34,204197569,0,0x0,8
tick,0x7ffdc994fb34,204212946,0,0x0,8
tick,0x7ffdc994fb34,204228450,0,0x0,8
tick,0x7ffdc994fb34,204243558,0,0x0,8
tick,0x7ffdc994fb34,204258803,0,0x0,8
tick,0x7ffdc994fb34,204274762,0,0x0,8
tick,0x7ffdc994fb34,204290758,0,0x0,8
tick,0x7ffdc994fb34,204305928,0,0x0,8
tick,0x7ffdc994fb34,204321604,0,0x0,8
tick,0x7ffdc994fb34,204337158,0,0x0,8
tick,0x7ffdc994fb34,204352464,0,0x0,8
tick,0x7ffdc994fb34,204368637,0,0x0,8
tick,0x7ffdc994fb34,204384460,0,0x0,8
tick,0x7ffdc994fb34,204400166,0,0x0,8
tick,0x7ffdc994fb34,204415750,0,0x0,8
tick,0x7ffdc994fb34,204431358,0,0x0,8
tick,0x7ffdc994fb34,204446650,0,0x0,8
tick,0x7ffdc994fb34,204463207,0,0x0,8
tick,0x7ffdc994fb34,204478633,0,0x0,8
tick,0x7ffdc994fb34,204494175,0,0x0,8
tick,0x7ffdc994fb34,204509519,0,0x0,8
tick,0x7ffdc994fb34,204525612,0,0x0,8
tick,0x7ffdc994fb34,204540997,0,0x0,8
tick,0x7ffdc994fb34,204556429,0,0x0,8
tick,0x7ffdc994fb34,204572852,0,0x0,8
tick,0x7ffdc994fb34,204588588,0,0x0,8
tick,0x7ffdc994fb34,204603780,0,0x0,8
tick,0x7ffdc994fb34,204619482,0,0x0,8
tick,0x7ffdc994fb34,204634739,0,0x0,8
tick,0x7ffdc994fb34,204650293,0,0x0,8
tick,0x7ffdc994fb34,204665643,0,0x0,8
tick,0x7ffdc994fb34,204681571,0,0x0,8
tick,0x7ffdc994fb34,204696919,0,0x0,8
tick,0x7ffdc994fb34,204713098,0,0x0,8
tick,0x7ffdc994fb34,204728776,0,0x0,8
tick,0x7ffdc994fb34,204744215,0,0x0,8
tick,0x7ffdc994fb34,204759175,0,0x0,8
tick,0x7ffdc994fb34,204775184,0,0x0,8
tick,0x7ffdc994fb34,204790430,0,0x0,8
tick,0x7ffdc994fb34,204805692,0,0x0,8
tick,0x7ffdc994fb34,204822319,0,0x0,8
tick,0x7ffdc994fb34,204837066,0,0x0,8
tick,0x7ffdc994fb34,204852536,0,0x0,8
tick,0x7ffdc994fb34,204867739,0,0x0,8
tick,0x7ffdc994fb34,204884148,0,0x0,8
tick,0x7ffdc994fb34,204899845,0,0x0,8
tick,0x7ffdc994fb34,204915239,0,0x0,8
tick,0x7ffdc994fb34,204930631,0,0x0,8
tick,0x7ffdc994fb34,204946020,0,0x0,8
tick,0x7ffdc994fb34,204961664,0,0x0,8
tick,0x7ffdc994fb34,204976835,0,0x0,8
tick,0x7ffdc994fb34,204992577,0,0x0,8
tick,0x7ffdc994fb34,205008222,0,0x0,8
tick,0x7ffdc994fb34,205023817,0,0x0,8
tick,0x7ffdc994fb34,205039247,0,0x0,8
tick,0x7ffdc994fb34,205054729,0,0x0,8
tick,0x7ffdc994fb34,205070598,0,0x0,8
tick,0x7ffdc994fb34,205086390,0,0x0,8
tick,0x7ffdc994fb34,205102176,0,0x0,8
tick,0x7ffdc994fb34,205118230,0,0x0,8
tick,0x7ffdc994fb34,205133495,0,0x0,8
tick,0x7ffdc994fb34,205149136,0,0x0,8
tick,0x7ffdc994fb34,205164281,0,0x0,8
tick,0x7ffdc994fb34,205179855,0,0x0,8
tick,0x7ffdc994fb34,205195542,0,0x0,8
tick,0x7ffdc994fb34,205210868,0,0x0,8
tick,0x7ffdc994fb34,205227180,0,0x0,8
tick,0x7ffdc994fb34,205242589,0,0x0,8
tick,0x7ffdc994fb34,205257941,0,0x0,8
tick,0x7ffdc994fb34,205273586,0,0x0,8
tick,0x7ffdc994fb34,205289229,0,0x0,8
tick,0x7ffdc994fb34,205304699,0,0x0,8
tick,0x7ffdc994fb34,205320403,0,0x0,8
tick,0x7ffdc994fb34,205335704,0,0x0,8
tick,0x7ffdc994fb34,205351240,0,0x0,8
tick,0x7ffdc994fb34,205366673,0,0x0,8
tick,0x7ffdc994fb34,205382155,0,0x0,8
tick,0x7ffdc994fb34,205397826,0,0x0,8
tick,0x7ffdc994fb34,205413095,0,0x0,8
tick,0x7ffdc994fb34,205428838,0,0x0,8
tick,0x7ffdc994fb34,205443762,0,0x0,8
tick,0x7ffdc994fb34,205459416,0,0x0,8
tick,0x7ffdc994fb34,205474892,0,0x0,8
tick,0x7ffdc994fb34,205490258,0,0x0,8
tick,0x7ffdc994fb34,205506035,0,0x0,8
tick,0x7ffdc994fb34,205522508,0,0x0,8
tick,0x7ffdc994fb34,205538253,0,0x0,8
tick,0x7ffdc994fb34,205553357,0,0x0,8
tick,0x7ffdc994fb34,205569024,0,0x0,8
tick,0x7ffdc994fb34,205584105,0,0x0,8
tick,0x7ffdc994fb34,205600158,0,0x0,8
tick,0x7ffdc994fb34,205615607,0,0x0,8
tick,0x7ffdc994fb34,205631040,0,0x0,8
tick,0x7ffdc994fb34,205646553,0,0x0,8
tick,0x7ffdc994fb34,205662016,0,0x0,8
tick,0x7ffdc994fb34,205677405,0,0x0,8
tick,0x7ffdc994fb34,205692915,0,0x0,8
tick,0x7ffdc994fb34,205708684,0,0x0,8
tick,0x7ffdc994fb34,205724036,0,0x0,8
tick,0x7ffdc994fb34,205739526,0,0x0,8
tick,0x7ffdc994fb34,205755272,0,0x0,8
tick,0x7ffdc994fb34,205770528,0,0x0,8
tick,0x7ffdc994fb34,205786122,0,0x0,8
tick,0x7ffdc994fb34,205801291,0,0x0,8
tick,0x7ffdc994fb34,205817335,0,0x0,8
tick,0x7ffdc994fb34,205833076,0,0x0,8
tick,0x7ffdc994fb34,205848645,0,0x0,8
tick,0x7ffdc994fb34,205863806,0,0x0,8
tick,0x7ffdc994fb34,205879838,0,0x0,8
tick,0x7ffdc994fb34,205894921,0,0x0,8
tick,0x7ffdc994fb34,205910469,0,0x0,8
tick,0x7ffdc994fb34,205925804,0,0x0,8
tick,0x7ffdc994fb34,205941488,0,0x0,8
tick,0x7ffdc994fb34,205956943,0,0x0,8
tick,0x7ffdc994fb34,205972913,0,0x0,8
tick,0x7ffdc994fb34,205988981,0,0x0,8
tick,0x7ffdc994fb34,206004813,0,0x0,8
tick,0x7ffdc994fb34,206020703,0,0x0,8
tick,0x7ffdc994fb34,206036549,0,0x0,8
tick,0x7ffdc994fb34,206051863,0,0x0,8
tick,0x7ffdc994fb34,206067963,0,0x0,8
tick,0x7ffdc994fb34,206083437,0,0x0,8
tick,0x7ffdc994fb34,206098687,0,0x0,8
tick,0x7ffdc994fb34,206113967,0,0x0,8
tick,0x7ffdc994fb34,206129873,0,0x0,8
tick,0x7ffdc994fb34,206145204,0,0x0,8
tick,0x7ffdc994fb34,206160957,0,0x0,8
tick,0x7ffdc994fb34,206176810,0,0x0,8
tick,0x7ffdc994fb34,206192202,0,0x0,8
tick,0x7ffdc994fb34,206207730,0,0x0,8
tick,0x7ffdc994fb34,206223243,0,0x0,8
tick,0x7ffdc994fb34,206238628,0,0x0,8
tick,0x7ffdc994fb34,206254707,0,0x0,8
tick,0x7ffdc994fb34,206270454,0,0x0,8
tick,0x7ffdc994fb34,206286219,0,0x0,8
tick,0x7ffdc994fb34,206301721,0,0x0,8
tick,0x7ffdc994fb34,206317346,0,0x0,8
tick,0x7ffdc994fb34,206332651,0,0x0,8
tick,0x7ffdc994fb34,206348463,0,0x0,8
tick,0x7ffdc994fb34,206363795,0,0x0,8
tick,0x7ffdc994fb34,206379567,0,0x0,8
tick,0x7ffdc994fb34,206394632,0,0x0,8
tick,0x7ffdc994fb34,206410563,0,0x0,8
tick,0x7ffdc994fb34,206425797,0,0x0,8
tick,0x7ffdc994fb34,206441398,0,0x0,8
tick,0x7ffdc994fb34,206456938,0,0x0,8
tick,0x7ffdc994fb34,206473014,0,0x0,8
tick,0x7ffdc994fb34,206488418,0,0x0,8
tick,0x7ffdc994fb34,206504143,0,0x0,8
tick,0x7ffdc994fb34,206519738,0,0x0,8
tick,0x7ffdc994fb34,206535465,0,0x0,8
tick,0x7ffdc994fb34,206551471,0,0x0,8
tick,0x7ffdc994fb34,206567224,0,0x0,8
tick,0x7ffdc994fb34,206583612,0,0x0,8
tick,0x7ffdc994fb34,206599177,0,0x0,8
tick,0x7ffdc994fb34,206614614,0,0x0,8
tick,0x7ffdc994fb34,206630322,0,0x0,8
tick,0x7ffdc994fb34,206645790,0,0x0,8
tick,0x7ffdc994fb34,206661878,0,0x0,8
tick,0x7ffdc994fb34,206676766,0,0x0,8
tick,0x7ffdc994fb34,206692568,0,0x0,8
tick,0x7ffdc994fb34,206707894,0,0x0,8
tick,0x7ffdc994fb34,206723672,0,0x0,8
tick,0x7ffdc994fb34,206739069,0,0x0,8
tick,0x7ffdc994fb34,206754131,0,0x0,8
tick,0x7ffdc994fb34,206769678,0,0x0,8
tick,0x7ffdc994fb34,206785247,0,0x0,8
tick,0x7ffdc994fb34,206800916,0,0x0,8
tick,0x7ffdc994fb34,206816043,0,0x0,8
tick,0x7ffdc994fb34,206831886,0,0x0,8
tick,0x7ffdc994fb34,206847244,0,0x0,8
tick,0x7ffdc994fb34,206862511,0,0x0,8
tick,0x7ffdc994fb34,206877811,0,0x0,8
tick,0x7ffdc994fb34,206893411,0,0x0,8
tick,0x7ffdc994fb34,206909213,0,0x0,8
tick,0x7ffdc994fb34,206925104,0,0x0,8
tick,0x7ffdc994fb34,206940652,0,0x0,8
tick,0x7ffdc994fb34,206955790,0,0x0,8
tick,0x7ffdc994fb34,206971960,0,0x0,8
tick,0x7ffdc994fb34,206987255,0,0x0,8
tick,0x7ffdc994fb34,207003490,0,0x0,8
tick,0x7ffdc994fb34,207019643,0,0x0,8
tick,0x7ffdc994fb34,207034935,0,0x0,8
tick,0x7ffdc994fb34,207050531,0,0x0,8
tick,0x7ffdc994fb34,207066088,0,0x0,8
tick,0x7ffdc994fb34,207081705,0,0x0,8
tick,0x7ffdc994fb34,207097136,0,0x0,8
tick,0x7ffdc994fb34,207112747,0,0x0,8
tick,0x7ffdc994fb34,207128003,0,0x0,8
tick,0x7ffdc994fb34,207143185,0,0x0,8
tick,0x7ffdc994fb34,207158502,0,0x0,8
tick,0x7ffdc994fb34,207173920,0,0x0,8
tick,0x7ffdc994fb34,207190179,0,0x0,8
tick,0x7ffdc994fb34,207206015,0,0x0,8
tick,0x7ffdc994fb34,207221903,0,0x0,8
tick,0x7ffdc994fb34,207237276,0,0x0,8
tick,0x7ffdc994fb34,207253498,0,0x0,8
tick,0x7ffdc994fb34,207269025,0,0x0,8
tick,0x7ffdc994fb34,207284884,0,0x0,8
tick,0x7ffdc994fb34,207300381,0,0x0,8
tick,0x7ffdc994fb34,207316130,0,0x0,8
tick,0x7ffdc994fb34,207331770,0,0x0,8
tick,0x7ffdc994fb34,207347009,0,0x0,8
tick,0x7ffdc994fb34,207362306,0,0x0,8
tick,0x7ffdc994fb34,207377781,0,0x0,8
tick,0x7ffdc994fb34,207393444,0,0x0,8
tick,0x7ffdc994fb34,207409223,0,0x0,8
tick,0x7ffdc994fb34,207424970,0,0x0,8
tick,0x7ffdc994fb34,207440434,0,0x0,8
tick,0x7ffdc994fb34,207456390,0,0x0,8
tick,0x7ffdc994fb34,207471749,0,0x0,8
tick,0x7ffdc994fb34,207487456,0,0x0,8
tick,0x7ffdc994fb34,207503032,0,0x0,8
tick,0x7ffdc994fb34,207518682,0,0x0,8
tick,0x7ffdc994fb34,207534160,0,0x0,8
tick,0x7ffdc994fb34,207549956,0,0x0,8
tick,0x7ffdc994fb34,207565696,0,0x0,8
tick,0x7ffdc994fb34,207581722,0,0x0,8
tick,0x7ffdc994fb34,207597857,0,0x0,8
tick,0x7ffdc994fb34,207612864,0,0x0,8
tick,0x7ffdc994fb34,207628953,0,0x0,8
tick,0x7ffdc994fb34,207644444,0,0x0,8
tick,0x7ffdc994fb34,207659864,0,0x0,8
tick,0x7ffdc994fb34,207675561,0,0x0,8
tick,0x7ffdc994fb34,207690910,0,0x0,8
tick,0x7ffdc994fb34,207706862,0,0x0,8
tick,0x7ffdc994fb34,207722312,0,0x0,8
tick,0x7ffdc994fb34,207737842,0,0x0,8
tick,0x7ffdc994fb34,207753504,0,0x0,8
tick,0x7ffdc994fb34,207768494,0,0x0,8
tick,0x7ffdc994fb34,207783800,0,0x0,8
tick,0x7ffdc994fb34,207799467,0,0x0,8
tick,0x7ffdc994fb34,207814667,0,0x0,8
tick,0x7ffdc994fb34,207830518,0,0x0,8
tick,0x7ffdc994fb34,207846030,0,0x0,8
tick,0x7ffdc994fb34,207861872,0,0x0,8
tick,0x7ffdc994fb34,207876691,0,0x0,8
tick,0x7ffdc994fb34,207892669,0,0x0,8
tick,0x7ffdc994fb34,207908622,0,0x0,8
tick,0x7ffdc994fb34,207924029,0,0x0,8
tick,0x7ffdc994fb34,207939591,0,0x0,8
tick,0x7ffdc994fb34,207955431,0,0x0,8
tick,0x7ffdc994fb34,207970798,0,0x0,8
tick,0x7ffdc994fb34,207986285,0,0x0,8
tick,0x7ffdc994fb34,208001805,0,0x0,8
tick,0x7ffdc994fb34,208017224,0,0x0,8
tick,0x7ffdc994fb34,208032938,0,0x0,8
tick,0x7ffdc994fb34,208048432,0,0x0,8
tick,0x7ffdc994fb34,208064795,0,0x0,8
tick,0x7ffdc994fb34,208080629,0,0x0,8
tick,0x7ffdc994fb34,208096738,0,0x0,8
tick,0x7ffdc994fb34,208112075,0,0x0,8
tick,0x7ffdc994fb34,208127607,0,0x0,8
tick,0x7ffdc994fb34,208143158,0,0x0,8
tick,0x7ffdc994fb34,208158791,0,0x0,8
tick,0x7ffdc994fb34,208174001,0,0x0,8
tick,0x7ffdc994fb34,208188910,0,0x0,8
tick,0x7ffdc994fb34,208204613,0,0x0,8
tick,0x7ffdc994fb34,208220249,0,0x0,8
tick,0x7ffdc994fb34,208235615,0,0x0,8
tick,0x7ffdc994fb34,208251350,0,0x0,8
tick,0x7ffdc994fb34,208267028,0,0x0,8
tick,0x7ffdc994fb34,208283052,0,0x0,8
tick,0x7ffdc994fb34,208299272,0,0x0,8
tick,0x7ffdc994fb34,208314765,0,0x0,8
tick,0x7ffdc994fb34,208330384,0,0x0,8
tick,0x7ffdc994fb34,208345748,0,0x0,8
tick,0x7ffdc994fb34,208361271,0,0x0,8
tick,0x7ffdc994fb34,208376580,0,0x0,8
tick,0x7ffdc994fb34,208392127,0,0x0,8
tick,0x7ffdc994fb34,208407822,0,0x0,8
tick,0x7ffdc994fb34,208423271,0,0x0,8
tick,0x7ffdc994fb34,208439116,0,0x0,8
tick,0x7ffdc994fb34,208454946,0,0x0,8
tick,0x7ffdc994fb34,208471166,0,0x0,8
tick,0x7ffdc994fb34,208485917,0,0x0,8
tick,0x7ffdc994fb34,208501662,0,0x0,8
tick,0x7ffdc994fb34,208517528,0,0x0,8
tick,0x7ffdc994fb34,208533134,0,0x0,8
tick,0x7ffdc994fb34,208548377,0,0x0,8
tick,0x7ffdc994fb34,208563481,0,0x0,8
tick,0x7ffdc994fb34,208579262,0,0x0,8
tick,0x7ffdc994fb34,208594472,0,0x0,8
tick,0x7ffdc994fb34,208610081,0,0x0,8
tick,0x7ffdc994fb34,208625529,0,0x0,8
tick,0x7ffdc994fb34,208641215,0,0x0,8
tick,0x7ffdc994fb34,208656589,0,0x0,8
tick,0x7ffdc994fb34,208672788,0,0x0,8
tick,0x7ffdc994fb34,208688067,0,0x0,8
tick,0x7ffdc994fb34,208703771,0,0x0,8
tick,0x7ffdc994fb34,208719837,0,0x0,8
tick,0x7ffdc994fb34,208735788,0,0x0,8
tick,0x7ffdc994fb34,208751712,0,0x0,8
tick,0x7ffdc994fb34,208767827,0,0x0,8
tick,0x7ffdc994fb34,208783904,0,0x0,8
tick,0x7ffdc994fb34,208799077,0,0x0,8
tick,0x7ffdc994fb34,208814547,0,0x0,8
tick,0x7ffdc994fb34,208829944,0,0x0,8
tick,0x7ffdc994fb34,208844820,0,0x0,8
tick,0x7ffdc994fb34,208860750,0,0x0,8
tick,0x7ffdc994fb34,208876656,0,0x0,8
tick,0x7ffdc994fb34,208892335,0,0x0,8
tick,0x7ffdc994fb34,208908184,0,0x0,8
tick,0x7ffdc994fb34,208923266,0,0x0,8
tick,0x7ffdc994fb34,208938365,0,0x0,8
tick,0x7ffdc994fb34,208953358,0,0x0,8
tick,0x7ffdc994fb34,208969442,0,0x0,8
tick,0x7ffdc994fb34,208984899,0,0x0,8
tick,0x7ffdc994fb34,209000232,0,0x0,8
tick,0x7ffdc994fb34,209016122,0,0x0,8
tick,0x7ffdc994fb34,209031417,0,0x0,8
tick,0x7ffdc994fb34,209047886,0,0x0,8
tick,0x7ffdc994fb34,209063330,0,0x0,8
tick,0x7ffdc994fb34,209079354,0,0x0,8
tick,0x7ffdc994fb34,209094875,0,0x0,8
tick,0x7ffdc994fb34,209110347,0,0x0,8
tick,0x7ffdc994fb34,209125612,0,0x0,8
tick,0x7ffdc994fb34,209140957,0,0x0,8
tick,0x7ffdc994fb34,209156809,0,0x0,8
tick,0x7ffdc994fb34,209172877,0,0x0,8
tick,0x7ffdc994fb34,209187637,0,0x0,8
tick,0x7ffdc994fb34,209202985,0,0x0,8
tick,0x7ffdc994fb34,209218381,0,0x0,8
tick,0x7ffdc994fb34,209233957,0,0x0,8
tick,0x7ffdc994fb34,209249494,0,0x0,8
tick,0x7ffdc994fb34,209265380,0,0x0,8
tick,0x7ffdc994fb34,209281304,0,0x0,8
tick,0x7ffdc994fb34,209296637,0,0x0,8
tick,0x7ffdc994fb34,209312717,0,0x0,8
tick,0x7ffdc994fb34,209328739,0,0x0,8
tick,0x7ffdc994fb34,209344827,0,0x0,8
tick,0x7ffdc994fb34,209360278,0,0x0,8
tick,0x7ffdc994fb34,209375738,0,0x0,8
tick,0x7ffdc994fb34,209391287,0,0x0,8
tick,0x7ffdc994fb34,209406657,0,0x0,8
tick,0x7ffdc994fb34,209422266,0,0x0,8
tick,0x7ffdc994fb34,209437832,0,0x0,8
tick,0x7ffdc994fb34,209453518,0,0x0,8
tick,0x7ffdc994fb34,209468945,0,0x0,8
tick,0x7ffdc994fb34,209484047,0,0x0,8
tick,0x7ffdc994fb34,209499678,0,0x0,8
tick,0x7ffdc994fb34,209515322,0,0x0,8
tick,0x7ffdc994fb34,209531048,0,0x0,8
tick,0x7ffdc994fb34,209546290,0,0x0,8
tick,0x7ffdc994fb34,209561822,0,0x0,8
tick,0x7ffdc994fb34,209577129,0,0x0,8
tick,0x7ffdc994fb34,209592890,0,0x0,8
tick,0x7ffdc994fb34,209608139,0,0x0,8
tick,0x7ffdc994fb34,209623236,0,0x0,8
tick,0x7ffdc994fb34,209638796,0,0x0,8
tick,0x7ffdc994fb34,209654419,0,0x0,8
tick,0x7ffdc994fb34,209670233,0,0x0,8
tick,0x7ffdc994fb34,209685946,0,0x0,8
tick,0x7ffdc994fb34,209701374,0,0x0,8
tick,0x7ffdc994fb34,209717311,0,0x0,8
tick,0x7ffdc994fb34,209732461,0,0x0,8
tick,0x7ffdc994fb34,209748143,0,0x0,8
tick,0x7ffdc994fb34,209763182,0,0x0,8
tick,0x7ffdc994fb34,209778683,0,0x0,8
tick,0x7ffdc994fb34,209794368,0,0x0,8
tick,0x7ffdc994fb34,209809957,0,0x0,8
tick,0x7ffdc994fb34,209825182,0,0x0,8
tick,0x7ffdc994fb34,209840544,0,0x0,8
tick,0x7ffdc994fb34,209856321,0,0x0,8
tick,0x7ffdc994fb34,209871335,0,0x0,8
tick,0x7ffdc994fb34,209887162,0,0x0,8
tick,0x7ffdc994fb34,209902417,0,0x0,8
tick,0x7ffdc994fb34,209918240,0,0x0,8
tick,0x7ffdc994fb34,209933751,0,0x0,8
tick,0x7ffdc994fb34,209949289,0,0x0,8
tick,0x7ffdc994fb34,209964593,0,0x0,8
tick,0x7ffdc994fb34,209980818,0,0x0,8
tick,0x7ffdc994fb34,209995772,0,0x0,8
tick,0x7ffdc994fb34,210011493,0,0x0,8
tick,0x7ffdc994fb34,210026693,0,0x0,8
tick,0x7ffdc994fb34,210042273,0,0x0,8
tick,0x7ffdc994fb34,210057746,0,0x0,8
tick,0x7ffdc994fb34,210073341,0,0x0,8
tick,0x7ffdc994fb34,210088877,0,0x0,8
tick,0x7ffdc994fb34,210104622,0,0x0,8
tick,0x7ffdc994fb34,210120481,0,0x0,8
tick,0x7ffdc994fb34,210135869,0,0x0,8
tick,0x7ffdc994fb34,210151635,0,0x0,8
tick,0x7ffdc994fb34,210167047,0,0x0,8
tick,0x7ffdc994fb34,210182372,0,0x0,8
tick,0x7ffdc994fb34,210198190,0,0x0,8
tick,0x7ffdc994fb34,210213692,0,0x0,8
tick,0x7ffdc994fb34,210228976,0,0x0,8
tick,0x7ffdc994fb34,210244704,0,0x0,8
tick,0x7ffdc994fb34,210260580,0,0x0,8
tick,0x7ffdc994fb34,210276383,0,0x0,8
tick,0x7ffdc994fb34,210291915,0,0x0,8
tick,0x7ffdc994fb34,210307261,0,0x0,8
tick,0x7ffdc994fb34,210323200,0,0x0,8
tick,0x7ffdc994fb34,210339250,0,0x0,8
tick,0x7ffdc994fb34,210355156,0,0x0,8
tick,0x7ffdc994fb34,210370829,0,0x0,8
tick,0x7ffdc994fb34,210386008,0,0x0,8
tick,0x7ffdc994fb34,210402371,0,0x0,8
tick,0x7ffdc994fb34,210418291,0,0x0,8
tick,0x7ffdc994fb34,210433460,0,0x0,8
tick,0x7ffdc994fb34,210449490,0,0x0,8
tick,0x7ffdc994fb34,210465284,0,0x0,8
tick,0x7ffdc994fb34,210481166,0,0x0,8
tick,0x7ffdc994fb34,210496660,0,0x0,8
tick,0x7ffdc994fb34,210512037,0,0x0,8
tick,0x7ffdc994fb34,210527546,0,0x0,8
tick,0x7ffdc994fb34,210543057,0,0x0,8
tick,0x7ffdc994fb34,210558768,0,0x0,8
tick,0x7ffdc994fb34,210574394,0,0x0,8
tick,0x7ffdc994fb34,210589775,0,0x0,8
tick,0x7ffdc994fb34,210605307,0,0x0,8
tick,0x7ffdc994fb34,210620828,0,0x0,8
tick,0x7ffdc994fb34,210636275,0,0x0,8
tick,0x7ffdc994fb34,210651995,0,0x0,8
tick,0x7ffdc994fb34,210667675,0,0x0,8
tick,0x7ffdc994fb34,210683298,0,0x0,8
tick,0x7ffdc994fb34,210698636,0,0x0,8
tick,0x7ffdc994fb34,210714366,0,0x0,8
tick,0x7ffdc994fb34,210729926,0,0x0,8
tick,0x7ffdc994fb34,210745357,0,0x0,8
tick,0x7ffdc994fb34,210761189,0,0x0,8
tick,0x7ffdc994fb34,210777438,0,0x0,8
tick,0x7ffdc994fb34,210793158,0,0x0,8
tick,0x7ffdc994fb34,210808090,0,0x0,8
tick,0x7ffdc994fb34,210823796,0,0x0,8
tick,0x7ffdc994fb34,210839370,0,0x0,8
tick,0x7ffdc994fb34,210855429,0,0x0,8
tick,0x7ffdc994fb34,210870705,0,0x0,8
tick,0x7ffdc994fb34,210886278,0,0x0,8
tick,0x7ffdc994fb34,210901528,0,0x0,8
tick,0x7ffdc994fb34,210917664,0,0x0,8
tick,0x7ffdc994fb34,210933097,0,0x0,8
tick,0x7ffdc994fb34,210948720,0,0x0,8
tick,0x7ffdc994fb34,210964052,0,0x0,8
tick,0x7ffdc994fb34,210980198,0,0x0,8
tick,0x7ffdc994fb34,210995616,0,0x0,8
tick,0x7ffdc994fb34,211010759,0,0x0,8
tick,0x7ffdc994fb34,211026609,0,0x0,8
tick,0x7ffdc994fb34,211041952,0,0x0,8
tick,0x7ffdc994fb34,211057587,0,0x0,8
tick,0x7ffdc994fb34,211073093,0,0x0,8
tick,0x7ffdc994fb34,211089253,0,0x0,8
tick,0x7ffdc994fb34,211104609,0,0x0,8
tick,0x7ffdc994fb34,211120447,0,0x0,8
tick,0x7ffdc994fb34,211135956,0,0x0,8
tick,0x7ffdc994fb34,211151538,0,0x0,8
tick,0x7ffdc994fb34,211167162,0,0x0,8
tick,0x7ffdc994fb34,211183349,0,0x0,8
tick,0x7ffdc994fb34,211198400,0,0x0,8
tick,0x7ffdc994fb34,211214296,0,0x0,8
tick,0x7ffdc994fb34,211229672,0,0x0,8
tick,0x7ffdc994fb34,211245555,0,0x0,8
tick,0x7ffdc994fb34,211261029,0,0x0,8
tick,0x7ffdc994fb34,211276545,0,0x0,8
tick,0x7ffdc994fb34,211292681,0,0x0,8
tick,0x7ffdc994fb34,211307765,0,0x0,8
tick,0x7ffdc994fb34,211323782,0,0x0,8
tick,0x7ffdc994fb34,211339787,0,0x0,8
tick,0x7ffdc994fb34,211355045,0,0x0,8
tick,0x7ffdc994fb34,211371436,0,0x0,8
tick,0x7ffdc994fb34,211386844,0,0x0,8
tick,0x7ffdc994fb34,211402253,0,0x0,8
tick,0x7ffdc994fb34,211417947,0,0x0,8
tick,0x7ffdc994fb34,211433686,0,0x0,8
tick,0x7ffdc994fb34,211449074,0,0x0,8
tick,0x7ffdc994fb34,211464259,0,0x0,8
tick,0x7ffdc994fb34,211479569,0,0x0,8
tick,0x7ffdc994fb34,211495244,0,0x0,8
tick,0x7ffdc994fb34,211511062,0,0x0,8
tick,0x7ffdc994fb34,211526789,0,0x0,8
tick,0x7ffdc994fb34,211542778,0,0x0,8
tick,0x7ffdc994fb34,211558233,0,0x0,8
tick,0x7ffdc994fb34,211574565,0,0x0,8
tick,0x7ffdc994fb34,211590362,0,0x0,8
tick,0x7ffdc994fb34,211606044,0,0x0,8
tick,0x7ffdc994fb34,211621250,0,0x0,8
tick,0x7ffdc994fb34,211636559,0,0x0,8
tick,0x7ffdc994fb34,211652409,0,0x0,8
tick,0x7ffdc994fb34,211668000,0,0x0,8
tick,0x7ffdc994fb34,211683577,0,0x0,8
tick,0x7ffdc994fb34,211698893,0,0x0,8
tick,0x7ffdc994fb34,211714898,0,0x0,8
tick,0x7ffdc994fb34,211730217,0,0x0,8
tick,0x7ffdc994fb34,211745677,0,0x0,8
tick,0x7ffdc994fb34,211761366,0,0x0,8
tick,0x7ffdc994fb34,211776721,0,0x0,8
tick,0x7ffdc994fb34,211792712,0,0x0,8
tick,0x7ffdc994fb34,211807859,0,0x0,8
tick,0x7ffdc994fb34,211823617,0,0x0,8
tick,0x7ffdc994fb34,211839059,0,0x0,8
tick,0x7ffdc994fb34,211854368,0,0x0,8
tick,0x7ffdc994fb34,211869735,0,0x0,8
tick,0x7ffdc994fb34,211885557,0,0x0,8
tick,0x7ffdc994fb34,211901218,0,0x0,8
tick,0x7ffdc994fb34,211917467,0,0x0,8
tick,0x7ffdc994fb34,211932553,0,0x0,8
tick,0x7ffdc994fb34,211948086,0,0x0,8
tick,0x7ffdc994fb34,211964030,0,0x0,8
tick,0x7ffdc994fb34,211979330,0,0x0,8
tick,0x7ffdc994fb34,211995320,0,0x0,8
tick,0x7ffdc994fb34,212010855,0,0x0,8
tick,0x7ffdc994fb34,212025827,0,0x0,8
tick,0x7ffdc994fb34,212041417,0,0x0,8
tick,0x7ffdc994fb34,212056839,0,0x0,8
tick,0x7ffdc994fb34,212072815,0,0x0,8
tick,0x7ffdc994fb34,212088014,0,0x0,8
tick,0x7ffdc994fb34,212103560,0,0x0,8
tick,0x7ffdc994fb34,212119647,0,0x0,8
tick,0x7ffdc994fb34,212134356,0,0x0,8
tick,0x7ffdc994fb34,212150289,0,0x0,8
tick,0x7ffdc994fb34,212165889,0,0x0,8
tick,0x7ffdc994fb34,212181270,0,0x0,8
tick,0x7ffdc994fb34,212196924,0,0x0,8
tick,0x7ffdc994fb34,212212567,0,0x0,8
tick,0x7ffdc994fb34,212227940,0,0x0,8
tick,0x7ffdc994fb34,212243513,0,0x0,8
tick,0x7ffdc994fb34,212259315,0,0x0,8
tick,0x7ffdc994fb34,212275264,0,0x0,8
tick,0x7ffdc994fb34,212291143,0,0x0,8
tick,0x7ffdc994fb34,212307084,0,0x0,8
tick,0x7ffdc994fb34,212322560,0,0x0,8
tick,0x7ffdc994fb34,212337782,0,0x0,8
tick,0x7ffdc994fb34,212353793,0,0x0,8
tick,0x7ffdc994fb34,212369455,0,0x0,8
tick,0x7ffdc994fb34,212384848,0,0x0,8
tick,0x7ffdc994fb34,212400611,0,0x0,8
tick,0x7ffdc994fb34,212416056,0,0x0,8
tick,0x7ffdc994fb34,212431874,0,0x0,8
tick,0x7ffdc994fb34,212447165,0,0x0,8
tick,0x7ffdc994fb34,212462876,0,0x0,8
tick,0x7ffdc994fb34,212478835,0,0x0,8
tick,0x7ffdc994fb34,212493879,0,0x0,8
tick,0x7ffdc994fb34,212509314,0,0x0,8
tick,0x7ffdc994fb34,212524003,0,0x0,8
tick,0x7ffdc994fb34,212539583,0,0x0,8
tick,0x7ffdc994fb34,212554648,0,0x0,8
tick,0x7ffdc994fb34,212570392,0,0x0,8
tick,0x7ffdc994fb34,212584710,0,0x0,8
tick,0x7ffdc994fb34,212599546,0,0x0,8
tick,0x7ffdc994fb34,212614769,0,0x0,8
tick,0x7ffdc994fb34,212630048,0,0x0,8
tick,0x7ffdc994fb34,212645688,0,0x0,8
tick,0x7ffdc994fb34,212661926,0,0x0,8
tick,0x7ffdc994fb34,212678068,0,0x0,8
tick,0x7ffdc994fb34,212694223,0,0x0,8
tick,0x7ffdc994fb34,212710246,0,0x0,8
tick,0x7ffdc994fb34,212725466,0,0x0,8
tick,0x7ffdc994fb34,212741301,0,0x0,8
tick,0x7ffdc994fb34,212756783,0,0x0,8
tick,0x7ffdc994fb34,212772345,0,0x0,8
tick,0x7ffdc994fb34,212788125,0,0x0,8
tick,0x7ffdc994fb34,212803513,0,0x0,8
tick,0x7ffdc994fb34,212818732,0,0x0,8
tick,0x7ffdc994fb34,212833972,0,0x0,8
tick,0x7ffdc994fb34,212849897,0,0x0,8
tick,0x7ffdc994fb34,212865975,0,0x0,8
tick,0x7ffdc994fb34,212881884,0,0x0,8
tick,0x7ffdc994fb34,212897191,0,0x0,8
tick,0x7ffdc994fb34,212912943,0,0x0,8
tick,0x7ffdc994fb34,212928285,0,0x0,8
tick,0x7ffdc994fb34,212943488,0,0x0,8
tick,0x7ffdc994fb34,212959162,0,0x0,8
tick,0x7ffdc994fb34,212974048,0,0x0,8
tick,0x7ffdc994fb34,212989903,0,0x0,8
tick,0x7ffdc994fb34,213005289,0,0x0,8
tick,0x7ffdc994fb34,213021078,0,0x0,8
tick,0x7ffdc994fb34,213037024,0,0x0,8
tick,0x7ffdc994fb34,213052503,0,0x0,8
tick,0x7ffdc994fb34,213067654,0,0x0,8
tick,0x7ffdc994fb34,213084439,0,0x0,8
tick,0x7ffdc994fb34,213098774,0,0x0,8
tick,0x7ffdc994fb34,213114350,0,0x0,8
tick,0x7ffdc994fb34,213129864,0,0x0,8
tick,0x7ffdc994fb34,213144791,0,0x0,8
tick,0x7ffdc994fb34,213160776,0,0x0,8
tick,0x7ffdc994fb34,213176295,0,0x0,8
tick,0x7ffdc994fb34,213191796,0,0x0,8
tick,0x7ffdc994fb34,213207191,0,0x0,8
tick,0x7ffdc994fb34,213222732,0,0x0,8
tick,0x7ffdc994fb34,213237562,0,0x0,8
tick,0x7ffdc994fb34,213252803,0,0x0,8
tick,0x7ffdc994fb34,213267921,0,0x0,8
tick,0x7ffdc994fb34,213283444,0,0x0,8
tick,0x7ffdc994fb34,213298684,0,0x0,8
tick,0x7ffdc994fb34,213314399,0,0x0,8
tick,0x7ffdc994fb34,213329739,0,0x0,8
tick,0x7ffdc994fb34,213344869,0,0x0,8
tick,0x7ffdc994fb34,213360426,0,0x0,8
tick,0x7ffdc994fb34,213376569,0,0x0,8
tick,0x7ffdc994fb34,213392275,0,0x0,8
tick,0x7ffdc994fb34,213408339,0,0x0,8
tick,0x7ffdc994fb34,213423213,0,0x0,8
tick,0x7ffdc994fb34,213438570,0,0x0,8
tick,0x7ffdc994fb34,213454655,0,0x0,8
tick,0x7ffdc994fb34,213470685,0,0x0,8
tick,0x7ffdc994fb34,213486181,0,0x0,8
tick,0x7ffdc994fb34,213502446,0,0x0,8
tick,0x7ffdc994fb34,213517658,0,0x0,8
tick,0x7ffdc994fb34,213533774,0,0x0,8
tick,0x7ffdc994fb34,213549057,0,0x0,8
tick,0x7ffdc994fb34,213565175,0,0x0,8
tick,0x7ffdc994fb34,213580911,0,0x0,8
tick,0x7ffdc994fb34,213596350,0,0x0,8
tick,0x7ffdc994fb34,213612416,0,0x0,8
tick,0x7ffdc994fb34,213627980,0,0x0,8
tick,0x7ffdc994fb34,213643583,0,0x0,8
tick,0x7ffdc994fb34,213659550,0,0x0,8
tick,0x7ffdc994fb34,213674909,0,0x0,8
tick,0x7ffdc994fb34,213690253,0,0x0,8
tick,0x7ffdc994fb34,213706442,0,0x0,8
tick,0x7ffdc994fb34,213722269,0,0x0,8
tick,0x7ffdc994fb34,213738612,0,0x0,8
tick,0x7ffdc994fb34,213754371,0,0x0,8
tick,0x7ffdc994fb34,213769667,0,0x0,8
tick,0x7ffdc994fb34,213785643,0,0x0,8
tick,0x7ffdc994fb34,213801602,0,0x0,8
tick,0x7ffdc994fb34,213817500,0,0x0,8
tick,0x7ffdc994fb34,213833884,0,0x0,8
tick,0x7ffdc994fb34,213849930,0,0x0,8
tick,0x7ffdc994fb34,213865610,0,0x0,8
tick,0x7ffdc994fb34,213881227,0,0x0,8
tick,0x7ffdc994fb34,213896735,0,0x0,8
tick,0x7ffdc994fb34,213912486,0,0x0,8
tick,0x7ffdc994fb34,213928653,0,0x0,8
tick,0x7ffdc994fb34,213944489,0,0x0,8
tick,0x7ffdc994fb34,213959867,0,0x0,8
tick,0x7ffdc994fb34,213976148,0,0x0,8
tick,0x7ffdc994fb34,213991410,0,0x0,8
tick,0x7ffdc994fb34,214006987,0,0x0,8
tick,0x7ffdc994fb34,214023147,0,0x0,8
tick,0x7ffdc994fb34,214038402,0,0x0,8
tick,0x7ffdc994fb34,214054124,0,0x0,8
tick,0x7ffdc994fb34,214069263,0,0x0,8
tick,0x7ffdc994fb34,214084518,0,0x0,8
tick,0x7ffdc994fb34,214100489,0,0x0,8
tick,0x7ffdc994fb34,214115536,0,0x0,8
tick,0x7ffdc994fb34,214130767,0,0x0,8
tick,0x7ffdc994fb34,214146125,0,0x0,8
tick,0x7ffdc994fb34,214162009,0,0x0,8
tick,0x7ffdc994fb34,214176956,0,0x0,8
tick,0x7ffdc994fb34,214192725,0,0x0,8
tick,0x7ffdc994fb34,214208276,0,0x0,8
tick,0x7ffdc994fb34,214224512,0,0x0,8
tick,0x7ffdc994fb34,214239815,0,0x0,8
tick,0x7ffdc994fb34,214255274,0,0x0,8
tick,0x7ffdc994fb34,214270673,0,0x0,8
tick,0x7ffdc994fb34,214285949,0,0x0,8
tick,0x7ffdc994fb34,214301145,0,0x0,8
tick,0x7ffdc994fb34,214316807,0,0x0,8
tick,0x7ffdc994fb34,214332200,0,0x0,8
tick,0x7ffdc994fb34,214347944,0,0x0,8
tick,0x7ffdc994fb34,214363787,0,0x0,8
tick,0x7ffdc994fb34,214379272,0,0x0,8
tick,0x7ffdc994fb34,214394017,0,0x0,8
tick,0x7ffdc994fb34,214409639,0,0x0,8
tick,0x7ffdc994fb34,214425555,0,0x0,8
tick,0x7ffdc994fb34,214441530,0,0x0,8
tick,0x7ffdc994fb34,214456860,0,0x0,8
tick,0x7ffdc994fb34,214472872,0,0x0,8
tick,0x7ffdc994fb34,214489083,0,0x0,8
tick,0x7ffdc994fb34,214505189,0,0x0,8
tick,0x7ffdc994fb34,214521347,0,0x0,8
tick,0x7ffdc994fb34,214536485,0,0x0,8
tick,0x7ffdc994fb34,214552373,0,0x0,8
tick,0x7ffdc994fb34,214568488,0,0x0,8
tick,0x7ffdc994fb34,214584073,0,0x0,8
tick,0x7ffdc994fb34,214599213,0,0x0,8
tick,0x7ffdc994fb34,214615183,0,0x0,8
tick,0x7ffdc994fb34,214630317,0,0x0,8
tick,0x7ffdc994fb34,214645880,0,0x0,8
tick,0x7ffdc994fb34,214661097,0,0x0,8
tick,0x7ffdc994fb34,214676778,0,0x0,8
tick,0x7ffdc994fb34,214692113,0,0x0,8
tick,0x7ffdc994fb34,214707093,0,0x0,8
tick,0x7ffdc994fb34,214722840,0,0x0,8
tick,0x7ffdc994fb34,214738580,0,0x0,8
tick,0x7ffdc994fb34,214754595,0,0x0,8
tick,0x7ffdc994fb34,214770035,0,0x0,8
tick,0x7ffdc994fb34,214786075,0,0x0,8
tick,0x7ffdc994fb34,214801661,0,0x0,8
tick,0x7ffdc994fb34,214816657,0,0x0,8
tick,0x7ffdc994fb34,214831686,0,0x0,8
tick,0x7ffdc994fb34,214847352,0,0x0,8
tick,0x7ffdc994fb34,214863562,0,0x0,8
tick,0x7ffdc994fb34,214879181,0,0x0,8
tick,0x7ffdc994fb34,214894244,0,0x0,8
tick,0x7ffdc994fb34,214910249,0,0x0,8
tick,0x7ffdc994fb34,214925356,0,0x0,8
tick,0x7ffdc994fb34,214941069,0,0x0,8
tick,0x7ffdc994fb34,214956919,0,0x0,8
tick,0x7ffdc994fb34,214971823,0,0x0,8
tick,0x7ffdc994fb34,214987712,0,0x0,8
tick,0x7ffdc994fb34,215002821,0,0x0,8
tick,0x7ffdc994fb34,215018541,0,0x0,8
tick,0x7ffdc994fb34,215035911,0,0x0,8
tick,0x7ffdc994fb34,215051359,0,0x0,8
tick,0x7ffdc994fb34,215073419,0,0x0,8
tick,0x7ffdc994fb34,215081693,0,0x0,8
tick,0x7ffdc994fb34,215096813,0,0x0,8
tick,0x7ffdc994fb34,215111928,0,0x0,8
tick,0x7ffdc994fb34,215127218,0,0x0,8
tick,0x7ffdc994fb34,215142926,0,0x0,8
tick,0x7ffdc994fb34,215158894,0,0x0,8
tick,0x7ffdc994fb34,215174054,0,0x0,8
tick,0x7ffdc994fb34,215189222,0,0x0,8
tick,0x7ffdc994fb34,215205014,0,0x0,8
tick,0x7ffdc994fb34,215220988,0,0x0,8
tick,0x7ffdc994fb34,215236853,0,0x0,8
tick,0x7ffdc994fb34,215252912,0,0x0,8
tick,0x7ffdc994fb34,215268476,0,0x0,8
tick,0x7ffdc994fb34,215283681,0,0x0,8
tick,0x7ffdc994fb34,215299520,0,0x0,8
tick,0x7ffdc994fb34,215315103,0,0x0,8
tick,0x7ffdc994fb34,215331118,0,0x0,8
tick,0x7ffdc994fb34,215346442,0,0x0,8
tick,0x7ffdc994fb34,215361964,0,0x0,8
tick,0x7ffdc994fb34,215377638,0,0x0,8
tick,0x7ffdc994fb34,215392968,0,0x0,8
tick,0x7ffdc994fb34,215408918,0,0x0,8
tick,0x7ffdc994fb34,215423893,0,0x0,8
tick,0x7ffdc994fb34,215439748,0,0x0,8
tick,0x7ffdc994fb34,215455101,0,0x0,8
tick,0x7ffdc994fb34,215470803,0,0x0,8
tick,0x7ffdc994fb34,215486291,0,0x0,8
tick,0x7ffdc994fb34,215501616,0,0x0,8
tick,0x7ffdc994fb34,215517582,0,0x0,8
tick,0x7ffdc994fb34,215533463,0,0x0,8
tick,0x7ffdc994fb34,215548495,0,0x0,8
tick,0x7ffdc994fb34,215563692,0,0x0,8
tick,0x7ffdc994fb34,215579546,0,0x0,8
tick,0x7ffdc994fb34,215595153,0,0x0,8
tick,0x7ffdc994fb34,215611098,0,0x0,8
tick,0x7ffdc994fb34,215627112,0,0x0,8
tick,0x7ffdc994fb34,215643025,0,0x0,8
tick,0x7ffdc994fb34,215658796,0,0x0,8
tick,0x7ffdc994fb34,215674320,0,0x0,8
tick,0x7ffdc994fb34,215689774,0,0x0,8
tick,0x7ffdc994fb34,215705435,0,0x0,8
tick,0x7ffdc994fb34,215721363,0,0x0,8
tick,0x7ffdc994fb34,215737348,0,0x0,8
tick,0x7ffdc994fb34,215752673,0,0x0,8
tick,0x7ffdc994fb34,215768708,0,0x0,8
tick,0x7ffdc994fb34,215784845,0,0x0,8
tick,0x7ffdc994fb34,215800541,0,0x0,8
tick,0x7ffdc994fb34,215816556,0,0x0,8
tick,0x7ffdc994fb34,215831903,0,0x0,8
tick,0x7ffdc994fb34,215847700,0,0x0,8
tick,0x7ffdc994fb34,215863150,0,0x0,8
tick,0x7ffdc994fb34,215878760,0,0x0,8
tick,0x7ffdc994fb34,215894203,0,0x0,8
tick,0x7ffdc994fb34,215909854,0,0x0,8
tick,0x7ffdc994fb34,215926020,0,0x0,8
tick,0x7ffdc994fb34,215941409,0,0x0,8
tick,0x7ffdc994fb34,215956909,0,0x0,8
tick,0x7ffdc994fb34,215972550,0,0x0,8
tick,0x7ffdc994fb34,215988193,0,0x0,8
tick,0x7ffdc994fb34,216004001,0,0x0,8
tick,0x7ffdc994fb34,216019594,0,0x0,8
tick,0x7ffdc994fb34,216034935,0,0x0,8
tick,0x7ffdc994fb34,216050356,0,0x0,8
tick,0x7ffdc994fb34,216065787,0,0x0,8
tick,0x7ffdc994fb34,216081094,0,0x0,8
tick,0x7ffdc994fb34,216096528,0,0x0,8
tick,0x7ffdc994fb34,216111494,0,0x0,8
tick,0x7ffdc994fb34,216127292,0,0x0,8
tick,0x7ffdc994fb34,216143606,0,0x0,8
tick,0x7ffdc994fb34,216159216,0,0x0,8
tick,0x7ffdc994fb34,216174642,0,0x0,8
tick,0x7ffdc994fb34,216189873,0,0x0,8
tick,0x7ffdc994fb34,216205894,0,0x0,8
tick,0x7ffdc994fb34,216221901,0,0x0,8
tick,0x7ffdc994fb34,216237412,0,0x0,8
tick,0x7ffdc994fb34,216252924,0,0x0,8
tick,0x7ffdc994fb34,216268456,0,0x0,8
tick,0x7ffdc994fb34,216283752,0,0x0,8
tick,0x7ffdc994fb34,216299082,0,0x0,8
tick,0x7ffdc994fb34,216314840,0,0x0,8
tick,0x7ffdc994fb34,216330047,0,0x0,8
tick,0x7ffdc994fb34,216345527,0,0x0,8
tick,0x7ffdc994fb34,216361553,0,0x0,8
tick,0x7ffdc994fb34,216377485,0,0x0,8
tick,0x7ffdc994fb34,216393405,0,0x0,8
tick,0x7ffdc994fb34,216409001,0,0x0,8
tick,0x7ffdc994fb34,216424646,0,0x0,8
tick,0x7ffdc994fb34,216440153,0,0x0,8
tick,0x7ffdc994fb34,216455564,0,0x0,8
tick,0x7ffdc994fb34,216471413,0,0x0,8
tick,0x7ffdc994fb34,216486840,0,0x0,8
tick,0x7ffdc994fb34,216502347,0,0x0,8
tick,0x7ffdc994fb34,216517838,0,0x0,8
tick,0x7ffdc994fb34,216532839,0,0x0,8
tick,0x7ffdc994fb34,216548744,0,0x0,8
tick,0x7ffdc994fb34,216564077,0,0x0,8
tick,0x7ffdc994fb34,216579654,0,0x0,8
tick,0x7ffdc994fb34,216595024,0,0x0,8
tick,0x7ffdc994fb34,216610838,0,0x0,8
tick,0x7ffdc994fb34,216626189,0,0x0,8
tick,0x7ffdc994fb34,216641929,0,0x0,8
tick,0x7ffdc994fb34,216657648,0,0x0,8
tick,0x7ffdc994fb34,216673348,0,0x0,8
tick,0x7ffdc994fb34,216688917,0,0x0,8
tick,0x7ffdc994fb34,216704088,0,0x0,8
tick,0x7ffdc994fb34,216719407,0,0x0,8
tick,0x7ffdc994fb34,216735282,0,0x0,8
tick,0x7ffdc994fb34,216750880,0,0x0,8
tick,0x7ffdc994fb34,216766376,0,0x0,8
tick,0x7ffdc994fb34,216781833,0,0x0,8
tick,0x7ffdc994fb34,216797281,0,0x0,8
tick,0x7ffdc994fb34,216812561,0,0x0,8
tick,0x7ffdc994fb34,216828399,0,0x0,8
tick,0x7ffdc994fb34,216843990,0,0x0,8
tick,0x7ffdc994fb34,216859366,0,0x0,8
tick,0x7ffdc994fb34,216874990,0,0x0,8
tick,0x7ffdc994fb34,216890654,0,0x0,8
tick,0x7ffdc994fb34,216905938,0,0x0,8
tick,0x7ffdc994fb34,216921496,0,0x0,8
tick,0x7ffdc994fb34,216937117,0,0x0,8
tick,0x7ffdc994fb34,216952973,0,0x0,8
tick,0x7ffdc994fb34,216968677,0,0x0,8
tick,0x7ffdc994fb34,216984045,0,0x0,8
tick,0x7ffdc994fb34,216999533,0,0x0,8
tick,0x7ffdc994fb34,217014919,0,0x0,8
tick,0x7ffdc994fb34,217030812,0,0x0,8
tick,0x7ffdc994fb34,217046028,0,0x0,8
tick,0x7ffdc994fb34,217061977,0,0x0,8
tick,0x7ffdc994fb34,217077563,0,0x0,8
tick,0x7ffdc994fb34,217092970,0,0x0,8
tick,0x7ffdc994fb34,217108505,0,0x0,8
tick,0x7ffdc994fb34,217124361,0,0x0,8
tick,0x7ffdc994fb34,217140116,0,0x0,8
tick,0x7ffdc994fb34,217155429,0,0x0,8
tick,0x7ffdc994fb34,217171388,0,0x0,8
tick,0x7ffdc994fb34,217187424,0,0x0,8
tick,0x7ffdc994fb34,217203664,0,0x0,8
tick,0x7ffdc994fb34,217219067,0,0x0,8
tick,0x7ffdc994fb34,217234625,0,0x0,8
tick,0x7ffdc994fb34,217250150,0,0x0,8
tick,0x7ffdc994fb34,217265353,0,0x0,8
tick,0x7ffdc994fb34,217281259,0,0x0,8
tick,0x7ffdc994fb34,217296644,0,0x0,8
tick,0x7ffdc994fb34,217312057,0,0x0,8
tick,0x7ffdc994fb34,217327571,0,0x0,8
tick,0x7ffdc994fb34,217343101,0,0x0,8
tick,0x7ffdc994fb34,217358410,0,0x0,8
tick,0x7ffdc994fb34,217374068,0,0x0,8
tick,0x7ffdc994fb34,217389509,0,0x0,8
tick,0x7ffdc994fb34,217404789,0,0x0,8
tick,0x7ffdc994fb34,217420906,0,0x0,8
tick,0x7ffdc994fb34,217436458,0,0x0,8
tick,0x7ffdc994fb34,217451982,0,0x0,8
tick,0x7ffdc994fb34,217467785,0,0x0,8
tick,0x7ffdc994fb34,217483688,0,0x0,8
tick,0x7ffdc994fb34,217498857,0,0x0,8
tick,0x7ffdc994fb34,217513921,0,0x0,8
tick,0x7ffdc994fb34,217529278,0,0x0,8
tick,0x7ffdc994fb34,217544993,0,0x0,8
tick,0x7ffdc994fb34,217560639,0,0x0,8
tick,0x7ffdc994fb34,217575577,0,0x0,8
tick,0x7ffdc994fb34,217590878,0,0x0,8
tick,0x7ffdc994fb34,217606083,0,0x0,8
tick,0x7ffdc994fb34,217621353,0,0x0,8
tick,0x7ffdc994fb34,217636972,0,0x0,8
tick,0x7ffdc994fb34,217653348,0,0x0,8
tick,0x7ffdc994fb34,217667949,0,0x0,8
tick,0x7ffdc994fb34,217683178,0,0x0,8
tick,0x7ffdc994fb34,217698466,0,0x0,8
tick,0x7ffdc994fb34,217713575,0,0x0,8
tick,0x7ffdc994fb34,217729705,0,0x0,8
tick,0x7ffdc994fb34,217745063,0,0x0,8
tick,0x7ffdc994fb34,217760673,0,0x0,8
tick,0x7ffdc994fb34,217775919,0,0x0,8
tick,0x7ffdc994fb34,217791202,0,0x0,8
tick,0x7ffdc994fb34,217806890,0,0x0,8
tick,0x7ffdc994fb34,217822400,0,0x0,8
tick,0x7ffdc994fb34,217838265,0,0x0,8
tick,0x7ffdc994fb34,217853585,0,0x0,8
tick,0x7ffdc994fb34,217869252,0,0x0,8
tick,0x7ffdc994fb34,217884702,0,0x0,8
tick,0x7ffdc994fb34,217900106,0,0x0,8
tick,0x7ffdc994fb34,217915478,0,0x0,8
tick,0x7ffdc994fb34,217930830,0,0x0,8
tick,0x7ffdc994fb34,217946858,0,0x0,8
tick,0x7ffdc994fb34,217962856,0,0x0,8
tick,0x7ffdc994fb34,217978877,0,0x0,8
tick,0x7ffdc994fb34,217994599,0,0x0,8
tick,0x7ffdc994fb34,218009773,0,0x0,8
tick,0x7ffdc994fb34,218024894,0,0x0,8
tick,0x7ffdc994fb34,218039897,0,0x0,8
tick,0x7ffdc994fb34,218055056,0,0x0,8
tick,0x7ffdc994fb34,218070869,0,0x0,8
tick,0x7ffdc994fb34,218086765,0,0x0,8
tick,0x7ffdc994fb34,218102195,0,0x0,8
tick,0x7ffdc994fb34,218117224,0,0x0,8
tick,0x7ffdc994fb34,218132429,0,0x0,8
tick,0x7ffdc994fb34,218148287,0,0x0,8
tick,0x7ffdc994fb34,218164130,0,0x0,8
tick,0x7ffdc994fb34,218179856,0,0x0,8
tick,0x7ffdc994fb34,218194950,0,0x0,8
tick,0x7ffdc994fb34,218210232,0,0x0,8
tick,0x7ffdc994fb34,218226099,0,0x0,8
tick,0x7ffdc994fb34,218241948,0,0x0,8
tick,0x7ffdc994fb34,218257586,0,0x0,8
tick,0x7ffdc994fb34,218273574,0,0x0,8
tick,0x7ffdc994fb34,218288801,0,0x0,8
tick,0x7ffdc994fb34,218304601,0,0x0,8
tick,0x7ffdc994fb34,218319975,0,0x0,8
tick,0x7ffdc994fb34,218335286,0,0x0,8
tick,0x7ffdc994fb34,218351343,0,0x0,8
tick,0x7ffdc994fb34,218367628,0,0x0,8
tick,0x7ffdc994fb34,218382795,0,0x0,8
tick,0x7ffdc994fb34,218398710,0,0x0,8
tick,0x7ffdc994fb34,218414521,0,0x0,8
tick,0x7ffdc994fb34,218429928,0,0x0,8
tick,0x7ffdc994fb34,218445040,0,0x0,8
tick,0x7ffdc994fb34,218460938,0,0x0,8
tick,0x7ffdc994fb34,218476279,0,0x0,8
tick,0x7ffdc994fb34,218492469,0,0x0,8
tick,0x7ffdc994fb34,218508620,0,0x0,8
tick,0x7ffdc994fb34,218524706,0,0x0,8
tick,0x7ffdc994fb34,218540067,0,0x0,8
tick,0x7ffdc994fb34,218555930,0,0x0,8
tick,0x7ffdc994fb34,218571315,0,0x0,8
tick,0x7ffdc994fb34,218587499,0,0x0,8
tick,0x7ffdc994fb34,218602627,0,0x0,8
tick,0x7ffdc994fb34,218618516,0,0x0,8
tick,0x7ffdc994fb34,218633392,0,0x0,8
tick,0x7ffdc994fb34,218648591,0,0x0,8
tick,0x7ffdc994fb34,218664893,0,0x0,8
tick,0x7ffdc994fb34,218680230,0,0x0,8
tick,0x7ffdc994fb34,218695065,0,0x0,8
tick,0x7ffdc994fb34,218711027,0,0x0,8
tick,0x7ffdc994fb34,218726818,0,0x0,8
tick,0x7ffdc994fb34,218742369,0,0x0,8
tick,0x7ffdc994fb34,218757575,0,0x0,8
tick,0x7ffdc994fb34,218773626,0,0x0,8
tick,0x7ffdc994fb34,218789463,0,0x0,8
tick,0x7ffdc994fb34,218805321,0,0x0,8
tick,0x7ffdc994fb34,218821301,0,0x0,8
tick,0x7ffdc994fb34,218836936,0,0x0,8
tick,0x7ffdc994fb34,218852952,0,0x0,8
tick,0x7ffdc994fb34,218868233,0,0x0,8
tick,0x7ffdc994fb34,218883531,0,0x0,8
tick,0x7ffdc994fb34,218898727,0,0x0,8
tick,0x7ffdc994fb34,218914970,0,0x0,8
tick,0x7ffdc994fb34,218931065,0,0x0,8
tick,0x7ffdc994fb34,218946457,0,0x0,8
tick,0x7ffdc994fb34,218962474,0,0x0,8
tick,0x7ffdc994fb34,218977108,0,0x0,8
tick,0x7ffdc994fb34,218992595,0,0x0,8
tick,0x7ffdc994fb34,219007917,0,0x0,8
tick,0x7ffdc994fb34,219023991,0,0x0,8
tick,0x7ffdc994fb34,219040081,0,0x0,8
tick,0x7ffdc994fb34,219055332,0,0x0,8
tick,0x7ffdc994fb34,219071374,0,0x0,8
tick,0x7ffdc994fb34,219087265,0,0x0,8
tick,0x7ffdc994fb34,219102918,0,0x0,8
tick,0x7ffdc994fb34,219118407,0,0x0,8
tick,0x7ffdc994fb34,219133517,0,0x0,8
tick,0x7ffdc994fb34,219148818,0,0x0,8
tick,0x7ffdc994fb34,219163931,0,0x0,8
tick,0x7ffdc994fb34,219179096,0,0x0,8
tick,0x7ffdc994fb34,219194262,0,0x0,8
tick,0x7ffdc994fb34,219210217,0,0x0,8
tick,0x7ffdc994fb34,219225874,0,0x0,8
tick,0x7ffdc994fb34,219242122,0,0x0,8
tick,0x7ffdc994fb34,219257965,0,0x0,8
tick,0x7ffdc994fb34,219273148,0,0x0,8
tick,0x7ffdc994fb34,219288741,0,0x0,8
tick,0x7ffdc994fb34,219304248,0,0x0,8
tick,0x7ffdc994fb34,219319539,0,0x0,8
tick,0x7ffdc994fb34,219334888,0,0x0,8
tick,0x7ffdc994fb34,219350588,0,0x0,8
tick,0x7ffdc994fb34,219366422,0,0x0,8
tick,0x7ffdc994fb34,219382344,0,0x0,8
tick,0x7ffdc994fb34,219397466,0,0x0,8
tick,0x7ffdc994fb34,219412846,0,0x0,8
tick,0x7ffdc994fb34,219428420,0,0x0,8
tick,0x7ffdc994fb34,219443751,0,0x0,8
tick,0x7ffdc994fb34,219459890,0,0x0,8
tick,0x7ffdc994fb34,219475448,0,0x0,8
tick,0x7ffdc994fb34,219491225,0,0x0,8
tick,0x7ffdc994fb34,219505612,0,0x0,8
tick,0x7ffdc994fb34,219521529,0,0x0,8
tick,0x7ffdc994fb34,219537013,0,0x0,8
tick,0x7ffdc994fb34,219552581,0,0x0,8
tick,0x7ffdc994fb34,219567798,0,0x0,8
tick,0x7ffdc994fb34,219583402,0,0x0,8
tick,0x7ffdc994fb34,219598915,0,0x0,8
tick,0x7ffdc994fb34,219614550,0,0x0,8
tick,0x7ffdc994fb34,219630544,0,0x0,8
tick,0x7ffdc994fb34,219646309,0,0x0,8
tick,0x7ffdc994fb34,219662595,0,0x0,8
tick,0x7ffdc994fb34,219678401,0,0x0,8
tick,0x7ffdc994fb34,219693636,0,0x0,8
tick,0x7ffdc994fb34,219709556,0,0x0,8
tick,0x7ffdc994fb34,219724869,0,0x0,8
tick,0x7ffdc994fb34,219740493,0,0x0,8
tick,0x7ffdc994fb34,219755944,0,0x0,8
tick,0x7ffdc994fb34,219771468,0,0x0,8
tick,0x7ffdc994fb34,219787763,0,0x0,8
tick,0x7ffdc994fb34,219802916,0,0x0,8
tick,0x7ffdc994fb34,219818912,0,0x0,8
tick,0x7ffdc994fb34,219834342,0,0x0,8
tick,0x7ffdc994fb34,219850096,0,0x0,8
tick,0x7ffdc994fb34,219865238,0,0x0,8
tick,0x7ffdc994fb34,219881103,0,0x0,8
tick,0x7ffdc994fb34,219896532,0,0x0,8
tick,0x7ffdc994fb34,219911856,0,0x0,8
tick,0x7ffdc994fb34,219927438,0,0x0,8
tick,0x7ffdc994fb34,219943251,0,0x0,8
tick,0x7ffdc994fb34,219958432,0,0x0,8
tick,0x7ffdc994fb34,219974026,0,0x0,8
tick,0x7ffdc994fb34,219989516,0,0x0,8
tick,0x7ffdc994fb34,220004848,0,0x0,8
tick,0x7ffdc994fb34,220020259,0,0x0,8
tick,0x7ffdc994fb34,220035861,0,0x0,8
tick,0x7ffdc994fb34,220051503,0,0x0,8
tick,0x7ffdc994fb34,220066458,0,0x0,8
tick,0x7ffdc994fb34,220081767,0,0x0,8
tick,0x7ffdc994fb34,220097466,0,0x0,8
tick,0x7ffdc994fb34,220113579,0,0x0,8
tick,0x7ffdc994fb34,220129435,0,0x0,8
tick,0x7ffdc994fb34,220145353,0,0x0,8
tick,0x7ffdc994fb34,220161370,0,0x0,8
tick,0x7ffdc994fb34,220177300,0,0x0,8
tick,0x7ffdc994fb34,220192975,0,0x0,8
tick,0x7ffdc994fb34,220208375,0,0x0,8
tick,0x7ffdc994fb34,220223922,0,0x0,8
tick,0x7ffdc994fb34,220238998,0,0x0,8
tick,0x7ffdc994fb34,220254804,0,0x0,8
tick,0x7ffdc994fb34,220270132,0,0x0,8
tick,0x7ffdc994fb34,220285843,0,0x0,8
tick,0x7ffdc994fb34,220301789,0,0x0,8
tick,0x7ffdc994fb34,220317230,0,0x0,8
tick,0x7ffdc994fb34,220332355,0,0x0,8
tick,0x7ffdc994fb34,220348387,0,0x0,8
tick,0x7ffdc994fb34,220364557,0,0x0,8
tick,0x7ffdc994fb34,220380456,0,0x0,8
tick,0x7ffdc994fb34,220395674,0,0x0,8
tick,0x7ffdc994fb34,220410871,0,0x0,8
tick,0x7ffdc994fb34,220426382,0,0x0,8
tick,0x7ffdc994fb34,220442832,0,0x0,8
tick,0x7ffdc994fb34,220458329,0,0x0,8
tick,0x7ffdc994fb34,220473496,0,0x0,8
tick,0x7ffdc994fb34,220489329,0,0x0,8
tick,0x7ffdc994fb34,220504895,0,0x0,8
tick,0x7ffdc994fb34,220520453,0,0x0,8
tick,0x7ffdc994fb34,220536171,0,0x0,8
tick,0x7ffdc994fb34,220551498,0,0x0,8
tick,0x7ffdc994fb34,220567452,0,0x0,8
tick,0x7ffdc994fb34,220583082,0,0x0,8
tick,0x7ffdc994fb34,220597972,0,0x0,8
tick,0x7ffdc994fb34,220614135,0,0x0,8
tick,0x7ffdc994fb34,220629705,0,0x0,8
tick,0x7ffdc994fb34,220644960,0,0x0,8
tick,0x7ffdc994fb34,220661004,0,0x0,8
tick,0x7ffdc994fb34,220676495,0,0x0,8
tick,0x7ffdc994fb34,220691910,0,0x0,8
tick,0x7ffdc994fb34,220707686,0,0x0,8
tick,0x7ffdc994fb34,220722961,0,0x0,8
tick,0x7ffdc994fb34,220738885,0,0x0,8
tick,0x7ffdc994fb34,220754752,0,0x0,8
tick,0x7ffdc994fb34,220770119,0,0x0,8
tick,0x7ffdc994fb34,220785789,0,0x0,8
tick,0x7ffdc994fb34,220800850,0,0x0,8
tick,0x7ffdc994fb34,220816432,0,0x0,8
tick,0x7ffdc994fb34,220831719,0,0x0,8
tick,0x7ffdc994fb34,220847573,0,0x0,8
tick,0x7ffdc994fb34,220862514,0,0x0,8
tick,0x7ffdc994fb34,220878248,0,0x0,8
tick,0x7ffdc994fb34,220893770,0,0x0,8
tick,0x7ffdc994fb34,220909480,0,0x0,8
tick,0x7ffdc994fb34,220925378,0,0x0,8
tick,0x7ffdc994fb34,220941106,0,0x0,8
tick,0x7ffdc994fb34,220957009,0,0x0,8
tick,0x7ffdc994fb34,220972058,0,0x0,8
tick,0x7ffdc994fb34,220988131,0,0x0,8
tick,0x7ffdc994fb34,221003488,0,0x0,8
tick,0x7ffdc994fb34,221019598,0,0x0,8
tick,0x7ffdc994fb34,221034537,0,0x0,8
tick,0x7ffdc994fb34,221050591,0,0x0,8
tick,0x7ffdc994fb34,221066809,0,0x0,8
tick,0x7ffdc994fb34,221082306,0,0x0,8
tick,0x7ffdc994fb34,221098325,0,0x0,8
tick,0x7ffdc994fb34,221113186,0,0x0,8
tick,0x7ffdc994fb34,221129313,0,0x0,8
tick,0x7ffdc994fb34,221144548,0,0x0,8
tick,0x7ffdc994fb34,221160605,0,0x0,8
tick,0x7ffdc994fb34,221175567,0,0x0,8
tick,0x7ffdc994fb34,221191029,0,0x0,8
tick,0x7ffdc994fb34,221205994,0,0x0,8
tick,0x7ffdc994fb34,221222020,0,0x0,8
tick,0x7ffdc994fb34,221237135,0,0x0,8
tick,0x7ffdc994fb34,221252789,0,0x0,8
tick,0x7ffdc994fb34,221269005,0,0x0,8
tick,0x7ffdc994fb34,221284799,0,0x0,8
tick,0x7ffdc994fb34,221300886,0,0x0,8
tick,0x7ffdc994fb34,221317178,0,0x0,8
tick,0x7ffdc994fb34,221332825,0,0x0,8
tick,0x7ffdc994fb34,221349081,0,0x0,8
tick,0x7ffdc994fb34,221364209,0,0x0,8
tick,0x7ffdc994fb34,221379597,0,0x0,8
tick,0x7ffdc994fb34,221394981,0,0x0,8
tick,0x7ffdc994fb34,221410707,0,0x0,8
tick,0x7ffdc994fb34,221426323,0,0x0,8
tick,0x7ffdc994fb34,221441840,0,0x0,8
tick,0x7ffdc994fb34,221457461,0,0x0,8
tick,0x7ffdc994fb34,221473147,0,0x0,8
tick,0x7ffdc994fb34,221488233,0,0x0,8
tick,0x7ffdc994fb34,221504340,0,0x0,8
tick,0x7ffdc994fb34,221520077,0,0x0,8
tick,0x7ffdc994fb34,221535270,0,0x0,8
tick,0x7ffdc994fb34,221551290,0,0x0,8
tick,0x7ffdc994fb34,221567053,0,0x0,8
tick,0x7ffdc994fb34,221582737,0,0x0,8
tick,0x7ffdc994fb34,221597568,0,0x0,8
tick,0x7ffdc994fb34,221613225,0,0x0,8
tick,0x7ffdc994fb34,221629072,0,0x0,8
tick,0x7ffdc994fb34,221645095,0,0x0,8
tick,0x7ffdc994fb34,221659953,0,0x0,8
tick,0x7ffdc994fb34,221675488,0,0x0,8
tick,0x7ffdc994fb34,221690350,0,0x0,8
tick,0x7ffdc994fb34,221705676,0,0x0,8
tick,0x7ffdc994fb34,221721291,0,0x0,8
tick,0x7ffdc994fb34,221737321,0,0x0,8
tick,0x7ffdc994fb34,221752773,0,0x0,8
tick,0x7ffdc994fb34,221768249,0,0x0,8
tick,0x7ffdc994fb34,221784472,0,0x0,8
tick,0x7ffdc994fb34,221800189,0,0x0,8
tick,0x7ffdc994fb34,221815256,0,0x0,8
tick,0x7ffdc994fb34,221830561,0,0x0,8
tick,0x7ffdc994fb34,221845937,0,0x0,8
tick,0x7ffdc994fb34,221861214,0,0x0,8
tick,0x7ffdc994fb34,221876388,0,0x0,8
tick,0x7ffdc994fb34,221892534,0,0x0,8
tick,0x7ffdc994fb34,221908679,0,0x0,8
tick,0x7ffdc994fb34,221924364,0,0x0,8
tick,0x7ffdc994fb34,221939735,0,0x0,8
tick,0x7ffdc994fb34,221955057,0,0x0,8
tick,0x7ffdc994fb34,221970566,0,0x0,8
tick,0x7ffdc994fb34,221986264,0,0x0,8
tick,0x7ffdc994fb34,222002518,0,0x0,8
tick,0x7ffdc994fb34,222017979,0,0x0,8
tick,0x7ffdc994fb34,222034221,0,0x0,8
tick,0x7ffdc994fb34,222049805,0,0x0,8
tick,0x7ffdc994fb34,222064836,0,0x0,8
tick,0x7ffdc994fb34,222080563,0,0x0,8
tick,0x7ffdc994fb34,222096337,0,0x0,8
tick,0x7ffdc994fb34,222111714,0,0x0,8
tick,0x7ffdc994fb34,222127439,0,0x0,8
tick,0x7ffdc994fb34,222143157,0,0x0,8
tick,0x7ffdc994fb34,222158195,0,0x0,8
tick,0x7ffdc994fb34,222173417,0,0x0,8
tick,0x7ffdc994fb34,222189198,0,0x0,8
tick,0x7ffdc994fb34,222204435,0,0x0,8
tick,0x7ffdc994fb34,222220081,0,0x0,8
tick,0x7ffdc994fb34,222236319,0,0x0,8
tick,0x7ffdc994fb34,222251949,0,0x0,8
tick,0x7ffdc994fb34,222267392,0,0x0,8
tick,0x7ffdc994fb34,222282959,0,0x0,8
tick,0x7ffdc994fb34,222298393,0,0x0,8
tick,0x7ffdc994fb34,222314246,0,0x0,8
tick,0x7ffdc994fb34,222329425,0,0x0,8
tick,0x7ffdc994fb34,222345013,0,0x0,8
tick,0x7ffdc994fb34,222360352,0,0x0,8
tick,0x7ffdc994fb34,222375642,0,0x0,8
tick,0x7ffdc994fb34,222391211,0,0x0,8
tick,0x7ffdc994fb34,222406790,0,0x0,8
tick,0x7ffdc994fb34,222422150,0,0x0,8
tick,0x7ffdc994fb34,222437847,0,0x0,8
tick,0x7ffdc994fb34,222453886,0,0x0,8
tick,0x7ffdc994fb34,222469366,0,0x0,8
tick,0x7ffdc994fb34,222485043,0,0x0,8
tick,0x7ffdc994fb34,222500503,0,0x0,8
tick,0x7ffdc994fb34,222516385,0,0x0,8
tick,0x7ffdc994fb34,222531717,0,0x0,8
tick,0x7ffdc994fb34,222547231,0,0x0,8
tick,0x7ffdc994fb34,222563040,0,0x0,8
tick,0x7ffdc994fb34,222579048,0,0x0,8
tick,0x7ffdc994fb34,222594453,0,0x0,8
tick,0x7ffdc994fb34,222609218,0,0x0,8
tick,0x7ffdc994fb34,222625603,0,0x0,8
tick,0x7ffdc994fb34,222640893,0,0x0,8
tick,0x7ffdc994fb34,222656377,0,0x0,8
tick,0x7ffdc994fb34,222672671,0,0x0,8
tick,0x7ffdc994fb34,222687891,0,0x0,8
tick,0x7ffdc994fb34,222703803,0,0x0,8
tick,0x7ffdc994fb34,222719434,0,0x0,8
tick,0x7ffdc994fb34,222735141,0,0x0,8
tick,0x7ffdc994fb34,222750735,0,0x0,8
tick,0x7ffdc994fb34,222765864,0,0x0,8
tick,0x7ffdc994fb34,222781323,0,0x0,8
tick,0x7ffdc994fb34,222796167,0,0x0,8
tick,0x7ffdc994fb34,222812177,0,0x0,8
tick,0x7ffdc994fb34,222828018,0,0x0,8
tick,0x7ffdc994fb34,222843079,0,0x0,8
tick,0x7ffdc994fb34,222858310,0,0x0,8
tick,0x7ffdc994fb34,222873670,0,0x0,8
tick,0x7ffdc994fb34,222889319,0,0x0,8
tick,0x7ffdc994fb34,222904725,0,0x0,8
tick,0x7ffdc994fb34,222919961,0,0x0,8
tick,0x7ffdc994fb34,222935860,0,0x0,8
tick,0x7ffdc994fb34,222950842,0,0x0,8
tick,0x7ffdc994fb34,222966983,0,0x0,8
tick,0x7ffdc994fb34,222982110,0,0x0,8
tick,0x7ffdc994fb34,222998244,0,0x0,8
tick,0x7ffdc994fb34,223013354,0,0x0,8
tick,0x7ffdc994fb34,223029602,0,0x0,8
tick,0x7ffdc994fb34,223045327,0,0x0,8
tick,0x7ffdc994fb34,223061161,0,0x0,8
tick,0x7ffdc994fb34,223076452,0,0x0,8
tick,0x7ffdc994fb34,223092611,0,0x0,8
tick,0x7ffdc994fb34,223108416,0,0x0,8
tick,0x7ffdc994fb34,223123667,0,0x0,8
tick,0x7ffdc994fb34,223139480,0,0x0,8
tick,0x7ffdc994fb34,223154792,0,0x0,8
tick,0x7ffdc994fb34,223170025,0,0x0,8
tick,0x7ffdc994fb34,223186095,0,0x0,8
tick,0x7ffdc994fb34,223201990,0,0x0,8
tick,0x7ffdc994fb34,223217931,0,0x0,8
tick,0x7ffdc994fb34,223233204,0,0x0,8
tick,0x7ffdc994fb34,223249211,0,0x0,8
tick,0x7ffdc994fb34,223264756,0,0x0,8
tick,0x7ffdc994fb34,223280927,0,0x0,8
tick,0x7ffdc994fb34,223296427,0,0x0,8
tick,0x7ffdc994fb34,223311481,0,0x0,8
tick,0x7ffdc994fb34,223327320,0,0x0,8
tick,0x7ffdc994fb34,223343747,0,0x0,8
tick,0x7ffdc994fb34,223359377,0,0x0,8
tick,0x7ffdc994fb34,223374779,0,0x0,8
tick,0x7ffdc994fb34,223390337,0,0x0,8
tick,0x7ffdc994fb34,223406161,0,0x0,8
tick,0x7ffdc994fb34,223421899,0,0x0,8
tick,0x7ffdc994fb34,223437755,0,0x0,8
tick,0x7ffdc994fb34,223453037,0,0x0,8
tick,0x7ffdc994fb34,223468777,0,0x0,8
tick,0x7ffdc994fb34,223484896,0,0x0,8
tick,0x7ffdc994fb34,223500322,0,0x0,8
tick,0x7ffdc994fb34,223515833,0,0x0,8
tick,0x7ffdc994fb34,223531693,0,0x0,8
tick,0x7ffdc994fb34,223547088,0,0x0,8
tick,0x7ffdc994fb34,223562821,0,0x0,8
tick,0x7ffdc994fb34,223578237,0,0x0,8
tick,0x7ffdc994fb34,223594033,0,0x0,8
tick,0x7ffdc994fb34,223609335,0,0x0,8
tick,0x7ffdc994fb34,223625366,0,0x0,8
tick,0x7ffdc994fb34,223641534,0,0x0,8
tick,0x7ffdc994fb34,223657338,0,0x0,8
tick,0x7ffdc994fb34,223673531,0,0x0,8
tick,0x7ffdc994fb34,223689293,0,0x0,8
tick,0x7ffdc994fb34,223704528,0,0x0,8
tick,0x7ffdc994fb34,223720328,0,0x0,8
tick,0x7ffdc994fb34,223735514,0,0x0,8
tick,0x7ffdc994fb34,223750765,0,0x0,8
tick,0x7ffdc994fb34,223766473,0,0x0,8
tick,0x7ffdc994fb34,223782810,0,0x0,8
tick,0x7ffdc994fb34,223798103,0,0x0,8
tick,0x7ffdc994fb34,223813452,0,0x0,8
tick,0x7ffdc994fb34,223829235,0,0x0,8
tick,0x7ffdc994fb34,223844662,0,0x0,8
tick,0x7ffdc994fb34,223860257,0,0x0,8
tick,0x7ffdc994fb34,223875690,0,0x0,8
tick,0x7ffdc994fb34,223891466,0,0x0,8
tick,0x7ffdc994fb34,223906715,0,0x0,8
tick,0x7ffdc994fb34,223922534,0,0x0,8
tick,0x7ffdc994fb34,223938214,0,0x0,8
tick,0x7ffdc994fb34,223953431,0,0x0,8
tick,0x7ffdc994fb34,223969042,0,0x0,8
tick,0x7ffdc994fb34,223984370,0,0x0,8
tick,0x7ffdc994fb34,224000179,0,0x0,8
tick,0x7ffdc994fb34,224015780,0,0x0,8
tick,0x7ffdc994fb34,224031970,0,0x0,8
tick,0x7ffdc994fb34,224047455,0,0x0,8
tick,0x7ffdc994fb34,224063402,0,0x0,8
tick,0x7ffdc994fb34,224078615,0,0x0,8
tick,0x7ffdc994fb34,224093872,0,0x0,8
tick,0x7ffdc994fb34,224109545,0,0x0,8
tick,0x7ffdc994fb34,224125168,0,0x0,8
tick,0x7ffdc994fb34,224140921,0,0x0,8
tick,0x7ffdc994fb34,224156247,0,0x0,8
tick,0x7ffdc994fb34,224171459,0,0x0,8
tick,0x7ffdc994fb34,224187054,0,0x0,8
tick,0x7ffdc994fb34,224203302,0,0x0,8
tick,0x7ffdc994fb34,224218565,0,0x0,8
tick,0x7ffdc994fb34,224234114,0,0x0,8
tick,0x7ffdc994fb34,224249606,0,0x0,8
tick,0x7ffdc994fb34,224264979,0,0x0,8
tick,0x7ffdc994fb34,224281268,0,0x0,8
tick,0x7ffdc994fb34,224296908,0,0x0,8
tick,0x7ffdc994fb34,224313007,0,0x0,8
tick,0x7ffdc994fb34,224328374,0,0x0,8
tick,0x7ffdc994fb34,224343721,0,0x0,8
tick,0x7ffdc994fb34,224358953,0,0x0,8
tick,0x7ffdc994fb34,224374451,0,0x0,8
tick,0x7ffdc994fb34,224390061,0,0x0,8
tick,0x7ffdc994fb34,224405520,0,0x0,8
tick,0x7ffdc994fb34,224420900,0,0x0,8
tick,0x7ffdc994fb34,224436323,0,0x0,8
tick,0x7ffdc994fb34,224452017,0,0x0,8
tick,0x7ffdc994fb34,224467424,0,0x0,8
tick,0x7ffdc994fb34,224482923,0,0x0,8
tick,0x7ffdc994fb34,224499169,0,0x0,8
tick,0x7ffdc994fb34,224514854,0,0x0,8
tick,0x7ffdc994fb34,224530744,0,0x0,8
tick,0x7ffdc994fb34,224546525,0,0x0,8
tick,0x7ffdc994fb34,224561838,0,0x0,8
tick,0x7ffdc994fb34,224577306,0,0x0,8
tick,0x7ffdc994fb34,224593445,0,0x0,8
tick,0x7ffdc994fb34,224608975,0,0x0,8
tick,0x7ffdc994fb34,224624470,0,0x0,8
tick,0x7ffdc994fb34,224640116,0,0x0,8
tick,0x7ffdc994fb34,224655283,0,0x0,8
tick,0x7ffdc994fb34,224670640,0,0x0,8
tick,0x7ffdc994fb34,224686281,0,0x0,8
tick,0x7ffdc994fb34,224701513,0,0x0,8
tick,0x7ffdc994fb34,224717334,0,0x0,8
tick,0x7ffdc994fb34,224732699,0,0x0,8
tick,0x7ffdc994fb34,224748213,0,0x0,8
tick,0x7ffdc994fb34,224763037,0,0x0,8
tick,0x7ffdc994fb34,224778806,0,0x0,8
tick,0x7ffdc994fb34,224795196,0,0x0,8
tick,0x7ffdc994fb34,224811206,0,0x0,8
tick,0x7ffdc994fb34,224826891,0,0x0,8
tick,0x7ffdc994fb34,224842277,0,0x0,8
tick,0x7ffdc994fb34,224857823,0,0x0,8
tick,0x7ffdc994fb34,224873076,0,0x0,8
tick,0x7ffdc994fb34,224888847,0,0x0,8
tick,0x7ffdc994fb34,224904760,0,0x0,8
tick,0x7ffdc994fb34,224920670,0,0x0,8
tick,0x7ffdc994fb34,224936154,0,0x0,8
tick,0x7ffdc994fb34,224951527,0,0x0,8
tick,0x7ffdc994fb34,224966890,0,0x0,8
tick,0x7ffdc994fb34,224982098,0,0x0,8
tick,0x7ffdc994fb34,224998224,0,0x0,8
tick,0x7ffdc994fb34,225014070,0,0x0,8
tick,0x7ffdc994fb34,225029496,0,0x0,8
tick,0x7ffdc994fb34,225045081,0,0x0,8
tick,0x7ffdc994fb34,225060265,0,0x0,8
tick,0x7ffdc994fb34,225075919,0,0x0,8
tick,0x7ffdc994fb34,225092150,0,0x0,8
tick,0x7ffdc994fb34,225108036,0,0x0,8
tick,0x7ffdc994fb34,225123337,0,0x0,8
tick,0x7ffdc994fb34,225139521,0,0x0,8
tick,0x7ffdc994fb34,225154554,0,0x0,8
tick,0x7ffdc994fb34,225170156,0,0x0,8
tick,0x7ffdc994fb34,225185752,0,0x0,8
tick,0x7ffdc994fb34,225201584,0,0x0,8
tick,0x7ffdc994fb34,225217481,0,0x0,8
tick,0x7ffdc994fb34,225232944,0,0x0,8
tick,0x7ffdc994fb34,225248137,0,0x0,8
tick,0x7ffdc994fb34,225263592,0,0x0,8
tick,0x7ffdc994fb34,225279682,0,0x0,8
tick,0x7ffdc994fb34,225294869,0,0x0,8
tick,0x7ffdc994fb34,225310350,0,0x0,8
tick,0x7ffdc994fb34,225326037,0,0x0,8
tick,0x7ffdc994fb34,225341862,0,0x0,8
tick,0x7ffdc994fb34,225357283,0,0x0,8
tick,0x7ffdc994fb34,225372599,0,0x0,8
tick,0x7ffdc994fb34,225388415,0,0x0,8
tick,0x7ffdc994fb34,225404056,0,0x0,8
tick,0x7ffdc994fb34,225419914,0,0x0,8
tick,0x7ffdc994fb34,225435839,0,0x0,8
tick,0x7ffdc994fb34,225451094,0,0x0,8
tick,0x7ffdc994fb34,225467063,0,0x0,8
tick,0x7ffdc994fb34,225482192,0,0x0,8
tick,0x7ffdc994fb34,225497391,0,0x0,8
tick,0x7ffdc994fb34,225513103,0,0x0,8
tick,0x7ffdc994fb34,225528792,0,0x0,8
tick,0x7ffdc994fb34,225544270,0,0x0,8
tick,0x7ffdc994fb34,225559637,0,0x0,8
tick,0x7ffdc994fb34,225574894,0,0x0,8
tick,0x7ffdc994fb34,225590499,0,0x0,8
tick,0x7ffdc994fb34,225606269,0,0x0,8
tick,0x7ffdc994fb34,225621437,0,0x0,8
tick,0x7ffdc994fb34,225637418,0,0x0,8
tick,0x7ffdc994fb34,225653770,0,0x0,8
tick,0x7ffdc994fb34,225669323,0,0x0,8
tick,0x7ffdc994fb34,225684587,0,0x0,8
tick,0x7ffdc994fb34,225700062,0,0x0,8
tick,0x7ffdc994fb34,225715328,0,0x0,8
tick,0x7ffdc994fb34,225730910,0,0x0,8
tick,0x7ffdc994fb34,225746454,0,0x0,8
tick,0x7ffdc994fb34,225762089,0,0x0,8
tick,0x7ffdc994fb34,225777411,0,0x0,8
tick,0x7ffdc994fb34,225793577,0,0x0,8
tick,0x7ffdc994fb34,225809239,0,0x0,8
tick,0x7ffdc994fb34,225824793,0,0x0,8
tick,0x7ffdc994fb34,225840428,0,0x0,8
tick,0x7ffdc994fb34,225855678,0,0x0,8
tick,0x7ffdc994fb34,225872131,0,0x0,8
tick,0x7ffdc994fb34,225887513,0,0x0,8
tick,0x7ffdc994fb34,225902704,0,0x0,8
tick,0x7ffdc994fb34,225918136,0,0x0,8
tick,0x7ffdc994fb34,225933379,0,0x0,8
tick,0x7ffdc994fb34,225949156,0,0x0,8
tick,0x7ffdc994fb34,225964682,0,0x0,8
tick,0x7ffdc994fb34,225980015,0,0x0,8
tick,0x7ffdc994fb34,225995583,0,0x0,8
tick,0x7ffdc994fb34,226011179,0,0x0,8
tick,0x7ffdc994fb34,226026413,0,0x0,8
tick,0x7ffdc994fb34,226042329,0,0x0,8
tick,0x7ffdc994fb34,226057795,0,0x0,8
tick,0x7ffdc994fb34,226073599,0,0x0,8
tick,0x7ffdc994fb34,226089606,0,0x0,8
tick,0x7ffdc994fb34,226104811,0,0x0,8
tick,0x7ffdc994fb34,226120849,0,0x0,8
tick,0x7ffdc994fb34,226136659,0,0x0,8
tick,0x7ffdc994fb34,226152846,0,0x0,8
tick,0x7ffdc994fb34,226168641,0,0x0,8
tick,0x7ffdc994fb34,226184332,0,0x0,8
tick,0x7ffdc994fb34,226200037,0,0x0,8
tick,0x7ffdc994fb34,226215227,0,0x0,8
tick,0x7ffdc994fb34,226230576,0,0x0,8
tick,0x7ffdc994fb34,226245947,0,0x0,8
tick,0x7ffdc994fb34,226261884,0,0x0,8
tick,0x7ffdc994fb34,226277349,0,0x0,8
tick,0x7ffdc994fb34,226292527,0,0x0,8
tick,0x7ffdc994fb34,226307827,0,0x0,8
tick,0x7ffdc994fb34,226323431,0,0x0,8
tick,0x7ffdc994fb34,226339459,0,0x0,8
tick,0x7ffdc994fb34,226354650,0,0x0,8
tick,0x7ffdc994fb34,226370475,0,0x0,8
tick,0x7ffdc994fb34,226386073,0,0x0,8
tick,0x7ffdc994fb34,226402172,0,0x0,8
tick,0x7ffdc994fb34,226418284,0,0x0,8
tick,0x7ffdc994fb34,226434191,0,0x0,8
tick,0x7ffdc994fb34,226449985,0,0x0,8
tick,0x7ffdc994fb34,226465270,0,0x0,8
tick,0x7ffdc994fb34,226480971,0,0x0,8
tick,0x7ffdc994fb34,226496753,0,0x0,8
tick,0x7ffdc994fb34,226511766,0,0x0,8
tick,0x7ffdc994fb34,226527577,0,0x0,8
tick,0x7ffdc994fb34,226543484,0,0x0,8
tick,0x7ffdc994fb34,226559186,0,0x0,8
tick,0x7ffdc994fb34,226574719,0,0x0,8
tick,0x7ffdc994fb34,226590520,0,0x0,8
tick,0x7ffdc994fb34,226605984,0,0x0,8
tick,0x7ffdc994fb34,226621520,0,0x0,8
tick,0x7ffdc994fb34,226636671,0,0x0,8
tick,0x7ffdc994fb34,226652562,0,0x0,8
tick,0x7ffdc994fb34,226668075,0,0x0,8
tick,0x7ffdc994fb34,226683501,0,0x0,8
tick,0x7ffdc994fb34,226698154,0,0x0,8
tick,0x7ffdc994fb34,226713358,0,0x0,8
tick,0x7ffdc994fb34,226729219,0,0x0,8
tick,0x7ffdc994fb34,226744440,0,0x0,8
tick,0x7ffdc994fb34,226760437,0,0x0,8
tick,0x7ffdc994fb34,226775612,0,0x0,8
tick,0x7ffdc994fb34,226791802,0,0x0,8
tick,0x7ffdc994fb34,226807830,0,0x0,8
tick,0x7ffdc994fb34,226822983,0,0x0,8
tick,0x7ffdc994fb34,226838421,0,0x0,8
tick,0x7ffdc994fb34,226853724,0,0x0,8
tick,0x7ffdc994fb34,226869338,0,0x0,8
tick,0x7ffdc994fb34,226884770,0,0x0,8
tick,0x7ffdc994fb34,226900134,0,0x0,8
tick,0x7ffdc994fb34,226915429,0,0x0,8
tick,0x7ffdc994fb34,226931249,0,0x0,8
tick,0x7ffdc994fb34,226946598,0,0x0,8
tick,0x7ffdc994fb34,226962778,0,0x0,8
tick,0x7ffdc994fb34,226977863,0,0x0,8
tick,0x7ffdc994fb34,226993191,0,0x0,8
tick,0x7ffdc994fb34,227008218,0,0x0,8
tick,0x7ffdc994fb34,227023520,0,0x0,8
tick,0x7ffdc994fb34,227039460,0,0x0,8
tick,0x7ffdc994fb34,227054865,0,0x0,8
tick,0x7ffdc994fb34,227070035,0,0x0,8
tick,0x7ffdc994fb34,227086312,0,0x0,8
tick,0x7ffdc994fb34,227102329,0,0x0,8
tick,0x7ffdc994fb34,227118071,0,0x0,8
tick,0x7ffdc994fb34,227133300,0,0x0,8
tick,0x7ffdc994fb34,227148849,0,0x0,8
tick,0x7ffdc994fb34,227164819,0,0x0,8
tick,0x7ffdc994fb34,227180757,0,0x0,8
tick,0x7ffdc994fb34,227196034,0,0x0,8
tick,0x7ffdc994fb34,227211608,0,0x0,8
tick,0x7ffdc994fb34,227227320,0,0x0,8
tick,0x7ffdc994fb34,227243077,0,0x0,8
tick,0x7ffdc994fb34,227258342,0,0x0,8
tick,0x7ffdc994fb34,227273655,0,0x0,8
tick,0x7ffdc994fb34,227289501,0,0x0,8
tick,0x7ffdc994fb34,227304684,0,0x0,8
tick,0x7ffdc994fb34,227319941,0,0x0,8
tick,0x7ffdc994fb34,227335536,0,0x0,8
tick,0x7ffdc994fb34,227351072,0,0x0,8
tick,0x7ffdc994fb34,227366576,0,0x0,8
tick,0x7ffdc994fb34,227382060,0,0x0,8
tick,0x7ffdc994fb34,227397750,0,0x0,8
tick,0x7ffdc994fb34,227412888,0,0x0,8
tick,0x7ffdc994fb34,227428876,0,0x0,8
tick,0x7ffdc994fb34,227444789,0,0x0,8
tick,0x7ffdc994fb34,227460647,0,0x0,8
tick,0x7ffdc994fb34,227476599,0,0x0,8
tick,0x7ffdc994fb34,227492174,0,0x0,8
tick,0x7ffdc994fb34,227507919,0,0x0,8
tick,0x7ffdc994fb34,227523038,0,0x0,8
tick,0x7ffdc994fb34,227538720,0,0x0,8
tick,0x7ffdc994fb34,227553943,0,0x0,8
tick,0x7ffdc994fb34,227569807,0,0x0,8
tick,0x7ffdc994fb34,227584950,0,0x0,8
tick,0x7ffdc994fb34,227600230,0,0x0,8
tick,0x7ffdc994fb34,227616010,0,0x0,8
tick,0x7ffdc994fb34,227631220,0,0x0,8
tick,0x7ffdc994fb34,227646724,0,0x0,8
tick,0x7ffdc994fb34,227662982,0,0x0,8
tick,0x7ffdc994fb34,227678426,0,0x0,8
tick,0x7ffdc994fb34,227694204,0,0x0,8
tick,0x7ffdc994fb34,227709937,0,0x0,8
tick,0x7ffdc994fb34,227725600,0,0x0,8
tick,0x7ffdc994fb34,227740545,0,0x0,8
tick,0x7ffdc994fb34,227756673,0,0x0,8
tick,0x7ffdc994fb34,227772781,0,0x0,8
tick,0x7ffdc994fb34,227787970,0,0x0,8
tick,0x7ffdc994fb34,227803022,0,0x0,8
tick,0x7ffdc994fb34,227819197,0,0x0,8
tick,0x7ffdc994fb34,227834496,0,0x0,8
tick,0x7ffdc994fb34,227850233,0,0x0,8
tick,0x7ffdc994fb34,227866048,0,0x0,8
tick,0x7ffdc994fb34,227881511,0,0x0,8
tick,0x7ffdc994fb34,227897141,0,0x0,8
tick,0x7ffdc994fb34,227912453,0,0x0,8
tick,0x7ffdc994fb34,227928031,0,0x0,8
tick,0x7ffdc994fb34,227944605,0,0x0,8
tick,0x7ffdc994fb34,227960305,0,0x0,8
tick,0x7ffdc994fb34,227975879,0,0x0,8
tick,0x7ffdc994fb34,227991422,0,0x0,8
tick,0x7ffdc994fb34,228007048,0,0x0,8
tick,0x7ffdc994fb34,228022423,0,0x0,8
tick,0x7ffdc994fb34,228037899,0,0x0,8
tick,0x7ffdc994fb34,228053376,0,0x0,8
tick,0x7ffdc994fb34,228069215,0,0x0,8
tick,0x7ffdc994fb34,228084452,0,0x0,8
tick,0x7ffdc994fb34,228099809,0,0x0,8
tick,0x7ffdc994fb34,228115006,0,0x0,8
tick,0x7ffdc994fb34,228131005,0,0x0,8
tick,0x7ffdc994fb34,228146284,0,0x0,8
tick,0x7ffdc994fb34,228162525,0,0x0,8
tick,0x7ffdc994fb34,228177834,0,0x0,8
tick,0x7ffdc994fb34,228193883,0,0x0,8
tick,0x7ffdc994fb34,228209369,0,0x0,8
tick,0x7ffdc994fb34,228224882,0,0x0,8
tick,0x7ffdc994fb34,228240581,0,0x0,8
tick,0x7ffdc994fb34,228255872,0,0x0,8
tick,0x7ffdc994fb34,228271727,0,0x0,8
tick,0x7ffdc994fb34,228287175,0,0x0,8
tick,0x7ffdc994fb34,228303165,0,0x0,8
tick,0x7ffdc994fb34,228317866,0,0x0,8
tick,0x7ffdc994fb34,228333659,0,0x0,8
tick,0x7ffdc994fb34,228348823,0,0x0,8
tick,0x7ffdc994fb34,228364595,0,0x0,8
tick,0x7ffdc994fb34,228379945,0,0x0,8
tick,0x7ffdc994fb34,228395435,0,0x0,8
tick,0x7ffdc994fb34,228411503,0,0x0,8
tick,0x7ffdc994fb34,228427474,0,0x0,8
tick,0x7ffdc994fb34,228442974,0,0x0,8
tick,0x7ffdc994fb34,228458329,0,0x0,8
tick,0x7ffdc994fb34,228473974,0,0x0,8
tick,0x7ffdc994fb34,228489341,0,0x0,8
tick,0x7ffdc994fb34,228504756,0,0x0,8
tick,0x7ffdc994fb34,228520520,0,0x0,8
tick,0x7ffdc994fb34,228535780,0,0x0,8
tick,0x7ffdc994fb34,228551266,0,0x0,8
tick,0x7ffdc994fb34,228566981,0,0x0,8
tick,0x7ffdc994fb34,228583171,0,0x0,8
tick,0x7ffdc994fb34,228597772,0,0x0,8
tick,0x7ffdc994fb34,228612855,0,0x0,8
tick,0x7ffdc994fb34,228628668,0,0x0,8
tick,0x7ffdc994fb34,228644024,0,0x0,8
tick,0x7ffdc994fb34,228659883,0,0x0,8
tick,0x7ffdc994fb34,228675250,0,0x0,8
tick,0x7ffdc994fb34,228691079,0,0x0,8
tick,0x7ffdc994fb34,228706274,0,0x0,8
tick,0x7ffdc994fb34,228721930,0,0x0,8
tick,0x7ffdc994fb34,228737277,0,0x0,8
tick,0x7ffdc994fb34,228752927,0,0x0,8
tick,0x7ffdc994fb34,228769116,0,0x0,8
tick,0x7ffdc994fb34,228785041,0,0x0,8
tick,0x7ffdc994fb34,228800562,0,0x0,8
tick,0x7ffdc994fb34,228816081,0,0x0,8
tick,0x7ffdc994fb34,228831658,0,0x0,8
tick,0x7ffdc994fb34,228847064,0,0x0,8
tick,0x7ffdc994fb34,228862517,0,0x0,8
tick,0x7ffdc994fb34,228878057,0,0x0,8
tick,0x7ffdc994fb34,228893381,0,0x0,8
tick,0x7ffdc994fb34,228908811,0,0x0,8
tick,0x7ffdc994fb34,228924829,0,0x0,8
tick,0x7ffdc994fb34,228940317,0,0x0,8
tick,0x7ffdc994fb34,228955301,0,0x0,8
tick,0x7ffdc994fb34,228971052,0,0x0,8
tick,0x7ffdc994fb34,228986554,0,0x0,8
tick,0x7ffdc994fb34,229002306,0,0x0,8
tick,0x7ffdc994fb34,229018144,0,0x0,8
tick,0x7ffdc994fb34,229033579,0,0x0,8
tick,0x7ffdc994fb34,229048827,0,0x0,8
tick,0x7ffdc994fb34,229063708,0,0x0,8
tick,0x7ffdc994fb34,229079233,0,0x0,8
tick,0x7ffdc994fb34,229094301,0,0x0,8
tick,0x7ffdc994fb34,229110115,0,0x0,8
tick,0x7ffdc994fb34,229125791,0,0x0,8
tick,0x7ffdc994fb34,229142020,0,0x0,8
tick,0x7ffdc994fb34,229157860,0,0x0,8
tick,0x7ffdc994fb34,229173342,0,0x0,8
tick,0x7ffdc994fb34,229188556,0,0x0,8
tick,0x7ffdc994fb34,229203842,0,0x0,8
tick,0x7ffdc994fb34,229219255,0,0x0,8
tick,0x7ffdc994fb34,229234510,0,0x0,8
tick,0x7ffdc994fb34,229250107,0,0x0,8
tick,0x7ffdc994fb34,229265494,0,0x0,8
tick,0x7ffdc994fb34,229281306,0,0x0,8
tick,0x7ffdc994fb34,229296837,0,0x0,8
tick,0x7ffdc994fb34,229312994,0,0x0,8
tick,0x7ffdc994fb34,229328670,0,0x0,8
tick,0x7ffdc994fb34,229344188,0,0x0,8
tick,0x7ffdc994fb34,229359774,0,0x0,8
tick,0x7ffdc994fb34,229375283,0,0x0,8
tick,0x7ffdc994fb34,229390865,0,0x0,8
tick,0x7ffdc994fb34,229406380,0,0x0,8
tick,0x7ffdc994fb34,229421983,0,0x0,8
tick,0x7ffdc994fb34,229437424,0,0x0,8
tick,0x7ffdc994fb34,229452976,0,0x0,8
tick,0x7ffdc994fb34,229468429,0,0x0,8
tick,0x7ffdc994fb34,229484535,0,0x0,8
tick,0x7ffdc994fb34,229500020,0,0x0,8
tick,0x7ffdc994fb34,229514986,0,0x0,8
tick,0x7ffdc994fb34,229530621,0,0x0,8
tick,0x7ffdc994fb34,229545963,0,0x0,8
tick,0x7ffdc994fb34,229561459,0,0x0,8
tick,0x7ffdc994fb34,229577365,0,0x0,8
tick,0x7ffdc994fb34,229593005,0,0x0,8
tick,0x7ffdc994fb34,229608331,0,0x0,8
tick,0x7ffdc994fb34,229623754,0,0x0,8
tick,0x7ffdc994fb34,229639500,0,0x0,8
tick,0x7ffdc994fb34,229654946,0,0x0,8
tick,0x7ffdc994fb34,229670913,0,0x0,8
tick,0x7ffdc994fb34,229686148,0,0x0,8
tick,0x7ffdc994fb34,229701608,0,0x0,8
tick,0x7ffdc994fb34,229716886,0,0x0,8
tick,0x7ffdc994fb34,229732354,0,0x0,8
tick,0x7ffdc994fb34,229747886,0,0x0,8
tick,0x7ffdc994fb34,229763513,0,0x0,8
tick,0x7ffdc994fb34,229778732,0,0x0,8
tick,0x7ffdc994fb34,229795013,0,0x0,8
tick,0x7ffdc994fb34,229810510,0,0x0,8
tick,0x7ffdc994fb34,229826184,0,0x0,8
tick,0x7ffdc994fb34,229841460,0,0x0,8
tick,0x7ffdc994fb34,229857362,0,0x0,8
tick,0x7ffdc994fb34,229872817,0,0x0,8
tick,0x7ffdc994fb34,229888230,0,0x0,8
tick,0x7ffdc994fb34,229904048,0,0x0,8
tick,0x7ffdc994fb34,229919545,0,0x0,8
tick,0x7ffdc994fb34,229935278,0,0x0,8
tick,0x7ffdc994fb34,229951038,0,0x0,8
tick,0x7ffdc994fb34,229966143,0,0x0,8
tick,0x7ffdc994fb34,229981834,0,0x0,8
tick,0x7ffdc994fb34,229997171,0,0x0,8
tick,0x7ffdc994fb34,230012888,0,0x0,8
tick,0x7ffdc994fb34,230028192,0,0x0,8
tick,0x7ffdc994fb34,230043665,0,0x0,8
tick,0x7ffdc994fb34,230059660,0,0x0,8
tick,0x7ffdc994fb34,230075537,0,0x0,8
tick,0x7ffdc994fb34,230091728,0,0x0,8
tick,0x7ffdc994fb34,230107219,0,0x0,8
tick,0x7ffdc994fb34,230122531,0,0x0,8
tick,0x7ffdc994fb34,230138448,0,0x0,8
tick,0x7ffdc994fb34,230153514,0,0x0,8
tick,0x7ffdc994fb34,230169158,0,0x0,8
tick,0x7ffdc994fb34,230184467,0,0x0,8
tick,0x7ffdc994fb34,230200197,0,0x0,8
tick,0x7ffdc994fb34,230215721,0,0x0,8
tick,0x7ffdc994fb34,230231363,0,0x0,8
tick,0x7ffdc994fb34,230246928,0,0x0,8
tick,0x7ffdc994fb34,230262233,0,0x0,8
tick,0x7ffdc994fb34,230277655,0,0x0,8
tick,0x7ffdc994fb34,230293182,0,0x0,8
tick,0x7ffdc994fb34,230308957,0,0x0,8
tick,0x7ffdc994fb34,230324324,0,0x0,8
tick,0x7ffdc994fb34,230340261,0,0x0,8
tick,0x7ffdc994fb34,230355601,0,0x0,8
tick,0x7ffdc994fb34,230371916,0,0x0,8
tick,0x7ffdc994fb34,230387347,0,0x0,8
tick,0x7ffdc994fb34,230402568,0,0x0,8
tick,0x7ffdc994fb34,230418763,0,0x0,8
tick,0x7ffdc994fb34,230434113,0,0x0,8
tick,0x7ffdc994fb34,230449787,0,0x0,8
tick,0x7ffdc994fb34,230465126,0,0x0,8
tick,0x7ffdc994fb34,230479974,0,0x0,8
tick,0x7ffdc994fb34,230496153,0,0x0,8
tick,0x7ffdc994fb34,230511694,0,0x0,8
tick,0x7ffdc994fb34,230527324,0,0x0,8
tick,0x7ffdc994fb34,230543334,0,0x0,8
tick,0x7ffdc994fb34,230558773,0,0x0,8
tick,0x7ffdc994fb34,230574844,0,0x0,8
tick,0x7ffdc994fb34,230590587,0,0x0,8
tick,0x7ffdc994fb34,230605875,0,0x0,8
tick,0x7ffdc994fb34,230621565,0,0x0,8
tick,0x7ffdc994fb34,230636941,0,0x0,8
tick,0x7ffdc994fb34,230652529,0,0x0,8
tick,0x7ffdc994fb34,230667786,0,0x0,8
tick,0x7ffdc994fb34,230683292,0,0x0,8
tick,0x7ffdc994fb34,230699030,0,0x0,8
tick,0x7ffdc994fb34,230714223,0,0x0,8
tick,0x7ffdc994fb34,230729711,0,0x0,8
tick,0x7ffdc994fb34,230745173,0,0x0,8
tick,0x7ffdc994fb34,230760750,0,0x0,8
tick,0x7ffdc994fb34,230776074,0,0x0,8
tick,0x7ffdc994fb34,230791724,0,0x0,8
tick,0x7ffdc994fb34,230807503,0,0x0,8
tick,0x7ffdc994fb34,230822513,0,0x0,8
tick,0x7ffdc994fb34,230838264,0,0x0,8
tick,0x7ffdc994fb34,230853779,0,0x0,8
tick,0x7ffdc994fb34,230869436,0,0x0,8
tick,0x7ffdc994fb34,230884742,0,0x0,8
tick,0x7ffdc994fb34,230899955,0,0x0,8
tick,0x7ffdc994fb34,230915148,0,0x0,8
tick,0x7ffdc994fb34,230930561,0,0x0,8
tick,0x7ffdc994fb34,230946197,0,0x0,8
tick,0x7ffdc994fb34,230961389,0,0x0,8
tick,0x7ffdc994fb34,230977296,0,0x0,8
tick,0x7ffdc994fb34,230992925,0,0x0,8
tick,0x7ffdc994fb34,231008525,0,0x0,8
tick,0x7ffdc994fb34,231023725,0,0x0,8
tick,0x7ffdc994fb34,231039376,0,0x0,8
tick,0x7ffdc994fb34,231055285,0,0x0,8
tick,0x7ffdc994fb34,231070592,0,0x0,8
tick,0x7ffdc994fb34,231087021,0,0x0,8
tick,0x7ffdc994fb34,231102567,0,0x0,8
tick,0x7ffdc994fb34,231118099,0,0x0,8
tick,0x7ffdc994fb34,231133043,0,0x0,8
tick,0x7ffdc994fb34,231148708,0,0x0,8
tick,0x7ffdc994fb34,231164019,0,0x0,8
tick,0x7ffdc994fb34,231179740,0,0x0,8
tick,0x7ffdc994fb34,231194981,0,0x0,8
tick,0x7ffdc994fb34,231210537,0,0x0,8
tick,0x7ffdc994fb34,231226251,0,0x0,8
tick,0x7ffdc994fb34,231242097,0,0x0,8
tick,0x7ffdc994fb34,231257578,0,0x0,8
tick,0x7ffdc994fb34,231272889,0,0x0,8
tick,0x7ffdc994fb34,231289001,0,0x0,8
tick,0x7ffdc994fb34,231304469,0,0x0,8
tick,0x7ffdc994fb34,231319868,0,0x0,8
tick,0x7ffdc994fb34,231335804,0,0x0,8
tick,0x7ffdc994fb34,231351121,0,0x0,8
tick,0x7ffdc994fb34,231366341,0,0x0,8
tick,0x7ffdc994fb34,231381959,0,0x0,8
tick,0x7ffdc994fb34,231397544,0,0x0,8
tick,0x7ffdc994fb34,231412984,0,0x0,8
tick,0x7ffdc994fb34,231428225,0,0x0,8
tick,0x7ffdc994fb34,231443610,0,0x0,8
tick,0x7ffdc994fb34,231459039,0,0x0,8
tick,0x7ffdc994fb34,231474567,0,0x0,8
tick,0x7ffdc994fb34,231490756,0,0x0,8
tick,0x7ffdc994fb34,231506779,0,0x0,8
tick,0x7ffdc994fb34,231522310,0,0x0,8
tick,0x7ffdc994fb34,231537755,0,0x0,8
tick,0x7ffdc994fb34,231553523,0,0x0,8
tick,0x7ffdc994fb34,231568795,0,0x0,8
tick,0x7ffdc994fb34,231584564,0,0x0,8
tick,0x7ffdc994fb34,231599991,0,0x0,8
tick,0x7ffdc994fb34,231615945,0,0x0,8
tick,0x7ffdc994fb34,231632131,0,0x0,8
tick,0x7ffdc994fb34,231648007,0,0x0,8
tick,0x7ffdc994fb34,231664228,0,0x0,8
tick,0x7ffdc994fb34,231679613,0,0x0,8
tick,0x7ffdc994fb34,231694937,0,0x0,8
tick,0x7ffdc994fb34,231710231,0,0x0,8
tick,0x7ffdc994fb34,231725878,0,0x0,8
tick,0x7ffdc994fb34,231741987,0,0x0,8
tick,0x7ffdc994fb34,231757522,0,0x0,8
tick,0x7ffdc994fb34,231772913,0,0x0,8
tick,0x7ffdc994fb34,231788981,0,0x0,8
tick,0x7ffdc994fb34,231804264,0,0x0,8
tick,0x7ffdc994fb34,231819661,0,0x0,8
tick,0x7ffdc994fb34,231835287,0,0x0,8
tick,0x7ffdc994fb34,231851149,0,0x0,8
tick,0x7ffdc994fb34,231866853,0,0x0,8
tick,0x7ffdc994fb34,231882544,0,0x0,8
tick,0x7ffdc994fb34,231897928,0,0x0,8
tick,0x7ffdc994fb34,231913385,0,0x0,8
tick,0x7ffdc994fb34,231929429,0,0x0,8
tick,0x7ffdc994fb34,231944854,0,0x0,8
tick,0x7ffdc994fb34,231959628,0,0x0,8
tick,0x7ffdc994fb34,231974877,0,0x0,8
tick,0x7ffdc994fb34,231991140,0,0x0,8
tick,0x7ffdc994fb34,232006786,0,0x0,8
tick,0x7ffdc994fb34,232022916,0,0x0,8
tick,0x7ffdc994fb34,232038937,0,0x0,8
tick,0x7ffdc994fb34,232053974,0,0x0,8
tick,0x7ffdc994fb34,232068834,0,0x0,8
tick,0x7ffdc994fb34,232084088,0,0x0,8
tick,0x7ffdc994fb34,232099544,0,0x0,8
tick,0x7ffdc994fb34,232114902,0,0x0,8
tick,0x7ffdc994fb34,232130153,0,0x0,8
tick,0x7ffdc994fb34,232145865,0,0x0,8
tick,0x7ffdc994fb34,232161469,0,0x0,8
tick,0x7ffdc994fb34,232177486,0,0x0,8
tick,0x7ffdc994fb34,232192791,0,0x0,8
tick,0x7ffdc994fb34,232207906,0,0x0,8
tick,0x7ffdc994fb34,232223879,0,0x0,8
tick,0x7ffdc994fb34,232239295,0,0x0,8
tick,0x7ffdc994fb34,232254911,0,0x0,8
tick,0x7ffdc994fb34,232270217,0,0x0,8
tick,0x7ffdc994fb34,232285723,0,0x0,8
tick,0x7ffdc994fb34,232301342,0,0x0,8
tick,0x7ffdc994fb34,232316719,0,0x0,8
tick,0x7ffdc994fb34,232332257,0,0x0,8
tick,0x7ffdc994fb34,232348257,0,0x0,8
tick,0x7ffdc994fb34,232363954,0,0x0,8
tick,0x7ffdc994fb34,232379959,0,0x0,8
tick,0x7ffdc994fb34,232395870,0,0x0,8
tick,0x7ffdc994fb34,232411333,0,0x0,8
tick,0x7ffdc994fb34,232427272,0,0x0,8
tick,0x7ffdc994fb34,232442439,0,0x0,8
tick,0x7ffdc994fb34,232458032,0,0x0,8
tick,0x7ffdc994fb34,232473025,0,0x0,8
tick,0x7ffdc994fb34,232489024,0,0x0,8
tick,0x7ffdc994fb34,232504035,0,0x0,8
tick,0x7ffdc994fb34,232519501,0,0x0,8
tick,0x7ffdc994fb34,232535005,0,0x0,8
tick,0x7ffdc994fb34,232550468,0,0x0,8
tick,0x7ffdc994fb34,232566149,0,0x0,8
tick,0x7ffdc994fb34,232581577,0,0x0,8
tick,0x7ffdc994fb34,232596829,0,0x0,8
tick,0x7ffdc994fb34,232612568,0,0x0,8
tick,0x7ffdc994fb34,232627770,0,0x0,8
tick,0x7ffdc994fb34,232643208,0,0x0,8
tick,0x7ffdc994fb34,232658609,0,0x0,8
tick,0x7ffdc994fb34,232674036,0,0x0,8
tick,0x7ffdc994fb34,232688848,0,0x0,8
tick,0x7ffdc994fb34,232703972,0,0x0,8
tick,0x7ffdc994fb34,232719414,0,0x0,8
tick,0x7ffdc994fb34,232735144,0,0x0,8
tick,0x7ffdc994fb34,232750536,0,0x0,8
tick,0x7ffdc994fb34,232765701,0,0x0,8
tick,0x7ffdc994fb34,232780931,0,0x0,8
tick,0x7ffdc994fb34,232796415,0,0x0,8
tick,0x7ffdc994fb34,232812024,0,0x0,8
tick,0x7ffdc994fb34,232827391,0,0x0,8
tick,0x7ffdc994fb34,232842901,0,0x0,8
tick,0x7ffdc994fb34,232858370,0,0x0,8
tick,0x7ffdc994fb34,232874576,0,0x0,8
tick,0x7ffdc994fb34,232890806,0,0x0,8
tick,0x7ffdc994fb34,232906391,0,0x0,8
tick,0x7ffdc994fb34,232922112,0,0x0,8
tick,0x7ffdc994fb34,232937076,0,0x0,8
tick,0x7ffdc994fb34,232952743,0,0x0,8
tick,0x7ffdc994fb34,232968079,0,0x0,8
tick,0x7ffdc994fb34,232983166,0,0x0,8
tick,0x7ffdc994fb34,232998860,0,0x0,8
tick,0x7ffdc994fb34,233013998,0,0x0,8
tick,0x7ffdc994fb34,233029612,0,0x0,8
tick,0x7ffdc994fb34,233045171,0,0x0,8
tick,0x7ffdc994fb34,233060318,0,0x0,8
tick,0x7ffdc994fb34,233076130,0,0x0,8
tick,0x7ffdc994fb34,233092178,0,0x0,8
tick,0x7ffdc994fb34,233107947,0,0x0,8
tick,0x7ffdc994fb34,233123451,0,0x0,8
tick,0x7ffdc994fb34,233139656,0,0x0,8
tick,0x7ffdc994fb34,233155139,0,0x0,8
tick,0x7ffdc994fb34,233170914,0,0x0,8
tick,0x7ffdc994fb34,233186286,0,0x0,8
tick,0x7ffdc994fb34,233202483,0,0x0,8
tick,0x7ffdc994fb34,233217793,0,0x0,8
tick,0x7ffdc994fb34,233233329,0,0x0,8
tick,0x7ffdc994fb34,233248564,0,0x0,8
tick,0x7ffdc994fb34,233263993,0,0x0,8
tick,0x7ffdc994fb34,233278983,0,0x0,8
tick,0x7ffdc994fb34,233294652,0,0x0,8
tick,0x7ffdc994fb34,233310154,0,0x0,8
tick,0x7ffdc994fb34,233325920,0,0x0,8
tick,0x7ffdc994fb34,233341448,0,0x0,8
tick,0x7ffdc994fb34,233356503,0,0x0,8
tick,0x7ffdc994fb34,233372669,0,0x0,8
tick,0x7ffdc994fb34,233388423,0,0x0,8
tick,0x7ffdc994fb34,233403619,0,0x0,8
tick,0x7ffdc994fb34,233419724,0,0x0,8
tick,0x7ffdc994fb34,233434871,0,0x0,8
tick,0x7ffdc994fb34,233450327,0,0x0,8
tick,0x7ffdc994fb34,233465656,0,0x0,8
tick,0x7ffdc994fb34,233481266,0,0x0,8
tick,0x7ffdc994fb34,233496600,0,0x0,8
tick,0x7ffdc994fb34,233512382,0,0x0,8
tick,0x7ffdc994fb34,233527622,0,0x0,8
tick,0x7ffdc994fb34,233543529,0,0x0,8
tick,0x7ffdc994fb34,233558822,0,0x0,8
tick,0x7ffdc994fb34,233574067,0,0x0,8
tick,0x7ffdc994fb34,233589488,0,0x0,8
tick,0x7ffdc994fb34,233604949,0,0x0,8
tick,0x7ffdc994fb34,233620289,0,0x0,8
tick,0x7ffdc994fb34,233636470,0,0x0,8
tick,0x7ffdc994fb34,233651918,0,0x0,8
tick,0x7ffdc994fb34,233667324,0,0x0,8
tick,0x7ffdc994fb34,233682587,0,0x0,8
tick,0x7ffdc994fb34,233698011,0,0x0,8
tick,0x7ffdc994fb34,233713384,0,0x0,8
tick,0x7ffdc994fb34,233729698,0,0x0,8
tick,0x7ffdc994fb34,233744795,0,0x0,8
tick,0x7ffdc994fb34,233760232,0,0x0,8
tick,0x7ffdc994fb34,233776125,0,0x0,8
tick,0x7ffdc994fb34,233791866,0,0x0,8
tick,0x7ffdc994fb34,233806948,0,0x0,8
tick,0x7ffdc994fb34,233822590,0,0x0,8
tick,0x7ffdc994fb34,233838288,0,0x0,8
tick,0x7ffdc994fb34,233853558,0,0x0,8
tick,0x7ffdc994fb34,233869420,0,0x0,8
tick,0x7ffdc994fb34,233885455,0,0x0,8
tick,0x7ffdc994fb34,233901399,0,0x0,8
tick,0x7ffdc994fb34,233917171,0,0x0,8
tick,0x7ffdc994fb34,233932721,0,0x0,8
tick,0x7ffdc994fb34,233948312,0,0x0,8
tick,0x7ffdc994fb34,233963502,0,0x0,8
tick,0x7ffdc994fb34,233979571,0,0x0,8
tick,0x7ffdc994fb34,233994786,0,0x0,8
tick,0x7ffdc994fb34,234010091,0,0x0,8
tick,0x7ffdc994fb34,234025453,0,0x0,8
tick,0x7ffdc994fb34,234040376,0,0x0,8
tick,0x7ffdc994fb34,234055368,0,0x0,8
tick,0x7ffdc994fb34,234070937,0,0x0,8
tick,0x7ffdc994fb34,234087152,0,0x0,8
tick,0x7ffdc994fb34,234102684,0,0x0,8
tick,0x7ffdc994fb34,234117779,0,0x0,8
tick,0x7ffdc994fb34,234133525,0,0x0,8
tick,0x7ffdc994fb34,234149213,0,0x0,8
tick,0x7ffdc994fb34,234164793,0,0x0,8
tick,0x7ffdc994fb34,234180169,0,0x0,8
tick,0x7ffdc994fb34,234195578,0,0x0,8
tick,0x7ffdc994fb34,234211235,0,0x0,8
tick,0x7ffdc994fb34,234226528,0,0x0,8
tick,0x7ffdc994fb34,234241829,0,0x0,8
tick,0x7ffdc994fb34,234257343,0,0x0,8
tick,0x7ffdc994fb34,234272843,0,0x0,8
tick,0x7ffdc994fb34,234288403,0,0x0,8
tick,0x7ffdc994fb34,234304042,0,0x0,8
tick,0x7ffdc994fb34,234319924,0,0x0,8
tick,0x7ffdc994fb34,234335680,0,0x0,8
tick,0x7ffdc994fb34,234351137,0,0x0,8
tick,0x7ffdc994fb34,234366653,0,0x0,8
tick,0x7ffdc994fb34,234382287,0,0x0,8
tick,0x7ffdc994fb34,234398210,0,0x0,8
tick,0x7ffdc994fb34,234413606,0,0x0,8
tick,0x7ffdc994fb34,234428442,0,0x0,8
tick,0x7ffdc994fb34,234443803,0,0x0,8
tick,0x7ffdc994fb34,234459294,0,0x0,8
tick,0x7ffdc994fb34,234474648,0,0x0,8
tick,0x7ffdc994fb34,234490465,0,0x0,8
tick,0x7ffdc994fb34,234505688,0,0x0,8
tick,0x7ffdc994fb34,234521755,0,0x0,8
tick,0x7ffdc994fb34,234537195,0,0x0,8
tick,0x7ffdc994fb34,234552640,0,0x0,8
tick,0x7ffdc994fb34,234568326,0,0x0,8
tick,0x7ffdc994fb34,234583720,0,0x0,8
tick,0x7ffdc994fb34,234599835,0,0x0,8
tick,0x7ffdc994fb34,234615285,0,0x0,8
tick,0x7ffdc994fb34,234631074,0,0x0,8
tick,0x7ffdc994fb34,234646602,0,0x0,8
tick,0x7ffdc994fb34,234662311,0,0x0,8
tick,0x7ffdc994fb34,234677494,0,0x0,8
tick,0x7ffdc994fb34,234693444,0,0x0,8
tick,0x7ffdc994fb34,234708213,0,0x0,8
tick,0x7ffdc994fb34,234723904,0,0x0,8
tick,0x7ffdc994fb34,234739529,0,0x0,8
tick,0x7ffdc994fb34,234754750,0,0x0,8
tick,0x7ffdc994fb34,234770413,0,0x0,8
tick,0x7ffdc994fb34,234785619,0,0x0,8
tick,0x7ffdc994fb34,234800795,0,0x0,8
tick,0x7ffdc994fb34,234816312,0,0x0,8
tick,0x7ffdc994fb34,234831644,0,0x0,8
tick,0x7ffdc994fb34,234847133,0,0x0,8
tick,0x7ffdc994fb34,234862693,0,0x0,8
tick,0x7ffdc994fb34,234878092,0,0x0,8
tick,0x7ffdc994fb34,234893525,0,0x0,8
tick,0x7ffdc994fb34,234908895,0,0x0,8
tick,0x7ffdc994fb34,234924921,0,0x0,8
tick,0x7ffdc994fb34,234940522,0,0x0,8
tick,0x7ffdc994fb34,234955884,0,0x0,8
tick,0x7ffdc994fb34,234971426,0,0x0,8
tick,0x7ffdc994fb34,234987075,0,0x0,8
tick,0x7ffdc994fb34,235002890,0,0x0,8
tick,0x7ffdc994fb34,235018362,0,0x0,8
tick,0x7ffdc994fb34,235034004,0,0x0,8
tick,0x7ffdc994fb34,235049605,0,0x0,8
tick,0x7ffdc994fb34,235064986,0,0x0,8
tick,0x7ffdc994fb34,235081484,0,0x0,8
tick,0x7ffdc994fb34,235097024,0,0x0,8
tick,0x7ffdc994fb34,235113176,0,0x0,8
tick,0x7ffdc994fb34,235129277,0,0x0,8
tick,0x7ffdc994fb34,235144631,0,0x0,8
tick,0x7ffdc994fb34,235160041,0,0x0,8
tick,0x7ffdc994fb34,235175577,0,0x0,8
tick,0x7ffdc994fb34,235191238,0,0x0,8
tick,0x7ffdc994fb34,235206822,0,0x0,8
tick,0x7ffdc994fb34,235222137,0,0x0,8
tick,0x7ffdc994fb34,235238051,0,0x0,8
tick,0x7ffdc994fb34,235253768,0,0x0,8
tick,0x7ffdc994fb34,235269251,0,0x0,8
tick,0x7ffdc994fb34,235284692,0,0x0,8
tick,0x7ffdc994fb34,235300451,0,0x0,8
tick,0x7ffdc994fb34,235316527,0,0x0,8
tick,0x7ffdc994fb34,235332753,0,0x0,8
tick,0x7ffdc994fb34,235348426,0,0x0,8
tick,0x7ffdc994fb34,235363592,0,0x0,8
tick,0x7ffdc994fb34,235379458,0,0x0,8
tick,0x7ffdc994fb34,235394919,0,0x0,8
tick,0x7ffdc994fb34,235411121,0,0x0,8
tick,0x7ffdc994fb34,235426206,0,0x0,8
tick,0x7ffdc994fb34,235442323,0,0x0,8
tick,0x7ffdc994fb34,235458306,0,0x0,8
tick,0x7ffdc994fb34,235473533,0,0x0,8
tick,0x7ffdc994fb34,235489376,0,0x0,8
tick,0x7ffdc994fb34,235504840,0,0x0,8
tick,0x7ffdc994fb34,235520660,0,0x0,8
tick,0x7ffdc994fb34,235535975,0,0x0,8
tick,0x7ffdc994fb34,235551366,0,0x0,8
tick,0x7ffdc994fb34,235566980,0,0x0,8
tick,0x7ffdc994fb34,235583292,0,0x0,8
tick,0x7ffdc994fb34,235598905,0,0x0,8
tick,0x7ffdc994fb34,235613441,0,0x0,8
tick,0x7ffdc994fb34,235629375,0,0x0,8
tick,0x7ffdc994fb34,235645043,0,0x0,8
tick,0x7ffdc994fb34,235660675,0,0x0,8
tick,0x7ffdc994fb34,235676092,0,0x0,8
tick,0x7ffdc994fb34,235691874,0,0x0,8
tick,0x7ffdc994fb34,235707527,0,0x0,8
tick,0x7ffdc994fb34,235722914,0,0x0,8
tick,0x7ffdc994fb34,235737787,0,0x0,8
tick,0x7ffdc994fb34,235753480,0,0x0,8
tick,0x7ffdc994fb34,235769317,0,0x0,8
tick,0x7ffdc994fb34,235784158,0,0x0,8
tick,0x7ffdc994fb34,235800358,0,0x0,8
tick,0x7ffdc994fb34,235815341,0,0x0,8
tick,0x7ffdc994fb34,235830757,0,0x0,8
tick,0x7ffdc994fb34,235846115,0,0x0,8
tick,0x7ffdc994fb34,235861353,0,0x0,8
tick,0x7ffdc994fb34,235877469,0,0x0,8
tick,0x7ffdc994fb34,235892831,0,0x0,8
tick,0x7ffdc994fb34,235908175,0,0x0,8
tick,0x7ffdc994fb34,235923299,0,0x0,8
tick,0x7ffdc994fb34,235938652,0,0x0,8
tick,0x7ffdc994fb34,235954057,0,0x0,8
tick,0x7ffdc994fb34,235970017,0,0x0,8
tick,0x7ffdc994fb34,235985152,0,0x0,8
tick,0x7ffdc994fb34,236001246,0,0x0,8
tick,0x7ffdc994fb34,236017219,0,0x0,8
tick,0x7ffdc994fb34,236032606,0,0x0,8
tick,0x7ffdc994fb34,236048308,0,0x0,8
tick,0x7ffdc994fb34,236063328,0,0x0,8
tick,0x7ffdc994fb34,236079363,0,0x0,8
tick,0x7ffdc994fb34,236095398,0,0x0,8
tick,0x7ffdc994fb34,236111242,0,0x0,8
tick,0x7ffdc994fb34,236126792,0,0x0,8
tick,0x7ffdc994fb34,236141877,0,0x0,8
tick,0x7ffdc994fb34,236157621,0,0x0,8
tick,0x7ffdc994fb34,236173382,0,0x0,8
tick,0x7ffdc994fb34,236188796,0,0x0,8
tick,0x7ffdc994fb34,236204062,0,0x0,8
tick,0x7ffdc994fb34,236219447,0,0x0,8
tick,0x7ffdc994fb34,236234875,0,0x0,8
tick,0x7ffdc994fb34,236250613,0,0x0,8
tick,0x7ffdc994fb34,236265709,0,0x0,8
tick,0x7ffdc994fb34,236280965,0,0x0,8
tick,0x7ffdc994fb34,236297025,0,0x0,8
tick,0x7ffdc994fb34,236312880,0,0x0,8
tick,0x7ffdc994fb34,236328940,0,0x0,8
tick,0x7ffdc994fb34,236344161,0,0x0,8
tick,0x7ffdc994fb34,236360525,0,0x0,8
tick,0x7ffdc994fb34,236376031,0,0x0,8
tick,0x7ffdc994fb34,236392322,0,0x0,8
tick,0x7ffdc994fb34,236408216,0,0x0,8
tick,0x7ffdc994fb34,236423328,0,0x0,8
tick,0x7ffdc994fb34,236439060,0,0x0,8
tick,0x7ffdc994fb34,236454272,0,0x0,8
tick,0x7ffdc994fb34,236470112,0,0x0,8
tick,0x7ffdc994fb34,236485516,0,0x0,8
tick,0x7ffdc994fb34,236501237,0,0x0,8
tick,0x7ffdc994fb34,236516306,0,0x0,8
tick,0x7ffdc994fb34,236532458,0,0x0,8
tick,0x7ffdc994fb34,236548642,0,0x0,8
tick,0x7ffdc994fb34,236563848,0,0x0,8
tick,0x7ffdc994fb34,236579842,0,0x0,8
tick,0x7ffdc994fb34,236595105,0,0x0,8
tick,0x7ffdc994fb34,236610899,0,0x0,8
tick,0x7ffdc994fb34,236626067,0,0x0,8
tick,0x7ffdc994fb34,236641966,0,0x0,8
tick,0x7ffdc994fb34,236657354,0,0x0,8
tick,0x7ffdc994fb34,236672848,0,0x0,8
tick,0x7ffdc994fb34,236688414,0,0x0,8
tick,0x7ffdc994fb34,236704488,0,0x0,8
tick,0x7ffdc994fb34,236719595,0,0x0,8
tick,0x7ffdc994fb34,236735420,0,0x0,8
tick,0x7ffdc994fb34,236750904,0,0x0,8
tick,0x7ffdc994fb34,236766347,0,0x0,8
tick,0x7ffdc994fb34,236781569,0,0x0,8
tick,0x7ffdc994fb34,236797383,0,0x0,8
tick,0x7ffdc994fb34,236813407,0,0x0,8
tick,0x7ffdc994fb34,236828805,0,0x0,8
tick,0x7ffdc994fb34,236844873,0,0x0,8
tick,0x7ffdc994fb34,236860689,0,0x0,8
tick,0x7ffdc994fb34,236876015,0,0x0,8
tick,0x7ffdc994fb34,236891296,0,0x0,8
tick,0x7ffdc994fb34,236907231,0,0x0,8
tick,0x7ffdc994fb34,236923450,0,0x0,8
tick,0x7ffdc994fb34,236939402,0,0x0,8
tick,0x7ffdc994fb34,236955565,0,0x0,8
tick,0x7ffdc994fb34,236970886,0,0x0,8
tick,0x7ffdc994fb34,236986379,0,0x0,8
tick,0x7ffdc994fb34,237002619,0,0x0,8
tick,0x7ffdc994fb34,237018372,0,0x0,8
tick,0x7ffdc994fb34,237034514,0,0x0,8
tick,0x7ffdc994fb34,237050584,0,0x0,8
tick,0x7ffdc994fb34,237066047,0,0x0,8
tick,0x7ffdc994fb34,237082076,0,0x0,8
tick,0x7ffdc994fb34,237097327,0,0x0,8
tick,0x7ffdc994fb34,237113487,0,0x0,8
tick,0x7ffdc994fb34,237129176,0,0x0,8
tick,0x7ffdc994fb34,237144497,0,0x0,8
tick,0x7ffdc994fb34,237159945,0,0x0,8
tick,0x7ffdc994fb34,237175614,0,0x0,8
tick,0x7ffdc994fb34,237190811,0,0x0,8
tick,0x7ffdc994fb34,237206903,0,0x0,8
tick,0x7ffdc994fb34,237222651,0,0x0,8
tick,0x7ffdc994fb34,237238606,0,0x0,8
tick,0x7ffdc994fb34,237253711,0,0x0,8
tick,0x7ffdc994fb34,237269325,0,0x0,8
tick,0x7ffdc994fb34,237284927,0,0x0,8
tick,0x7ffdc994fb34,237300243,0,0x0,8
tick,0x7ffdc994fb34,237315723,0,0x0,8
tick,0x7ffdc994fb34,237331113,0,0x0,8
tick,0x7ffdc994fb34,237346944,0,0x0,8
tick,0x7ffdc994fb34,237362068,0,0x0,8
tick,0x7ffdc994fb34,237377806,0,0x0,8
tick,0x7ffdc994fb34,237393042,0,0x0,8
tick,0x7ffdc994fb34,237408712,0,0x0,8
tick,0x7ffdc994fb34,237424028,0,0x0,8
tick,0x7ffdc994fb34,237439711,0,0x0,8
tick,0x7ffdc994fb34,237455118,0,0x0,8
tick,0x7ffdc994fb34,237470678,0,0x0,8
tick,0x7ffdc994fb34,237486032,0,0x0,8
tick,0x7ffdc994fb34,237501282,0,0x0,8
tick,0x7ffdc994fb34,237517292,0,0x0,8
tick,0x7ffdc994fb34,237532784,0,0x0,8
tick,0x7ffdc994fb34,237548715,0,0x0,8
tick,0x7ffdc994fb34,237563996,0,0x0,8
tick,0x7ffdc994fb34,237579424,0,0x0,8
tick,0x7ffdc994fb34,237595049,0,0x0,8
tick,0x7ffdc994fb34,237610848,0,0x0,8
tick,0x7ffdc994fb34,237626144,0,0x0,8
tick,0x7ffdc994fb34,237641884,0,0x0,8
tick,0x7ffdc994fb34,237657118,0,0x0,8
tick,0x7ffdc994fb34,237672652,0,0x0,8
tick,0x7ffdc994fb34,237688162,0,0x0,8
tick,0x7ffdc994fb34,237703571,0,0x0,8
tick,0x7ffdc994fb34,237719243,0,0x0,8
tick,0x7ffdc994fb34,237735291,0,0x0,8
tick,0x7ffdc994fb34,237751278,0,0x0,8
tick,0x7ffdc994fb34,237766541,0,0x0,8
tick,0x7ffdc994fb34,237781564,0,0x0,8
tick,0x7ffdc994fb34,237797416,0,0x0,8
tick,0x7ffdc994fb34,237812773,0,0x0,8
tick,0x7ffdc994fb34,237828333,0,0x0,8
tick,0x7ffdc994fb34,237843719,0,0x0,8
tick,0x7ffdc994fb34,237859663,0,0x0,8
tick,0x7ffdc994fb34,237874647,0,0x0,8
tick,0x7ffdc994fb34,237890127,0,0x0,8
tick,0x7ffdc994fb34,237905008,0,0x0,8
tick,0x7ffdc994fb34,237920928,0,0x0,8
tick,0x7ffdc994fb34,237935967,0,0x0,8
tick,0x7ffdc994fb34,237951712,0,0x0,8
tick,0x7ffdc994fb34,237967031,0,0x0,8
tick,0x7ffdc994fb34,237983048,0,0x0,8
tick,0x7ffdc994fb34,237998755,0,0x0,8
tick,0x7ffdc994fb34,238014056,0,0x0,8
tick,0x7ffdc994fb34,238029384,0,0x0,8
tick,0x7ffdc994fb34,238044389,0,0x0,8
tick,0x7ffdc994fb34,238060018,0,0x0,8
tick,0x7ffdc994fb34,238075378,0,0x0,8
tick,0x7ffdc994fb34,238091090,0,0x0,8
tick,0x7ffdc994fb34,238106191,0,0x0,8
tick,0x7ffdc994fb34,238122463,0,0x0,8
tick,0x7ffdc994fb34,238138028,0,0x0,8
tick,0x7ffdc994fb34,238153142,0,0x0,8
tick,0x7ffdc994fb34,238168955,0,0x0,8
tick,0x7ffdc994fb34,238184002,0,0x0,8
tick,0x7ffdc994fb34,238199772,0,0x0,8
tick,0x7ffdc994fb34,238215206,0,0x0,8
tick,0x7ffdc994fb34,238230474,0,0x0,8
tick,0x7ffdc994fb34,238246131,0,0x0,8
tick,0x7ffdc994fb34,238261420,0,0x0,8
tick,0x7ffdc994fb34,238277168,0,0x0,8
tick,0x7ffdc994fb34,238292610,0,0x0,8
tick,0x7ffdc994fb34,238307876,0,0x0,8
tick,0x7ffdc994fb34,238323496,0,0x0,8
tick,0x7ffdc994fb34,238339329,0,0x0,8
tick,0x7ffdc994fb34,238354369,0,0x0,8
tick,0x7ffdc994fb34,238369926,0,0x0,8
tick,0x7ffdc994fb34,238385550,0,0x0,8
tick,0x7ffdc994fb34,238401018,0,0x0,8
tick,0x7ffdc994fb34,238416717,0,0x0,8
tick,0x7ffdc994fb34,238432142,0,0x0,8
tick,0x7ffdc994fb34,238447742,0,0x0,8
tick,0x7ffdc994fb34,238462930,0,0x0,8
tick,0x7ffdc994fb34,238478521,0,0x0,8
tick,0x7ffdc994fb34,238493945,0,0x0,8
tick,0x7ffdc994fb34,238509377,0,0x0,8
tick,0x7ffdc994fb34,238524643,0,0x0,8
tick,0x7ffdc994fb34,238539784,0,0x0,8
tick,0x7ffdc994fb34,238554940,0,0x0,8
tick,0x7ffdc994fb34,238571149,0,0x0,8
tick,0x7ffdc994fb34,238587140,0,0x0,8
tick,0x7ffdc994fb34,238602817,0,0x0,8
tick,0x7ffdc994fb34,238618408,0,0x0,8
tick,0x7ffdc994fb34,238633920,0,0x0,8
tick,0x7ffdc994fb34,238649531,0,0x0,8
tick,0x7ffdc994fb34,238664939,0,0x0,8
tick,0x7ffdc994fb34,238680476,0,0x0,8
tick,0x7ffdc994fb34,238695924,0,0x0,8
tick,0x7ffdc994fb34,238711540,0,0x0,8
tick,0x7ffdc994fb34,238726678,0,0x0,8
tick,0x7ffdc994fb34,238742209,0,0x0,8
tick,0x7ffdc994fb34,238757626,0,0x0,8
tick,0x7ffdc994fb34,238773232,0,0x0,8
tick,0x7ffdc994fb34,238788892,0,0x0,8
tick,0x7ffdc994fb34,238804064,0,0x0,8
tick,0x7ffdc994fb34,238819878,0,0x0,8
tick,0x7ffdc994fb34,238835513,0,0x0,8
tick,0x7ffdc994fb34,238850712,0,0x0,8
tick,0x7ffdc994fb34,238866268,0,0x0,8
tick,0x7ffdc994fb34,238881464,0,0x0,8
tick,0x7ffdc994fb34,238897404,0,0x0,8
tick,0x7ffdc994fb34,238912692,0,0x0,8
tick,0x7ffdc994fb34,238928317,0,0x0,8
tick,0x7ffdc994fb34,238943447,0,0x0,8
tick,0x7ffdc994fb34,238958988,0,0x0,8
tick,0x7ffdc994fb34,238974219,0,0x0,8
tick,0x7ffdc994fb34,238990072,0,0x0,8
tick,0x7ffdc994fb34,239005983,0,0x0,8
tick,0x7ffdc994fb34,239021579,0,0x0,8
tick,0x7ffdc994fb34,239036981,0,0x0,8
tick,0x7ffdc994fb34,239052824,0,0x0,8
tick,0x7ffdc994fb34,239067639,0,0x0,8
tick,0x7ffdc994fb34,239082716,0,0x0,8
tick,0x7ffdc994fb34,239098009,0,0x0,8
tick,0x7ffdc994fb34,239113032,0,0x0,8
tick,0x7ffdc994fb34,239128686,0,0x0,8
tick,0x7ffdc994fb34,239144669,0,0x0,8
tick,0x7ffdc994fb34,239160376,0,0x0,8
tick,0x7ffdc994fb34,239175523,0,0x0,8
tick,0x7ffdc994fb34,239191382,0,0x0,8
tick,0x7ffdc994fb34,239207629,0,0x0,8
tick,0x7ffdc994fb34,239222870,0,0x0,8
tick,0x7ffdc994fb34,239238514,0,0x0,8
tick,0x7ffdc994fb34,239253616,0,0x0,8
tick,0x7ffdc994fb34,239269299,0,0x0,8
tick,0x7ffdc994fb34,239284716,0,0x0,8
tick,0x7ffdc994fb34,239300614,0,0x0,8
tick,0x7ffdc994fb34,239315599,0,0x0,8
tick,0x7ffdc994fb34,239331304,0,0x0,8
tick,0x7ffdc994fb34,239346867,0,0x0,8
tick,0x7ffdc994fb34,239362609,0,0x0,8
tick,0x7ffdc994fb34,239378460,0,0x0,8
tick,0x7ffdc994fb34,239394245,0,0x0,8
tick,0x7ffdc994fb34,239410015,0,0x0,8
tick,0x7ffdc994fb34,239425325,0,0x0,8
tick,0x7ffdc994fb34,239441319,0,0x0,8
tick,0x7ffdc994fb34,239456641,0,0x0,8
tick,0x7ffdc994fb34,239472045,0,0x0,8
tick,0x7ffdc994fb34,239487509,0,0x0,8
tick,0x7ffdc994fb34,239503311,0,0x0,8
tick,0x7ffdc994fb34,239518773,0,0x0,8
tick,0x7ffdc994fb34,239534502,0,0x0,8
tick,0x7ffdc994fb34,239550010,0,0x0,8
tick,0x7ffdc994fb34,239565690,0,0x0,8
tick,0x7ffdc994fb34,239580813,0,0x0,8
tick,0x7ffdc994fb34,239596095,0,0x0,8
tick,0x7ffdc994fb34,239611585,0,0x0,8
tick,0x7ffdc994fb34,239627685,0,0x0,8
tick,0x7ffdc994fb34,239642957,0,0x0,8
tick,0x7ffdc994fb34,239658900,0,0x0,8
tick,0x7ffdc994fb34,239673701,0,0x0,8
tick,0x7ffdc994fb34,239689135,0,0x0,8
tick,0x7ffdc994fb34,239704534,0,0x0,8
tick,0x7ffdc994fb34,239719980,0,0x0,8
tick,0x7ffdc994fb34,239735533,0,0x0,8
tick,0x7ffdc994fb34,239751750,0,0x0,8
tick,0x7ffdc994fb34,239767552,0,0x0,8
tick,0x7ffdc994fb34,239783362,0,0x0,8
tick,0x7ffdc994fb34,239799018,0,0x0,8
tick,0x7ffdc994fb34,239813973,0,0x0,8
tick,0x7ffdc994fb34,239829795,0,0x0,8
tick,0x7ffdc994fb34,239845233,0,0x0,8
tick,0x7ffdc994fb34,239860885,0,0x0,8
tick,0x7ffdc994fb34,239876425,0,0x0,8
tick,0x7ffdc994fb34,239891898,0,0x0,8
tick,0x7ffdc994fb34,239907055,0,0x0,8
tick,0x7ffdc994fb34,239922699,0,0x0,8
tick,0x7ffdc994fb34,239938269,0,0x0,8
tick,0x7ffdc994fb34,239953877,0,0x0,8
tick,0x7ffdc994fb34,239969895,0,0x0,8
tick,0x7ffdc994fb34,239984607,0,0x0,8
tick,0x7ffdc994fb34,240000208,0,0x0,8
tick,0x7ffdc994fb34,240015943,0,0x0,8
tick,0x7ffdc994fb34,240031059,0,0x0,8
tick,0x7ffdc994fb34,240046341,0,0x0,8
tick,0x7ffdc994fb34,240062673,0,0x0,8
tick,0x7ffdc994fb34,240077924,0,0x0,8
tick,0x7ffdc994fb34,240093562,0,0x0,8
tick,0x7ffdc994fb34,240108707,0,0x0,8
tick,0x7ffdc994fb34,240123965,0,0x0,8
tick,0x7ffdc994fb34,240140090,0,0x0,8
tick,0x7ffdc994fb34,240155455,0,0x0,8
tick,0x7ffdc994fb34,240170515,0,0x0,8
tick,0x7ffdc994fb34,240186326,0,0x0,8
tick,0x7ffdc994fb34,240201790,0,0x0,8
tick,0x7ffdc994fb34,240217492,0,0x0,8
tick,0x7ffdc994fb34,240232960,0,0x0,8
tick,0x7ffdc994fb34,240248935,0,0x0,8
tick,0x7ffdc994fb34,240264318,0,0x0,8
tick,0x7ffdc994fb34,240279977,0,0x0,8
tick,0x7ffdc994fb34,240295149,0,0x0,8
tick,0x7ffdc994fb34,240310808,0,0x0,8
tick,0x7ffdc994fb34,240326559,0,0x0,8
tick,0x7ffdc994fb34,240342514,0,0x0,8
tick,0x7ffdc994fb34,240357603,0,0x0,8
tick,0x7ffdc994fb34,240373961,0,0x0,8
tick,0x7ffdc994fb34,240389525,0,0x0,8
tick,0x7ffdc994fb34,240404788,0,0x0,8
tick,0x7ffdc994fb34,240420572,0,0x0,8
tick,0x7ffdc994fb34,240435614,0,0x0,8
tick,0x7ffdc994fb34,240451329,0,0x0,8
tick,0x7ffdc994fb34,240466961,0,0x0,8
tick,0x7ffdc994fb34,240482249,0,0x0,8
tick,0x7ffdc994fb34,240497767,0,0x0,8
tick,0x7ffdc994fb34,240512988,0,0x0,8
tick,0x7ffdc994fb34,240528727,0,0x0,8
tick,0x7ffdc994fb34,240544231,0,0x0,8
tick,0x7ffdc994fb34,240560023,0,0x0,8
tick,0x7ffdc994fb34,240575877,0,0x0,8
tick,0x7ffdc994fb34,240591549,0,0x0,8
tick,0x7ffdc994fb34,240606697,0,0x0,8
tick,0x7ffdc994fb34,240622545,0,0x0,8
tick,0x7ffdc994fb34,240637987,0,0x0,8
tick,0x7ffdc994fb34,240653967,0,0x0,8
tick,0x7ffdc994fb34,240669293,0,0x0,8
tick,0x7ffdc994fb34,240684585,0,0x0,8
tick,0x7ffdc994fb34,240700507,0,0x0,8
tick,0x7ffdc994fb34,240716008,0,0x0,8
tick,0x7ffdc994fb34,240731573,0,0x0,8
tick,0x7ffdc994fb34,240747246,0,0x0,8
tick,0x7ffdc994fb34,240762699,0,0x0,8
tick,0x7ffdc994fb34,240777820,0,0x0,8
tick,0x7ffdc994fb34,240793728,0,0x0,8
tick,0x7ffdc994fb34,240809834,0,0x0,8
tick,0x7ffdc994fb34,240824869,0,0x0,8
tick,0x7ffdc994fb34,240840590,0,0x0,8
tick,0x7ffdc994fb34,240855900,0,0x0,8
tick,0x7ffdc994fb34,240871824,0,0x0,8
tick,0x7ffdc994fb34,240886987,0,0x0,8
tick,0x7ffdc994fb34,240902392,0,0x0,8
tick,0x7ffdc994fb34,240917482,0,0x0,8
tick,0x7ffdc994fb34,240933146,0,0x0,8
tick,0x7ffdc994fb34,240948196,0,0x0,8
tick,0x7ffdc994fb34,240963391,0,0x0,8
tick,0x7ffdc994fb34,240979132,0,0x0,8
tick,0x7ffdc994fb34,240994604,0,0x0,8
tick,0x7ffdc994fb34,241010304,0,0x0,8
tick,0x7ffdc994fb34,241026042,0,0x0,8
tick,0x7ffdc994fb34,241041282,0,0x0,8
tick,0x7ffdc994fb34,241057064,0,0x0,8
tick,0x7ffdc994fb34,241072614,0,0x0,8
tick,0x7ffdc994fb34,241087881,0,0x0,8
tick,0x7ffdc994fb34,241103191,0,0x0,8
tick,0x7ffdc994fb34,241118686,0,0x0,8
tick,0x7ffdc994fb34,241134253,0,0x0,8
tick,0x7ffdc994fb34,241149450,0,0x0,8
tick,0x7ffdc994fb34,241164915,0,0x0,8
tick,0x7ffdc994fb34,241180540,0,0x0,8
tick,0x7ffdc994fb34,241196128,0,0x0,8
tick,0x7ffdc994fb34,241211528,0,0x0,8
tick,0x7ffdc994fb34,241227117,0,0x0,8
tick,0x7ffdc994fb34,241243337,0,0x0,8
tick,0x7ffdc994fb34,241259483,0,0x0,8
tick,0x7ffdc994fb34,241274600,0,0x0,8
tick,0x7ffdc994fb34,241290008,0,0x0,8
tick,0x7ffdc994fb34,241305358,0,0x0,8
tick,0x7ffdc994fb34,241321159,0,0x0,8
tick,0x7ffdc994fb34,241336660,0,0x0,8
tick,0x7ffdc994fb34,241352198,0,0x0,8
tick,0x7ffdc994fb34,241367604,0,0x0,8
tick,0x7ffdc994fb34,241383774,0,0x0,8
tick,0x7ffdc994fb34,241399706,0,0x0,8
tick,0x7ffdc994fb34,241414873,0,0x0,8
tick,0x7ffdc994fb34,241430690,0,0x0,8
tick,0x7ffdc994fb34,241446065,0,0x0,8
tick,0x7ffdc994fb34,241461496,0,0x0,8
tick,0x7ffdc994fb34,241476962,0,0x0,8
tick,0x7ffdc994fb34,241492491,0,0x0,8
tick,0x7ffdc994fb34,241507990,0,0x0,8
tick,0x7ffdc994fb34,241523353,0,0x0,8
tick,0x7ffdc994fb34,241539279,0,0x0,8
tick,0x7ffdc994fb34,241554581,0,0x0,8
tick,0x7ffdc994fb34,241570214,0,0x0,8
tick,0x7ffdc994fb34,241585909,0,0x0,8
tick,0x7ffdc994fb34,241601119,0,0x0,8
tick,0x7ffdc994fb34,241616915,0,0x0,8
tick,0x7ffdc994fb34,241632857,0,0x0,8
tick,0x7ffdc994fb34,241648175,0,0x0,8
tick,0x7ffdc994fb34,241663806,0,0x0,8
tick,0x7ffdc994fb34,241679443,0,0x0,8
tick,0x7ffdc994fb34,241695013,0,0x0,8
tick,0x7ffdc994fb34,241709979,0,0x0,8
tick,0x7ffdc994fb34,241726085,0,0x0,8
tick,0x7ffdc994fb34,241741609,0,0x0,8
tick,0x7ffdc994fb34,241756927,0,0x0,8
tick,0x7ffdc994fb34,241772506,0,0x0,8
tick,0x7ffdc994fb34,241788146,0,0x0,8
tick,0x7ffdc994fb34,241803166,0,0x0,8
tick,0x7ffdc994fb34,241818834,0,0x0,8
tick,0x7ffdc994fb34,241834374,0,0x0,8
tick,0x7ffdc994fb34,241849528,0,0x0,8
tick,0x7ffdc994fb34,241864805,0,0x0,8
tick,0x7ffdc994fb34,241880410,0,0x0,8
tick,0x7ffdc994fb34,241896052,0,0x0,8
tick,0x7ffdc994fb34,241911846,0,0x0,8
tick,0x7ffdc994fb34,241927796,0,0x0,8
tick,0x7ffdc994fb34,241943691,0,0x0,8
tick,0x7ffdc994fb34,241958891,0,0x0,8
tick,0x7ffdc994fb34,241974237,0,0x0,8
tick,0x7ffdc994fb34,241989758,0,0x0,8
tick,0x7ffdc994fb34,242005164,0,0x0,8
tick,0x7ffdc994fb34,242020906,0,0x0,8
tick,0x7ffdc994fb34,242035922,0,0x0,8
tick,0x7ffdc994fb34,242051385,0,0x0,8
tick,0x7ffdc994fb34,242066674,0,0x0,8
tick,0x7ffdc994fb34,242082261,0,0x0,8
tick,0x7ffdc994fb34,242098031,0,0x0,8
tick,0x7ffdc994fb34,242113237,0,0x0,8
tick,0x7ffdc994fb34,242128911,0,0x0,8
tick,0x7ffdc994fb34,242144148,0,0x0,8
tick,0x7ffdc994fb34,242159635,0,0x0,8
tick,0x7ffdc994fb34,242175498,0,0x0,8
tick,0x7ffdc994fb34,242191653,0,0x0,8
tick,0x7ffdc994fb34,242207023,0,0x0,8
tick,0x7ffdc994fb34,242223132,0,0x0,8
tick,0x7ffdc994fb34,242238324,0,0x0,8
tick,0x7ffdc994fb34,242253688,0,0x0,8
tick,0x7ffdc994fb34,242269784,0,0x0,8
tick,0x7ffdc994fb34,242285063,0,0x0,8
tick,0x7ffdc994fb34,242300212,0,0x0,8
tick,0x7ffdc994fb34,242315742,0,0x0,8
tick,0x7ffdc994fb34,242331378,0,0x0,8
tick,0x7ffdc994fb34,242346651,0,0x0,8
tick,0x7ffdc994fb34,242362182,0,0x0,8
tick,0x7ffdc994fb34,242378212,0,0x0,8
tick,0x7ffdc994fb34,242393461,0,0x0,8
tick,0x7ffdc994fb34,242408905,0,0x0,8
tick,0x7ffdc994fb34,242424646,0,0x0,8
tick,0x7ffdc994fb34,242440063,0,0x0,8
tick,0x7ffdc994fb34,242455859,0,0x0,8
tick,0x7ffdc994fb34,242471364,0,0x0,8
tick,0x7ffdc994fb34,242487182,0,0x0,8
tick,0x7ffdc994fb34,242502574,0,0x0,8
tick,0x7ffdc994fb34,242518297,0,0x0,8
tick,0x7ffdc994fb34,242533673,0,0x0,8
tick,0x7ffdc994fb34,242549172,0,0x0,8
tick,0x7ffdc994fb34,242564477,0,0x0,8
tick,0x7ffdc994fb34,242580207,0,0x0,8
tick,0x7ffdc994fb34,242595530,0,0x0,8
tick,0x7ffdc994fb34,242611159,0,0x0,8
tick,0x7ffdc994fb34,242626847,0,0x0,8
tick,0x7ffdc994fb34,242642633,0,0x0,8
tick,0x7ffdc994fb34,242658129,0,0x0,8
tick,0x7ffdc994fb34,242673471,0,0x0,8
tick,0x7ffdc994fb34,242688899,0,0x0,8
tick,0x7ffdc994fb34,242704489,0,0x0,8
tick,0x7ffdc994fb34,242720439,0,0x0,8
tick,0x7ffdc994fb34,242735561,0,0x0,8
tick,0x7ffdc994fb34,242751776,0,0x0,8
tick,0x7ffdc994fb34,242767820,0,0x0,8
tick,0x7ffdc994fb34,242783604,0,0x0,8
tick,0x7ffdc994fb34,242798782,0,0x0,8
tick,0x7ffdc994fb34,242814894,0,0x0,8
tick,0x7ffdc994fb34,242830451,0,0x0,8
tick,0x7ffdc994fb34,242845845,0,0x0,8
tick,0x7ffdc994fb34,242862115,0,0x0,8
tick,0x7ffdc994fb34,242877734,0,0x0,8
tick,0x7ffdc994fb34,242893398,0,0x0,8
tick,0x7ffdc994fb34,242909284,0,0x0,8
tick,0x7ffdc994fb34,242924525,0,0x0,8
tick,0x7ffdc994fb34,242940075,0,0x0,8
tick,0x7ffdc994fb34,242955751,0,0x0,8
tick,0x7ffdc994fb34,242971320,0,0x0,8
tick,0x7ffdc994fb34,242987027,0,0x0,8
tick,0x7ffdc994fb34,243002506,0,0x0,8
tick,0x7ffdc994fb34,243017786,0,0x0,8
tick,0x7ffdc994fb34,243033335,0,0x0,8
tick,0x7ffdc994fb34,243049063,0,0x0,8
tick,0x7ffdc994fb34,243064648,0,0x0,8
tick,0x7ffdc994fb34,243079890,0,0x0,8
tick,0x7ffdc994fb34,243095308,0,0x0,8
tick,0x7ffdc994fb34,243111557,0,0x0,8
tick,0x7ffdc994fb34,243126803,0,0x0,8
tick,0x7ffdc994fb34,243141906,0,0x0,8
tick,0x7ffdc994fb34,243157597,0,0x0,8
tick,0x7ffdc994fb34,243173145,0,0x0,8
tick,0x7ffdc994fb34,243188869,0,0x0,8
tick,0x7ffdc994fb34,243204626,0,0x0,8
tick,0x7ffdc994fb34,243219885,0,0x0,8
tick,0x7ffdc994fb34,243235083,0,0x0,8
tick,0x7ffdc994fb34,243250452,0,0x0,8
tick,0x7ffdc994fb34,243266546,0,0x0,8
tick,0x7ffdc994fb34,243282295,0,0x0,8
tick,0x7ffdc994fb34,243297847,0,0x0,8
tick,0x7ffdc994fb34,243313034,0,0x0,8
tick,0x7ffdc994fb34,243329015,0,0x0,8
tick,0x7ffdc994fb34,243344181,0,0x0,8
tick,0x7ffdc994fb34,243359541,0,0x0,8
tick,0x7ffdc994fb34,243374826,0,0x0,8
tick,0x7ffdc994fb34,243390708,0,0x0,8
tick,0x7ffdc994fb34,243406048,0,0x0,8
tick,0x7ffdc994fb34,243421636,0,0x0,8
tick,0x7ffdc994fb34,243437409,0,0x0,8
tick,0x7ffdc994fb34,243452985,0,0x0,8
tick,0x7ffdc994fb34,243468437,0,0x0,8
tick,0x7ffdc994fb34,243483932,0,0x0,8
tick,0x7ffdc994fb34,243499562,0,0x0,8
tick,0x7ffdc994fb34,243515090,0,0x0,8
tick,0x7ffdc994fb34,243530586,0,0x0,8
tick,0x7ffdc994fb34,243546283,0,0x0,8
tick,0x7ffdc994fb34,243561659,0,0x0,8
tick,0x7ffdc994fb34,243577700,0,0x0,8
tick,0x7ffdc994fb34,243593297,0,0x0,8
tick,0x7ffdc994fb34,243608917,0,0x0,8
tick,0x7ffdc994fb34,243624313,0,0x0,8
tick,0x7ffdc994fb34,243639455,0,0x0,8
tick,0x7ffdc994fb34,243655034,0,0x0,8
tick,0x7ffdc994fb34,243670683,0,0x0,8
tick,0x7ffdc994fb34,243685971,0,0x0,8
tick,0x7ffdc994fb34,243701598,0,0x0,8
tick,0x7ffdc994fb34,243717005,0,0x0,8
tick,0x7ffdc994fb34,243733506,0,0x0,8
tick,0x7ffdc994fb34,243749223,0,0x0,8
tick,0x7ffdc994fb34,243764364,0,0x0,8
tick,0x7ffdc994fb34,243779855,0,0x0,8
tick,0x7ffdc994fb34,243795544,0,0x0,8
tick,0x7ffdc994fb34,243811210,0,0x0,8
tick,0x7ffdc994fb34,243826441,0,0x0,8
tick,0x7ffdc994fb34,243842070,0,0x0,8
tick,0x7ffdc994fb34,243857652,0,0x0,8
tick,0x7ffdc994fb34,243872677,0,0x0,8
tick,0x7ffdc994fb34,243888781,0,0x0,8
tick,0x7ffdc994fb34,243904328,0,0x0,8
tick,0x7ffdc994fb34,243919932,0,0x0,8
tick,0x7ffdc994fb34,243935144,0,0x0,8
tick,0x7ffdc994fb34,243950965,0,0x0,8
tick,0x7ffdc994fb34,243966404,0,0x0,8
tick,0x7ffdc994fb34,243982012,0,0x0,8
tick,0x7ffdc994fb34,243997827,0,0x0,8
tick,0x7ffdc994fb34,244013030,0,0x0,8
tick,0x7ffdc994fb34,244028364,0,0x0,8
tick,0x7ffdc994fb34,244043918,0,0x0,8
tick,0x7ffdc994fb34,244059880,0,0x0,8
tick,0x7ffdc994fb34,244075226,0,0x0,8
tick,0x7ffdc994fb34,244091504,0,0x0,8
tick,0x7ffdc994fb34,244107533,0,0x0,8
tick,0x7ffdc994fb34,244122948,0,0x0,8
tick,0x7ffdc994fb34,244139046,0,0x0,8
tick,0x7ffdc994fb34,244154828,0,0x0,8
tick,0x7ffdc994fb34,244170329,0,0x0,8
tick,0x7ffdc994fb34,244186036,0,0x0,8
tick,0x7ffdc994fb34,244201191,0,0x0,8
tick,0x7ffdc994fb34,244216675,0,0x0,8
tick,0x7ffdc994fb34,244232158,0,0x0,8
tick,0x7ffdc994fb34,244247773,0,0x0,8
tick,0x7ffdc994fb34,244263020,0,0x0,8
tick,0x7ffdc994fb34,244279150,0,0x0,8
tick,0x7ffdc994fb34,244294263,0,0x0,8
tick,0x7ffdc994fb34,244309648,0,0x0,8
tick,0x7ffdc994fb34,244325282,0,0x0,8
tick,0x7ffdc994fb34,244341316,0,0x0,8
tick,0x7ffdc994fb34,244357246,0,0x0,8
tick,0x7ffdc994fb34,244372551,0,0x0,8
tick,0x7ffdc994fb34,244387685,0,0x0,8
tick,0x7ffdc994fb34,244403249,0,0x0,8
tick,0x7ffdc994fb34,244418977,0,0x0,8
tick,0x7ffdc994fb34,244434221,0,0x0,8
tick,0x7ffdc994fb34,244450062,0,0x0,8
tick,0x7ffdc994fb34,244465409,0,0x0,8
tick,0x7ffdc994fb34,244480840,0,0x0,8
tick,0x7ffdc994fb34,244496384,0,0x0,8
tick,0x7ffdc994fb34,244511823,0,0x0,8
tick,0x7ffdc994fb34,244527301,0,0x0,8
tick,0x7ffdc994fb34,244542986,0,0x0,8
tick,0x7ffdc994fb34,244558717,0,0x0,8
tick,0x7ffdc994fb34,244573756,0,0x0,8
tick,0x7ffdc994fb34,244589590,0,0x0,8
tick,0x7ffdc994fb34,244604873,0,0x0,8
tick,0x7ffdc994fb34,244620620,0,0x0,8
tick,0x7ffdc994fb34,244636253,0,0x0,8
tick,0x7ffdc994fb34,244651526,0,0x0,8
tick,0x7ffdc994fb34,244667583,0,0x0,8
tick,0x7ffdc994fb34,244683149,0,0x0,8
tick,0x7ffdc994fb34,244698433,0,0x0,8
tick,0x7ffdc994fb34,244713862,0,0x0,8
tick,0x7ffdc994fb34,244729701,0,0x0,8
tick,0x7ffdc994fb34,244744913,0,0x0,8
tick,0x7ffdc994fb34,244761017,0,0x0,8
tick,0x7ffdc994fb34,244776692,0,0x0,8
tick,0x7ffdc994fb34,244791835,0,0x0,8
tick,0x7ffdc994fb34,244807601,0,0x0,8
tick,0x7ffdc994fb34,244822798,0,0x0,8
tick,0x7ffdc994fb34,244838361,0,0x0,8
tick,0x7ffdc994fb34,244853885,0,0x0,8
tick,0x7ffdc994fb34,244869763,0,0x0,8
tick,0x7ffdc994fb34,244884898,0,0x0,8
tick,0x7ffdc994fb34,244900475,0,0x0,8
tick,0x7ffdc994fb34,244916314,0,0x0,8
tick,0x7ffdc994fb34,244931748,0,0x0,8
tick,0x7ffdc994fb34,244947546,0,0x0,8
tick,0x7ffdc994fb34,244963441,0,0x0,8
tick,0x7ffdc994fb34,244978897,0,0x0,8
tick,0x7ffdc994fb34,244995190,0,0x0,8
tick,0x7ffdc994fb34,245010280,0,0x0,8
tick,0x7ffdc994fb34,245025621,0,0x0,8
tick,0x7ffdc994fb34,245041090,0,0x0,8
tick,0x7ffdc994fb34,245056255,0,0x0,8
tick,0x7ffdc994fb34,245071910,0,0x0,8
tick,0x7ffdc994fb34,245087318,0,0x0,8
tick,0x7ffdc994fb34,245103368,0,0x0,8
tick,0x7ffdc994fb34,245118774,0,0x0,8
tick,0x7ffdc994fb34,245134372,0,0x0,8
tick,0x7ffdc994fb34,245149776,0,0x0,8
tick,0x7ffdc994fb34,245166068,0,0x0,8
tick,0x7ffdc994fb34,245181855,0,0x0,8
tick,0x7ffdc994fb34,245197734,0,0x0,8
tick,0x7ffdc994fb34,245214018,0,0x0,8
tick,0x7ffdc994fb34,245229579,0,0x0,8
tick,0x7ffdc994fb34,245244816,0,0x0,8
tick,0x7ffdc994fb34,245259911,0,0x0,8
tick,0x7ffdc994fb34,245275711,0,0x0,8
tick,0x7ffdc994fb34,245291975,0,0x0,8
tick,0x7ffdc994fb34,245307076,0,0x0,8
tick,0x7ffdc994fb34,245323142,0,0x0,8
tick,0x7ffdc994fb34,245339038,0,0x0,8
tick,0x7ffdc994fb34,245354514,0,0x0,8
tick,0x7ffdc994fb34,245370547,0,0x0,8
tick,0x7ffdc994fb34,245386117,0,0x0,8
tick,0x7ffdc994fb34,245401499,0,0x0,8
tick,0x7ffdc994fb34,245417563,0,0x0,8
tick,0x7ffdc994fb34,245432850,0,0x0,8
tick,0x7ffdc994fb34,245448396,0,0x0,8
tick,0x7ffdc994fb34,245463557,0,0x0,8
tick,0x7ffdc994fb34,245479954,0,0x0,8
tick,0x7ffdc994fb34,245495351,0,0x0,8
tick,0x7ffdc994fb34,245510766,0,0x0,8
tick,0x7ffdc994fb34,245526221,0,0x0,8
tick,0x7ffdc994fb34,245541499,0,0x0,8
tick,0x7ffdc994fb34,245557641,0,0x0,8
tick,0x7ffdc994fb34,245572799,0,0x0,8
tick,0x7ffdc994fb34,245588176,0,0x0,8
tick,0x7ffdc994fb34,245603720,0,0x0,8
tick,0x7ffdc994fb34,245620036,0,0x0,8
tick,0x7ffdc994fb34,245635033,0,0x0,8
tick,0x7ffdc994fb34,245650574,0,0x0,8
tick,0x7ffdc994fb34,245665730,0,0x0,8
tick,0x7ffdc994fb34,245681464,0,0x0,8
tick,0x7ffdc994fb34,245696701,0,0x0,8
tick,0x7ffdc994fb34,245712369,0,0x0,8
tick,0x7ffdc994fb34,245728428,0,0x0,8
tick,0x7ffdc994fb34,245744188,0,0x0,8
tick,0x7ffdc994fb34,245759421,0,0x0,8
tick,0x7ffdc994fb34,245774695,0,0x0,8
tick,0x7ffdc994fb34,245790922,0,0x0,8
tick,0x7ffdc994fb34,245806406,0,0x0,8
tick,0x7ffdc994fb34,245822080,0,0x0,8
tick,0x7ffdc994fb34,245837505,0,0x0,8
tick,0x7ffdc994fb34,245852804,0,0x0,8
tick,0x7ffdc994fb34,245868718,0,0x0,8
tick,0x7ffdc994fb34,245884093,0,0x0,8
tick,0x7ffdc994fb34,245899623,0,0x0,8
tick,0x7ffdc994fb34,245914939,0,0x0,8
tick,0x7ffdc994fb34,245930601,0,0x0,8
tick,0x7ffdc994fb34,245946125,0,0x0,8
tick,0x7ffdc994fb34,245961311,0,0x0,8
tick,0x7ffdc994fb34,245977081,0,0x0,8
tick,0x7ffdc994fb34,245992214,0,0x0,8
tick,0x7ffdc994fb34,246007812,0,0x0,8
tick,0x7ffdc994fb34,246023071,0,0x0,8
tick,0x7ffdc994fb34,246038404,0,0x0,8
tick,0x7ffdc994fb34,246054555,0,0x0,8
tick,0x7ffdc994fb34,246069783,0,0x0,8
tick,0x7ffdc994fb34,246085575,0,0x0,8
tick,0x7ffdc994fb34,246101825,0,0x0,8
tick,0x7ffdc994fb34,246117842,0,0x0,8
tick,0x7ffdc994fb34,246132895,0,0x0,8
tick,0x7ffdc994fb34,246148569,0,0x0,8
tick,0x7ffdc994fb34,246164232,0,0x0,8
tick,0x7ffdc994fb34,246179951,0,0x0,8
tick,0x7ffdc994fb34,246195518,0,0x0,8
tick,0x7ffdc994fb34,246210912,0,0x0,8
tick,0x7ffdc994fb34,246226587,0,0x0,8
tick,0x7ffdc994fb34,246241771,0,0x0,8
tick,0x7ffdc994fb34,246257459,0,0x0,8
tick,0x7ffdc994fb34,246272844,0,0x0,8
tick,0x7ffdc994fb34,246288368,0,0x0,8
tick,0x7ffdc994fb34,246303803,0,0x0,8
tick,0x7ffdc994fb34,246319124,0,0x0,8
tick,0x7ffdc994fb34,246335463,0,0x0,8
tick,0x7ffdc994fb34,246350738,0,0x0,8
tick,0x7ffdc994fb34,246366210,0,0x0,8
tick,0x7ffdc994fb34,246381903,0,0x0,8
tick,0x7ffdc994fb34,246396729,0,0x0,8
tick,0x7ffdc994fb34,246411665,0,0x0,8
tick,0x7ffdc994fb34,246427356,0,0x0,8
tick,0x7ffdc994fb34,246442804,0,0x0,8
tick,0x7ffdc994fb34,246458214,0,0x0,8
tick,0x7ffdc994fb34,246473540,0,0x0,8
tick,0x7ffdc994fb34,246489126,0,0x0,8
tick,0x7ffdc994fb34,246504369,0,0x0,8
tick,0x7ffdc994fb34,246520257,0,0x0,8
tick,0x7ffdc994fb34,246535281,0,0x0,8
tick,0x7ffdc994fb34,246550104,0,0x0,8
tick,0x7ffdc994fb34,246565951,0,0x0,8
tick,0x7ffdc994fb34,246581642,0,0x0,8
tick,0x7ffdc994fb34,246597171,0,0x0,8
tick,0x7ffdc994fb34,246612776,0,0x0,8
tick,0x7ffdc994fb34,246628416,0,0x0,8
tick,0x7ffdc994fb34,246644487,0,0x0,8
tick,0x7ffdc994fb34,246659866,0,0x0,8
tick,0x7ffdc994fb34,246675495,0,0x0,8
tick,0x7ffdc994fb34,246690890,0,0x0,8
tick,0x7ffdc994fb34,246706819,0,0x0,8
tick,0x7ffdc994fb34,246722674,0,0x0,8
tick,0x7ffdc994fb34,246738222,0,0x0,8
tick,0x7ffdc994fb34,246753637,0,0x0,8
tick,0x7ffdc994fb34,246769523,0,0x0,8
tick,0x7ffdc994fb34,246784664,0,0x0,8
tick,0x7ffdc994fb34,246800187,0,0x0,8
tick,0x7ffdc994fb34,246815752,0,0x0,8
tick,0x7ffdc994fb34,246831210,0,0x0,8
tick,0x7ffdc994fb34,246846679,0,0x0,8
tick,0x7ffdc994fb34,246862559,0,0x0,8
tick,0x7ffdc994fb34,246878527,0,0x0,8
tick,0x7ffdc994fb34,246893585,0,0x0,8
tick,0x7ffdc994fb34,246909285,0,0x0,8
tick,0x7ffdc994fb34,246925018,0,0x0,8
tick,0x7ffdc994fb34,246940649,0,0x0,8
tick,0x7ffdc994fb34,246956251,0,0x0,8
tick,0x7ffdc994fb34,246971543,0,0x0,8
tick,0x7ffdc994fb34,246987117,0,0x0,8
tick,0x7ffdc994fb34,247002631,0,0x0,8
tick,0x7ffdc994fb34,247018335,0,0x0,8
tick,0x7ffdc994fb34,247033425,0,0x0,8
tick,0x7ffdc994fb34,247049333,0,0x0,8
tick,0x7ffdc994fb34,247064110,0,0x0,8
tick,0x7ffdc994fb34,247079437,0,0x0,8
tick,0x7ffdc994fb34,247094863,0,0x0,8
tick,0x7ffdc994fb34,247110387,0,0x0,8
tick,0x7ffdc994fb34,247125912,0,0x0,8
tick,0x7ffdc994fb34,247141618,0,0x0,8
tick,0x7ffdc994fb34,247157031,0,0x0,8
tick,0x7ffdc994fb34,247172388,0,0x0,8
tick,0x7ffdc994fb34,247187860,0,0x0,8
tick,0x7ffdc994fb34,247203849,0,0x0,8
tick,0x7ffdc994fb34,247219475,0,0x0,8
tick,0x7ffdc994fb34,247235120,0,0x0,8
tick,0x7ffdc994fb34,247250811,0,0x0,8
tick,0x7ffdc994fb34,247266157,0,0x0,8
tick,0x7ffdc994fb34,247281502,0,0x0,8
tick,0x7ffdc994fb34,247296853,0,0x0,8
tick,0x7ffdc994fb34,247312686,0,0x0,8
tick,0x7ffdc994fb34,247327919,0,0x0,8
tick,0x7ffdc994fb34,247343699,0,0x0,8
tick,0x7ffdc994fb34,247359175,0,0x0,8
tick,0x7ffdc994fb34,247374790,0,0x0,8
tick,0x7ffdc994fb34,247390477,0,0x0,8
tick,0x7ffdc994fb34,247406036,0,0x0,8
tick,0x7ffdc994fb34,247421321,0,0x0,8
tick,0x7ffdc994fb34,247437139,0,0x0,8
tick,0x7ffdc994fb34,247452501,0,0x0,8
tick,0x7ffdc994fb34,247468041,0,0x0,8
tick,0x7ffdc994fb34,247483238,0,0x0,8
tick,0x7ffdc994fb34,247499560,0,0x0,8
tick,0x7ffdc994fb34,247515040,0,0x0,8
tick,0x7ffdc994fb34,247529565,0,0x0,8
tick,0x7ffdc994fb34,247544874,0,0x0,8
tick,0x7ffdc994fb34,247560847,0,0x0,8
tick,0x7ffdc994fb34,247576376,0,0x0,8
tick,0x7ffdc994fb34,247592025,0,0x0,8
tick,0x7ffdc994fb34,247607342,0,0x0,8
tick,0x7ffdc994fb34,247622760,0,0x0,8
tick,0x7ffdc994fb34,247637325,0,0x0,8
tick,0x7ffdc994fb34,247653072,0,0x0,8
tick,0x7ffdc994fb34,247669022,0,0x0,8
tick,0x7ffdc994fb34,247684029,0,0x0,8
tick,0x7ffdc994fb34,247699486,0,0x0,8
tick,0x7ffdc994fb34,247714952,0,0x0,8
tick,0x7ffdc994fb34,247730270,0,0x0,8
tick,0x7ffdc994fb34,247746005,0,0x0,8
tick,0x7ffdc994fb34,247761482,0,0x0,8
tick,0x7ffdc994fb34,247777127,0,0x0,8
tick,0x7ffdc994fb34,247793020,0,0x0,8
tick,0x7ffdc994fb34,247808519,0,0x0,8
tick,0x7ffdc994fb34,247823654,0,0x0,8
tick,0x7ffdc994fb34,247839351,0,0x0,8
tick,0x7ffdc994fb34,247854421,0,0x0,8
tick,0x7ffdc994fb34,247870209,0,0x0,8
tick,0x7ffdc994fb34,247885508,0,0x0,8
tick,0x7ffdc994fb34,247900841,0,0x0,8
tick,0x7ffdc994fb34,247916418,0,0x0,8
tick,0x7ffdc994fb34,247931930,0,0x0,8
tick,0x7ffdc994fb34,247947484,0,0x0,8
tick,0x7ffdc994fb34,247962834,0,0x0,8
tick,0x7ffdc994fb34,247978385,0,0x0,8
tick,0x7ffdc994fb34,247994338,0,0x0,8
tick,0x7ffdc994fb34,248009779,0,0x0,8
tick,0x7ffdc994fb34,248024858,0,0x0,8
tick,0x7ffdc994fb34,248041014,0,0x0,8
tick,0x7ffdc994fb34,248056589,0,0x0,8
tick,0x7ffdc994fb34,248072523,0,0x0,8
tick,0x7ffdc994fb34,248087455,0,0x0,8
tick,0x7ffdc994fb34,248103240,0,0x0,8
tick,0x7ffdc994fb34,248118513,0,0x0,8
tick,0x7ffdc994fb34,248133653,0,0x0,8
tick,0x7ffdc994fb34,248149411,0,0x0,8
tick,0x7ffdc994fb34,248164853,0,0x0,8
tick,0x7ffdc994fb34,248180913,0,0x0,8
tick,0x7ffdc994fb34,248196862,0,0x0,8
tick,0x7ffdc994fb34,248212497,0,0x0,8
tick,0x7ffdc994fb34,248227636,0,0x0,8
tick,0x7ffdc994fb34,248243379,0,0x0,8
tick,0x7ffdc994fb34,248259573,0,0x0,8
tick,0x7ffdc994fb34,248274816,0,0x0,8
tick,0x7ffdc994fb34,248290456,0,0x0,8
tick,0x7ffdc994fb34,248306077,0,0x0,8
tick,0x7ffdc994fb34,248321476,0,0x0,8
tick,0x7ffdc994fb34,248337225,0,0x0,8
tick,0x7ffdc994fb34,248353314,0,0x0,8
tick,0x7ffdc994fb34,248368882,0,0x0,8
tick,0x7ffdc994fb34,248384974,0,0x0,8
tick,0x7ffdc994fb34,248400498,0,0x0,8
tick,0x7ffdc994fb34,248415965,0,0x0,8
tick,0x7ffdc994fb34,248431795,0,0x0,8
tick,0x7ffdc994fb34,248446808,0,0x0,8
tick,0x7ffdc994fb34,248463102,0,0x0,8
tick,0x7ffdc994fb34,248478439,0,0x0,8
tick,0x7ffdc994fb34,248494016,0,0x0,8
tick,0x7ffdc994fb34,248509341,0,0x0,8
tick,0x7ffdc994fb34,248524836,0,0x0,8
tick,0x7ffdc994fb34,248540497,0,0x0,8
tick,0x7ffdc994fb34,248555974,0,0x0,8
tick,0x7ffdc994fb34,248571970,0,0x0,8
tick,0x7ffdc994fb34,248587454,0,0x0,8
tick,0x7ffdc994fb34,248602812,0,0x0,8
tick,0x7ffdc994fb34,248618319,0,0x0,8
tick,0x7ffdc994fb34,248634159,0,0x0,8
tick,0x7ffdc994fb34,248649701,0,0x0,8
tick,0x7ffdc994fb34,248665008,0,0x0,8
tick,0x7ffdc994fb34,248680338,0,0x0,8
tick,0x7ffdc994fb34,248695946,0,0x0,8
tick,0x7ffdc994fb34,248712241,0,0x0,8
tick,0x7ffdc994fb34,248727515,0,0x0,8
tick,0x7ffdc994fb34,248742926,0,0x0,8
tick,0x7ffdc994fb34,248758642,0,0x0,8
tick,0x7ffdc994fb34,248774362,0,0x0,8
tick,0x7ffdc994fb34,248789846,0,0x0,8
tick,0x7ffdc994fb34,248804824,0,0x0,8
tick,0x7ffdc994fb34,248820460,0,0x0,8
tick,0x7ffdc994fb34,248836103,0,0x0,8
tick,0x7ffdc994fb34,248851690,0,0x0,8
tick,0x7ffdc994fb34,248867114,0,0x0,8
tick,0x7ffdc994fb34,248882859,0,0x0,8
tick,0x7ffdc994fb34,248898229,0,0x0,8
tick,0x7ffdc994fb34,248914092,0,0x0,8
tick,0x7ffdc994fb34,248929580,0,0x0,8
tick,0x7ffdc994fb34,248944936,0,0x0,8
tick,0x7ffdc994fb34,248960598,0,0x0,8
tick,0x7ffdc994fb34,248976091,0,0x0,8
tick,0x7ffdc994fb34,248991751,0,0x0,8
tick,0x7ffdc994fb34,249007314,0,0x0,8
tick,0x7ffdc994fb34,249022740,0,0x0,8
tick,0x7ffdc994fb34,249038679,0,0x0,8
tick,0x7ffdc994fb34,249054447,0,0x0,8
tick,0x7ffdc994fb34,249070124,0,0x0,8
tick,0x7ffdc994fb34,249085545,0,0x0,8
tick,0x7ffdc994fb34,249101037,0,0x0,8
tick,0x7ffdc994fb34,249116828,0,0x0,8
tick,0x7ffdc994fb34,249132106,0,0x0,8
tick,0x7ffdc994fb34,249147316,0,0x0,8
tick,0x7ffdc994fb34,249162975,0,0x0,8
tick,0x7ffdc994fb34,249178464,0,0x0,8
tick,0x7ffdc994fb34,249193761,0,0x0,8
tick,0x7ffdc994fb34,249209531,0,0x0,8
tick,0x7ffdc994fb34,249225212,0,0x0,8
tick,0x7ffdc994fb34,249240840,0,0x0,8
tick,0x7ffdc994fb34,249256090,0,0x0,8
tick,0x7ffdc994fb34,249271617,0,0x0,8
tick,0x7ffdc994fb34,249286809,0,0x0,8
tick,0x7ffdc994fb34,249303008,0,0x0,8
tick,0x7ffdc994fb34,249318505,0,0x0,8
tick,0x7ffdc994fb34,249334329,0,0x0,8
tick,0x7ffdc994fb34,249349515,0,0x0,8
tick,0x7ffdc994fb34,249365634,0,0x0,8
tick,0x7ffdc994fb34,249381050,0,0x0,8
tick,0x7ffdc994fb34,249396874,0,0x0,8
tick,0x7ffdc994fb34,249412127,0,0x0,8
tick,0x7ffdc994fb34,249427635,0,0x0,8
tick,0x7ffdc994fb34,249443588,0,0x0,8
tick,0x7ffdc994fb34,249459774,0,0x0,8
tick,0x7ffdc994fb34,249474799,0,0x0,8
tick,0x7ffdc994fb34,249490416,0,0x0,8
tick,0x7ffdc994fb34,249506034,0,0x0,8
tick,0x7ffdc994fb34,249521446,0,0x0,8
tick,0x7ffdc994fb34,249536518,0,0x0,8
tick,0x7ffdc994fb34,249551804,0,0x0,8
tick,0x7ffdc994fb34,249567661,0,0x0,8
tick,0x7ffdc994fb34,249582857,0,0x0,8
tick,0x7ffdc994fb34,249598741,0,0x0,8
tick,0x7ffdc994fb34,249614084,0,0x0,8
tick,0x7ffdc994fb34,249630048,0,0x0,8
tick,0x7ffdc994fb34,249645342,0,0x0,8
tick,0x7ffdc994fb34,249661011,0,0x0,8
tick,0x7ffdc994fb34,249676358,0,0x0,8
tick,0x7ffdc994fb34,249691987,0,0x0,8
tick,0x7ffdc994fb34,249707963,0,0x0,8
tick,0x7ffdc994fb34,249723552,0,0x0,8
tick,0x7ffdc994fb34,249739245,0,0x0,8
tick,0x7ffdc994fb34,249755163,0,0x0,8
tick,0x7ffdc994fb34,249770618,0,0x0,8
tick,0x7ffdc994fb34,249786475,0,0x0,8
tick,0x7ffdc994fb34,249801656,0,0x0,8
tick,0x7ffdc994fb34,249817060,0,0x0,8
tick,0x7ffdc994fb34,249833077,0,0x0,8
tick,0x7ffdc994fb34,249848315,0,0x0,8
tick,0x7ffdc994fb34,249863729,0,0x0,8
tick,0x7ffdc994fb34,249879164,0,0x0,8
tick,0x7ffdc994fb34,249895420,0,0x0,8
tick,0x7ffdc994fb34,249911188,0,0x0,8
tick,0x7ffdc994fb34,249926715,0,0x0,8
tick,0x7ffdc994fb34,249942048,0,0x0,8
tick,0x7ffdc994fb34,249956934,0,0x0,8
tick,0x7ffdc994fb34,249972247,0,0x0,8
tick,0x7ffdc994fb34,249987988,0,0x0,8
tick,0x7ffdc994fb34,250002903,0,0x0,8
tick,0x7ffdc994fb34,250018492,0,0x0,8
tick,0x7ffdc994fb34,250033890,0,0x0,8
tick,0x7ffdc994fb34,250049401,0,0x0,8
tick,0x7ffdc994fb34,250064622,0,0x0,8
tick,0x7ffdc994fb34,250080480,0,0x0,8
tick,0x7ffdc994fb34,250095996,0,0x0,8
tick,0x7ffdc994fb34,250111566,0,0x0,8
tick,0x7ffdc994fb34,250127164,0,0x0,8
tick,0x7ffdc994fb34,250143454,0,0x0,8
tick,0x7ffdc994fb34,250159094,0,0x0,8
tick,0x7ffdc994fb34,250174707,0,0x0,8
tick,0x7ffdc994fb34,250190404,0,0x0,8
tick,0x7ffdc994fb34,250206138,0,0x0,8
tick,0x7ffdc994fb34,250221470,0,0x0,8
tick,0x7ffdc994fb34,250237512,0,0x0,8
tick,0x7ffdc994fb34,250252887,0,0x0,8
tick,0x7ffdc994fb34,250268276,0,0x0,8
tick,0x7ffdc994fb34,250284437,0,0x0,8
tick,0x7ffdc994fb34,250299854,0,0x0,8
tick,0x7ffdc994fb34,250315397,0,0x0,8
tick,0x7ffdc994fb34,250330910,0,0x0,8
tick,0x7ffdc994fb34,250346594,0,0x0,8
tick,0x7ffdc994fb34,250362279,0,0x0,8
tick,0x7ffdc994fb34,250378008,0,0x0,8
tick,0x7ffdc994fb34,250393220,0,0x0,8
tick,0x7ffdc994fb34,250409065,0,0x0,8
tick,0x7ffdc994fb34,250424225,0,0x0,8
tick,0x7ffdc994fb34,250439863,0,0x0,8
tick,0x7ffdc994fb34,250455284,0,0x0,8
tick,0x7ffdc994fb34,250470743,0,0x0,8
tick,0x7ffdc994fb34,250486038,0,0x0,8
tick,0x7ffdc994fb34,250501944,0,0x0,8
tick,0x7ffdc994fb34,250517439,0,0x0,8
tick,0x7ffdc994fb34,250532784,0,0x0,8
tick,0x7ffdc994fb34,250548754,0,0x0,8
tick,0x7ffdc994fb34,250563838,0,0x0,8
tick,0x7ffdc994fb34,250579456,0,0x0,8
tick,0x7ffdc994fb34,250594486,0,0x0,8
tick,0x7ffdc994fb34,250610245,0,0x0,8
tick,0x7ffdc994fb34,250625494,0,0x0,8
tick,0x7ffdc994fb34,250641064,0,0x0,8
tick,0x7ffdc994fb34,250656937,0,0x0,8
tick,0x7ffdc994fb34,250672728,0,0x0,8
tick,0x7ffdc994fb34,250688220,0,0x0,8
tick,0x7ffdc994fb34,250703483,0,0x0,8
tick,0x7ffdc994fb34,250719143,0,0x0,8
tick,0x7ffdc994fb34,250734580,0,0x0,8
tick,0x7ffdc994fb34,250750162,0,0x0,8
tick,0x7ffdc994fb34,250765732,0,0x0,8
tick,0x7ffdc994fb34,250781605,0,0x0,8
tick,0x7ffdc994fb34,250797258,0,0x0,8
tick,0x7ffdc994fb34,250812582,0,0x0,8
tick,0x7ffdc994fb34,250828338,0,0x0,8
tick,0x7ffdc994fb34,250843842,0,0x0,8
tick,0x7ffdc994fb34,250859529,0,0x0,8
tick,0x7ffdc994fb34,250875277,0,0x0,8
tick,0x7ffdc994fb34,250890693,0,0x0,8
tick,0x7ffdc994fb34,250906796,0,0x0,8
tick,0x7ffdc994fb34,250922224,0,0x0,8
tick,0x7ffdc994fb34,250937750,0,0x0,8
tick,0x7ffdc994fb34,250953457,0,0x0,8
tick,0x7ffdc994fb34,250968871,0,0x0,8
tick,0x7ffdc994fb34,250984605,0,0x0,8
tick,0x7ffdc994fb34,250999883,0,0x0,8
tick,0x7ffdc994fb34,251015901,0,0x0,8
tick,0x7ffdc994fb34,251031441,0,0x0,8
tick,0x7ffdc994fb34,251047205,0,0x0,8
tick,0x7ffdc994fb34,251062520,0,0x0,8
tick,0x7ffdc994fb34,251078814,0,0x0,8
tick,0x7ffdc994fb34,251094793,0,0x0,8
tick,0x7ffdc994fb34,251110612,0,0x0,8
tick,0x7ffdc994fb34,251126677,0,0x0,8
tick,0x7ffdc994fb34,251142658,0,0x0,8
tick,0x7ffdc994fb34,251157992,0,0x0,8
tick,0x7ffdc994fb34,251173547,0,0x0,8
tick,0x7ffdc994fb34,251189191,0,0x0,8
tick,0x7ffdc994fb34,251204778,0,0x0,8
tick,0x7ffdc994fb34,251219634,0,0x0,8
tick,0x7ffdc994fb34,251235091,0,0x0,8
tick,0x7ffdc994fb34,251250528,0,0x0,8
tick,0x7ffdc994fb34,251266425,0,0x0,8
tick,0x7ffdc994fb34,251282779,0,0x0,8
tick,0x7ffdc994fb34,251298976,0,0x0,8
tick,0x7ffdc994fb34,251314463,0,0x0,8
tick,0x7ffdc994fb34,251329703,0,0x0,8
tick,0x7ffdc994fb34,251345334,0,0x0,8
tick,0x7ffdc994fb34,251361169,0,0x0,8
tick,0x7ffdc994fb34,251376285,0,0x0,8
tick,0x7ffdc994fb34,251392115,0,0x0,8
tick,0x7ffdc994fb34,251407966,0,0x0,8
tick,0x7ffdc994fb34,251422994,0,0x0,8
tick,0x7ffdc994fb34,251438990,0,0x0,8
tick,0x7ffdc994fb34,251454312,0,0x0,8
tick,0x7ffdc994fb34,251470007,0,0x0,8
tick,0x7ffdc994fb34,251485653,0,0x0,8
tick,0x7ffdc994fb34,251501112,0,0x0,8
tick,0x7ffdc994fb34,251516425,0,0x0,8
tick,0x7ffdc994fb34,251532353,0,0x0,8
tick,0x7ffdc994fb34,251547624,0,0x0,8
tick,0x7ffdc994fb34,251563432,0,0x0,8
tick,0x7ffdc994fb34,251578751,0,0x0,8
tick,0x7ffdc994fb34,251594242,0,0x0,8
tick,0x7ffdc994fb34,251609600,0,0x0,8
tick,0x7ffdc994fb34,251625154,0,0x0,8
tick,0x7ffdc994fb34,251640729,0,0x0,8
tick,0x7ffdc994fb34,251656136,0,0x0,8
tick,0x7ffdc994fb34,251671657,0,0x0,8
tick,0x7ffdc994fb34,251686906,0,0x0,8
tick,0x7ffdc994fb34,251702533,0,0x0,8
tick,0x7ffdc994fb34,251717989,0,0x0,8
tick,0x7ffdc994fb34,251733432,0,0x0,8
tick,0x7ffdc994fb34,251749171,0,0x0,8
tick,0x7ffdc994fb34,251764814,0,0x0,8
tick,0x7ffdc994fb34,251780624,0,0x0,8
tick,0x7ffdc994fb34,251796010,0,0x0,8
tick,0x7ffdc994fb34,251811459,0,0x0,8
tick,0x7ffdc994fb34,251827295,0,0x0,8
tick,0x7ffdc994fb34,251842237,0,0x0,8
tick,0x7ffdc994fb34,251857938,0,0x0,8
tick,0x7ffdc994fb34,251873314,0,0x0,8
tick,0x7ffdc994fb34,251888604,0,0x0,8
tick,0x7ffdc994fb34,251903992,0,0x0,8
tick,0x7ffdc994fb34,251919733,0,0x0,8
tick,0x7ffdc994fb34,251935263,0,0x0,8
tick,0x7ffdc994fb34,251950962,0,0x0,8
tick,0x7ffdc994fb34,251966362,0,0x0,8
tick,0x7ffdc994fb34,251981756,0,0x0,8
tick,0x7ffdc994fb34,251997302,0,0x0,8
tick,0x7ffdc994fb34,252013381,0,0x0,8
tick,0x7ffdc994fb34,252028801,0,0x0,8
tick,0x7ffdc994fb34,252044532,0,0x0,8
tick,0x7ffdc994fb34,252059420,0,0x0,8
tick,0x7ffdc994fb34,252074823,0,0x0,8
tick,0x7ffdc994fb34,252090465,0,0x0,8
tick,0x7ffdc994fb34,252105904,0,0x0,8
tick,0x7ffdc994fb34,252120838,0,0x0,8
tick,0x7ffdc994fb34,252137060,0,0x0,8
tick,0x7ffdc994fb34,252153276,0,0x0,8
tick,0x7ffdc994fb34,252168927,0,0x0,8
tick,0x7ffdc994fb34,252184134,0,0x0,8
tick,0x7ffdc994fb34,252200009,0,0x0,8
tick,0x7ffdc994fb34,252215159,0,0x0,8
tick,0x7ffdc994fb34,252230861,0,0x0,8
tick,0x7ffdc994fb34,252246179,0,0x0,8
tick,0x7ffdc994fb34,252261767,0,0x0,8
tick,0x7ffdc994fb34,252277641,0,0x0,8
tick,0x7ffdc994fb34,252292995,0,0x0,8
tick,0x7ffdc994fb34,252308897,0,0x0,8
tick,0x7ffdc994fb34,252324887,0,0x0,8
tick,0x7ffdc994fb34,252340692,0,0x0,8
tick,0x7ffdc994fb34,252356317,0,0x0,8
tick,0x7ffdc994fb34,252372093,0,0x0,8
tick,0x7ffdc994fb34,252387741,0,0x0,8
tick,0x7ffdc994fb34,252403007,0,0x0,8
tick,0x7ffdc994fb34,252418468,0,0x0,8
tick,0x7ffdc994fb34,252434140,0,0x0,8
tick,0x7ffdc994fb34,252449523,0,0x0,8
tick,0x7ffdc994fb34,252464890,0,0x0,8
tick,0x7ffdc994fb34,252480678,0,0x0,8
tick,0x7ffdc994fb34,252496177,0,0x0,8
tick,0x7ffdc994fb34,252511827,0,0x0,8
tick,0x7ffdc994fb34,252527393,0,0x0,8
tick,0x7ffdc994fb34,252543243,0,0x0,8
tick,0x7ffdc994fb34,252558607,0,0x0,8
tick,0x7ffdc994fb34,252574379,0,0x0,8
tick,0x7ffdc994fb34,252589558,0,0x0,8
tick,0x7ffdc994fb34,252605445,0,0x0,8
tick,0x7ffdc994fb34,252620860,0,0x0,8
tick,0x7ffdc994fb34,252636872,0,0x0,8
tick,0x7ffdc994fb34,252651797,0,0x0,8
tick,0x7ffdc994fb34,252668064,0,0x0,8
tick,0x7ffdc994fb34,252683798,0,0x0,8
tick,0x7ffdc994fb34,252698998,0,0x0,8
tick,0x7ffdc994fb34,252714093,0,0x0,8
tick,0x7ffdc994fb34,252729940,0,0x0,8
tick,0x7ffdc994fb34,252745362,0,0x0,8
tick,0x7ffdc994fb34,252761217,0,0x0,8
tick,0x7ffdc994fb34,252775611,0,0x0,8
tick,0x7ffdc994fb34,252791347,0,0x0,8
tick,0x7ffdc994fb34,252807510,0,0x0,8
tick,0x7ffdc994fb34,252823197,0,0x0,8
tick,0x7ffdc994fb34,252838655,0,0x0,8
tick,0x7ffdc994fb34,252854170,0,0x0,8
tick,0x7ffdc994fb34,252869911,0,0x0,8
tick,0x7ffdc994fb34,252885454,0,0x0,8
tick,0x7ffdc994fb34,252901520,0,0x0,8
tick,0x7ffdc994fb34,252916901,0,0x0,8
tick,0x7ffdc994fb34,252932619,0,0x0,8
tick,0x7ffdc994fb34,252947947,0,0x0,8
tick,0x7ffdc994fb34,252963494,0,0x0,8
tick,0x7ffdc994fb34,252979270,0,0x0,8
tick,0x7ffdc994fb34,252994435,0,0x0,8
tick,0x7ffdc994fb34,253009534,0,0x0,8
tick,0x7ffdc994fb34,253024839,0,0x0,8
tick,0x7ffdc994fb34,253040464,0,0x0,8
tick,0x7ffdc994fb34,253056127,0,0x0,8
tick,0x7ffdc994fb34,253071248,0,0x0,8
tick,0x7ffdc994fb34,253086950,0,0x0,8
tick,0x7ffdc994fb34,253103195,0,0x0,8
tick,0x7ffdc994fb34,253118900,0,0x0,8
tick,0x7ffdc994fb34,253134655,0,0x0,8
tick,0x7ffdc994fb34,253150697,0,0x0,8
tick,0x7ffdc994fb34,253166089,0,0x0,8
tick,0x7ffdc994fb34,253181349,0,0x0,8
tick,0x7ffdc994fb34,253196864,0,0x0,8
tick,0x7ffdc994fb34,253212301,0,0x0,8
tick,0x7ffdc994fb34,253228034,0,0x0,8
tick,0x7ffdc994fb34,253243200,0,0x0,8
tick,0x7ffdc994fb34,253259188,0,0x0,8
tick,0x7ffdc994fb34,253274359,0,0x0,8
tick,0x7ffdc994fb34,253290010,0,0x0,8
tick,0x7ffdc994fb34,253305447,0,0x0,8
tick,0x7ffdc994fb34,253321581,0,0x0,8
tick,0x7ffdc994fb34,253337587,0,0x0,8
tick,0x7ffdc994fb34,253353158,0,0x0,8
tick,0x7ffdc994fb34,253368981,0,0x0,8
tick,0x7ffdc994fb34,253384421,0,0x0,8
tick,0x7ffdc994fb34,253399714,0,0x0,8
tick,0x7ffdc994fb34,253415119,0,0x0,8
tick,0x7ffdc994fb34,253430811,0,0x0,8
tick,0x7ffdc994fb34,253446250,0,0x0,8
tick,0x7ffdc994fb34,253461861,0,0x0,8
tick,0x7ffdc994fb34,253477164,0,0x0,8
tick,0x7ffdc994fb34,253492949,0,0x0,8
tick,0x7ffdc994fb34,253508540,0,0x0,8
tick,0x7ffdc994fb34,253523910,0,0x0,8
tick,0x7ffdc994fb34,253539519,0,0x0,8
tick,0x7ffdc994fb34,253554842,0,0x0,8
tick,0x7ffdc994fb34,253570473,0,0x0,8
tick,0x7ffdc994fb34,253586157,0,0x0,8
tick,0x7ffdc994fb34,253601701,0,0x0,8
tick,0x7ffdc994fb34,253617339,0,0x0,8
tick,0x7ffdc994fb34,253633095,0,0x0,8
tick,0x7ffdc994fb34,253648426,0,0x0,8
tick,0x7ffdc994fb34,253663972,0,0x0,8
tick,0x7ffdc994fb34,253679542,0,0x0,8
tick,0x7ffdc994fb34,253694909,0,0x0,8
tick,0x7ffdc994fb34,253710347,0,0x0,8
tick,0x7ffdc994fb34,253725888,0,0x0,8
tick,0x7ffdc994fb34,253741451,0,0x0,8
tick,0x7ffdc994fb34,253756863,0,0x0,8
tick,0x7ffdc994fb34,253772093,0,0x0,8
tick,0x7ffdc994fb34,253787553,0,0x0,8
tick,0x7ffdc994fb34,253803217,0,0x0,8
tick,0x7ffdc994fb34,253818778,0,0x0,8
tick,0x7ffdc994fb34,253834153,0,0x0,8
tick,0x7ffdc994fb34,253849916,0,0x0,8
tick,0x7ffdc994fb34,253865618,0,0x0,8
tick,0x7ffdc994fb34,253880916,0,0x0,8
tick,0x7ffdc994fb34,253896675,0,0x0,8
tick,0x7ffdc994fb34,253912219,0,0x0,8
tick,0x7ffdc994fb34,253927653,0,0x0,8
tick,0x7ffdc994fb34,253943513,0,0x0,8
tick,0x7ffdc994fb34,253959153,0,0x0,8
tick,0x7ffdc994fb34,253974724,0,0x0,8
tick,0x7ffdc994fb34,253989799,0,0x0,8
tick,0x7ffdc994fb34,254005695,0,0x0,8
tick,0x7ffdc994fb34,254021373,0,0x0,8
tick,0x7ffdc994fb34,254037128,0,0x0,8
tick,0x7ffdc994fb34,254052550,0,0x0,8
tick,0x7ffdc994fb34,254068550,0,0x0,8
tick,0x7ffdc994fb34,254083608,0,0x0,8
tick,0x7ffdc994fb34,254098951,0,0x0,8
tick,0x7ffdc994fb34,254114397,0,0x0,8
tick,0x7ffdc994fb34,254129833,0,0x0,8
tick,0x7ffdc994fb34,254145459,0,0x0,8
tick,0x7ffdc994fb34,254161164,0,0x0,8
tick,0x7ffdc994fb34,254176507,0,0x0,8
tick,0x7ffdc994fb34,254192141,0,0x0,8
tick,0x7ffdc994fb34,254207326,0,0x0,8
tick,0x7ffdc994fb34,254222820,0,0x0,8
tick,0x7ffdc994fb34,254238579,0,0x0,8
tick,0x7ffdc994fb34,254253814,0,0x0,8
tick,0x7ffdc994fb34,254269686,0,0x0,8
tick,0x7ffdc994fb34,254285593,0,0x0,8
tick,0x7ffdc994fb34,254301222,0,0x0,8
tick,0x7ffdc994fb34,254316820,0,0x0,8
tick,0x7ffdc994fb34,254332078,0,0x0,8
tick,0x7ffdc994fb34,254347769,0,0x0,8
tick,0x7ffdc994fb34,254363652,0,0x0,8
tick,0x7ffdc994fb34,254379972,0,0x0,8
tick,0x7ffdc994fb34,254395331,0,0x0,8
tick,0x7ffdc994fb34,254410958,0,0x0,8
tick,0x7ffdc994fb34,254426590,0,0x0,8
tick,0x7ffdc994fb34,254442195,0,0x0,8
tick,0x7ffdc994fb34,254457740,0,0x0,8
tick,0x7ffdc994fb34,254473821,0,0x0,8
tick,0x7ffdc994fb34,254489775,0,0x0,8
tick,0x7ffdc994fb34,254505709,0,0x0,8
tick,0x7ffdc994fb34,254521939,0,0x0,8
tick,0x7ffdc994fb34,254537952,0,0x0,8
tick,0x7ffdc994fb34,254553070,0,0x0,8
tick,0x7ffdc994fb34,254568784,0,0x0,8
tick,0x7ffdc994fb34,254584181,0,0x0,8
tick,0x7ffdc994fb34,254599859,0,0x0,8
tick,0x7ffdc994fb34,254615754,0,0x0,8
tick,0x7ffdc994fb34,254631805,0,0x0,8
tick,0x7ffdc994fb34,254646870,0,0x0,8
tick,0x7ffdc994fb34,254662890,0,0x0,8
tick,0x7ffdc994fb34,254678611,0,0x0,8
tick,0x7ffdc994fb34,254694386,0,0x0,8
tick,0x7ffdc994fb34,254709789,0,0x0,8
tick,0x7ffdc994fb34,254725609,0,0x0,8
tick,0x7ffdc994fb34,254741630,0,0x0,8
tick,0x7ffdc994fb34,254757794,0,0x0,8
tick,0x7ffdc994fb34,254772857,0,0x0,8
tick,0x7ffdc994fb34,254788445,0,0x0,8
tick,0x7ffdc994fb34,254803773,0,0x0,8
tick,0x7ffdc994fb34,254819344,0,0x0,8
tick,0x7ffdc994fb34,254834884,0,0x0,8
tick,0x7ffdc994fb34,254850425,0,0x0,8
tick,0x7ffdc994fb34,254865983,0,0x0,8
tick,0x7ffdc994fb34,254881748,0,0x0,8
tick,0x7ffdc994fb34,254897111,0,0x0,8
tick,0x7ffdc994fb34,254913052,0,0x0,8
tick,0x7ffdc994fb34,254928304,0,0x0,8
tick,0x7ffdc994fb34,254943737,0,0x0,8
tick,0x7ffdc994fb34,254959486,0,0x0,8
tick,0x7ffdc994fb34,254974769,0,0x0,8
tick,0x7ffdc994fb34,254990281,0,0x0,8
tick,0x7ffdc994fb34,255005766,0,0x0,8
tick,0x7ffdc994fb34,255021677,0,0x0,8
tick,0x7ffdc994fb34,255037403,0,0x0,8
tick,0x7ffdc994fb34,255053202,0,0x0,8
tick,0x7ffdc994fb34,255068416,0,0x0,8
tick,0x7ffdc994fb34,255083963,0,0x0,8
tick,0x7ffdc994fb34,255099464,0,0x0,8
tick,0x7ffdc994fb34,255114524,0,0x0,8
tick,0x7ffdc994fb34,255130170,0,0x0,8
tick,0x7ffdc994fb34,255145273,0,0x0,8
tick,0x7ffdc994fb34,255161098,0,0x0,8
tick,0x7ffdc994fb34,255176269,0,0x0,8
tick,0x7ffdc994fb34,255191926,0,0x0,8
tick,0x7ffdc994fb34,255207247,0,0x0,8
tick,0x7ffdc994fb34,255222605,0,0x0,8
tick,0x7ffdc994fb34,255238453,0,0x0,8
tick,0x7ffdc994fb34,255253903,0,0x0,8
tick,0x7ffdc994fb34,255269416,0,0x0,8
tick,0x7ffdc994fb34,255285027,0,0x0,8
tick,0x7ffdc994fb34,255300673,0,0x0,8
tick,0x7ffdc994fb34,255316250,0,0x0,8
tick,0x7ffdc994fb34,255331943,0,0x0,8
tick,0x7ffdc994fb34,255347239,0,0x0,8
tick,0x7ffdc994fb34,255363063,0,0x0,8
tick,0x7ffdc994fb34,255378496,0,0x0,8
tick,0x7ffdc994fb34,255394468,0,0x0,8
tick,0x7ffdc994fb34,255410584,0,0x0,8
tick,0x7ffdc994fb34,255425973,0,0x0,8
tick,0x7ffdc994fb34,255441612,0,0x0,8
tick,0x7ffdc994fb34,255457055,0,0x0,8
tick,0x7ffdc994fb34,255472607,0,0x0,8
tick,0x7ffdc994fb34,255488308,0,0x0,8
tick,0x7ffdc994fb34,255504170,0,0x0,8
tick,0x7ffdc994fb34,255519804,0,0x0,8
tick,0x7ffdc994fb34,255535988,0,0x0,8
tick,0x7ffdc994fb34,255551375,0,0x0,8
tick,0x7ffdc994fb34,255566677,0,0x0,8
tick,0x7ffdc994fb34,255582493,0,0x0,8
tick,0x7ffdc994fb34,255597737,0,0x0,8
tick,0x7ffdc994fb34,255613088,0,0x0,8
tick,0x7ffdc994fb34,255628881,0,0x0,8
tick,0x7ffdc994fb34,255644317,0,0x0,8
tick,0x7ffdc994fb34,255659836,0,0x0,8
tick,0x7ffdc994fb34,255675587,0,0x0,8
tick,0x7ffdc994fb34,255691000,0,0x0,8
tick,0x7ffdc994fb34,255706431,0,0x0,8
tick,0x7ffdc994fb34,255721740,0,0x0,8
tick,0x7ffdc994fb34,255737697,0,0x0,8
tick,0x7ffdc994fb34,255752990,0,0x0,8
tick,0x7ffdc994fb34,255768923,0,0x0,8
tick,0x7ffdc994fb34,255785094,0,0x0,8
tick,0x7ffdc994fb34,255800536,0,0x0,8
tick,0x7ffdc994fb34,255816083,0,0x0,8
tick,0x7ffdc994fb34,255832208,0,0x0,8
tick,0x7ffdc994fb34,255848529,0,0x0,8
tick,0x7ffdc994fb34,255864323,0,0x0,8
tick,0x7ffdc994fb34,255880244,0,0x0,8
tick,0x7ffdc994fb34,255895466,0,0x0,8
tick,0x7ffdc994fb34,255911136,0,0x0,8
tick,0x7ffdc994fb34,255926310,0,0x0,8
tick,0x7ffdc994fb34,255941912,0,0x0,8
tick,0x7ffdc994fb34,255957562,0,0x0,8
tick,0x7ffdc994fb34,255973077,0,0x0,8
tick,0x7ffdc994fb34,255988980,0,0x0,8
tick,0x7ffdc994fb34,256004213,0,0x0,8
tick,0x7ffdc994fb34,256019710,0,0x0,8
tick,0x7ffdc994fb34,256035276,0,0x0,8
tick,0x7ffdc994fb34,256050903,0,0x0,8
tick,0x7ffdc994fb34,256066535,0,0x0,8
tick,0x7ffdc994fb34,256081682,0,0x0,8
tick,0x7ffdc994fb34,256097450,0,0x0,8
tick,0x7ffdc994fb34,256112326,0,0x0,8
tick,0x7ffdc994fb34,256128070,0,0x0,8
tick,0x7ffdc994fb34,256143173,0,0x0,8
tick,0x7ffdc994fb34,256158388,0,0x0,8
tick,0x7ffdc994fb34,256173670,0,0x0,8
tick,0x7ffdc994fb34,256189708,0,0x0,8
tick,0x7ffdc994fb34,256204917,0,0x0,8
tick,0x7ffdc994fb34,256220339,0,0x0,8
tick,0x7ffdc994fb34,256236040,0,0x0,8
tick,0x7ffdc994fb34,256251354,0,0x0,8
tick,0x7ffdc994fb34,256267380,0,0x0,8
tick,0x7ffdc994fb34,256283170,0,0x0,8
tick,0x7ffdc994fb34,256298791,0,0x0,8
tick,0x7ffdc994fb34,256314207,0,0x0,8
tick,0x7ffdc994fb34,256329851,0,0x0,8
tick,0x7ffdc994fb34,256345488,0,0x0,8
tick,0x7ffdc994fb34,256360952,0,0x0,8
tick,0x7ffdc994fb34,256376205,0,0x0,8
tick,0x7ffdc994fb34,256391953,0,0x0,8
tick,0x7ffdc994fb34,256407316,0,0x0,8
tick,0x7ffdc994fb34,256423705,0,0x0,8
tick,0x7ffdc994fb34,256439034,0,0x0,8
tick,0x7ffdc994fb34,256454680,0,0x0,8
tick,0x7ffdc994fb34,256470275,0,0x0,8
tick,0x7ffdc994fb34,256485634,0,0x0,8
tick,0x7ffdc994fb34,256501655,0,0x0,8
tick,0x7ffdc994fb34,256517052,0,0x0,8
tick,0x7ffdc994fb34,256531566,0,0x0,8
tick,0x7ffdc994fb34,256547459,0,0x0,8
tick,0x7ffdc994fb34,256562057,0,0x0,8
tick,0x7ffdc994fb34,256577465,0,0x0,8
tick,0x7ffdc994fb34,256592923,0,0x0,8
tick,0x7ffdc994fb34,256609285,0,0x0,8
tick,0x7ffdc994fb34,256624537,0,0x0,8
tick,0x7ffdc994fb34,256640340,0,0x0,8
tick,0x7ffdc994fb34,256655970,0,0x0,8
tick,0x7ffdc994fb34,256671410,0,0x0,8
tick,0x7ffdc994fb34,256686853,0,0x0,8
tick,0x7ffdc994fb34,256702339,0,0x0,8
tick,0x7ffdc994fb34,256718438,0,0x0,8
tick,0x7ffdc994fb34,256734585,0,0x0,8
tick,0x7ffdc994fb34,256750003,0,0x0,8
tick,0x7ffdc994fb34,256765461,0,0x0,8
tick,0x7ffdc994fb34,256781770,0,0x0,8
tick,0x7ffdc994fb34,256797611,0,0x0,8
tick,0x7ffdc994fb34,256813263,0,0x0,8
tick,0x7ffdc994fb34,256828935,0,0x0,8
tick,0x7ffdc994fb34,256844212,0,0x0,8
tick,0x7ffdc994fb34,256860650,0,0x0,8
tick,0x7ffdc994fb34,256876056,0,0x0,8
tick,0x7ffdc994fb34,256891721,0,0x0,8
tick,0x7ffdc994fb34,256907154,0,0x0,8
tick,0x7ffdc994fb34,256922923,0,0x0,8
tick,0x7ffdc994fb34,256938480,0,0x0,8
tick,0x7ffdc994fb34,256954261,0,0x0,8
tick,0x7ffdc994fb34,256969833,0,0x0,8
tick,0x7ffdc994fb34,256985653,0,0x0,8
tick,0x7ffdc994fb34,257001020,0,0x0,8
tick,0x7ffdc994fb34,257016846,0,0x0,8
tick,0x7ffdc994fb34,257032439,0,0x0,8
tick,0x7ffdc994fb34,257048302,0,0x0,8
tick,0x7ffdc994fb34,257063275,0,0x0,8
tick,0x7ffdc994fb34,257078951,0,0x0,8
tick,0x7ffdc994fb34,257094402,0,0x0,8
tick,0x7ffdc994fb34,257110110,0,0x0,8
tick,0x7ffdc994fb34,257126238,0,0x0,8
tick,0x7ffdc994fb34,257142179,0,0x0,8
tick,0x7ffdc994fb34,257158118,0,0x0,8
tick,0x7ffdc994fb34,257173002,0,0x0,8
tick,0x7ffdc994fb34,257188700,0,0x0,8
tick,0x7ffdc994fb34,257204017,0,0x0,8
tick,0x7ffdc994fb34,257219721,0,0x0,8
tick,0x7ffdc994fb34,257235367,0,0x0,8
tick,0x7ffdc994fb34,257250725,0,0x0,8
tick,0x7ffdc994fb34,257266667,0,0x0,8
tick,0x7ffdc994fb34,257282137,0,0x0,8
tick,0x7ffdc994fb34,257297828,0,0x0,8
tick,0x7ffdc994fb34,257313641,0,0x0,8
tick,0x7ffdc994fb34,257329666,0,0x0,8
tick,0x7ffdc994fb34,257345682,0,0x0,8
tick,0x7ffdc994fb34,257360966,0,0x0,8
tick,0x7ffdc994fb34,257376658,0,0x0,8
tick,0x7ffdc994fb34,257391698,0,0x0,8
tick,0x7ffdc994fb34,257407604,0,0x0,8
tick,0x7ffdc994fb34,257422821,0,0x0,8
tick,0x7ffdc994fb34,257437524,0,0x0,8
tick,0x7ffdc994fb34,257453272,0,0x0,8
tick,0x7ffdc994fb34,257468901,0,0x0,8
tick,0x7ffdc994fb34,257484085,0,0x0,8
tick,0x7ffdc994fb34,257499742,0,0x0,8
tick,0x7ffdc994fb34,257514700,0,0x0,8
tick,0x7ffdc994fb34,257530528,0,0x0,8
tick,0x7ffdc994fb34,257546175,0,0x0,8
tick,0x7ffdc994fb34,257561720,0,0x0,8
tick,0x7ffdc994fb34,257577245,0,0x0,8
tick,0x7ffdc994fb34,257592849,0,0x0,8
tick,0x7ffdc994fb34,257608427,0,0x0,8
tick,0x7ffdc994fb34,257623510,0,0x0,8
tick,0x7ffdc994fb34,257638894,0,0x0,8
tick,0x7ffdc994fb34,257654186,0,0x0,8
tick,0x7ffdc994fb34,257669367,0,0x0,8
tick,0x7ffdc994fb34,257684973,0,0x0,8
tick,0x7ffdc994fb34,257700374,0,0x0,8
tick,0x7ffdc994fb34,257716085,0,0x0,8
tick,0x7ffdc994fb34,257731648,0,0x0,8
tick,0x7ffdc994fb34,257747121,0,0x0,8
tick,0x7ffdc994fb34,257762886,0,0x0,8
tick,0x7ffdc994fb34,257778483,0,0x0,8
tick,0x7ffdc994fb34,257793682,0,0x0,8
tick,0x7ffdc994fb34,257809493,0,0x0,8
tick,0x7ffdc994fb34,257824547,0,0x0,8
tick,0x7ffdc994fb34,257839819,0,0x0,8
tick,0x7ffdc994fb34,257855796,0,0x0,8
tick,0x7ffdc994fb34,257871174,0,0x0,8
tick,0x7ffdc994fb34,257886867,0,0x0,8
tick,0x7ffdc994fb34,257901959,0,0x0,8
tick,0x7ffdc994fb34,257917941,0,0x0,8
tick,0x7ffdc994fb34,257933885,0,0x0,8
tick,0x7ffdc994fb34,257948811,0,0x0,8
tick,0x7ffdc994fb34,257964618,0,0x0,8
tick,0x7ffdc994fb34,257980145,0,0x0,8
tick,0x7ffdc994fb34,257995617,0,0x0,8
tick,0x7ffdc994fb34,258011163,0,0x0,8
tick,0x7ffdc994fb34,258026857,0,0x0,8
tick,0x7ffdc994fb34,258042356,0,0x0,8
tick,0x7ffdc994fb34,258058292,0,0x0,8
tick,0x7ffdc994fb34,258073953,0,0x0,8
tick,0x7ffdc994fb34,258089496,0,0x0,8
tick,0x7ffdc994fb34,258104880,0,0x0,8
tick,0x7ffdc994fb34,258120405,0,0x0,8
tick,0x7ffdc994fb34,258135639,0,0x0,8
tick,0x7ffdc994fb34,258151437,0,0x0,8
tick,0x7ffdc994fb34,258166800,0,0x0,8
tick,0x7ffdc994fb34,258182613,0,0x0,8
tick,0x7ffdc994fb34,258198010,0,0x0,8
tick,0x7ffdc994fb34,258213387,0,0x0,8
tick,0x7ffdc994fb34,258229157,0,0x0,8
tick,0x7ffdc994fb34,258244868,0,0x0,8
tick,0x7ffdc994fb34,258260993,0,0x0,8
tick,0x7ffdc994fb34,258276881,0,0x0,8
tick,0x7ffdc994fb34,258292551,0,0x0,8
tick,0x7ffdc994fb34,258307566,0,0x0,8
tick,0x7ffdc994fb34,258323367,0,0x0,8
tick,0x7ffdc994fb34,258338762,0,0x0,8
tick,0x7ffdc994fb34,258353959,0,0x0,8
tick,0x7ffdc994fb34,258369658,0,0x0,8
tick,0x7ffdc994fb34,258385052,0,0x0,8
tick,0x7ffdc994fb34,258400720,0,0x0,8
tick,0x7ffdc994fb34,258416103,0,0x0,8
tick,0x7ffdc994fb34,258431874,0,0x0,8
tick,0x7ffdc994fb34,258447228,0,0x0,8
tick,0x7ffdc994fb34,258463087,0,0x0,8
tick,0x7ffdc994fb34,258478855,0,0x0,8
tick,0x7ffdc994fb34,258494605,0,0x0,8
tick,0x7ffdc994fb34,258510021,0,0x0,8
tick,0x7ffdc994fb34,258525511,0,0x0,8
tick,0x7ffdc994fb34,258541291,0,0x0,8
tick,0x7ffdc994fb34,258556302,0,0x0,8
tick,0x7ffdc994fb34,258571957,0,0x0,8
tick,0x7ffdc994fb34,258587606,0,0x0,8
tick,0x7ffdc994fb34,258602968,0,0x0,8
tick,0x7ffdc994fb34,258618773,0,0x0,8
tick,0x7ffdc994fb34,258634257,0,0x0,8
tick,0x7ffdc994fb34,258649850,0,0x0,8
tick,0x7ffdc994fb34,258665773,0,0x0,8
tick,0x7ffdc994fb34,258681003,0,0x0,8
tick,0x7ffdc994fb34,258696721,0,0x0,8
tick,0x7ffdc994fb34,258712345,0,0x0,8
tick,0x7ffdc994fb34,258728035,0,0x0,8
tick,0x7ffdc994fb34,258743210,0,0x0,8
tick,0x7ffdc994fb34,258758282,0,0x0,8
tick,0x7ffdc994fb34,258773306,0,0x0,8
tick,0x7ffdc994fb34,258789232,0,0x0,8
tick,0x7ffdc994fb34,258805054,0,0x0,8
tick,0x7ffdc994fb34,258820529,0,0x0,8
tick,0x7ffdc994fb34,258836087,0,0x0,8
tick,0x7ffdc994fb34,258851631,0,0x0,8
tick,0x7ffdc994fb34,258867199,0,0x0,8
tick,0x7ffdc994fb34,258882557,0,0x0,8
tick,0x7ffdc994fb34,258898569,0,0x0,8
tick,0x7ffdc994fb34,258913928,0,0x0,8
tick,0x7ffdc994fb34,258929685,0,0x0,8
tick,0x7ffdc994fb34,258945181,0,0x0,8
tick,0x7ffdc994fb34,258961164,0,0x0,8
tick,0x7ffdc994fb34,258976923,0,0x0,8
tick,0x7ffdc994fb34,258992008,0,0x0,8
tick,0x7ffdc994fb34,259007422,0,0x0,8
tick,0x7ffdc994fb34,259023054,0,0x0,8
tick,0x7ffdc994fb34,259038913,0,0x0,8
tick,0x7ffdc994fb34,259054509,0,0x0,8
tick,0x7ffdc994fb34,259069918,0,0x0,8
tick,0x7ffdc994fb34,259085155,0,0x0,8
tick,0x7ffdc994fb34,259100594,0,0x0,8
tick,0x7ffdc994fb34,259115943,0,0x0,8
tick,0x7ffdc994fb34,259131379,0,0x0,8
tick,0x7ffdc994fb34,259147360,0,0x0,8
tick,0x7ffdc994fb34,259162804,0,0x0,8
tick,0x7ffdc994fb34,259177914,0,0x0,8
tick,0x7ffdc994fb34,259193161,0,0x0,8
tick,0x7ffdc994fb34,259209054,0,0x0,8
tick,0x7ffdc994fb34,259224354,0,0x0,8
tick,0x7ffdc994fb34,259240144,0,0x0,8
tick,0x7ffdc994fb34,259255480,0,0x0,8
tick,0x7ffdc994fb34,259271482,0,0x0,8
tick,0x7ffdc994fb34,259286790,0,0x0,8
tick,0x7ffdc994fb34,259303038,0,0x0,8
tick,0x7ffdc994fb34,259318601,0,0x0,8
tick,0x7ffdc994fb34,259333762,0,0x0,8
tick,0x7ffdc994fb34,259349502,0,0x0,8
tick,0x7ffdc994fb34,259364937,0,0x0,8
tick,0x7ffdc994fb34,259380561,0,0x0,8
tick,0x7ffdc994fb34,259395727,0,0x0,8
tick,0x7ffdc994fb34,259411762,0,0x0,8
tick,0x7ffdc994fb34,259427243,0,0x0,8
tick,0x7ffdc994fb34,259442940,0,0x0,8
tick,0x7ffdc994fb34,259458520,0,0x0,8
tick,0x7ffdc994fb34,259473818,0,0x0,8
tick,0x7ffdc994fb34,259489717,0,0x0,8
tick,0x7ffdc994fb34,259505535,0,0x0,8
tick,0x7ffdc994fb34,259520791,0,0x0,8
tick,0x7ffdc994fb34,259536586,0,0x0,8
tick,0x7ffdc994fb34,259552018,0,0x0,8
tick,0x7ffdc994fb34,259568120,0,0x0,8
tick,0x7ffdc994fb34,259583568,0,0x0,8
tick,0x7ffdc994fb34,259599531,0,0x0,8
tick,0x7ffdc994fb34,259614864,0,0x0,8
tick,0x7ffdc994fb34,259629963,0,0x0,8
tick,0x7ffdc994fb34,259645817,0,0x0,8
tick,0x7ffdc994fb34,259661360,0,0x0,8
tick,0x7ffdc994fb34,259676828,0,0x0,8
tick,0x7ffdc994fb34,259691932,0,0x0,8
tick,0x7ffdc994fb34,259707834,0,0x0,8
tick,0x7ffdc994fb34,259723998,0,0x0,8
tick,0x7ffdc994fb34,259739329,0,0x0,8
tick,0x7ffdc994fb34,259754707,0,0x0,8
tick,0x7ffdc994fb34,259770177,0,0x0,8
tick,0x7ffdc994fb34,259786401,0,0x0,8
tick,0x7ffdc994fb34,259802109,0,0x0,8
tick,0x7ffdc994fb34,259817373,0,0x0,8
tick,0x7ffdc994fb34,259832789,0,0x0,8
tick,0x7ffdc994fb34,259848189,0,0x0,8
tick,0x7ffdc994fb34,259863660,0,0x0,8
tick,0x7ffdc994fb34,259879138,0,0x0,8
tick,0x7ffdc994fb34,259894976,0,0x0,8
tick,0x7ffdc994fb34,259910923,0,0x0,8
tick,0x7ffdc994fb34,259926478,0,0x0,8
tick,0x7ffdc994fb34,259941790,0,0x0,8
tick,0x7ffdc994fb34,259957453,0,0x0,8
tick,0x7ffdc994fb34,259972997,0,0x0,8
tick,0x7ffdc994fb34,259988501,0,0x0,8
tick,0x7ffdc994fb34,260004083,0,0x0,8
tick,0x7ffdc994fb34,260020161,0,0x0,8
tick,0x7ffdc994fb34,260034648,0,0x0,8
tick,0x7ffdc994fb34,260050704,0,0x0,8
tick,0x7ffdc994fb34,260065829,0,0x0,8
tick,0x7ffdc994fb34,260081286,0,0x0,8
tick,0x7ffdc994fb34,260096870,0,0x0,8
tick,0x7ffdc994fb34,260112881,0,0x0,8
tick,0x7ffdc994fb34,260128550,0,0x0,8
tick,0x7ffdc994fb34,260143883,0,0x0,8
tick,0x7ffdc994fb34,260159345,0,0x0,8
tick,0x7ffdc994fb34,260174624,0,0x0,8
tick,0x7ffdc994fb34,260189916,0,0x0,8
tick,0x7ffdc994fb34,260205225,0,0x0,8
tick,0x7ffdc994fb34,260220739,0,0x0,8
tick,0x7ffdc994fb34,260235826,0,0x0,8
tick,0x7ffdc994fb34,260251978,0,0x0,8
tick,0x7ffdc994fb34,260268011,0,0x0,8
tick,0x7ffdc994fb34,260283289,0,0x0,8
tick,0x7ffdc994fb34,260299170,0,0x0,8
tick,0x7ffdc994fb34,260314524,0,0x0,8
tick,0x7ffdc994fb34,260330285,0,0x0,8
tick,0x7ffdc994fb34,260346051,0,0x0,8
tick,0x7ffdc994fb34,260362211,0,0x0,8
tick,0x7ffdc994fb34,260378109,0,0x0,8
tick,0x7ffdc994fb34,260393707,0,0x0,8
tick,0x7ffdc994fb34,260409087,0,0x0,8
tick,0x7ffdc994fb34,260424510,0,0x0,8
tick,0x7ffdc994fb34,260439420,0,0x0,8
tick,0x7ffdc994fb34,260455459,0,0x0,8
tick,0x7ffdc994fb34,260471857,0,0x0,8
tick,0x7ffdc994fb34,260487330,0,0x0,8
tick,0x7ffdc994fb34,260502387,0,0x0,8
tick,0x7ffdc994fb34,260517510,0,0x0,8
tick,0x7ffdc994fb34,260532662,0,0x0,8
tick,0x7ffdc994fb34,260548403,0,0x0,8
tick,0x7ffdc994fb34,260564109,0,0x0,8
tick,0x7ffdc994fb34,260579551,0,0x0,8
tick,0x7ffdc994fb34,260594887,0,0x0,8
tick,0x7ffdc994fb34,260611307,0,0x0,8
tick,0x7ffdc994fb34,260627052,0,0x0,8
tick,0x7ffdc994fb34,260642172,0,0x0,8
tick,0x7ffdc994fb34,260657966,0,0x0,8
tick,0x7ffdc994fb34,260672477,0,0x0,8
tick,0x7ffdc994fb34,260688090,0,0x0,8
tick,0x7ffdc994fb34,260703476,0,0x0,8
tick,0x7ffdc994fb34,260719174,0,0x0,8
tick,0x7ffdc994fb34,260734321,0,0x0,8
tick,0x7ffdc994fb34,260749927,0,0x0,8
tick,0x7ffdc994fb34,260765351,0,0x0,8
tick,0x7ffdc994fb34,260781163,0,0x0,8
tick,0x7ffdc994fb34,260796740,0,0x0,8
tick,0x7ffdc994fb34,260812149,0,0x0,8
tick,0x7ffdc994fb34,260827765,0,0x0,8
tick,0x7ffdc994fb34,260843255,0,0x0,8
tick,0x7ffdc994fb34,260858946,0,0x0,8
tick,0x7ffdc994fb34,260875027,0,0x0,8
tick,0x7ffdc994fb34,260890477,0,0x0,8
tick,0x7ffdc994fb34,260905925,0,0x0,8
tick,0x7ffdc994fb34,260921757,0,0x0,8
tick,0x7ffdc994fb34,260937023,0,0x0,8
tick,0x7ffdc994fb34,260952600,0,0x0,8
tick,0x7ffdc994fb34,260968131,0,0x0,8
tick,0x7ffdc994fb34,260983706,0,0x0,8
tick,0x7ffdc994fb34,260999227,0,0x0,8
tick,0x7ffdc994fb34,261015062,0,0x0,8
tick,0x7ffdc994fb34,261030704,0,0x0,8
tick,0x7ffdc994fb34,261045749,0,0x0,8
tick,0x7ffdc994fb34,261061654,0,0x0,8
tick,0x7ffdc994fb34,261077729,0,0x0,8
tick,0x7ffdc994fb34,261093737,0,0x0,8
tick,0x7ffdc994fb34,261109473,0,0x0,8
tick,0x7ffdc994fb34,261125055,0,0x0,8
tick,0x7ffdc994fb34,261140574,0,0x0,8
tick,0x7ffdc994fb34,261155973,0,0x0,8
tick,0x7ffdc994fb34,261171425,0,0x0,8
tick,0x7ffdc994fb34,261186811,0,0x0,8
tick,0x7ffdc994fb34,261202541,0,0x0,8
tick,0x7ffdc994fb34,261217496,0,0x0,8
tick,0x7ffdc994fb34,261232956,0,0x0,8
tick,0x7ffdc994fb34,261248418,0,0x0,8
tick,0x7ffdc994fb34,261263730,0,0x0,8
tick,0x7ffdc994fb34,261279145,0,0x0,8
tick,0x7ffdc994fb34,261294588,0,0x0,8
tick,0x7ffdc994fb34,261310518,0,0x0,8
tick,0x7ffdc994fb34,261326098,0,0x0,8
tick,0x7ffdc994fb34,261341414,0,0x0,8
tick,0x7ffdc994fb34,261357388,0,0x0,8
tick,0x7ffdc994fb34,261372838,0,0x0,8
tick,0x7ffdc994fb34,261388457,0,0x0,8
tick,0x7ffdc994fb34,261403375,0,0x0,8
tick,0x7ffdc994fb34,261419212,0,0x0,8
tick,0x7ffdc994fb34,261434472,0,0x0,8
tick,0x7ffdc994fb34,261450225,0,0x0,8
tick,0x7ffdc994fb34,261465651,0,0x0,8
tick,0x7ffdc994fb34,261481674,0,0x0,8
tick,0x7ffdc994fb34,261497332,0,0x0,8
tick,0x7ffdc994fb34,261513430,0,0x0,8
tick,0x7ffdc994fb34,261529103,0,0x0,8
tick,0x7ffdc994fb34,261544325,0,0x0,8
tick,0x7ffdc994fb34,261559776,0,0x0,8
tick,0x7ffdc994fb34,261575752,0,0x0,8
tick,0x7ffdc994fb34,261591029,0,0x0,8
tick,0x7ffdc994fb34,261606714,0,0x0,8
tick,0x7ffdc994fb34,261622224,0,0x0,8
tick,0x7ffdc994fb34,261637978,0,0x0,8
tick,0x7ffdc994fb34,261653298,0,0x0,8
tick,0x7ffdc994fb34,261668873,0,0x0,8
tick,0x7ffdc994fb34,261684563,0,0x0,8
tick,0x7ffdc994fb34,261700075,0,0x0,8
tick,0x7ffdc994fb34,261715792,0,0x0,8
tick,0x7ffdc994fb34,261731412,0,0x0,8
tick,0x7ffdc994fb34,261746865,0,0x0,8
tick,0x7ffdc994fb34,261762121,0,0x0,8
tick,0x7ffdc994fb34,261777548,0,0x0,8
tick,0x7ffdc994fb34,261792949,0,0x0,8
tick,0x7ffdc994fb34,261808187,0,0x0,8
tick,0x7ffdc994fb34,261823131,0,0x0,8
tick,0x7ffdc994fb34,261839044,0,0x0,8
tick,0x7ffdc994fb34,261854684,0,0x0,8
tick,0x7ffdc994fb34,261870609,0,0x0,8
tick,0x7ffdc994fb34,261886674,0,0x0,8
tick,0x7ffdc994fb34,261902083,0,0x0,8
tick,0x7ffdc994fb34,261918082,0,0x0,8
tick,0x7ffdc994fb34,261933129,0,0x0,8
tick,0x7ffdc994fb34,261948846,0,0x0,8
tick,0x7ffdc994fb34,261964523,0,0x0,8
tick,0x7ffdc994fb34,261979881,0,0x0,8
tick,0x7ffdc994fb34,261995123,0,0x0,8
tick,0x7ffdc994fb34,262010798,0,0x0,8
tick,0x7ffdc994fb34,262026045,0,0x0,8
tick,0x7ffdc994fb34,262042024,0,0x0,8
tick,0x7ffdc994fb34,262057622,0,0x0,8
tick,0x7ffdc994fb34,262073176,0,0x0,8
tick,0x7ffdc994fb34,262089149,0,0x0,8
tick,0x7ffdc994fb34,262104638,0,0x0,8
tick,0x7ffdc994fb34,262120363,0,0x0,8
tick,0x7ffdc994fb34,262135784,0,0x0,8
tick,0x7ffdc994fb34,262151486,0,0x0,8
tick,0x7ffdc994fb34,262166471,0,0x0,8
tick,0x7ffdc994fb34,262182623,0,0x0,8
tick,0x7ffdc994fb34,262198158,0,0x0,8
tick,0x7ffdc994fb34,262213718,0,0x0,8
tick,0x7ffdc994fb34,262229031,0,0x0,8
tick,0x7ffdc994fb34,262244794,0,0x0,8
tick,0x7ffdc994fb34,262260818,0,0x0,8
tick,0x7ffdc994fb34,262276617,0,0x0,8
tick,0x7ffdc994fb34,262292484,0,0x0,8
tick,0x7ffdc994fb34,262308450,0,0x0,8
tick,0x7ffdc994fb34,262323938,0,0x0,8
tick,0x7ffdc994fb34,262339356,0,0x0,8
tick,0x7ffdc994fb34,262354680,0,0x0,8
tick,0x7ffdc994fb34,262370068,0,0x0,8
tick,0x7ffdc994fb34,262385242,0,0x0,8
tick,0x7ffdc994fb34,262400911,0,0x0,8
tick,0x7ffdc994fb34,262416757,0,0x0,8
tick,0x7ffdc994fb34,262432442,0,0x0,8
tick,0x7ffdc994fb34,262447911,0,0x0,8
tick,0x7ffdc994fb34,262463110,0,0x0,8
tick,0x7ffdc994fb34,262478642,0,0x0,8
tick,0x7ffdc994fb34,262493801,0,0x0,8
tick,0x7ffdc994fb34,262509572,0,0x0,8
tick,0x7ffdc994fb34,262524904,0,0x0,8
tick,0x7ffdc994fb34,262540471,0,0x0,8
tick,0x7ffdc994fb34,262555836,0,0x0,8
tick,0x7ffdc994fb34,262570626,0,0x0,8
tick,0x7ffdc994fb34,262586850,0,0x0,8
tick,0x7ffdc994fb34,262602202,0,0x0,8
tick,0x7ffdc994fb34,262617849,0,0x0,8
tick,0x7ffdc994fb34,262632841,0,0x0,8
tick,0x7ffdc994fb34,262647851,0,0x0,8
tick,0x7ffdc994fb34,262663069,0,0x0,8
tick,0x7ffdc994fb34,262678958,0,0x0,8
tick,0x7ffdc994fb34,262694355,0,0x0,8
tick,0x7ffdc994fb34,262709815,0,0x0,8
tick,0x7ffdc994fb34,262725289,0,0x0,8
tick,0x7ffdc994fb34,262741371,0,0x0,8
tick,0x7ffdc994fb34,262756989,0,0x0,8
tick,0x7ffdc994fb34,262772517,0,0x0,8
tick,0x7ffdc994fb34,262787913,0,0x0,8
tick,0x7ffdc994fb34,262803279,0,0x0,8
tick,0x7ffdc994fb34,262819098,0,0x0,8
tick,0x7ffdc994fb34,262834496,0,0x0,8
tick,0x7ffdc994fb34,262850063,0,0x0,8
tick,0x7ffdc994fb34,262865355,0,0x0,8
tick,0x7ffdc994fb34,262880732,0,0x0,8
tick,0x7ffdc994fb34,262896903,0,0x0,8
tick,0x7ffdc994fb34,262912362,0,0x0,8
tick,0x7ffdc994fb34,262927951,0,0x0,8
tick,0x7ffdc994fb34,262942994,0,0x0,8
tick,0x7ffdc994fb34,262958297,0,0x0,8
tick,0x7ffdc994fb34,262973663,0,0x0,8
tick,0x7ffdc994fb34,262989152,0,0x0,8
tick,0x7ffdc994fb34,263004961,0,0x0,8
tick,0x7ffdc994fb34,263020506,0,0x0,8
tick,0x7ffdc994fb34,263035930,0,0x0,8
tick,0x7ffdc994fb34,263051590,0,0x0,8
tick,0x7ffdc994fb34,263067252,0,0x0,8
tick,0x7ffdc994fb34,263083452,0,0x0,8
tick,0x7ffdc994fb34,263099201,0,0x0,8
tick,0x7ffdc994fb34,263114563,0,0x0,8
tick,0x7ffdc994fb34,263130088,0,0x0,8
tick,0x7ffdc994fb34,263145541,0,0x0,8
tick,0x7ffdc994fb34,263161047,0,0x0,8
tick,0x7ffdc994fb34,263176688,0,0x0,8
tick,0x7ffdc994fb34,263192082,0,0x0,8
tick,0x7ffdc994fb34,263207486,0,0x0,8
tick,0x7ffdc994fb34,263222845,0,0x0,8
tick,0x7ffdc994fb34,263238286,0,0x0,8
tick,0x7ffdc994fb34,263253835,0,0x0,8
tick,0x7ffdc994fb34,263269376,0,0x0,8
tick,0x7ffdc994fb34,263284758,0,0x0,8
tick,0x7ffdc994fb34,263300177,0,0x0,8
tick,0x7ffdc994fb34,263315482,0,0x0,8
tick,0x7ffdc994fb34,263331197,0,0x0,8
tick,0x7ffdc994fb34,263346639,0,0x0,8
tick,0x7ffdc994fb34,263362064,0,0x0,8
tick,0x7ffdc994fb34,263377956,0,0x0,8
tick,0x7ffdc994fb34,263393782,0,0x0,8
tick,0x7ffdc994fb34,263409674,0,0x0,8
tick,0x7ffdc994fb34,263424610,0,0x0,8
tick,0x7ffdc994fb34,263440170,0,0x0,8
tick,0x7ffdc994fb34,263455780,0,0x0,8
tick,0x7ffdc994fb34,263471257,0,0x0,8
tick,0x7ffdc994fb34,263487110,0,0x0,8
tick,0x7ffdc994fb34,263502717,0,0x0,8
tick,0x7ffdc994fb34,263518414,0,0x0,8
tick,0x7ffdc994fb34,263533764,0,0x0,8
tick,0x7ffdc994fb34,263549906,0,0x0,8
tick,0x7ffdc994fb34,263565423,0,0x0,8
tick,0x7ffdc994fb34,263581646,0,0x0,8
tick,0x7ffdc994fb34,263596307,0,0x0,8
tick,0x7ffdc994fb34,263612010,0,0x0,8
tick,0x7ffdc994fb34,263627561,0,0x0,8
tick,0x7ffdc994fb34,263642777,0,0x0,8
tick,0x7ffdc994fb34,263658739,0,0x0,8
tick,0x7ffdc994fb34,263674625,0,0x0,8
tick,0x7ffdc994fb34,263690729,0,0x0,8
tick,0x7ffdc994fb34,263706477,0,0x0,8
tick,0x7ffdc994fb34,263722010,0,0x0,8
tick,0x7ffdc994fb34,263737400,0,0x0,8
tick,0x7ffdc994fb34,263752679,0,0x0,8
tick,0x7ffdc994fb34,263768452,0,0x0,8
tick,0x7ffdc994fb34,263783550,0,0x0,8
tick,0x7ffdc994fb34,263799203,0,0x0,8
tick,0x7ffdc994fb34,263814538,0,0x0,8
tick,0x7ffdc994fb34,263830047,0,0x0,8
tick,0x7ffdc994fb34,263845286,0,0x0,8
tick,0x7ffdc994fb34,263861337,0,0x0,8
tick,0x7ffdc994fb34,263876461,0,0x0,8
tick,0x7ffdc994fb34,263892004,0,0x0,8
tick,0x7ffdc994fb34,263907876,0,0x0,8
tick,0x7ffdc994fb34,263923211,0,0x0,8
tick,0x7ffdc994fb34,263939020,0,0x0,8
tick,0x7ffdc994fb34,263954389,0,0x0,8
tick,0x7ffdc994fb34,263970379,0,0x0,8
tick,0x7ffdc994fb34,263985477,0,0x0,8
tick,0x7ffdc994fb34,264001266,0,0x0,8
tick,0x7ffdc994fb34,264017293,0,0x0,8
tick,0x7ffdc994fb34,264033084,0,0x0,8
tick,0x7ffdc994fb34,264048692,0,0x0,8
tick,0x7ffdc994fb34,264064116,0,0x0,8
tick,0x7ffdc994fb34,264079759,0,0x0,8
tick,0x7ffdc994fb34,264094956,0,0x0,8
tick,0x7ffdc994fb34,264110061,0,0x0,8
tick,0x7ffdc994fb34,264125862,0,0x0,8
tick,0x7ffdc994fb34,264141307,0,0x0,8
tick,0x7ffdc994fb34,264156942,0,0x0,8
tick,0x7ffdc994fb34,264172321,0,0x0,8
tick,0x7ffdc994fb34,264188098,0,0x0,8
tick,0x7ffdc994fb34,264203195,0,0x0,8
tick,0x7ffdc994fb34,264219029,0,0x0,8
tick,0x7ffdc994fb34,264234048,0,0x0,8
tick,0x7ffdc994fb34,264249792,0,0x0,8
tick,0x7ffdc994fb34,264265343,0,0x0,8
tick,0x7ffdc994fb34,264281220,0,0x0,8
tick,0x7ffdc994fb34,264296508,0,0x0,8
tick,0x7ffdc994fb34,264312309,0,0x0,8
tick,0x7ffdc994fb34,264327620,0,0x0,8
tick,0x7ffdc994fb34,264343622,0,0x0,8
tick,0x7ffdc994fb34,264359212,0,0x0,8
tick,0x7ffdc994fb34,264374339,0,0x0,8
tick,0x7ffdc994fb34,264390072,0,0x0,8
tick,0x7ffdc994fb34,264405425,0,0x0,8
tick,0x7ffdc994fb34,264420602,0,0x0,8
tick,0x7ffdc994fb34,264436126,0,0x0,8
tick,0x7ffdc994fb34,264451984,0,0x0,8
tick,0x7ffdc994fb34,264467294,0,0x0,8
tick,0x7ffdc994fb34,264482760,0,0x0,8
tick,0x7ffdc994fb34,264498315,0,0x0,8
tick,0x7ffdc994fb34,264513562,0,0x0,8
tick,0x7ffdc994fb34,264529350,0,0x0,8
tick,0x7ffdc994fb34,264544906,0,0x0,8
tick,0x7ffdc994fb34,264560514,0,0x0,8
tick,0x7ffdc994fb34,264575915,0,0x0,8
tick,0x7ffdc994fb34,264591480,0,0x0,8
tick,0x7ffdc994fb34,264606730,0,0x0,8
tick,0x7ffdc994fb34,264621949,0,0x0,8
tick,0x7ffdc994fb34,264637691,0,0x0,8
tick,0x7ffdc994fb34,264653081,0,0x0,8
tick,0x7ffdc994fb34,264668805,0,0x0,8
tick,0x7ffdc994fb34,264684400,0,0x0,8
tick,0x7ffdc994fb34,264700233,0,0x0,8
tick,0x7ffdc994fb34,264715496,0,0x0,8
tick,0x7ffdc994fb34,264731068,0,0x0,8
tick,0x7ffdc994fb34,264746394,0,0x0,8
tick,0x7ffdc994fb34,264761983,0,0x0,8
tick,0x7ffdc994fb34,264777838,0,0x0,8
tick,0x7ffdc994fb34,264793547,0,0x0,8
tick,0x7ffdc994fb34,264809866,0,0x0,8
tick,0x7ffdc994fb34,264825730,0,0x0,8
tick,0x7ffdc994fb34,264840707,0,0x0,8
tick,0x7ffdc994fb34,264856838,0,0x0,8
tick,0x7ffdc994fb34,264872136,0,0x0,8
tick,0x7ffdc994fb34,264887608,0,0x0,8
tick,0x7ffdc994fb34,264902584,0,0x0,8
tick,0x7ffdc994fb34,264918746,0,0x0,8
tick,0x7ffdc994fb34,264933662,0,0x0,8
tick,0x7ffdc994fb34,264949167,0,0x0,8
tick,0x7ffdc994fb34,264964444,0,0x0,8
tick,0x7ffdc994fb34,264980113,0,0x0,8
tick,0x7ffdc994fb34,264995322,0,0x0,8
tick,0x7ffdc994fb34,265011384,0,0x0,8
tick,0x7ffdc994fb34,265027345,0,0x0,8
tick,0x7ffdc994fb34,265043410,0,0x0,8
tick,0x7ffdc994fb34,265059009,0,0x0,8
tick,0x7ffdc994fb34,265075210,0,0x0,8
tick,0x7ffdc994fb34,265090906,0,0x0,8
tick,0x7ffdc994fb34,265106533,0,0x0,8
tick,0x7ffdc994fb34,265122033,0,0x0,8
tick,0x7ffdc994fb34,265137457,0,0x0,8
tick,0x7ffdc994fb34,265153095,0,0x0,8
tick,0x7ffdc994fb34,265169052,0,0x0,8
tick,0x7ffdc994fb34,265184124,0,0x0,8
tick,0x7ffdc994fb34,265199295,0,0x0,8
tick,0x7ffdc994fb34,265215094,0,0x0,8
tick,0x7ffdc994fb34,265230517,0,0x0,8
tick,0x7ffdc994fb34,265246046,0,0x0,8
tick,0x7ffdc994fb34,265261389,0,0x0,8
tick,0x7ffdc994fb34,265276981,0,0x0,8
tick,0x7ffdc994fb34,265292281,0,0x0,8
tick,0x7ffdc994fb34,265307904,0,0x0,8
tick,0x7ffdc994fb34,265323734,0,0x0,8
tick,0x7ffdc994fb34,265339224,0,0x0,8
tick,0x7ffdc994fb34,265354832,0,0x0,8
tick,0x7ffdc994fb34,265370414,0,0x0,8
tick,0x7ffdc994fb34,265385764,0,0x0,8
tick,0x7ffdc994fb34,265401548,0,0x0,8
tick,0x7ffdc994fb34,265417058,0,0x0,8
tick,0x7ffdc994fb34,265432638,0,0x0,8
tick,0x7ffdc994fb34,265448047,0,0x0,8
tick,0x7ffdc994fb34,265463574,0,0x0,8
tick,0x7ffdc994fb34,265479365,0,0x0,8
tick,0x7ffdc994fb34,265494596,0,0x0,8
tick,0x7ffdc994fb34,265509916,0,0x0,8
tick,0x7ffdc994fb34,265525503,0,0x0,8
tick,0x7ffdc994fb34,265541389,0,0x0,8
tick,0x7ffdc994fb34,265557101,0,0x0,8
tick,0x7ffdc994fb34,265573185,0,0x0,8
tick,0x7ffdc994fb34,265588446,0,0x0,8
tick,0x7ffdc994fb34,265603585,0,0x0,8
tick,0x7ffdc994fb34,265619267,0,0x0,8
tick,0x7ffdc994fb34,265634823,0,0x0,8
tick,0x7ffdc994fb34,265650784,0,0x0,8
tick,0x7ffdc994fb34,265666634,0,0x0,8
tick,0x7ffdc994fb34,265681788,0,0x0,8
tick,0x7ffdc994fb34,265697952,0,0x0,8
tick,0x7ffdc994fb34,265713156,0,0x0,8
tick,0x7ffdc994fb34,265728742,0,0x0,8
tick,0x7ffdc994fb34,265743819,0,0x0,8
tick,0x7ffdc994fb34,265760202,0,0x0,8
tick,0x7ffdc994fb34,265775733,0,0x0,8
tick,0x7ffdc994fb34,265790892,0,0x0,8
tick,0x7ffdc994fb34,265806393,0,0x0,8
tick,0x7ffdc994fb34,265822158,0,0x0,8
tick,0x7ffdc994fb34,265838074,0,0x0,8
tick,0x7ffdc994fb34,265853434,0,0x0,8
tick,0x7ffdc994fb34,265869005,0,0x0,8
tick,0x7ffdc994fb34,265884849,0,0x0,8
tick,0x7ffdc994fb34,265900310,0,0x0,8
tick,0x7ffdc994fb34,265915870,0,0x0,8
tick,0x7ffdc994fb34,265931504,0,0x0,8
tick,0x7ffdc994fb34,265946621,0,0x0,8
tick,0x7ffdc994fb34,265962415,0,0x0,8
tick,0x7ffdc994fb34,265978003,0,0x0,8
tick,0x7ffdc994fb34,265993189,0,0x0,8
tick,0x7ffdc994fb34,266009407,0,0x0,8
tick,0x7ffdc994fb34,266025124,0,0x0,8
tick,0x7ffdc994fb34,266040338,0,0x0,8
tick,0x7ffdc994fb34,266056394,0,0x0,8
tick,0x7ffdc994fb34,266071834,0,0x0,8
tick,0x7ffdc994fb34,266087382,0,0x0,8
tick,0x7ffdc994fb34,266103739,0,0x0,8
tick,0x7ffdc994fb34,266119422,0,0x0,8
tick,0x7ffdc994fb34,266134833,0,0x0,8
tick,0x7ffdc994fb34,266150022,0,0x0,8
tick,0x7ffdc994fb34,266165885,0,0x0,8
tick,0x7ffdc994fb34,266181343,0,0x0,8
tick,0x7ffdc994fb34,266196973,0,0x0,8
tick,0x7ffdc994fb34,266212476,0,0x0,8
tick,0x7ffdc994fb34,266227826,0,0x0,8
tick,0x7ffdc994fb34,266243497,0,0x0,8
tick,0x7ffdc994fb34,266258690,0,0x0,8
tick,0x7ffdc994fb34,266273907,0,0x0,8
tick,0x7ffdc994fb34,266290061,0,0x0,8
tick,0x7ffdc994fb34,266305594,0,0x0,8
tick,0x7ffdc994fb34,266321055,0,0x0,8
tick,0x7ffdc994fb34,266336821,0,0x0,8
tick,0x7ffdc994fb34,266351950,0,0x0,8
tick,0x7ffdc994fb34,266367366,0,0x0,8
tick,0x7ffdc994fb34,266383005,0,0x0,8
tick,0x7ffdc994fb34,266398379,0,0x0,8
tick,0x7ffdc994fb34,266414309,0,0x0,8
tick,0x7ffdc994fb34,266430256,0,0x0,8
tick,0x7ffdc994fb34,266446166,0,0x0,8
tick,0x7ffdc994fb34,266462463,0,0x0,8
tick,0x7ffdc994fb34,266477381,0,0x0,8
tick,0x7ffdc994fb34,266493170,0,0x0,8
tick,0x7ffdc994fb34,266508736,0,0x0,8
tick,0x7ffdc994fb34,266524760,0,0x0,8
tick,0x7ffdc994fb34,266540427,0,0x0,8
tick,0x7ffdc994fb34,266555857,0,0x0,8
tick,0x7ffdc994fb34,266571575,0,0x0,8
tick,0x7ffdc994fb34,266586994,0,0x0,8
tick,0x7ffdc994fb34,266602532,0,0x0,8
tick,0x7ffdc994fb34,266617798,0,0x0,8
tick,0x7ffdc994fb34,266633518,0,0x0,8
tick,0x7ffdc994fb34,266649005,0,0x0,8
tick,0x7ffdc994fb34,266664757,0,0x0,8
tick,0x7ffdc994fb34,266680638,0,0x0,8
tick,0x7ffdc994fb34,266696332,0,0x0,8
tick,0x7ffdc994fb34,266711760,0,0x0,8
tick,0x7ffdc994fb34,266727352,0,0x0,8
tick,0x7ffdc994fb34,266742673,0,0x0,8
tick,0x7ffdc994fb34,266758317,0,0x0,8
tick,0x7ffdc994fb34,266773604,0,0x0,8
tick,0x7ffdc994fb34,266789438,0,0x0,8
tick,0x7ffdc994fb34,266804693,0,0x0,8
tick,0x7ffdc994fb34,266820238,0,0x0,8
tick,0x7ffdc994fb34,266836144,0,0x0,8
tick,0x7ffdc994fb34,266851805,0,0x0,8
tick,0x7ffdc994fb34,266867438,0,0x0,8
tick,0x7ffdc994fb34,266882985,0,0x0,8
tick,0x7ffdc994fb34,266898094,0,0x0,8
tick,0x7ffdc994fb34,266913744,0,0x0,8
tick,0x7ffdc994fb34,266929500,0,0x0,8
tick,0x7ffdc994fb34,266944701,0,0x0,8
tick,0x7ffdc994fb34,266960453,0,0x0,8
tick,0x7ffdc994fb34,266975718,0,0x0,8
tick,0x7ffdc994fb34,266991730,0,0x0,8
tick,0x7ffdc994fb34,267007022,0,0x0,8
tick,0x7ffdc994fb34,267022676,0,0x0,8
tick,0x7ffdc994fb34,267038154,0,0x0,8
tick,0x7ffdc994fb34,267053727,0,0x0,8
tick,0x7ffdc994fb34,267069383,0,0x0,8
tick,0x7ffdc994fb34,267084724,0,0x0,8
tick,0x7ffdc994fb34,267100368,0,0x0,8
tick,0x7ffdc994fb34,267115970,0,0x0,8
tick,0x7ffdc994fb34,267131608,0,0x0,8
tick,0x7ffdc994fb34,267147099,0,0x0,8
tick,0x7ffdc994fb34,267162971,0,0x0,8
tick,0x7ffdc994fb34,267178314,0,0x0,8
tick,0x7ffdc994fb34,267193998,0,0x0,8
tick,0x7ffdc994fb34,267209489,0,0x0,8
tick,0x7ffdc994fb34,267225128,0,0x0,8
tick,0x7ffdc994fb34,267241010,0,0x0,8
tick,0x7ffdc994fb34,267256628,0,0x0,8
tick,0x7ffdc994fb34,267272041,0,0x0,8
tick,0x7ffdc994fb34,267287809,0,0x0,8
tick,0x7ffdc994fb34,267303313,0,0x0,8
tick,0x7ffdc994fb34,267319047,0,0x0,8
tick,0x7ffdc994fb34,267334238,0,0x0,8
tick,0x7ffdc994fb34,267350107,0,0x0,8
tick,0x7ffdc994fb34,267365344,0,0x0,8
tick,0x7ffdc994fb34,267381592,0,0x0,8
tick,0x7ffdc994fb34,267397332,0,0x0,8
tick,0x7ffdc994fb34,267413042,0,0x0,8
tick,0x7ffdc994fb34,267428426,0,0x0,8
tick,0x7ffdc994fb34,267444332,0,0x0,8
tick,0x7ffdc994fb34,267459595,0,0x0,8
tick,0x7ffdc994fb34,267475815,0,0x0,8
tick,0x7ffdc994fb34,267492090,0,0x0,8
tick,0x7ffdc994fb34,267507652,0,0x0,8
tick,0x7ffdc994fb34,267522968,0,0x0,8
tick,0x7ffdc994fb34,267538053,0,0x0,8
tick,0x7ffdc994fb34,267553416,0,0x0,8
tick,0x7ffdc994fb34,267568970,0,0x0,8
tick,0x7ffdc994fb34,267584501,0,0x0,8
tick,0x7ffdc994fb34,267599891,0,0x0,8
tick,0x7ffdc994fb34,267615713,0,0x0,8
tick,0x7ffdc994fb34,267632103,0,0x0,8
tick,0x7ffdc994fb34,267648087,0,0x0,8
tick,0x7ffdc994fb34,267663100,0,0x0,8
tick,0x7ffdc994fb34,267678872,0,0x0,8
tick,0x7ffdc994fb34,267694178,0,0x0,8
tick,0x7ffdc994fb34,267710345,0,0x0,8
tick,0x7ffdc994fb34,267725951,0,0x0,8
tick,0x7ffdc994fb34,267742018,0,0x0,8
tick,0x7ffdc994fb34,267758025,0,0x0,8
tick,0x7ffdc994fb34,267773427,0,0x0,8
tick,0x7ffdc994fb34,267788649,0,0x0,8
tick,0x7ffdc994fb34,267803817,0,0x0,8
tick,0x7ffdc994fb34,267819933,0,0x0,8
tick,0x7ffdc994fb34,267834903,0,0x0,8
tick,0x7ffdc994fb34,267850590,0,0x0,8
tick,0x7ffdc994fb34,267865853,0,0x0,8
tick,0x7ffdc994fb34,267881692,0,0x0,8
tick,0x7ffdc994fb34,267897096,0,0x0,8
tick,0x7ffdc994fb34,267912708,0,0x0,8
tick,0x7ffdc994fb34,267928387,0,0x0,8
tick,0x7ffdc994fb34,267943665,0,0x0,8
tick,0x7ffdc994fb34,267959296,0,0x0,8
tick,0x7ffdc994fb34,267974504,0,0x0,8
tick,0x7ffdc994fb34,267990216,0,0x0,8
tick,0x7ffdc994fb34,268005644,0,0x0,8
tick,0x7ffdc994fb34,268021555,0,0x0,8
tick,0x7ffdc994fb34,268037155,0,0x0,8
tick,0x7ffdc994fb34,268052341,0,0x0,8
tick,0x7ffdc994fb34,268067710,0,0x0,8
tick,0x7ffdc994fb34,268083400,0,0x0,8
tick,0x7ffdc994fb34,268099044,0,0x0,8
tick,0x7ffdc994fb34,268114894,0,0x0,8
tick,0x7ffdc994fb34,268130954,0,0x0,8
tick,0x7ffdc994fb34,268146962,0,0x0,8
tick,0x7ffdc994fb34,268163035,0,0x0,8
tick,0x7ffdc994fb34,268179134,0,0x0,8
tick,0x7ffdc994fb34,268194384,0,0x0,8
tick,0x7ffdc994fb34,268210025,0,0x0,8
tick,0x7ffdc994fb34,268224910,0,0x0,8
tick,0x7ffdc994fb34,268240605,0,0x0,8
tick,0x7ffdc994fb34,268256260,0,0x0,8
tick,0x7ffdc994fb34,268271654,0,0x0,8
tick,0x7ffdc994fb34,268287545,0,0x0,8
tick,0x7ffdc994fb34,268302942,0,0x0,8
tick,0x7ffdc994fb34,268318461,0,0x0,8
tick,0x7ffdc994fb34,268333888,0,0x0,8
tick,0x7ffdc994fb34,268349393,0,0x0,8
tick,0x7ffdc994fb34,268364604,0,0x0,8
tick,0x7ffdc994fb34,268380274,0,0x0,8
tick,0x7ffdc994fb34,268395701,0,0x0,8
tick,0x7ffdc994fb34,268411471,0,0x0,8
tick,0x7ffdc994fb34,268426717,0,0x0,8
tick,0x7ffdc994fb34,268442399,0,0x0,8
tick,0x7ffdc994fb34,268457863,0,0x0,8
tick,0x7ffdc994fb34,268473478,0,0x0,8
tick,0x7ffdc994fb34,268489100,0,0x0,8
tick,0x7ffdc994fb34,268504557,0,0x0,8
tick,0x7ffdc994fb34,268519969,0,0x0,8
tick,0x7ffdc994fb34,268535471,0,0x0,8
tick,0x7ffdc994fb34,268551179,0,0x0,8
tick,0x7ffdc994fb34,268566110,0,0x0,8
tick,0x7ffdc994fb34,268581474,0,0x0,8
tick,0x7ffdc994fb34,268597136,0,0x0,8
tick,0x7ffdc994fb34,268612637,0,0x0,8
tick,0x7ffdc994fb34,268628466,0,0x0,8
tick,0x7ffdc994fb34,268644088,0,0x0,8
tick,0x7ffdc994fb34,268659615,0,0x0,8
tick,0x7ffdc994fb34,268675137,0,0x0,8
tick,0x7ffdc994fb34,268690748,0,0x0,8
tick,0x7ffdc994fb34,268705917,0,0x0,8
tick,0x7ffdc994fb34,268721879,0,0x0,8
tick,0x7ffdc994fb34,268737924,0,0x0,8
tick,0x7ffdc994fb34,268752890,0,0x0,8
tick,0x7ffdc994fb34,268768250,0,0x0,8
tick,0x7ffdc994fb34,268783405,0,0x0,8
tick,0x7ffdc994fb34,268799097,0,0x0,8
tick,0x7ffdc994fb34,268814237,0,0x0,8
tick,0x7ffdc994fb34,268830209,0,0x0,8
tick,0x7ffdc994fb34,268846048,0,0x0,8
tick,0x7ffdc994fb34,268861988,0,0x0,8
tick,0x7ffdc994fb34,268877487,0,0x0,8
tick,0x7ffdc994fb34,268892815,0,0x0,8
tick,0x7ffdc994fb34,268908559,0,0x0,8
tick,0x7ffdc994fb34,268924017,0,0x0,8
tick,0x7ffdc994fb34,268939360,0,0x0,8
tick,0x7ffdc994fb34,268954453,0,0x0,8
tick,0x7ffdc994fb34,268970158,0,0x0,8
tick,0x7ffdc994fb34,268985061,0,0x0,8
tick,0x7ffdc994fb34,269000362,0,0x0,8
tick,0x7ffdc994fb34,269015905,0,0x0,8
tick,0x7ffdc994fb34,269032286,0,0x0,8
tick,0x7ffdc994fb34,269048083,0,0x0,8
tick,0x7ffdc994fb34,269063371,0,0x0,8
tick,0x7ffdc994fb34,269079098,0,0x0,8
tick,0x7ffdc994fb34,269094625,0,0x0,8
tick,0x7ffdc994fb34,269109866,0,0x0,8
tick,0x7ffdc994fb34,269125353,0,0x0,8
tick,0x7ffdc994fb34,269140966,0,0x0,8
tick,0x7ffdc994fb34,269156221,0,0x0,8
tick,0x7ffdc994fb34,269172146,0,0x0,8
tick,0x7ffdc994fb34,269187542,0,0x0,8
tick,0x7ffdc994fb34,269202973,0,0x0,8
tick,0x7ffdc994fb34,269218605,0,0x0,8
tick,0x7ffdc994fb34,269234115,0,0x0,8
tick,0x7ffdc994fb34,269249847,0,0x0,8
tick,0x7ffdc994fb34,269265610,0,0x0,8
tick,0x7ffdc994fb34,269281150,0,0x0,8
tick,0x7ffdc994fb34,269296816,0,0x0,8
tick,0x7ffdc994fb34,269312560,0,0x0,8
tick,0x7ffdc994fb34,269327796,0,0x0,8
tick,0x7ffdc994fb34,269343148,0,0x0,8
tick,0x7ffdc994fb34,269358768,0,0x0,8
tick,0x7ffdc994fb34,269374072,0,0x0,8
tick,0x7ffdc994fb34,269389924,0,0x0,8
tick,0x7ffdc994fb34,269405794,0,0x0,8
tick,0x7ffdc994fb34,269422112,0,0x0,8
tick,0x7ffdc994fb34,269437784,0,0x0,8
tick,0x7ffdc994fb34,269453527,0,0x0,8
tick,0x7ffdc994fb34,269469694,0,0x0,8
tick,0x7ffdc994fb34,269484930,0,0x0,8
tick,0x7ffdc994fb34,269500430,0,0x0,8
tick,0x7ffdc994fb34,269516117,0,0x0,8
tick,0x7ffdc994fb34,269531432,0,0x0,8
tick,0x7ffdc994fb34,269546981,0,0x0,8
tick,0x7ffdc994fb34,269562764,0,0x0,8
tick,0x7ffdc994fb34,269578217,0,0x0,8
tick,0x7ffdc994fb34,269593567,0,0x0,8
tick,0x7ffdc994fb34,269609132,0,0x0,8
tick,0x7ffdc994fb34,269624638,0,0x0,8
tick,0x7ffdc994fb34,269640140,0,0x0,8
tick,0x7ffdc994fb34,269655461,0,0x0,8
tick,0x7ffdc994fb34,269671113,0,0x0,8
tick,0x7ffdc994fb34,269685877,0,0x0,8
tick,0x7ffdc994fb34,269701406,0,0x0,8
tick,0x7ffdc994fb34,269717063,0,0x0,8
tick,0x7ffdc994fb34,269732632,0,0x0,8
tick,0x7ffdc994fb34,269748739,0,0x0,8
tick,0x7ffdc994fb34,269764503,0,0x0,8
tick,0x7ffdc994fb34,269780075,0,0x0,8
tick,0x7ffdc994fb34,269795317,0,0x0,8
tick,0x7ffdc994fb34,269811566,0,0x0,8
tick,0x7ffdc994fb34,269827306,0,0x0,8
tick,0x7ffdc994fb34,269843189,0,0x0,8
tick,0x7ffdc994fb34,269858185,0,0x0,8
tick,0x7ffdc994fb34,269873647,0,0x0,8
tick,0x7ffdc994fb34,269889356,0,0x0,8
tick,0x7ffdc994fb34,269904849,0,0x0,8
tick,0x7ffdc994fb34,269920430,0,0x0,8
tick,0x7ffdc994fb34,269935922,0,0x0,8
tick,0x7ffdc994fb34,269951699,0,0x0,8
tick,0x7ffdc994fb34,269966925,0,0x0,8
tick,0x7ffdc994fb34,269982717,0,0x0,8
tick,0x7ffdc994fb34,269997675,0,0x0,8
tick,0x7ffdc994fb34,270013119,0,0x0,8
tick,0x7ffdc994fb34,270028851,0,0x0,8
tick,0x7ffdc994fb34,270044638,0,0x0,8
tick,0x7ffdc994fb34,270060598,0,0x0,8
tick,0x7ffdc994fb34,270076588,0,0x0,8
tick,0x7ffdc994fb34,270092002,0,0x0,8
tick,0x7ffdc994fb34,270107600,0,0x0,8
tick,0x7ffdc994fb34,270122841,0,0x0,8
tick,0x7ffdc994fb34,270138452,0,0x0,8
tick,0x7ffdc994fb34,270153585,0,0x0,8
tick,0x7ffdc994fb34,270168995,0,0x0,8
tick,0x7ffdc994fb34,270184463,0,0x0,8
tick,0x7ffdc994fb34,270200073,0,0x0,8
tick,0x7ffdc994fb34,270215652,0,0x0,8
tick,0x7ffdc994fb34,270230961,0,0x0,8
tick,0x7ffdc994fb34,270246712,0,0x0,8
tick,0x7ffdc994fb34,270262107,0,0x0,8
tick,0x7ffdc994fb34,270277657,0,0x0,8
tick,0x7ffdc994fb34,270293041,0,0x0,8
tick,0x7ffdc994fb34,270308433,0,0x0,8
tick,0x7ffdc994fb34,270323818,0,0x0,8
tick,0x7ffdc994fb34,270339147,0,0x0,8
tick,0x7ffdc994fb34,270354556,0,0x0,8
tick,0x7ffdc994fb34,270370006,0,0x0,8
tick,0x7ffdc994fb34,270385584,0,0x0,8
tick,0x7ffdc994fb34,270401834,0,0x0,8
tick,0x7ffdc994fb34,270417709,0,0x0,8
tick,0x7ffdc994fb34,270432874,0,0x0,8
tick,0x7ffdc994fb34,270448601,0,0x0,8
tick,0x7ffdc994fb34,270463939,0,0x0,8
tick,0x7ffdc994fb34,270479943,0,0x0,8
tick,0x7ffdc994fb34,270495148,0,0x0,8
tick,0x7ffdc994fb34,270509925,0,0x0,8
tick,0x7ffdc994fb34,270524979,0,0x0,8
tick,0x7ffdc994fb34,270540706,0,0x0,8
tick,0x7ffdc994fb34,270555686,0,0x0,8
tick,0x7ffdc994fb34,270571839,0,0x0,8
tick,0x7ffdc994fb34,270587339,0,0x0,8
tick,0x7ffdc994fb34,270602912,0,0x0,8
tick,0x7ffdc994fb34,270618403,0,0x0,8
tick,0x7ffdc994fb34,270633506,0,0x0,8
tick,0x7ffdc994fb34,270649136,0,0x0,8
tick,0x7ffdc994fb34,270664439,0,0x0,8
tick,0x7ffdc994fb34,270680412,0,0x0,8
tick,0x7ffdc994fb34,270696276,0,0x0,8
tick,0x7ffdc994fb34,270712091,0,0x0,8
tick,0x7ffdc994fb34,270727507,0,0x0,8
tick,0x7ffdc994fb34,270742831,0,0x0,8
tick,0x7ffdc994fb34,270758704,0,0x0,8
tick,0x7ffdc994fb34,270773593,0,0x0,8
tick,0x7ffdc994fb34,270789253,0,0x0,8
tick,0x7ffdc994fb34,270804556,0,0x0,8
tick,0x7ffdc994fb34,270820018,0,0x0,8
tick,0x7ffdc994fb34,270835126,0,0x0,8
tick,0x7ffdc994fb34,270851076,0,0x0,8
tick,0x7ffdc994fb34,270866575,0,0x0,8
tick,0x7ffdc994fb34,270882126,0,0x0,8
tick,0x7ffdc994fb34,270897850,0,0x0,8
tick,0x7ffdc994fb34,270913186,0,0x0,8
tick,0x7ffdc994fb34,270928918,0,0x0,8
tick,0x7ffdc994fb34,270944188,0,0x0,8
tick,0x7ffdc994fb34,270959730,0,0x0,8
tick,0x7ffdc994fb34,270975158,0,0x0,8
tick,0x7ffdc994fb34,270990817,0,0x0,8
tick,0x7ffdc994fb34,271006221,0,0x0,8
tick,0x7ffdc994fb34,271021924,0,0x0,8
tick,0x7ffdc994fb34,271037727,0,0x0,8
tick,0x7ffdc994fb34,271052922,0,0x0,8
tick,0x7ffdc994fb34,271068479,0,0x0,8
tick,0x7ffdc994fb34,271083772,0,0x0,8
tick,0x7ffdc994fb34,271099669,0,0x0,8
tick,0x7ffdc994fb34,271115059,0,0x0,8
tick,0x7ffdc994fb34,271131526,0,0x0,8
tick,0x7ffdc994fb34,271147223,0,0x0,8
tick,0x7ffdc994fb34,271162617,0,0x0,8
tick,0x7ffdc994fb34,271177927,0,0x0,8
tick,0x7ffdc994fb34,271193953,0,0x0,8
tick,0x7ffdc994fb34,271209400,0,0x0,8
tick,0x7ffdc994fb34,271225319,0,0x0,8
tick,0x7ffdc994fb34,271240989,0,0x0,8
tick,0x7ffdc994fb34,271256523,0,0x0,8
tick,0x7ffdc994fb34,271271871,0,0x0,8
tick,0x7ffdc994fb34,271287473,0,0x0,8
tick,0x7ffdc994fb34,271303086,0,0x0,8
tick,0x7ffdc994fb34,271318500,0,0x0,8
tick,0x7ffdc994fb34,271333672,0,0x0,8
tick,0x7ffdc994fb34,271349557,0,0x0,8
tick,0x7ffdc994fb34,271364804,0,0x0,8
tick,0x7ffdc994fb34,271380712,0,0x0,8
tick,0x7ffdc994fb34,271396350,0,0x0,8
tick,0x7ffdc994fb34,271411647,0,0x0,8
tick,0x7ffdc994fb34,271427169,0,0x0,8
tick,0x7ffdc994fb34,271442633,0,0x0,8
tick,0x7ffdc994fb34,271458502,0,0x0,8
tick,0x7ffdc994fb34,271473508,0,0x0,8
tick,0x7ffdc994fb34,271489109,0,0x0,8
tick,0x7ffdc994fb34,271504661,0,0x0,8
tick,0x7ffdc994fb34,271520477,0,0x0,8
tick,0x7ffdc994fb34,271535651,0,0x0,8
tick,0x7ffdc994fb34,271551029,0,0x0,8
tick,0x7ffdc994fb34,271566162,0,0x0,8
tick,0x7ffdc994fb34,271581277,0,0x0,8
tick,0x7ffdc994fb34,271597604,0,0x0,8
tick,0x7ffdc994fb34,271612980,0,0x0,8
tick,0x7ffdc994fb34,271629321,0,0x0,8
tick,0x7ffdc994fb34,271645014,0,0x0,8
tick,0x7ffdc994fb34,271660471,0,0x0,8
tick,0x7ffdc994fb34,271675993,0,0x0,8
tick,0x7ffdc994fb34,271691508,0,0x0,8
tick,0x7ffdc994fb34,271707656,0,0x0,8
tick,0x7ffdc994fb34,271722913,0,0x0,8
tick,0x7ffdc994fb34,271738639,0,0x0,8
tick,0x7ffdc994fb34,271754056,0,0x0,8
tick,0x7ffdc994fb34,271769827,0,0x0,8
tick,0x7ffdc994fb34,271785224,0,0x0,8
tick,0x7ffdc994fb34,271800979,0,0x0,8
tick,0x7ffdc994fb34,271817196,0,0x0,8
tick,0x7ffdc994fb34,271833029,0,0x0,8
tick,0x7ffdc994fb34,271848206,0,0x0,8
tick,0x7ffdc994fb34,271863616,0,0x0,8
tick,0x7ffdc994fb34,271879073,0,0x0,8
tick,0x7ffdc994fb34,271894300,0,0x0,8
tick,0x7ffdc994fb34,271909952,0,0x0,8
tick,0x7ffdc994fb34,271925531,0,0x0,8
tick,0x7ffdc994fb34,271940827,0,0x0,8
tick,0x7ffdc994fb34,271956180,0,0x0,8
tick,0x7ffdc994fb34,271971339,0,0x0,8
tick,0x7ffdc994fb34,271986937,0,0x0,8
tick,0x7ffdc994fb34,272003018,0,0x0,8
tick,0x7ffdc994fb34,272018368,0,0x0,8
tick,0x7ffdc994fb34,272033397,0,0x0,8
tick,0x7ffdc994fb34,272049176,0,0x0,8
tick,0x7ffdc994fb34,272064267,0,0x0,8
tick,0x7ffdc994fb34,272080660,0,0x0,8
tick,0x7ffdc994fb34,272096489,0,0x0,8
tick,0x7ffdc994fb34,272112385,0,0x0,8
tick,0x7ffdc994fb34,272127271,0,0x0,8
tick,0x7ffdc994fb34,272143262,0,0x0,8
tick,0x7ffdc994fb34,272158593,0,0x0,8
tick,0x7ffdc994fb34,272173964,0,0x0,8
tick,0x7ffdc994fb34,272189924,0,0x0,8
tick,0x7ffdc994fb34,272205317,0,0x0,8
tick,0x7ffdc994fb34,272220926,0,0x0,8
tick,0x7ffdc994fb34,272237095,0,0x0,8
tick,0x7ffdc994fb34,272252592,0,0x0,8
tick,0x7ffdc994fb34,272267951,0,0x0,8
tick,0x7ffdc994fb34,272283331,0,0x0,8
tick,0x7ffdc994fb34,272298633,0,0x0,8
tick,0x7ffdc994fb34,272314365,0,0x0,8
tick,0x7ffdc994fb34,272329224,0,0x0,8
tick,0x7ffdc994fb34,272344821,0,0x0,8
tick,0x7ffdc994fb34,272360443,0,0x0,8
tick,0x7ffdc994fb34,272375684,0,0x0,8
tick,0x7ffdc994fb34,272391487,0,0x0,8
tick,0x7ffdc994fb34,272407259,0,0x0,8
tick,0x7ffdc994fb34,272422874,0,0x0,8
tick,0x7ffdc994fb34,272438771,0,0x0,8
tick,0x7ffdc994fb34,272454015,0,0x0,8
tick,0x7ffdc994fb34,272469330,0,0x0,8
tick,0x7ffdc994fb34,272484309,0,0x0,8
tick,0x7ffdc994fb34,272500672,0,0x0,8
tick,0x7ffdc994fb34,272516232,0,0x0,8
tick,0x7ffdc994fb34,272532744,0,0x0,8
tick,0x7ffdc994fb34,272548505,0,0x0,8
tick,0x7ffdc994fb34,272564442,0,0x0,8
tick,0x7ffdc994fb34,272579370,0,0x0,8
tick,0x7ffdc994fb34,272595745,0,0x0,8
tick,0x7ffdc994fb34,272611032,0,0x0,8
tick,0x7ffdc994fb34,272626845,0,0x0,8
tick,0x7ffdc994fb34,272641897,0,0x0,8
tick,0x7ffdc994fb34,272658126,0,0x0,8
tick,0x7ffdc994fb34,272673019,0,0x0,8
tick,0x7ffdc994fb34,272688944,0,0x0,8
tick,0x7ffdc994fb34,272704074,0,0x0,8
tick,0x7ffdc994fb34,272719297,0,0x0,8
tick,0x7ffdc994fb34,272735127,0,0x0,8
tick,0x7ffdc994fb34,272750502,0,0x0,8
tick,0x7ffdc994fb34,272766108,0,0x0,8
tick,0x7ffdc994fb34,272781458,0,0x0,8
tick,0x7ffdc994fb34,272796791,0,0x0,8
tick,0x7ffdc994fb34,272813000,0,0x0,8
tick,0x7ffdc994fb34,272828871,0,0x0,8
tick,0x7ffdc994fb34,272843885,0,0x0,8
tick,0x7ffdc994fb34,272860089,0,0x0,8
tick,0x7ffdc994fb34,272875291,0,0x0,8
tick,0x7ffdc994fb34,272891518,0,0x0,8
tick,0x7ffdc994fb34,272907464,0,0x0,8
tick,0x7ffdc994fb34,272922904,0,0x0,8
tick,0x7ffdc994fb34,272938562,0,0x0,8
tick,0x7ffdc994fb34,272954103,0,0x0,8
tick,0x7ffdc994fb34,272969706,0,0x0,8
tick,0x7ffdc994fb34,272985171,0,0x0,8
tick,0x7ffdc994fb34,273000467,0,0x0,8
tick,0x7ffdc994fb34,273016635,0,0x0,8
tick,0x7ffdc994fb34,273032164,0,0x0,8
tick,0x7ffdc994fb34,273048013,0,0x0,8
tick,0x7ffdc994fb34,273063455,0,0x0,8
tick,0x7ffdc994fb34,273078635,0,0x0,8
tick,0x7ffdc994fb34,273094423,0,0x0,8
tick,0x7ffdc994fb34,273109820,0,0x0,8
tick,0x7ffdc994fb34,273125169,0,0x0,8
tick,0x7ffdc994fb34,273140616,0,0x0,8
tick,0x7ffdc994fb34,273156319,0,0x0,8
tick,0x7ffdc994fb34,273172052,0,0x0,8
tick,0x7ffdc994fb34,273187688,0,0x0,8
tick,0x7ffdc994fb34,273203733,0,0x0,8
tick,0x7ffdc994fb34,273219245,0,0x0,8
tick,0x7ffdc994fb34,273234256,0,0x0,8
tick,0x7ffdc994fb34,273249737,0,0x0,8
tick,0x7ffdc994fb34,273265300,0,0x0,8
tick,0x7ffdc994fb34,273280886,0,0x0,8
tick,0x7ffdc994fb34,273296216,0,0x0,8
tick,0x7ffdc994fb34,273311582,0,0x0,8
tick,0x7ffdc994fb34,273326995,0,0x0,8
tick,0x7ffdc994fb34,273342708,0,0x0,8
tick,0x7ffdc994fb34,273357834,0,0x0,8
tick,0x7ffdc994fb34,273373758,0,0x0,8
tick,0x7ffdc994fb34,273388586,0,0x0,8
tick,0x7ffdc994fb34,273403526,0,0x0,8
tick,0x7ffdc994fb34,273419302,0,0x0,8
tick,0x7ffdc994fb34,273435504,0,0x0,8
tick,0x7ffdc994fb34,273451010,0,0x0,8
tick,0x7ffdc994fb34,273466087,0,0x0,8
tick,0x7ffdc994fb34,273481835,0,0x0,8
tick,0x7ffdc994fb34,273497340,0,0x0,8
tick,0x7ffdc994fb34,273512610,0,0x0,8
tick,0x7ffdc994fb34,273528389,0,0x0,8
tick,0x7ffdc994fb34,273544302,0,0x0,8
tick,0x7ffdc994fb34,273559765,0,0x0,8
tick,0x7ffdc994fb34,273575707,0,0x0,8
tick,0x7ffdc994fb34,273591024,0,0x0,8
tick,0x7ffdc994fb34,273606575,0,0x0,8
tick,0x7ffdc994fb34,273621537,0,0x0,8
tick,0x7ffdc994fb34,273637087,0,0x0,8
tick,0x7ffdc994fb34,273652462,0,0x0,8
tick,0x7ffdc994fb34,273667871,0,0x0,8
tick,0x7ffdc994fb34,273683284,0,0x0,8
tick,0x7ffdc994fb34,273698883,0,0x0,8
tick,0x7ffdc994fb34,273714432,0,0x0,8
tick,0x7ffdc994fb34,273730165,0,0x0,8
tick,0x7ffdc994fb34,273745408,0,0x0,8
tick,0x7ffdc994fb34,273761063,0,0x0,8
tick,0x7ffdc994fb34,273776438,0,0x0,8
tick,0x7ffdc994fb34,273792882,0,0x0,8
tick,0x7ffdc994fb34,273808588,0,0x0,8
tick,0x7ffdc994fb34,273823678,0,0x0,8
tick,0x7ffdc994fb34,273839403,0,0x0,8
tick,0x7ffdc994fb34,273855157,0,0x0,8
tick,0x7ffdc994fb34,273870802,0,0x0,8
tick,0x7ffdc994fb34,273886858,0,0x0,8
tick,0x7ffdc994fb34,273902626,0,0x0,8
tick,0x7ffdc994fb34,273917859,0,0x0,8
tick,0x7ffdc994fb34,273933944,0,0x0,8
tick,0x7ffdc994fb34,273949577,0,0x0,8
tick,0x7ffdc994fb34,273965030,0,0x0,8
tick,0x7ffdc994fb34,273980851,0,0x0,8
tick,0x7ffdc994fb34,273996494,0,0x0,8
tick,0x7ffdc994fb34,274011842,0,0x0,8
tick,0x7ffdc994fb34,274027245,0,0x0,8
tick,0x7ffdc994fb34,274042943,0,0x0,8
tick,0x7ffdc994fb34,274058793,0,0x0,8
tick,0x7ffdc994fb34,274074418,0,0x0,8
tick,0x7ffdc994fb34,274090676,0,0x0,8
tick,0x7ffdc994fb34,274106197,0,0x0,8
tick,0x7ffdc994fb34,274121890,0,0x0,8
tick,0x7ffdc994fb34,274137103,0,0x0,8
tick,0x7ffdc994fb34,274153231,0,0x0,8
tick,0x7ffdc994fb34,274169114,0,0x0,8
tick,0x7ffdc994fb34,274184453,0,0x0,8
tick,0x7ffdc994fb34,274199562,0,0x0,8
tick,0x7ffdc994fb34,274215509,0,0x0,8
tick,0x7ffdc994fb34,274231340,0,0x0,8
tick,0x7ffdc994fb34,274247058,0,0x0,8
tick,0x7ffdc994fb34,274262356,0,0x0,8
tick,0x7ffdc994fb34,274278352,0,0x0,8
tick,0x7ffdc994fb34,274292909,0,0x0,8
tick,0x7ffdc994fb34,274308616,0,0x0,8
tick,0x7ffdc994fb34,274323964,0,0x0,8
tick,0x7ffdc994fb34,274340121,0,0x0,8
tick,0x7ffdc994fb34,274355654,0,0x0,8
tick,0x7ffdc994fb34,274371000,0,0x0,8
tick,0x7ffdc994fb34,274386263,0,0x0,8
tick,0x7ffdc994fb34,274401238,0,0x0,8
tick,0x7ffdc994fb34,274417104,0,0x0,8
tick,0x7ffdc994fb34,274432689,0,0x0,8
tick,0x7ffdc994fb34,274448319,0,0x0,8
tick,0x7ffdc994fb34,274463586,0,0x0,8
tick,0x7ffdc994fb34,274479527,0,0x0,8
tick,0x7ffdc994fb34,274494736,0,0x0,8
tick,0x7ffdc994fb34,274510386,0,0x0,8
tick,0x7ffdc994fb34,274525645,0,0x0,8
tick,0x7ffdc994fb34,274541098,0,0x0,8
tick,0x7ffdc994fb34,274556835,0,0x0,8
tick,0x7ffdc994fb34,274572137,0,0x0,8
tick,0x7ffdc994fb34,274587702,0,0x0,8
tick,0x7ffdc994fb34,274603090,0,0x0,8
tick,0x7ffdc994fb34,274618484,0,0x0,8
tick,0x7ffdc994fb34,274633671,0,0x0,8
tick,0x7ffdc994fb34,274648966,0,0x0,8
tick,0x7ffdc994fb34,274664987,0,0x0,8
tick,0x7ffdc994fb34,274680429,0,0x0,8
tick,0x7ffdc994fb34,274695805,0,0x0,8
tick,0x7ffdc994fb34,274711749,0,0x0,8
tick,0x7ffdc994fb34,274727783,0,0x0,8
tick,0x7ffdc994fb34,274742436,0,0x0,8
tick,0x7ffdc994fb34,274758069,0,0x0,8
tick,0x7ffdc994fb34,274774058,0,0x0,8
tick,0x7ffdc994fb34,274790211,0,0x0,8
tick,0x7ffdc994fb34,274805520,0,0x0,8
tick,0x7ffdc994fb34,274821206,0,0x0,8
tick,0x7ffdc994fb34,274836657,0,0x0,8
tick,0x7ffdc994fb34,274852499,0,0x0,8
tick,0x7ffdc994fb34,274867831,0,0x0,8
tick,0x7ffdc994fb34,274882813,0,0x0,8
tick,0x7ffdc994fb34,274898166,0,0x0,8
tick,0x7ffdc994fb34,274913371,0,0x0,8
tick,0x7ffdc994fb34,274929333,0,0x0,8
tick,0x7ffdc994fb34,274944566,0,0x0,8
tick,0x7ffdc994fb34,274959580,0,0x0,8
tick,0x7ffdc994fb34,274974940,0,0x0,8
tick,0x7ffdc994fb34,274990336,0,0x0,8
tick,0x7ffdc994fb34,275005945,0,0x0,8
tick,0x7ffdc994fb34,275021172,0,0x0,8
tick,0x7ffdc994fb34,275037122,0,0x0,8
tick,0x7ffdc994fb34,275053104,0,0x0,8
tick,0x7ffdc994fb34,275068719,0,0x0,8
tick,0x7ffdc994fb34,275084002,0,0x0,8
tick,0x7ffdc994fb34,275099314,0,0x0,8
tick,0x7ffdc994fb34,275114682,0,0x0,8
tick,0x7ffdc994fb34,275130542,0,0x0,8
tick,0x7ffdc994fb34,275145883,0,0x0,8
tick,0x7ffdc994fb34,275161250,0,0x0,8
tick,0x7ffdc994fb34,275176563,0,0x0,8
tick,0x7ffdc994fb34,275191957,0,0x0,8
tick,0x7ffdc994fb34,275207750,0,0x0,8
tick,0x7ffdc994fb34,275223755,0,0x0,8
tick,0x7ffdc994fb34,275239708,0,0x0,8
tick,0x7ffdc994fb34,275254883,0,0x0,8
tick,0x7ffdc994fb34,275270882,0,0x0,8
tick,0x7ffdc994fb34,275286371,0,0x0,8
tick,0x7ffdc994fb34,275301728,0,0x0,8
tick,0x7ffdc994fb34,275316870,0,0x0,8
tick,0x7ffdc994fb34,275333070,0,0x0,8
tick,0x7ffdc994fb34,275348641,0,0x0,8
tick,0x7ffdc994fb34,275364292,0,0x0,8
tick,0x7ffdc994fb34,275379703,0,0x0,8
tick,0x7ffdc994fb34,275395192,0,0x0,8
tick,0x7ffdc994fb34,275410689,0,0x0,8
tick,0x7ffdc994fb34,275426197,0,0x0,8
tick,0x7ffdc994fb34,275441859,0,0x0,8
tick,0x7ffdc994fb34,275457247,0,0x0,8
tick,0x7ffdc994fb34,275472623,0,0x0,8
tick,0x7ffdc994fb34,275488791,0,0x0,8
tick,0x7ffdc994fb34,275504838,0,0x0,8
tick,0x7ffdc994fb34,275520786,0,0x0,8
tick,0x7ffdc994fb34,275536308,0,0x0,8
tick,0x7ffdc994fb34,275552833,0,0x0,8
tick,0x7ffdc994fb34,275568195,0,0x0,8
tick,0x7ffdc994fb34,275583564,0,0x0,8
tick,0x7ffdc994fb34,275598847,0,0x0,8
tick,0x7ffdc994fb34,275614634,0,0x0,8
tick,0x7ffdc994fb34,275630181,0,0x0,8
tick,0x7ffdc994fb34,275645420,0,0x0,8
tick,0x7ffdc994fb34,275660897,0,0x0,8
tick,0x7ffdc994fb34,275676971,0,0x0,8
tick,0x7ffdc994fb34,275692351,0,0x0,8
tick,0x7ffdc994fb34,275707409,0,0x0,8
tick,0x7ffdc994fb34,275723399,0,0x0,8
tick,0x7ffdc994fb34,275738999,0,0x0,8
tick,0x7ffdc994fb34,275754613,0,0x0,8
tick,0x7ffdc994fb34,275770236,0,0x0,8
tick,0x7ffdc994fb34,275785574,0,0x0,8
tick,0x7ffdc994fb34,275801770,0,0x0,8
tick,0x7ffdc994fb34,275817009,0,0x0,8
tick,0x7ffdc994fb34,275832817,0,0x0,8
tick,0x7ffdc994fb34,275848297,0,0x0,8
tick,0x7ffdc994fb34,275864111,0,0x0,8
tick,0x7ffdc994fb34,275879277,0,0x0,8
tick,0x7ffdc994fb34,275894676,0,0x0,8
tick,0x7ffdc994fb34,275910006,0,0x0,8
tick,0x7ffdc994fb34,275925981,0,0x0,8
tick,0x7ffdc994fb34,275942317,0,0x0,8
tick,0x7ffdc994fb34,275958287,0,0x0,8
tick,0x7ffdc994fb34,275973587,0,0x0,8
tick,0x7ffdc994fb34,275989490,0,0x0,8
tick,0x7ffdc994fb34,276005027,0,0x0,8
tick,0x7ffdc994fb34,276020454,0,0x0,8
tick,0x7ffdc994fb34,276036237,0,0x0,8
tick,0x7ffdc994fb34,276051947,0,0x0,8
tick,0x7ffdc994fb34,276067197,0,0x0,8
tick,0x7ffdc994fb34,276083038,0,0x0,8
tick,0x7ffdc994fb34,276098307,0,0x0,8
tick,0x7ffdc994fb34,276114438,0,0x0,8
tick,0x7ffdc994fb34,276129572,0,0x0,8
tick,0x7ffdc994fb34,276144955,0,0x0,8
tick,0x7ffdc994fb34,276160631,0,0x0,8
tick,0x7ffdc994fb34,276175839,0,0x0,8
tick,0x7ffdc994fb34,276191529,0,0x0,8
tick,0x7ffdc994fb34,276207436,0,0x0,8
tick,0x7ffdc994fb34,276222622,0,0x0,8
tick,0x7ffdc994fb34,276238198,0,0x0,8
tick,0x7ffdc994fb34,276253387,0,0x0,8
tick,0x7ffdc994fb34,276269018,0,0x0,8
tick,0x7ffdc994fb34,276284579,0,0x0,8
tick,0x7ffdc994fb34,276300390,0,0x0,8
tick,0x7ffdc994fb34,276316913,0,0x0,8
tick,0x7ffdc994fb34,276332239,0,0x0,8
tick,0x7ffdc994fb34,276347846,0,0x0,8
tick,0x7ffdc994fb34,276363370,0,0x0,8
tick,0x7ffdc994fb34,276379347,0,0x0,8
tick,0x7ffdc994fb34,276395197,0,0x0,8
tick,0x7ffdc994fb34,276410724,0,0x0,8
tick,0x7ffdc994fb34,276426922,0,0x0,8
tick,0x7ffdc994fb34,276443038,0,0x0,8
tick,0x7ffdc994fb34,276458244,0,0x0,8
tick,0x7ffdc994fb34,276473453,0,0x0,8
tick,0x7ffdc994fb34,276488907,0,0x0,8
tick,0x7ffdc994fb34,276504484,0,0x0,8
tick,0x7ffdc994fb34,276520161,0,0x0,8
tick,0x7ffdc994fb34,276535460,0,0x0,8
tick,0x7ffdc994fb34,276551393,0,0x0,8
tick,0x7ffdc994fb34,276566756,0,0x0,8
tick,0x7ffdc994fb34,276582419,0,0x0,8
tick,0x7ffdc994fb34,276597769,0,0x0,8
tick,0x7ffdc994fb34,276613315,0,0x0,8
tick,0x7ffdc994fb34,276629208,0,0x0,8
tick,0x7ffdc994fb34,276644101,0,0x0,8
tick,0x7ffdc994fb34,276660167,0,0x0,8
tick,0x7ffdc994fb34,276676118,0,0x0,8
tick,0x7ffdc994fb34,276691042,0,0x0,8
tick,0x7ffdc994fb34,276706711,0,0x0,8
tick,0x7ffdc994fb34,276722211,0,0x0,8
tick,0x7ffdc994fb34,276737739,0,0x0,8
tick,0x7ffdc994fb34,276753820,0,0x0,8
tick,0x7ffdc994fb34,276769430,0,0x0,8
tick,0x7ffdc994fb34,276784832,0,0x0,8
tick,0x7ffdc994fb34,276800498,0,0x0,8
tick,0x7ffdc994fb34,276815396,0,0x0,8
tick,0x7ffdc994fb34,276830677,0,0x0,8
tick,0x7ffdc994fb34,276846508,0,0x0,8
tick,0x7ffdc994fb34,276861809,0,0x0,8
tick,0x7ffdc994fb34,276877323,0,0x0,8
tick,0x7ffdc994fb34,276892635,0,0x0,8
tick,0x7ffdc994fb34,276908812,0,0x0,8
tick,0x7ffdc994fb34,276924183,0,0x0,8
tick,0x7ffdc994fb34,276939560,0,0x0,8
tick,0x7ffdc994fb34,276954893,0,0x0,8
tick,0x7ffdc994fb34,276970405,0,0x0,8
tick,0x7ffdc994fb34,276986038,0,0x0,8
tick,0x7ffdc994fb34,277001040,0,0x0,8
tick,0x7ffdc994fb34,277016732,0,0x0,8
tick,0x7ffdc994fb34,277032221,0,0x0,8
tick,0x7ffdc994fb34,277048531,0,0x0,8
tick,0x7ffdc994fb34,277064434,0,0x0,8
tick,0x7ffdc994fb34,277080016,0,0x0,8
tick,0x7ffdc994fb34,277095260,0,0x0,8
tick,0x7ffdc994fb34,277110759,0,0x0,8
tick,0x7ffdc994fb34,277126078,0,0x0,8
tick,0x7ffdc994fb34,277141502,0,0x0,8
tick,0x7ffdc994fb34,277157027,0,0x0,8
tick,0x7ffdc994fb34,277172402,0,0x0,8
tick,0x7ffdc994fb34,277187605,0,0x0,8
tick,0x7ffdc994fb34,277203415,0,0x0,8
tick,0x7ffdc994fb34,277219182,0,0x0,8
tick,0x7ffdc994fb34,277234460,0,0x0,8
tick,0x7ffdc994fb34,277250242,0,0x0,8
tick,0x7ffdc994fb34,277264948,0,0x0,8
tick,0x7ffdc994fb34,277280841,0,0x0,8
tick,0x7ffdc994fb34,277296105,0,0x0,8
tick,0x7ffdc994fb34,277312487,0,0x0,8
tick,0x7ffdc994fb34,277328243,0,0x0,8
tick,0x7ffdc994fb34,277343521,0,0x0,8
tick,0x7ffdc994fb34,277359332,0,0x0,8
tick,0x7ffdc994fb34,277374665,0,0x0,8
tick,0x7ffdc994fb34,277390708,0,0x0,8
tick,0x7ffdc994fb34,277405934,0,0x0,8
tick,0x7ffdc994fb34,277421308,0,0x0,8
tick,0x7ffdc994fb34,277436925,0,0x0,8
tick,0x7ffdc994fb34,277453173,0,0x0,8
tick,0x7ffdc994fb34,277468872,0,0x0,8
tick,0x7ffdc994fb34,277484656,0,0x0,8
tick,0x7ffdc994fb34,277500214,0,0x0,8
tick,0x7ffdc994fb34,277514877,0,0x0,8
tick,0x7ffdc994fb34,277530065,0,0x0,8
tick,0x7ffdc994fb34,277545441,0,0x0,8
tick,0x7ffdc994fb34,277560663,0,0x0,8
tick,0x7ffdc994fb34,277576365,0,0x0,8
tick,0x7ffdc994fb34,277591738,0,0x0,8
tick,0x7ffdc994fb34,277607207,0,0x0,8
tick,0x7ffdc994fb34,277622752,0,0x0,8
tick,0x7ffdc994fb34,277638415,0,0x0,8
tick,0x7ffdc994fb34,277654132,0,0x0,8
tick,0x7ffdc994fb34,277669681,0,0x0,8
tick,0x7ffdc994fb34,277684794,0,0x0,8
tick,0x7ffdc994fb34,277701002,0,0x0,8
tick,0x7ffdc994fb34,277716832,0,0x0,8
tick,0x7ffdc994fb34,277732624,0,0x0,8
tick,0x7ffdc994fb34,277747610,0,0x0,8
tick,0x7ffdc994fb34,277763761,0,0x0,8
tick,0x7ffdc994fb34,277779498,0,0x0,8
tick,0x7ffdc994fb34,277794949,0,0x0,8
tick,0x7ffdc994fb34,277810634,0,0x0,8
tick,0x7ffdc994fb34,277825729,0,0x0,8
tick,0x7ffdc994fb34,277841241,0,0x0,8
tick,0x7ffdc994fb34,277857049,0,0x0,8
tick,0x7ffdc994fb34,277872538,0,0x0,8
tick,0x7ffdc994fb34,277888148,0,0x0,8
tick,0x7ffdc994fb34,277903478,0,0x0,8
tick,0x7ffdc994fb34,277919111,0,0x0,8
tick,0x7ffdc994fb34,277934936,0,0x0,8
tick,0x7ffdc994fb34,277950551,0,0x0,8
tick,0x7ffdc994fb34,277965861,0,0x0,8
tick,0x7ffdc994fb34,277981550,0,0x0,8
tick,0x7ffdc994fb34,277996928,0,0x0,8
tick,0x7ffdc994fb34,278012973,0,0x0,8
tick,0x7ffdc994fb34,278029006,0,0x0,8
tick,0x7ffdc994fb34,278044253,0,0x0,8
tick,0x7ffdc994fb34,278059640,0,0x0,8
tick,0x7ffdc994fb34,278075474,0,0x0,8
tick,0x7ffdc994fb34,278091663,0,0x0,8
tick,0x7ffdc994fb34,278107669,0,0x0,8
tick,0x7ffdc994fb34,278122901,0,0x0,8
tick,0x7ffdc994fb34,278137712,0,0x0,8
tick,0x7ffdc994fb34,278152860,0,0x0,8
tick,0x7ffdc994fb34,278168126,0,0x0,8
tick,0x7ffdc994fb34,278183192,0,0x0,8
tick,0x7ffdc994fb34,278198892,0,0x0,8
tick,0x7ffdc994fb34,278215015,0,0x0,8
tick,0x7ffdc994fb34,278230562,0,0x0,8
tick,0x7ffdc994fb34,278246163,0,0x0,8
tick,0x7ffdc994fb34,278261381,0,0x0,8
tick,0x7ffdc994fb34,278277117,0,0x0,8
tick,0x7ffdc994fb34,278292500,0,0x0,8
tick,0x7ffdc994fb34,278308385,0,0x0,8
tick,0x7ffdc994fb34,278323399,0,0x0,8
tick,0x7ffdc994fb34,278338988,0,0x0,8
tick,0x7ffdc994fb34,278354754,0,0x0,8
tick,0x7ffdc994fb34,278370273,0,0x0,8
tick,0x7ffdc994fb34,278385765,0,0x0,8
tick,0x7ffdc994fb34,278401391,0,0x0,8
tick,0x7ffdc994fb34,278417124,0,0x0,8
tick,0x7ffdc994fb34,278432378,0,0x0,8
tick,0x7ffdc994fb34,278448195,0,0x0,8
tick,0x7ffdc994fb34,278463340,0,0x0,8
tick,0x7ffdc994fb34,278479193,0,0x0,8
tick,0x7ffdc994fb34,278494284,0,0x0,8
tick,0x7ffdc994fb34,278510568,0,0x0,8
tick,0x7ffdc994fb34,278526368,0,0x0,8
tick,0x7ffdc994fb34,278542072,0,0x0,8
tick,0x7ffdc994fb34,278557544,0,0x0,8
tick,0x7ffdc994fb34,278572658,0,0x0,8
tick,0x7ffdc994fb34,278588700,0,0x0,8
tick,0x7ffdc994fb34,278604621,0,0x0,8
tick,0x7ffdc994fb34,278620206,0,0x0,8
tick,0x7ffdc994fb34,278635161,0,0x0,8
tick,0x7ffdc994fb34,278651290,0,0x0,8
tick,0x7ffdc994fb34,278666930,0,0x0,8
tick,0x7ffdc994fb34,278682214,0,0x0,8
tick,0x7ffdc994fb34,278698037,0,0x0,8
tick,0x7ffdc994fb34,278713215,0,0x0,8
tick,0x7ffdc994fb34,278728753,0,0x0,8
tick,0x7ffdc994fb34,278744272,0,0x0,8
tick,0x7ffdc994fb34,278759719,0,0x0,8
tick,0x7ffdc994fb34,278775624,0,0x0,8
tick,0x7ffdc994fb34,278791045,0,0x0,8
tick,0x7ffdc994fb34,278805748,0,0x0,8
tick,0x7ffdc994fb34,278821906,0,0x0,8
tick,0x7ffdc994fb34,278837074,0,0x0,8
tick,0x7ffdc994fb34,278852697,0,0x0,8
tick,0x7ffdc994fb34,278868576,0,0x0,8
tick,0x7ffdc994fb34,278883544,0,0x0,8
tick,0x7ffdc994fb34,278899152,0,0x0,8
tick,0x7ffdc994fb34,278914460,0,0x0,8
tick,0x7ffdc994fb34,278929975,0,0x0,8
tick,0x7ffdc994fb34,278945897,0,0x0,8
tick,0x7ffdc994fb34,278962369,0,0x0,8
tick,0x7ffdc994fb34,278978017,0,0x0,8
tick,0x7ffdc994fb34,278993751,0,0x0,8
tick,0x7ffdc994fb34,279009440,0,0x0,8
tick,0x7ffdc994fb34,279025053,0,0x0,8
tick,0x7ffdc994fb34,279040726,0,0x0,8
tick,0x7ffdc994fb34,279056458,0,0x0,8
tick,0x7ffdc994fb34,279072062,0,0x0,8
tick,0x7ffdc994fb34,279087845,0,0x0,8
tick,0x7ffdc994fb34,279103005,0,0x0,8
tick,0x7ffdc994fb34,279118364,0,0x0,8
tick,0x7ffdc994fb34,279134212,0,0x0,8
tick,0x7ffdc994fb34,279149837,0,0x0,8
tick,0x7ffdc994fb34,279165009,0,0x0,8
tick,0x7ffdc994fb34,279180638,0,0x0,8
tick,0x7ffdc994fb34,279196104,0,0x0,8
tick,0x7ffdc994fb34,279211239,0,0x0,8
tick,0x7ffdc994fb34,279227339,0,0x0,8
tick,0x7ffdc994fb34,279242714,0,0x0,8
tick,0x7ffdc994fb34,279258110,0,0x0,8
tick,0x7ffdc994fb34,279273636,0,0x0,8
tick,0x7ffdc994fb34,279289595,0,0x0,8
tick,0x7ffdc994fb34,279304745,0,0x0,8
tick,0x7ffdc994fb34,279320089,0,0x0,8
tick,0x7ffdc994fb34,279335649,0,0x0,8
tick,0x7ffdc994fb34,279350902,0,0x0,8
tick,0x7ffdc994fb34,279366709,0,0x0,8
tick,0x7ffdc994fb34,279382281,0,0x0,8
tick,0x7ffdc994fb34,279397983,0,0x0,8
tick,0x7ffdc994fb34,279413422,0,0x0,8
tick,0x7ffdc994fb34,279428938,0,0x0,8
tick,0x7ffdc994fb34,279444189,0,0x0,8
tick,0x7ffdc994fb34,279459963,0,0x0,8
tick,0x7ffdc994fb34,279475224,0,0x0,8
tick,0x7ffdc994fb34,279490796,0,0x0,8
tick,0x7ffdc994fb34,279505998,0,0x0,8
tick,0x7ffdc994fb34,279521861,0,0x0,8
tick,0x7ffdc994fb34,279537421,0,0x0,8
tick,0x7ffdc994fb34,279552992,0,0x0,8
tick,0x7ffdc994fb34,279568327,0,0x0,8
tick,0x7ffdc994fb34,279584173,0,0x0,8
tick,0x7ffdc994fb34,279599726,0,0x0,8
tick,0x7ffdc994fb34,279614630,0,0x0,8
tick,0x7ffdc994fb34,279630247,0,0x0,8
tick,0x7ffdc994fb34,279645614,0,0x0,8
tick,0x7ffdc994fb34,279660910,0,0x0,8
tick,0x7ffdc994fb34,279676970,0,0x0,8
tick,0x7ffdc994fb34,279692593,0,0x0,8
tick,0x7ffdc994fb34,279708104,0,0x0,8
tick,0x7ffdc994fb34,279723223,0,0x0,8
tick,0x7ffdc994fb34,279738910,0,0x0,8
tick,0x7ffdc994fb34,279754173,0,0x0,8
tick,0x7ffdc994fb34,279769949,0,0x0,8
tick,0x7ffdc994fb34,279785320,0,0x0,8
tick,0x7ffdc994fb34,279800699,0,0x0,8
tick,0x7ffdc994fb34,279816137,0,0x0,8
tick,0x7ffdc994fb34,279831403,0,0x0,8
tick,0x7ffdc994fb34,279847415,0,0x0,8
tick,0x7ffdc994fb34,279862707,0,0x0,8
tick,0x7ffdc994fb34,279878564,0,0x0,8
tick,0x7ffdc994fb34,279894076,0,0x0,8
tick,0x7ffdc994fb34,279909795,0,0x0,8
tick,0x7ffdc994fb34,279925372,0,0x0,8
tick,0x7ffdc994fb34,279941528,0,0x0,8
tick,0x7ffdc994fb34,279957060,0,0x0,8
tick,0x7ffdc994fb34,279973135,0,0x0,8
tick,0x7ffdc994fb34,279988568,0,0x0,8
tick,0x7ffdc994fb34,280004074,0,0x0,8
tick,0x7ffdc994fb34,280019202,0,0x0,8
tick,0x7ffdc994fb34,280034765,0,0x0,8
tick,0x7ffdc994fb34,280050008,0,0x0,8
tick,0x7ffdc994fb34,280065486,0,0x0,8
tick,0x7ffdc994fb34,280080754,0,0x0,8
tick,0x7ffdc994fb34,280095936,0,0x0,8
tick,0x7ffdc994fb34,280111826,0,0x0,8
tick,0x7ffdc994fb34,280127884,0,0x0,8
tick,0x7ffdc994fb34,280142809,0,0x0,8
tick,0x7ffdc994fb34,280158088,0,0x0,8
tick,0x7ffdc994fb34,280173241,0,0x0,8
tick,0x7ffdc994fb34,280189392,0,0x0,8
tick,0x7ffdc994fb34,280204890,0,0x0,8
tick,0x7ffdc994fb34,280220548,0,0x0,8
tick,0x7ffdc994fb34,280235928,0,0x0,8
tick,0x7ffdc994fb34,280251596,0,0x0,8
tick,0x7ffdc994fb34,280267025,0,0x0,8
tick,0x7ffdc994fb34,280282575,0,0x0,8
tick,0x7ffdc994fb34,280297794,0,0x0,8
tick,0x7ffdc994fb34,280313077,0,0x0,8
tick,0x7ffdc994fb34,280329012,0,0x0,8
tick,0x7ffdc994fb34,280345062,0,0x0,8
tick,0x7ffdc994fb34,280360590,0,0x0,8
tick,0x7ffdc994fb34,280375950,0,0x0,8
tick,0x7ffdc994fb34,280391129,0,0x0,8
tick,0x7ffdc994fb34,280406644,0,0x0,8
tick,0x7ffdc994fb34,280422839,0,0x0,8
tick,0x7ffdc994fb34,280438406,0,0x0,8
tick,0x7ffdc994fb34,280454646,0,0x0,8
tick,0x7ffdc994fb34,280469936,0,0x0,8
tick,0x7ffdc994fb34,280485566,0,0x0,8
tick,0x7ffdc994fb34,280501205,0,0x0,8
tick,0x7ffdc994fb34,280516697,0,0x0,8
tick,0x7ffdc994fb34,280532155,0,0x0,8
tick,0x7ffdc994fb34,280547566,0,0x0,8
tick,0x7ffdc994fb34,280563452,0,0x0,8
tick,0x7ffdc994fb34,280579030,0,0x0,8
tick,0x7ffdc994fb34,280594944,0,0x0,8
tick,0x7ffdc994fb34,280610414,0,0x0,8
tick,0x7ffdc994fb34,280625966,0,0x0,8
tick,0x7ffdc994fb34,280641428,0,0x0,8
tick,0x7ffdc994fb34,280657157,0,0x0,8
tick,0x7ffdc994fb34,280672345,0,0x0,8
tick,0x7ffdc994fb34,280687836,0,0x0,8
tick,0x7ffdc994fb34,280703215,0,0x0,8
tick,0x7ffdc994fb34,280718749,0,0x0,8
tick,0x7ffdc994fb34,280734260,0,0x0,8
tick,0x7ffdc994fb34,280749698,0,0x0,8
tick,0x7ffdc994fb34,280764734,0,0x0,8
tick,0x7ffdc994fb34,280780706,0,0x0,8
tick,0x7ffdc994fb34,280795830,0,0x0,8
tick,0x7ffdc994fb34,280811510,0,0x0,8
tick,0x7ffdc994fb34,280827256,0,0x0,8
tick,0x7ffdc994fb34,280842568,0,0x0,8
tick,0x7ffdc994fb34,280857920,0,0x0,8
tick,0x7ffdc994fb34,280873205,0,0x0,8
tick,0x7ffdc994fb34,280889267,0,0x0,8
tick,0x7ffdc994fb34,280904711,0,0x0,8
tick,0x7ffdc994fb34,280920515,0,0x0,8
tick,0x7ffdc994fb34,280935895,0,0x0,8
tick,0x7ffdc994fb34,280951099,0,0x0,8
tick,0x7ffdc994fb34,280966504,0,0x0,8
tick,0x7ffdc994fb34,280981916,0,0x0,8
tick,0x7ffdc994fb34,280996714,0,0x0,8
tick,0x7ffdc994fb34,281012663,0,0x0,8
tick,0x7ffdc994fb34,281028049,0,0x0,8
tick,0x7ffdc994fb34,281043806,0,0x0,8
tick,0x7ffdc994fb34,281059108,0,0x0,8
tick,0x7ffdc994fb34,281074619,0,0x0,8
tick,0x7ffdc994fb34,281091159,0,0x0,8
tick,0x7ffdc994fb34,281106853,0,0x0,8
tick,0x7ffdc994fb34,281122093,0,0x0,8
tick,0x7ffdc994fb34,281138237,0,0x0,8
tick,0x7ffdc994fb34,281154012,0,0x0,8
tick,0x7ffdc994fb34,281169694,0,0x0,8
tick,0x7ffdc994fb34,281185117,0,0x0,8
tick,0x7ffdc994fb34,281200955,0,0x0,8
tick,0x7ffdc994fb34,281216341,0,0x0,8
tick,0x7ffdc994fb34,281231933,0,0x0,8
tick,0x7ffdc994fb34,281247066,0,0x0,8
tick,0x7ffdc994fb34,281263110,0,0x0,8
tick,0x7ffdc994fb34,281278377,0,0x0,8
tick,0x7ffdc994fb34,281293811,0,0x0,8
tick,0x7ffdc994fb34,281309552,0,0x0,8
tick,0x7ffdc994fb34,281324865,0,0x0,8
tick,0x7ffdc994fb34,281340720,0,0x0,8
tick,0x7ffdc994fb34,281355964,0,0x0,8
tick,0x7ffdc994fb34,281371312,0,0x0,8
tick,0x7ffdc994fb34,281386897,0,0x0,8
tick,0x7ffdc994fb34,281402186,0,0x0,8
tick,0x7ffdc994fb34,281418068,0,0x0,8
tick,0x7ffdc994fb34,281433221,0,0x0,8
tick,0x7ffdc994fb34,281449120,0,0x0,8
tick,0x7ffdc994fb34,281464472,0,0x0,8
tick,0x7ffdc994fb34,281480064,0,0x0,8
tick,0x7ffdc994fb34,281495827,0,0x0,8
tick,0x7ffdc994fb34,281511958,0,0x0,8
tick,0x7ffdc994fb34,281527488,0,0x0,8
tick,0x7ffdc994fb34,281542865,0,0x0,8
tick,0x7ffdc994fb34,281557996,0,0x0,8
tick,0x7ffdc994fb34,281573374,0,0x0,8
tick,0x7ffdc994fb34,281589148,0,0x0,8
tick,0x7ffdc994fb34,281604659,0,0x0,8
tick,0x7ffdc994fb34,281620493,0,0x0,8
tick,0x7ffdc994fb34,281636523,0,0x0,8
tick,0x7ffdc994fb34,281651865,0,0x0,8
tick,0x7ffdc994fb34,281666821,0,0x0,8
tick,0x7ffdc994fb34,281683057,0,0x0,8
tick,0x7ffdc994fb34,281698763,0,0x0,8
tick,0x7ffdc994fb34,281714090,0,0x0,8
tick,0x7ffdc994fb34,281729602,0,0x0,8
tick,0x7ffdc994fb34,281745453,0,0x0,8
tick,0x7ffdc994fb34,281760615,0,0x0,8
tick,0x7ffdc994fb34,281776387,0,0x0,8
tick,0x7ffdc994fb34,281791699,0,0x0,8
tick,0x7ffdc994fb34,281807689,0,0x0,8
tick,0x7ffdc994fb34,281822914,0,0x0,8
tick,0x7ffdc994fb34,281838467,0,0x0,8
tick,0x7ffdc994fb34,281854038,0,0x0,8
tick,0x7ffdc994fb34,281869496,0,0x0,8
tick,0x7ffdc994fb34,281884956,0,0x0,8
tick,0x7ffdc994fb34,281900430,0,0x0,8
tick,0x7ffdc994fb34,281916351,0,0x0,8
tick,0x7ffdc994fb34,281932192,0,0x0,8
tick,0x7ffdc994fb34,281947970,0,0x0,8
tick,0x7ffdc994fb34,281963709,0,0x0,8
tick,0x7ffdc994fb34,281979311,0,0x0,8
tick,0x7ffdc994fb34,281994614,0,0x0,8
tick,0x7ffdc994fb34,282009632,0,0x0,8
tick,0x7ffdc994fb34,282026196,0,0x0,8
tick,0x7ffdc994fb34,282041404,0,0x0,8
tick,0x7ffdc994fb34,282056823,0,0x0,8
tick,0x7ffdc994fb34,282072559,0,0x0,8
tick,0x7ffdc994fb34,282088100,0,0x0,8
tick,0x7ffdc994fb34,282103831,0,0x0,8
tick,0x7ffdc994fb34,282119531,0,0x0,8
tick,0x7ffdc994fb34,282134450,0,0x0,8
tick,0x7ffdc994fb34,282149971,0,0x0,8
tick,0x7ffdc994fb34,282165033,0,0x0,8
tick,0x7ffdc994fb34,282180800,0,0x0,8
tick,0x7ffdc994fb34,282195996,0,0x0,8
tick,0x7ffdc994fb34,282211747,0,0x0,8
tick,0x7ffdc994fb34,282227387,0,0x0,8
tick,0x7ffdc994fb34,282242944,0,0x0,8
tick,0x7ffdc994fb34,282258733,0,0x0,8
tick,0x7ffdc994fb34,282273505,0,0x0,8
tick,0x7ffdc994fb34,282289257,0,0x0,8
tick,0x7ffdc994fb34,282304530,0,0x0,8
tick,0x7ffdc994fb34,282319992,0,0x0,8
tick,0x7ffdc994fb34,282335670,0,0x0,8
tick,0x7ffdc994fb34,282351865,0,0x0,8
tick,0x7ffdc994fb34,282367672,0,0x0,8
tick,0x7ffdc994fb34,282382924,0,0x0,8
tick,0x7ffdc994fb34,282399109,0,0x0,8
tick,0x7ffdc994fb34,282415140,0,0x0,8
tick,0x7ffdc994fb34,282430546,0,0x0,8
tick,0x7ffdc994fb34,282446358,0,0x0,8
tick,0x7ffdc994fb34,282461944,0,0x0,8
tick,0x7ffdc994fb34,282477619,0,0x0,8
tick,0x7ffdc994fb34,282493211,0,0x0,8
tick,0x7ffdc994fb34,282508617,0,0x0,8
tick,0x7ffdc994fb34,282523818,0,0x0,8
tick,0x7ffdc994fb34,282538941,0,0x0,8
tick,0x7ffdc994fb34,282554719,0,0x0,8
tick,0x7ffdc994fb34,282570222,0,0x0,8
tick,0x7ffdc994fb34,282585659,0,0x0,8
tick,0x7ffdc994fb34,282600545,0,0x0,8
tick,0x7ffdc994fb34,282616802,0,0x0,8
tick,0x7ffdc994fb34,282631346,0,0x0,8
tick,0x7ffdc994fb34,282646974,0,0x0,8
tick,0x7ffdc994fb34,282662330,0,0x0,8
tick,0x7ffdc994fb34,282677817,0,0x0,8
tick,0x7ffdc994fb34,282693210,0,0x0,8
tick,0x7ffdc994fb34,282709110,0,0x0,8
tick,0x7ffdc994fb34,282725014,0,0x0,8
tick,0x7ffdc994fb34,282740450,0,0x0,8
tick,0x7ffdc994fb34,282756088,0,0x0,8
tick,0x7ffdc994fb34,282771314,0,0x0,8
tick,0x7ffdc994fb34,282786709,0,0x0,8
tick,0x7ffdc994fb34,282802608,0,0x0,8
tick,0x7ffdc994fb34,282817959,0,0x0,8
tick,0x7ffdc994fb34,282833488,0,0x0,8
tick,0x7ffdc994fb34,282849067,0,0x0,8
tick,0x7ffdc994fb34,282864218,0,0x0,8
tick,0x7ffdc994fb34,282879873,0,0x0,8
tick,0x7ffdc994fb34,282895388,0,0x0,8
tick,0x7ffdc994fb34,282911161,0,0x0,8
tick,0x7ffdc994fb34,282926156,0,0x0,8
tick,0x7ffdc994fb34,282941974,0,0x0,8
tick,0x7ffdc994fb34,282957346,0,0x0,8
tick,0x7ffdc994fb34,282972962,0,0x0,8
tick,0x7ffdc994fb34,282988337,0,0x0,8
tick,0x7ffdc994fb34,283003366,0,0x0,8
tick,0x7ffdc994fb34,283019334,0,0x0,8
tick,0x7ffdc994fb34,283034571,0,0x0,8
tick,0x7ffdc994fb34,283049946,0,0x0,8
tick,0x7ffdc994fb34,283065365,0,0x0,8
tick,0x7ffdc994fb34,283081257,0,0x0,8
tick,0x7ffdc994fb34,283096995,0,0x0,8
tick,0x7ffdc994fb34,283112732,0,0x0,8
tick,0x7ffdc994fb34,283127991,0,0x0,8
tick,0x7ffdc994fb34,283143347,0,0x0,8
tick,0x7ffdc994fb34,283159035,0,0x0,8
tick,0x7ffdc994fb34,283174554,0,0x0,8
tick,0x7ffdc994fb34,283190173,0,0x0,8
tick,0x7ffdc994fb34,283205327,0,0x0,8
tick,0x7ffdc994fb34,283220972,0,0x0,8
tick,0x7ffdc994fb34,283236547,0,0x0,8
tick,0x7ffdc994fb34,283252803,0,0x0,8
tick,0x7ffdc994fb34,283269081,0,0x0,8
tick,0x7ffdc994fb34,283284056,0,0x0,8
tick,0x7ffdc994fb34,283299859,0,0x0,8
tick,0x7ffdc994fb34,283315208,0,0x0,8
tick,0x7ffdc994fb34,283331064,0,0x0,8
tick,0x7ffdc994fb34,283346703,0,0x0,8
tick,0x7ffdc994fb34,283361552,0,0x0,8
tick,0x7ffdc994fb34,283377512,0,0x0,8
tick,0x7ffdc994fb34,283392530,0,0x0,8
tick,0x7ffdc994fb34,283408044,0,0x0,8
tick,0x7ffdc994fb34,283423649,0,0x0,8
tick,0x7ffdc994fb34,283439179,0,0x0,8
tick,0x7ffdc994fb34,283454771,0,0x0,8
tick,0x7ffdc994fb34,283470556,0,0x0,8
tick,0x7ffdc994fb34,283485816,0,0x0,8
tick,0x7ffdc994fb34,283501583,0,0x0,8
tick,0x7ffdc994fb34,283517217,0,0x0,8
tick,0x7ffdc994fb34,283532906,0,0x0,8
tick,0x7ffdc994fb34,283548676,0,0x0,8
tick,0x7ffdc994fb34,283564649,0,0x0,8
tick,0x7ffdc994fb34,283579973,0,0x0,8
tick,0x7ffdc994fb34,283595188,0,0x0,8
tick,0x7ffdc994fb34,283610191,0,0x0,8
tick,0x7ffdc994fb34,283625659,0,0x0,8
tick,0x7ffdc994fb34,283641195,0,0x0,8
tick,0x7ffdc994fb34,283656492,0,0x0,8
tick,0x7ffdc994fb34,283672170,0,0x0,8
tick,0x7ffdc994fb34,283687646,0,0x0,8
tick,0x7ffdc994fb34,283702738,0,0x0,8
tick,0x7ffdc994fb34,283718109,0,0x0,8
tick,0x7ffdc994fb34,283733470,0,0x0,8
tick,0x7ffdc994fb34,283748415,0,0x0,8
tick,0x7ffdc994fb34,283763582,0,0x0,8
tick,0x7ffdc994fb34,283779308,0,0x0,8
tick,0x7ffdc994fb34,283794700,0,0x0,8
tick,0x7ffdc994fb34,283810610,0,0x0,8
tick,0x7ffdc994fb34,283825753,0,0x0,8
tick,0x7ffdc994fb34,283841370,0,0x0,8
tick,0x7ffdc994fb34,283856817,0,0x0,8
tick,0x7ffdc994fb34,283872881,0,0x0,8
tick,0x7ffdc994fb34,283888816,0,0x0,8
tick,0x7ffdc994fb34,283903827,0,0x0,8
tick,0x7ffdc994fb34,283919475,0,0x0,8
tick,0x7ffdc994fb34,283934803,0,0x0,8
tick,0x7ffdc994fb34,283950597,0,0x0,8
tick,0x7ffdc994fb34,283966050,0,0x0,8
tick,0x7ffdc994fb34,283981634,0,0x0,8
tick,0x7ffdc994fb34,283997404,0,0x0,8
tick,0x7ffdc994fb34,284013599,0,0x0,8
tick,0x7ffdc994fb34,284029310,0,0x0,8
tick,0x7ffdc994fb34,284045546,0,0x0,8
tick,0x7ffdc994fb34,284060782,0,0x0,8
tick,0x7ffdc994fb34,284076239,0,0x0,8
tick,0x7ffdc994fb34,284091868,0,0x0,8
tick,0x7ffdc994fb34,284107620,0,0x0,8
tick,0x7ffdc994fb34,284122879,0,0x0,8
tick,0x7ffdc994fb34,284138241,0,0x0,8
tick,0x7ffdc994fb34,284153944,0,0x0,8
tick,0x7ffdc994fb34,284169490,0,0x0,8
tick,0x7ffdc994fb34,284185389,0,0x0,8
tick,0x7ffdc994fb34,284200665,0,0x0,8
tick,0x7ffdc994fb34,284216276,0,0x0,8
tick,0x7ffdc994fb34,284232439,0,0x0,8
tick,0x7ffdc994fb34,284247857,0,0x0,8
tick,0x7ffdc994fb34,284263082,0,0x0,8
tick,0x7ffdc994fb34,284278677,0,0x0,8
tick,0x7ffdc994fb34,284294351,0,0x0,8
tick,0x7ffdc994fb34,284310167,0,0x0,8
tick,0x7ffdc994fb34,284325418,0,0x0,8
tick,0x7ffdc994fb34,284341511,0,0x0,8
tick,0x7ffdc994fb34,284357516,0,0x0,8
tick,0x7ffdc994fb34,284373597,0,0x0,8
tick,0x7ffdc994fb34,284388873,0,0x0,8
tick,0x7ffdc994fb34,284404366,0,0x0,8
tick,0x7ffdc994fb34,284420034,0,0x0,8
tick,0x7ffdc994fb34,284435368,0,0x0,8
tick,0x7ffdc994fb34,284451081,0,0x0,8
tick,0x7ffdc994fb34,284466504,0,0x0,8
tick,0x7ffdc994fb34,284482130,0,0x0,8
tick,0x7ffdc994fb34,284497456,0,0x0,8
tick,0x7ffdc994fb34,284513264,0,0x0,8
tick,0x7ffdc994fb34,284528552,0,0x0,8
tick,0x7ffdc994fb34,284544102,0,0x0,8
tick,0x7ffdc994fb34,284559673,0,0x0,8
tick,0x7ffdc994fb34,284575163,0,0x0,8
tick,0x7ffdc994fb34,284590903,0,0x0,8
tick,0x7ffdc994fb34,284606611,0,0x0,8
tick,0x7ffdc994fb34,284622361,0,0x0,8
tick,0x7ffdc994fb34,284637762,0,0x0,8
tick,0x7ffdc994fb34,284653414,0,0x0,8
tick,0x7ffdc994fb34,284668911,0,0x0,8
tick,0x7ffdc994fb34,284684361,0,0x0,8
tick,0x7ffdc994fb34,284699904,0,0x0,8
tick,0x7ffdc994fb34,284714897,0,0x0,8
tick,0x7ffdc994fb34,284730796,0,0x0,8
tick,0x7ffdc994fb34,284746464,0,0x0,8
tick,0x7ffdc994fb34,284762122,0,0x0,8
tick,0x7ffdc994fb34,284777668,0,0x0,8
tick,0x7ffdc994fb34,284792567,0,0x0,8
tick,0x7ffdc994fb34,284808009,0,0x0,8
tick,0x7ffdc994fb34,284823084,0,0x0,8
tick,0x7ffdc994fb34,284838737,0,0x0,8
tick,0x7ffdc994fb34,284853830,0,0x0,8
tick,0x7ffdc994fb34,284869609,0,0x0,8
tick,0x7ffdc994fb34,284884819,0,0x0,8
tick,0x7ffdc994fb34,284900488,0,0x0,8
tick,0x7ffdc994fb34,284915986,0,0x0,8
tick,0x7ffdc994fb34,284931553,0,0x0,8
tick,0x7ffdc994fb34,284947279,0,0x0,8
tick,0x7ffdc994fb34,284962864,0,0x0,8
tick,0x7ffdc994fb34,284978689,0,0x0,8
tick,0x7ffdc994fb34,284993826,0,0x0,8
tick,0x7ffdc994fb34,285009620,0,0x0,8
tick,0x7ffdc994fb34,285025266,0,0x0,8
tick,0x7ffdc994fb34,285040547,0,0x0,8
tick,0x7ffdc994fb34,285055787,0,0x0,8
tick,0x7ffdc994fb34,285071756,0,0x0,8
tick,0x7ffdc994fb34,285087076,0,0x0,8
tick,0x7ffdc994fb34,285102726,0,0x0,8
tick,0x7ffdc994fb34,285118549,0,0x0,8
tick,0x7ffdc994fb34,285134016,0,0x0,8
tick,0x7ffdc994fb34,285149636,0,0x0,8
tick,0x7ffdc994fb34,285164898,0,0x0,8
tick,0x7ffdc994fb34,285180765,0,0x0,8
tick,0x7ffdc994fb34,285196177,0,0x0,8
tick,0x7ffdc994fb34,285212346,0,0x0,8
tick,0x7ffdc994fb34,285227813,0,0x0,8
tick,0x7ffdc994fb34,285243335,0,0x0,8
tick,0x7ffdc994fb34,285259194,0,0x0,8
tick,0x7ffdc994fb34,285274040,0,0x0,8
tick,0x7ffdc994fb34,285289803,0,0x0,8
tick,0x7ffdc994fb34,285304888,0,0x0,8
tick,0x7ffdc994fb34,285320541,0,0x0,8
tick,0x7ffdc994fb34,285335837,0,0x0,8
tick,0x7ffdc994fb34,285351884,0,0x0,8
tick,0x7ffdc994fb34,285367731,0,0x0,8
tick,0x7ffdc994fb34,285383216,0,0x0,8
tick,0x7ffdc994fb34,285399335,0,0x0,8
tick,0x7ffdc994fb34,285414748,0,0x0,8
tick,0x7ffdc994fb34,285430025,0,0x0,8
tick,0x7ffdc994fb34,285445700,0,0x0,8
tick,0x7ffdc994fb34,285461461,0,0x0,8
tick,0x7ffdc994fb34,285477728,0,0x0,8
tick,0x7ffdc994fb34,285493081,0,0x0,8
tick,0x7ffdc994fb34,285508491,0,0x0,8
tick,0x7ffdc994fb34,285523575,0,0x0,8
tick,0x7ffdc994fb34,285539470,0,0x0,8
tick,0x7ffdc994fb34,285554717,0,0x0,8
tick,0x7ffdc994fb34,285570148,0,0x0,8
tick,0x7ffdc994fb34,285585133,0,0x0,8
tick,0x7ffdc994fb34,285600633,0,0x0,8
tick,0x7ffdc994fb34,285616376,0,0x0,8
tick,0x7ffdc994fb34,285632109,0,0x0,8
tick,0x7ffdc994fb34,285647773,0,0x0,8
tick,0x7ffdc994fb34,285663137,0,0x0,8
tick,0x7ffdc994fb34,285678424,0,0x0,8
tick,0x7ffdc994fb34,285694150,0,0x0,8
tick,0x7ffdc994fb34,285709885,0,0x0,8
tick,0x7ffdc994fb34,285725062,0,0x0,8
tick,0x7ffdc994fb34,285740868,0,0x0,8
tick,0x7ffdc994fb34,285756280,0,0x0,8
tick,0x7ffdc994fb34,285771512,0,0x0,8
tick,0x7ffdc994fb34,285787226,0,0x0,8
tick,0x7ffdc994fb34,285802413,0,0x0,8
tick,0x7ffdc994fb34,285818225,0,0x0,8
tick,0x7ffdc994fb34,285834177,0,0x0,8
tick,0x7ffdc994fb34,285849812,0,0x0,8
tick,0x7ffdc994fb34,285865013,0,0x0,8
tick,0x7ffdc994fb34,285880574,0,0x0,8
tick,0x7ffdc994fb34,285896032,0,0x0,8
tick,0x7ffdc994fb34,285911242,0,0x0,8
tick,0x7ffdc994fb34,285927528,0,0x0,8
tick,0x7ffdc994fb34,285943435,0,0x0,8
tick,0x7ffdc994fb34,285959609,0,0x0,8
tick,0x7ffdc994fb34,285975661,0,0x0,8
tick,0x7ffdc994fb34,285991383,0,0x0,8
tick,0x7ffdc994fb34,286007352,0,0x0,8
tick,0x7ffdc994fb34,286023504,0,0x0,8
tick,0x7ffdc994fb34,286039335,0,0x0,8
tick,0x7ffdc994fb34,286054542,0,0x0,8
tick,0x7ffdc994fb34,286069999,0,0x0,8
tick,0x7ffdc994fb34,286085346,0,0x0,8
tick,0x7ffdc994fb34,286100597,0,0x0,8
tick,0x7ffdc994fb34,286116262,0,0x0,8
tick,0x7ffdc994fb34,286131682,0,0x0,8
tick,0x7ffdc994fb34,286147149,0,0x0,8
tick,0x7ffdc994fb34,286163270,0,0x0,8
tick,0x7ffdc994fb34,286178774,0,0x0,8
tick,0x7ffdc994fb34,286193693,0,0x0,8
tick,0x7ffdc994fb34,286209133,0,0x0,8
tick,0x7ffdc994fb34,286224220,0,0x0,8
tick,0x7ffdc994fb34,286239919,0,0x0,8
tick,0x7ffdc994fb34,286255191,0,0x0,8
tick,0x7ffdc994fb34,286270455,0,0x0,8
tick,0x7ffdc994fb34,286286511,0,0x0,8
tick,0x7ffdc994fb34,286302179,0,0x0,8
tick,0x7ffdc994fb34,286317737,0,0x0,8
tick,0x7ffdc994fb34,286333220,0,0x0,8
tick,0x7ffdc994fb34,286348810,0,0x0,8
tick,0x7ffdc994fb34,286364726,0,0x0,8
tick,0x7ffdc994fb34,286380123,0,0x0,8
tick,0x7ffdc994fb34,286395482,0,0x0,8
tick,0x7ffdc994fb34,286410817,0,0x0,8
tick,0x7ffdc994fb34,286426712,0,0x0,8
tick,0x7ffdc994fb34,286442488,0,0x0,8
tick,0x7ffdc994fb34,286458307,0,0x0,8
tick,0x7ffdc994fb34,286473577,0,0x0,8
tick,0x7ffdc994fb34,286489326,0,0x0,8
tick,0x7ffdc994fb34,286504733,0,0x0,8
tick,0x7ffdc994fb34,286520342,0,0x0,8
tick,0x7ffdc994fb34,286535877,0,0x0,8
tick,0x7ffdc994fb34,286551540,0,0x0,8
tick,0x7ffdc994fb34,286567073,0,0x0,8
tick,0x7ffdc994fb34,286582382,0,0x0,8
tick,0x7ffdc994fb34,286598503,0,0x0,8
tick,0x7ffdc994fb34,286614391,0,0x0,8
tick,0x7ffdc994fb34,286629715,0,0x0,8
tick,0x7ffdc994fb34,286645571,0,0x0,8
tick,0x7ffdc994fb34,286661067,0,0x0,8
tick,0x7ffdc994fb34,286676997,0,0x0,8
tick,0x7ffdc994fb34,286692267,0,0x0,8
tick,0x7ffdc994fb34,286707898,0,0x0,8
tick,0x7ffdc994fb34,286723908,0,0x0,8
tick,0x7ffdc994fb34,286739441,0,0x0,8
tick,0x7ffdc994fb34,286755191,0,0x0,8
tick,0x7ffdc994fb34,286770657,0,0x0,8
tick,0x7ffdc994fb34,286786520,0,0x0,8
tick,0x7ffdc994fb34,286802055,0,0x0,8
tick,0x7ffdc994fb34,286817268,0,0x0,8
tick,0x7ffdc994fb34,286833164,0,0x0,8
tick,0x7ffdc994fb34,286848605,0,0x0,8
tick,0x7ffdc994fb34,286864191,0,0x0,8
tick,0x7ffdc994fb34,286879585,0,0x0,8
tick,0x7ffdc994fb34,286895028,0,0x0,8
tick,0x7ffdc994fb34,286910473,0,0x0,8
tick,0x7ffdc994fb34,286926035,0,0x0,8
tick,0x7ffdc994fb34,286941661,0,0x0,8
tick,0x7ffdc994fb34,286957562,0,0x0,8
tick,0x7ffdc994fb34,286973002,0,0x0,8
tick,0x7ffdc994fb34,286988854,0,0x0,8
tick,0x7ffdc994fb34,287004379,0,0x0,8
tick,0x7ffdc994fb34,287019803,0,0x0,8
tick,0x7ffdc994fb34,287034996,0,0x0,8
tick,0x7ffdc994fb34,287050122,0,0x0,8
tick,0x7ffdc994fb34,287065490,0,0x0,8
tick,0x7ffdc994fb34,287080654,0,0x0,8
tick,0x7ffdc994fb34,287095950,0,0x0,8
tick,0x7ffdc994fb34,287112056,0,0x0,8
tick,0x7ffdc994fb34,287127999,0,0x0,8
tick,0x7ffdc994fb34,287143948,0,0x0,8
tick,0x7ffdc994fb34,287159598,0,0x0,8
tick,0x7ffdc994fb34,287175148,0,0x0,8
tick,0x7ffdc994fb34,287190864,0,0x0,8
tick,0x7ffdc994fb34,287206424,0,0x0,8
tick,0x7ffdc994fb34,287221876,0,0x0,8
tick,0x7ffdc994fb34,287237170,0,0x0,8
tick,0x7ffdc994fb34,287252845,0,0x0,8
tick,0x7ffdc994fb34,287268564,0,0x0,8
tick,0x7ffdc994fb34,287283935,0,0x0,8
tick,0x7ffdc994fb34,287299399,0,0x0,8
tick,0x7ffdc994fb34,287314789,0,0x0,8
tick,0x7ffdc994fb34,287330750,0,0x0,8
tick,0x7ffdc994fb34,287346648,0,0x0,8
tick,0x7ffdc994fb34,287362563,0,0x0,8
tick,0x7ffdc994fb34,287378005,0,0x0,8
tick,0x7ffdc994fb34,287393558,0,0x0,8
tick,0x7ffdc994fb34,287408639,0,0x0,8
tick,0x7ffdc994fb34,287424293,0,0x0,8
tick,0x7ffdc994fb34,287439546,0,0x0,8
tick,0x7ffdc994fb34,287454872,0,0x0,8
tick,0x7ffdc994fb34,287470496,0,0x0,8
tick,0x7ffdc994fb34,287485812,0,0x0,8
tick,0x7ffdc994fb34,287501507,0,0x0,8
tick,0x7ffdc994fb34,287517085,0,0x0,8
tick,0x7ffdc994fb34,287532683,0,0x0,8
tick,0x7ffdc994fb34,287548305,0,0x0,8
tick,0x7ffdc994fb34,287564129,0,0x0,8
tick,0x7ffdc994fb34,287579870,0,0x0,8
tick,0x7ffdc994fb34,287595360,0,0x0,8
tick,0x7ffdc994fb34,287610687,0,0x0,8
tick,0x7ffdc994fb34,287626418,0,0x0,8
tick,0x7ffdc994fb34,287642312,0,0x0,8
tick,0x7ffdc994fb34,287658343,0,0x0,8
tick,0x7ffdc994fb34,287674027,0,0x0,8
tick,0x7ffdc994fb34,287689437,0,0x0,8
tick,0x7ffdc994fb34,287705679,0,0x0,8
tick,0x7ffdc994fb34,287721940,0,0x0,8
tick,0x7ffdc994fb34,287737052,0,0x0,8
tick,0x7ffdc994fb34,287753043,0,0x0,8
tick,0x7ffdc994fb34,287768889,0,0x0,8
tick,0x7ffdc994fb34,287784256,0,0x0,8
tick,0x7ffdc994fb34,287799968,0,0x0,8
tick,0x7ffdc994fb34,287815332,0,0x0,8
tick,0x7ffdc994fb34,287831071,0,0x0,8
tick,0x7ffdc994fb34,287846422,0,0x0,8
tick,0x7ffdc994fb34,287862125,0,0x0,8
tick,0x7ffdc994fb34,287877864,0,0x0,8
tick,0x7ffdc994fb34,287893425,0,0x0,8
tick,0x7ffdc994fb34,287908848,0,0x0,8
tick,0x7ffdc994fb34,287924211,0,0x0,8
tick,0x7ffdc994fb34,287939886,0,0x0,8
tick,0x7ffdc994fb34,287955168,0,0x0,8
tick,0x7ffdc994fb34,287970843,0,0x0,8
tick,0x7ffdc994fb34,287986833,0,0x0,8
tick,0x7ffdc994fb34,288002442,0,0x0,8
tick,0x7ffdc994fb34,288017865,0,0x0,8
tick,0x7ffdc994fb34,288033706,0,0x0,8
tick,0x7ffdc994fb34,288049625,0,0x0,8
tick,0x7ffdc994fb34,288065554,0,0x0,8
tick,0x7ffdc994fb34,288081090,0,0x0,8
tick,0x7ffdc994fb34,288096423,0,0x0,8
tick,0x7ffdc994fb34,288112717,0,0x0,8
tick,0x7ffdc994fb34,288128671,0,0x0,8
tick,0x7ffdc994fb34,288144726,0,0x0,8
tick,0x7ffdc994fb34,288160333,0,0x0,8
tick,0x7ffdc994fb34,288175499,0,0x0,8
tick,0x7ffdc994fb34,288191301,0,0x0,8
tick,0x7ffdc994fb34,288206470,0,0x0,8
tick,0x7ffdc994fb34,288222064,0,0x0,8
tick,0x7ffdc994fb34,288238139,0,0x0,8
tick,0x7ffdc994fb34,288254019,0,0x0,8
tick,0x7ffdc994fb34,288269116,0,0x0,8
tick,0x7ffdc994fb34,288284445,0,0x0,8
tick,0x7ffdc994fb34,288300074,0,0x0,8
tick,0x7ffdc994fb34,288315901,0,0x0,8
tick,0x7ffdc994fb34,288331089,0,0x0,8
tick,0x7ffdc994fb34,288346630,0,0x0,8
tick,0x7ffdc994fb34,288362553,0,0x0,8
tick,0x7ffdc994fb34,288377821,0,0x0,8
tick,0x7ffdc994fb34,288393559,0,0x0,8
tick,0x7ffdc994fb34,288408655,0,0x0,8
tick,0x7ffdc994fb34,288424771,0,0x0,8
tick,0x7ffdc994fb34,288440992,0,0x0,8
tick,0x7ffdc994fb34,288456995,0,0x0,8
tick,0x7ffdc994fb34,288472513,0,0x0,8
tick,0x7ffdc994fb34,288488319,0,0x0,8
tick,0x7ffdc994fb34,288504630,0,0x0,8
tick,0x7ffdc994fb34,288520046,0,0x0,8
tick,0x7ffdc994fb34,288535542,0,0x0,8
tick,0x7ffdc994fb34,288550333,0,0x0,8
tick,0x7ffdc994fb34,288566188,0,0x0,8
tick,0x7ffdc994fb34,288582467,0,0x0,8
tick,0x7ffdc994fb34,288597786,0,0x0,8
tick,0x7ffdc994fb34,288612919,0,0x0,8
tick,0x7ffdc994fb34,288628382,0,0x0,8
tick,0x7ffdc994fb34,288644242,0,0x0,8
tick,0x7ffdc994fb34,288659989,0,0x0,8
tick,0x7ffdc994fb34,288675478,0,0x0,8
tick,0x7ffdc994fb34,288690886,0,0x0,8
tick,0x7ffdc994fb34,288706432,0,0x0,8
tick,0x7ffdc994fb34,288722061,0,0x0,8
tick,0x7ffdc994fb34,288737413,0,0x0,8
tick,0x7ffdc994fb34,288752895,0,0x0,8
tick,0x7ffdc994fb34,288768580,0,0x0,8
tick,0x7ffdc994fb34,288783833,0,0x0,8
tick,0x7ffdc994fb34,288799800,0,0x0,8
tick,0x7ffdc994fb34,288815065,0,0x0,8
tick,0x7ffdc994fb34,288830471,0,0x0,8
tick,0x7ffdc994fb34,288846066,0,0x0,8
tick,0x7ffdc994fb34,288862003,0,0x0,8
tick,0x7ffdc994fb34,288877104,0,0x0,8
tick,0x7ffdc994fb34,288892623,0,0x0,8
tick,0x7ffdc994fb34,288908026,0,0x0,8
tick,0x7ffdc994fb34,288923173,0,0x0,8
tick,0x7ffdc994fb34,288939084,0,0x0,8
tick,0x7ffdc994fb34,288954438,0,0x0,8
tick,0x7ffdc994fb34,288969983,0,0x0,8
tick,0x7ffdc994fb34,288985714,0,0x0,8
tick,0x7ffdc994fb34,289001069,0,0x0,8
tick,0x7ffdc994fb34,289016106,0,0x0,8
tick,0x7ffdc994fb34,289031296,0,0x0,8
tick,0x7ffdc994fb34,289046928,0,0x0,8
tick,0x7ffdc994fb34,289062504,0,0x0,8
tick,0x7ffdc994fb34,289077904,0,0x0,8
tick,0x7ffdc994fb34,289093126,0,0x0,8
tick,0x7ffdc994fb34,289109596,0,0x0,8
tick,0x7ffdc994fb34,289124625,0,0x0,8
tick,0x7ffdc994fb34,289140372,0,0x0,8
tick,0x7ffdc994fb34,289155642,0,0x0,8
tick,0x7ffdc994fb34,289171566,0,0x0,8
tick,0x7ffdc994fb34,289186681,0,0x0,8
tick,0x7ffdc994fb34,289202950,0,0x0,8
tick,0x7ffdc994fb34,289218143,0,0x0,8
tick,0x7ffdc994fb34,289233969,0,0x0,8
tick,0x7ffdc994fb34,289249176,0,0x0,8
tick,0x7ffdc994fb34,289264310,0,0x0,8
tick,0x7ffdc994fb34,289280059,0,0x0,8
tick,0x7ffdc994fb34,289296024,0,0x0,8
tick,0x7ffdc994fb34,289311709,0,0x0,8
tick,0x7ffdc994fb34,289327238,0,0x0,8
tick,0x7ffdc994fb34,289342673,0,0x0,8
tick,0x7ffdc994fb34,289358183,0,0x0,8
tick,0x7ffdc994fb34,289373928,0,0x0,8
tick,0x7ffdc994fb34,289389667,0,0x0,8
tick,0x7ffdc994fb34,289404884,0,0x0,8
tick,0x7ffdc994fb34,289420338,0,0x0,8
tick,0x7ffdc994fb34,289436406,0,0x0,8
tick,0x7ffdc994fb34,289450767,0,0x0,8
tick,0x7ffdc994fb34,289466899,0,0x0,8
tick,0x7ffdc994fb34,289482244,0,0x0,8
tick,0x7ffdc994fb34,289497981,0,0x0,8
tick,0x7ffdc994fb34,289513133,0,0x0,8
tick,0x7ffdc994fb34,289528477,0,0x0,8
tick,0x7ffdc994fb34,289544462,0,0x0,8
tick,0x7ffdc994fb34,289559912,0,0x0,8
tick,0x7ffdc994fb34,289575276,0,0x0,8
tick,0x7ffdc994fb34,289591062,0,0x0,8
tick,0x7ffdc994fb34,289606650,0,0x0,8
tick,0x7ffdc994fb34,289622104,0,0x0,8
tick,0x7ffdc994fb34,289637922,0,0x0,8
tick,0x7ffdc994fb34,289653371,0,0x0,8
tick,0x7ffdc994fb34,289669088,0,0x0,8
tick,0x7ffdc994fb34,289684266,0,0x0,8
tick,0x7ffdc994fb34,289699725,0,0x0,8
tick,0x7ffdc994fb34,289714587,0,0x0,8
tick,0x7ffdc994fb34,289730642,0,0x0,8
tick,0x7ffdc994fb34,289746044,0,0x0,8
tick,0x7ffdc994fb34,289761691,0,0x0,8
tick,0x7ffdc994fb34,289777381,0,0x0,8
tick,0x7ffdc994fb34,289792765,0,0x0,8
tick,0x7ffdc994fb34,289808550,0,0x0,8
tick,0x7ffdc994fb34,289823709,0,0x0,8
tick,0x7ffdc994fb34,289839460,0,0x0,8
tick,0x7ffdc994fb34,289854940,0,0x0,8
tick,0x7ffdc994fb34,289870418,0,0x0,8
tick,0x7ffdc994fb34,289885399,0,0x0,8
tick,0x7ffdc994fb34,289901025,0,0x0,8
tick,0x7ffdc994fb34,289916517,0,0x0,8
tick,0x7ffdc994fb34,289932076,0,0x0,8
tick,0x7ffdc994fb34,289947441,0,0x0,8
tick,0x7ffdc994fb34,289963020,0,0x0,8
tick,0x7ffdc994fb34,289978121,0,0x0,8
tick,0x7ffdc994fb34,289993531,0,0x0,8
tick,0x7ffdc994fb34,290008757,0,0x0,8
tick,0x7ffdc994fb34,290024170,0,0x0,8
tick,0x7ffdc994fb34,290039592,0,0x0,8
tick,0x7ffdc994fb34,290054797,0,0x0,8
tick,0x7ffdc994fb34,290071023,0,0x0,8
tick,0x7ffdc994fb34,290087024,0,0x0,8
tick,0x7ffdc994fb34,290102564,0,0x0,8
tick,0x7ffdc994fb34,290118348,0,0x0,8
tick,0x7ffdc994fb34,290133788,0,0x0,8
tick,0x7ffdc994fb34,290148801,0,0x0,8
tick,0x7ffdc994fb34,290165024,0,0x0,8
tick,0x7ffdc994fb34,290180454,0,0x0,8
tick,0x7ffdc994fb34,290195816,0,0x0,8
tick,0x7ffdc994fb34,290211023,0,0x0,8
tick,0x7ffdc994fb34,290226547,0,0x0,8
tick,0x7ffdc994fb34,290241903,0,0x0,8
tick,0x7ffdc994fb34,290258157,0,0x0,8
tick,0x7ffdc994fb34,290273992,0,0x0,8
tick,0x7ffdc994fb34,290289431,0,0x0,8
tick,0x7ffdc994fb34,290305039,0,0x0,8
tick,0x7ffdc994fb34,290319925,0,0x0,8
tick,0x7ffdc994fb34,290335733,0,0x0,8
tick,0x7ffdc994fb34,290351561,0,0x0,8
tick,0x7ffdc994fb34,290366997,0,0x0,8
tick,0x7ffdc994fb34,290382444,0,0x0,8
tick,0x7ffdc994fb34,290398056,0,0x0,8
tick,0x7ffdc994fb34,290413273,0,0x0,8
tick,0x7ffdc994fb34,290428929,0,0x0,8
tick,0x7ffdc994fb34,290444526,0,0x0,8
tick,0x7ffdc994fb34,290460299,0,0x0,8
tick,0x7ffdc994fb34,290476589,0,0x0,8
tick,0x7ffdc994fb34,290491934,0,0x0,8
tick,0x7ffdc994fb34,290507383,0,0x0,8
tick,0x7ffdc994fb34,290522940,0,0x0,8
tick,0x7ffdc994fb34,290538559,0,0x0,8
tick,0x7ffdc994fb34,290554666,0,0x0,8
tick,0x7ffdc994fb34,290570445,0,0x0,8
tick,0x7ffdc994fb34,290585731,0,0x0,8
tick,0x7ffdc994fb34,290601816,0,0x0,8
tick,0x7ffdc994fb34,290617043,0,0x0,8
tick,0x7ffdc994fb34,290632667,0,0x0,8
tick,0x7ffdc994fb34,290647852,0,0x0,8
tick,0x7ffdc994fb34,290663139,0,0x0,8
tick,0x7ffdc994fb34,290678942,0,0x0,8
tick,0x7ffdc994fb34,290694468,0,0x0,8
tick,0x7ffdc994fb34,290710188,0,0x0,8
tick,0x7ffdc994fb34,290725228,0,0x0,8
tick,0x7ffdc994fb34,290741033,0,0x0,8
tick,0x7ffdc994fb34,290756978,0,0x0,8
tick,0x7ffdc994fb34,290773118,0,0x0,8
tick,0x7ffdc994fb34,290788231,0,0x0,8
tick,0x7ffdc994fb34,290804257,0,0x0,8
tick,0x7ffdc994fb34,290819852,0,0x0,8
tick,0x7ffdc994fb34,290835448,0,0x0,8
tick,0x7ffdc994fb34,290850763,0,0x0,8
tick,0x7ffdc994fb34,290866550,0,0x0,8
tick,0x7ffdc994fb34,290881602,0,0x0,8
tick,0x7ffdc994fb34,290897074,0,0x0,8
tick,0x7ffdc994fb34,290912355,0,0x0,8
tick,0x7ffdc994fb34,290928004,0,0x0,8
tick,0x7ffdc994fb34,290943168,0,0x0,8
tick,0x7ffdc994fb34,290958200,0,0x0,8
tick,0x7ffdc994fb34,290973839,0,0x0,8
tick,0x7ffdc994fb34,290989945,0,0x0,8
tick,0x7ffdc994fb34,291005827,0,0x0,8
tick,0x7ffdc994fb34,291021819,0,0x0,8
tick,0x7ffdc994fb34,291037106,0,0x0,8
tick,0x7ffdc994fb34,291052296,0,0x0,8
tick,0x7ffdc994fb34,291068029,0,0x0,8
tick,0x7ffdc994fb34,291083153,0,0x0,8
tick,0x7ffdc994fb34,291099125,0,0x0,8
tick,0x7ffdc994fb34,291114588,0,0x0,8
tick,0x7ffdc994fb34,291130181,0,0x0,8
tick,0x7ffdc994fb34,291145792,0,0x0,8
tick,0x7ffdc994fb34,291161495,0,0x0,8
tick,0x7ffdc994fb34,291177106,0,0x0,8
tick,0x7ffdc994fb34,291192310,0,0x0,8
tick,0x7ffdc994fb34,291207819,0,0x0,8
tick,0x7ffdc994fb34,291223378,0,0x0,8
tick,0x7ffdc994fb34,291238996,0,0x0,8
tick,0x7ffdc994fb34,291254123,0,0x0,8
tick,0x7ffdc994fb34,291270312,0,0x0,8
tick,0x7ffdc994fb34,291285100,0,0x0,8
tick,0x7ffdc994fb34,291300244,0,0x0,8
tick,0x7ffdc994fb34,291315894,0,0x0,8
tick,0x7ffdc994fb34,291331241,0,0x0,8
tick,0x7ffdc994fb34,291347616,0,0x0,8
tick,0x7ffdc994fb34,291363332,0,0x0,8
tick,0x7ffdc994fb34,291379259,0,0x0,8
tick,0x7ffdc994fb34,291394723,0,0x0,8
tick,0x7ffdc994fb34,291410313,0,0x0,8
tick,0x7ffdc994fb34,291425917,0,0x0,8
tick,0x7ffdc994fb34,291441792,0,0x0,8
tick,0x7ffdc994fb34,291457009,0,0x0,8
tick,0x7ffdc994fb34,291472568,0,0x0,8
tick,0x7ffdc994fb34,291488709,0,0x0,8
tick,0x7ffdc994fb34,291503978,0,0x0,8
tick,0x7ffdc994fb34,291519715,0,0x0,8
tick,0x7ffdc994fb34,291535652,0,0x0,8
tick,0x7ffdc994fb34,291551204,0,0x0,8
tick,0x7ffdc994fb34,291566582,0,0x0,8
tick,0x7ffdc994fb34,291581959,0,0x0,8
tick,0x7ffdc994fb34,291597606,0,0x0,8
tick,0x7ffdc994fb34,291613224,0,0x0,8
tick,0x7ffdc994fb34,291628726,0,0x0,8
tick,0x7ffdc994fb34,291644075,0,0x0,8
tick,0x7ffdc994fb34,291659665,0,0x0,8
tick,0x7ffdc994fb34,291675095,0,0x0,8
tick,0x7ffdc994fb34,291691079,0,0x0,8
tick,0x7ffdc994fb34,291706657,0,0x0,8
tick,0x7ffdc994fb34,291722086,0,0x0,8
tick,0x7ffdc994fb34,291737515,0,0x0,8
tick,0x7ffdc994fb34,291753215,0,0x0,8
tick,0x7ffdc994fb34,291768618,0,0x0,8
tick,0x7ffdc994fb34,291784022,0,0x0,8
tick,0x7ffdc994fb34,291799584,0,0x0,8
tick,0x7ffdc994fb34,291814869,0,0x0,8
tick,0x7ffdc994fb34,291830514,0,0x0,8
tick,0x7ffdc994fb34,291845853,0,0x0,8
tick,0x7ffdc994fb34,291861596,0,0x0,8
tick,0x7ffdc994fb34,291876990,0,0x0,8
tick,0x7ffdc994fb34,291892382,0,0x0,8
tick,0x7ffdc994fb34,291907424,0,0x0,8
tick,0x7ffdc994fb34,291923360,0,0x0,8
tick,0x7ffdc994fb34,291938938,0,0x0,8
tick,0x7ffdc994fb34,291954460,0,0x0,8
tick,0x7ffdc994fb34,291970278,0,0x0,8
tick,0x7ffdc994fb34,291985514,0,0x0,8
tick,0x7ffdc994fb34,292001205,0,0x0,8
tick,0x7ffdc994fb34,292016635,0,0x0,8
tick,0x7ffdc994fb34,292032680,0,0x0,8
tick,0x7ffdc994fb34,292048005,0,0x0,8
tick,0x7ffdc994fb34,292063606,0,0x0,8
tick,0x7ffdc994fb34,292079629,0,0x0,8
tick,0x7ffdc994fb34,292095844,0,0x0,8
tick,0x7ffdc994fb34,292111135,0,0x0,8
tick,0x7ffdc994fb34,292126383,0,0x0,8
tick,0x7ffdc994fb34,292141798,0,0x0,8
tick,0x7ffdc994fb34,292157589,0,0x0,8
tick,0x7ffdc994fb34,292172730,0,0x0,8
tick,0x7ffdc994fb34,292188555,0,0x0,8
tick,0x7ffdc994fb34,292203582,0,0x0,8
tick,0x7ffdc994fb34,292219235,0,0x0,8
tick,0x7ffdc994fb34,292235131,0,0x0,8
tick,0x7ffdc994fb34,292250900,0,0x0,8
tick,0x7ffdc994fb34,292266863,0,0x0,8
tick,0x7ffdc994fb34,292282824,0,0x0,8
tick,0x7ffdc994fb34,292298492,0,0x0,8
tick,0x7ffdc994fb34,292313639,0,0x0,8
tick,0x7ffdc994fb34,292329253,0,0x0,8
tick,0x7ffdc994fb34,292344762,0,0x0,8
tick,0x7ffdc994fb34,292360620,0,0x0,8
tick,0x7ffdc994fb34,292375797,0,0x0,8
tick,0x7ffdc994fb34,292390716,0,0x0,8
tick,0x7ffdc994fb34,292406914,0,0x0,8
tick,0x7ffdc994fb34,292422467,0,0x0,8
tick,0x7ffdc994fb34,292438569,0,0x0,8
tick,0x7ffdc994fb34,292454204,0,0x0,8
tick,0x7ffdc994fb34,292470174,0,0x0,8
tick,0x7ffdc994fb34,292485208,0,0x0,8
tick,0x7ffdc994fb34,292501152,0,0x0,8
tick,0x7ffdc994fb34,292516153,0,0x0,8
tick,0x7ffdc994fb34,292531979,0,0x0,8
tick,0x7ffdc994fb34,292547225,0,0x0,8
tick,0x7ffdc994fb34,292563037,0,0x0,8
tick,0x7ffdc994fb34,292578177,0,0x0,8
tick,0x7ffdc994fb34,292593885,0,0x0,8
tick,0x7ffdc994fb34,292609106,0,0x0,8
tick,0x7ffdc994fb34,292624444,0,0x0,8
tick,0x7ffdc994fb34,292640309,0,0x0,8
tick,0x7ffdc994fb34,292656023,0,0x0,8
tick,0x7ffdc994fb34,292671874,0,0x0,8
tick,0x7ffdc994fb34,292687469,0,0x0,8
tick,0x7ffdc994fb34,292702545,0,0x0,8
tick,0x7ffdc994fb34,292718593,0,0x0,8
tick,0x7ffdc994fb34,292733946,0,0x0,8
tick,0x7ffdc994fb34,292749333,0,0x0,8
tick,0x7ffdc994fb34,292764366,0,0x0,8
tick,0x7ffdc994fb34,292780140,0,0x0,8
tick,0x7ffdc994fb34,292795041,0,0x0,8
tick,0x7ffdc994fb34,292810442,0,0x0,8
tick,0x7ffdc994fb34,292826027,0,0x0,8
tick,0x7ffdc994fb34,292841648,0,0x0,8
tick,0x7ffdc994fb34,292857625,0,0x0,8
tick,0x7ffdc994fb34,292872947,0,0x0,8
tick,0x7ffdc994fb34,292888684,0,0x0,8
tick,0x7ffdc994fb34,292903966,0,0x0,8
tick,0x7ffdc994fb34,292919582,0,0x0,8
tick,0x7ffdc994fb34,292935304,0,0x0,8
tick,0x7ffdc994fb34,292950878,0,0x0,8
tick,0x7ffdc994fb34,292966325,0,0x0,8
tick,0x7ffdc994fb34,292982097,0,0x0,8
tick,0x7ffdc994fb34,292998201,0,0x0,8
tick,0x7ffdc994fb34,293014086,0,0x0,8
tick,0x7ffdc994fb34,293029796,0,0x0,8
tick,0x7ffdc994fb34,293045231,0,0x0,8
tick,0x7ffdc994fb34,293060814,0,0x0,8
tick,0x7ffdc994fb34,293076297,0,0x0,8
tick,0x7ffdc994fb34,293092321,0,0x0,8
tick,0x7ffdc994fb34,293107870,0,0x0,8
tick,0x7ffdc994fb34,293123244,0,0x0,8
tick,0x7ffdc994fb34,293138914,0,0x0,8
tick,0x7ffdc994fb34,293154618,0,0x0,8
tick,0x7ffdc994fb34,293170340,0,0x0,8
tick,0x7ffdc994fb34,293185785,0,0x0,8
tick,0x7ffdc994fb34,293200783,0,0x0,8
tick,0x7ffdc994fb34,293216654,0,0x0,8
tick,0x7ffdc994fb34,293232150,0,0x0,8
tick,0x7ffdc994fb34,293247501,0,0x0,8
tick,0x7ffdc994fb34,293263284,0,0x0,8
tick,0x7ffdc994fb34,293278879,0,0x0,8
tick,0x7ffdc994fb34,293294064,0,0x0,8
tick,0x7ffdc994fb34,293309763,0,0x0,8
tick,0x7ffdc994fb34,293325204,0,0x0,8
tick,0x7ffdc994fb34,293340943,0,0x0,8
tick,0x7ffdc994fb34,293356398,0,0x0,8
tick,0x7ffdc994fb34,293372239,0,0x0,8
tick,0x7ffdc994fb34,293387652,0,0x0,8
tick,0x7ffdc994fb34,293402912,0,0x0,8
tick,0x7ffdc994fb34,293418761,0,0x0,8
tick,0x7ffdc994fb34,293434032,0,0x0,8
tick,0x7ffdc994fb34,293449608,0,0x0,8
tick,0x7ffdc994fb34,293465297,0,0x0,8
tick,0x7ffdc994fb34,293480459,0,0x0,8
tick,0x7ffdc994fb34,293495560,0,0x0,8
tick,0x7ffdc994fb34,293511580,0,0x0,8
tick,0x7ffdc994fb34,293527042,0,0x0,8
tick,0x7ffdc994fb34,293543051,0,0x0,8
tick,0x7ffdc994fb34,293558944,0,0x0,8
tick,0x7ffdc994fb34,293574104,0,0x0,8
tick,0x7ffdc994fb34,293589638,0,0x0,8
tick,0x7ffdc994fb34,293605064,0,0x0,8
tick,0x7ffdc994fb34,293621025,0,0x0,8
tick,0x7ffdc994fb34,293636469,0,0x0,8
tick,0x7ffdc994fb34,293651859,0,0x0,8
tick,0x7ffdc994fb34,293667452,0,0x0,8
tick,0x7ffdc994fb34,293683439,0,0x0,8
tick,0x7ffdc994fb34,293699623,0,0x0,8
tick,0x7ffdc994fb34,293714780,0,0x0,8
tick,0x7ffdc994fb34,293730173,0,0x0,8
tick,0x7ffdc994fb34,293746024,0,0x0,8
tick,0x7ffdc994fb34,293761096,0,0x0,8
tick,0x7ffdc994fb34,293776934,0,0x0,8
tick,0x7ffdc994fb34,293792478,0,0x0,8
tick,0x7ffdc994fb34,293807600,0,0x0,8
tick,0x7ffdc994fb34,293823348,0,0x0,8
tick,0x7ffdc994fb34,293839127,0,0x0,8
tick,0x7ffdc994fb34,293854248,0,0x0,8
tick,0x7ffdc994fb34,293869862,0,0x0,8
tick,0x7ffdc994fb34,293885093,0,0x0,8
tick,0x7ffdc994fb34,293901347,0,0x0,8
tick,0x7ffdc994fb34,293917145,0,0x0,8
tick,0x7ffdc994fb34,293933528,0,0x0,8
tick,0x7ffdc994fb34,293949090,0,0x0,8
tick,0x7ffdc994fb34,293964838,0,0x0,8
tick,0x7ffdc994fb34,293980166,0,0x0,8
tick,0x7ffdc994fb34,293995761,0,0x0,8
tick,0x7ffdc994fb34,294011427,0,0x0,8
tick,0x7ffdc994fb34,294026871,0,0x0,8
tick,0x7ffdc994fb34,294042412,0,0x0,8
tick,0x7ffdc994fb34,294057922,0,0x0,8
tick,0x7ffdc994fb34,294073283,0,0x0,8
tick,0x7ffdc994fb34,294088874,0,0x0,8
tick,0x7ffdc994fb34,294104087,0,0x0,8
tick,0x7ffdc994fb34,294119471,0,0x0,8
tick,0x7ffdc994fb34,294134920,0,0x0,8
tick,0x7ffdc994fb34,294150884,0,0x0,8
tick,0x7ffdc994fb34,294166014,0,0x0,8
tick,0x7ffdc994fb34,294181441,0,0x0,8
tick,0x7ffdc994fb34,294197178,0,0x0,8
tick,0x7ffdc994fb34,294212375,0,0x0,8
tick,0x7ffdc994fb34,294227784,0,0x0,8
tick,0x7ffdc994fb34,294243024,0,0x0,8
tick,0x7ffdc994fb34,294258558,0,0x0,8
tick,0x7ffdc994fb34,294273757,0,0x0,8
tick,0x7ffdc994fb34,294289746,0,0x0,8
tick,0x7ffdc994fb34,294305084,0,0x0,8
tick,0x7ffdc994fb34,294320819,0,0x0,8
tick,0x7ffdc994fb34,294335977,0,0x0,8
tick,0x7ffdc994fb34,294352345,0,0x0,8
tick,0x7ffdc994fb34,294367796,0,0x0,8
tick,0x7ffdc994fb34,294382830,0,0x0,8
tick,0x7ffdc994fb34,294399247,0,0x0,8
tick,0x7ffdc994fb34,294414685,0,0x0,8
tick,0x7ffdc994fb34,294430318,0,0x0,8
tick,0x7ffdc994fb34,294445983,0,0x0,8
tick,0x7ffdc994fb34,294461663,0,0x0,8
tick,0x7ffdc994fb34,294477151,0,0x0,8
tick,0x7ffdc994fb34,294492587,0,0x0,8
tick,0x7ffdc994fb34,294508272,0,0x0,8
tick,0x7ffdc994fb34,294523964,0,0x0,8
tick,0x7ffdc994fb34,294539680,0,0x0,8
tick,0x7ffdc994fb34,294555470,0,0x0,8
tick,0x7ffdc994fb34,294570605,0,0x0,8
tick,0x7ffdc994fb34,294586254,0,0x0,8
tick,0x7ffdc994fb34,294601524,0,0x0,8
tick,0x7ffdc994fb34,294616228,0,0x0,8
tick,0x7ffdc994fb34,294632505,0,0x0,8
tick,0x7ffdc994fb34,294648685,0,0x0,8
tick,0x7ffdc994fb34,294663600,0,0x0,8
tick,0x7ffdc994fb34,294678990,0,0x0,8
tick,0x7ffdc994fb34,294694376,0,0x0,8
tick,0x7ffdc994fb34,294710554,0,0x0,8
tick,0x7ffdc994fb34,294725951,0,0x0,8
tick,0x7ffdc994fb34,294741675,0,0x0,8
tick,0x7ffdc994fb34,294757746,0,0x0,8
tick,0x7ffdc994fb34,294773510,0,0x0,8
tick,0x7ffdc994fb34,294789509,0,0x0,8
tick,0x7ffdc994fb34,294804850,0,0x0,8
tick,0x7ffdc994fb34,294820614,0,0x0,8
tick,0x7ffdc994fb34,294835934,0,0x0,8
tick,0x7ffdc994fb34,294851825,0,0x0,8
tick,0x7ffdc994fb34,294867212,0,0x0,8
tick,0x7ffdc994fb34,294882592,0,0x0,8
tick,0x7ffdc994fb34,294898093,0,0x0,8
tick,0x7ffdc994fb34,294913115,0,0x0,8
tick,0x7ffdc994fb34,294928653,0,0x0,8
tick,0x7ffdc994fb34,294943688,0,0x0,8
tick,0x7ffdc994fb34,294959069,0,0x0,8
tick,0x7ffdc994fb34,294975148,0,0x0,8
tick,0x7ffdc994fb34,294989733,0,0x0,8
tick,0x7ffdc994fb34,295005088,0,0x0,8
tick,0x7ffdc994fb34,295020611,0,0x0,8
tick,0x7ffdc994fb34,295036135,0,0x0,8
tick,0x7ffdc994fb34,295051717,0,0x0,8
tick,0x7ffdc994fb34,295066845,0,0x0,8
tick,0x7ffdc994fb34,295082868,0,0x0,8
tick,0x7ffdc994fb34,295098161,0,0x0,8
tick,0x7ffdc994fb34,295113407,0,0x0,8
tick,0x7ffdc994fb34,295129075,0,0x0,8
tick,0x7ffdc994fb34,295144435,0,0x0,8
tick,0x7ffdc994fb34,295160011,0,0x0,8
tick,0x7ffdc994fb34,295175282,0,0x0,8
tick,0x7ffdc994fb34,295191028,0,0x0,8
tick,0x7ffdc994fb34,295206668,0,0x0,8
tick,0x7ffdc994fb34,295221913,0,0x0,8
tick,0x7ffdc994fb34,295237607,0,0x0,8
tick,0x7ffdc994fb34,295253635,0,0x0,8
tick,0x7ffdc994fb34,295269605,0,0x0,8
tick,0x7ffdc994fb34,295284842,0,0x0,8
tick,0x7ffdc994fb34,295301012,0,0x0,8
tick,0x7ffdc994fb34,295316210,0,0x0,8
tick,0x7ffdc994fb34,295332247,0,0x0,8
tick,0x7ffdc994fb34,295348081,0,0x0,8
tick,0x7ffdc994fb34,295363241,0,0x0,8
tick,0x7ffdc994fb34,295378631,0,0x0,8
tick,0x7ffdc994fb34,295394349,0,0x0,8
tick,0x7ffdc994fb34,295410322,0,0x0,8
tick,0x7ffdc994fb34,295425793,0,0x0,8
tick,0x7ffdc994fb34,295441616,0,0x0,8
tick,0x7ffdc994fb34,295457131,0,0x0,8
tick,0x7ffdc994fb34,295472868,0,0x0,8
tick,0x7ffdc994fb34,295488031,0,0x0,8
tick,0x7ffdc994fb34,295503520,0,0x0,8
tick,0x7ffdc994fb34,295519225,0,0x0,8
tick,0x7ffdc994fb34,295534348,0,0x0,8
tick,0x7ffdc994fb34,295549582,0,0x0,8
tick,0x7ffdc994fb34,295565566,0,0x0,8
tick,0x7ffdc994fb34,295580928,0,0x0,8
tick,0x7ffdc994fb34,295596438,0,0x0,8
tick,0x7ffdc994fb34,295612070,0,0x0,8
tick,0x7ffdc994fb34,295627640,0,0x0,8
tick,0x7ffdc994fb34,295643225,0,0x0,8
tick,0x7ffdc994fb34,295658673,0,0x0,8
tick,0x7ffdc994fb34,295673750,0,0x0,8
tick,0x7ffdc994fb34,295689345,0,0x0,8
tick,0x7ffdc994fb34,295704863,0,0x0,8
tick,0x7ffdc994fb34,295720111,0,0x0,8
tick,0x7ffdc994fb34,295736037,0,0x0,8
tick,0x7ffdc994fb34,295751759,0,0x0,8
tick,0x7ffdc994fb34,295767649,0,0x0,8
tick,0x7ffdc994fb34,295783448,0,0x0,8
tick,0x7ffdc994fb34,295799191,0,0x0,8
tick,0x7ffdc994fb34,295815111,0,0x0,8
tick,0x7ffdc994fb34,295830354,0,0x0,8
tick,0x7ffdc994fb34,295845619,0,0x0,8
tick,0x7ffdc994fb34,295860985,0,0x0,8
tick,0x7ffdc994fb34,295876855,0,0x0,8
tick,0x7ffdc994fb34,295892884,0,0x0,8
tick,0x7ffdc994fb34,295908622,0,0x0,8
tick,0x7ffdc994fb34,295924132,0,0x0,8
tick,0x7ffdc994fb34,295939934,0,0x0,8
tick,0x7ffdc994fb34,295955250,0,0x0,8
tick,0x7ffdc994fb34,295970747,0,0x0,8
tick,0x7ffdc994fb34,295986498,0,0x0,8
tick,0x7ffdc994fb34,296002094,0,0x0,8
tick,0x7ffdc994fb34,296017166,0,0x0,8
tick,0x7ffdc994fb34,296032841,0,0x0,8
tick,0x7ffdc994fb34,296048334,0,0x0,8
tick,0x7ffdc994fb34,296063653,0,0x0,8
tick,0x7ffdc994fb34,296079011,0,0x0,8
tick,0x7ffdc994fb34,296094449,0,0x0,8
tick,0x7ffdc994fb34,296109746,0,0x0,8
tick,0x7ffdc994fb34,296125993,0,0x0,8
tick,0x7ffdc994fb34,296141352,0,0x0,8
tick,0x7ffdc994fb34,296156878,0,0x0,8
tick,0x7ffdc994fb34,296172513,0,0x0,8
tick,0x7ffdc994fb34,296188429,0,0x0,8
tick,0x7ffdc994fb34,296204540,0,0x0,8
tick,0x7ffdc994fb34,296219912,0,0x0,8
tick,0x7ffdc994fb34,296235529,0,0x0,8
tick,0x7ffdc994fb34,296251510,0,0x0,8
tick,0x7ffdc994fb34,296267163,0,0x0,8
tick,0x7ffdc994fb34,296282351,0,0x0,8
tick,0x7ffdc994fb34,296297751,0,0x0,8
tick,0x7ffdc994fb34,296312830,0,0x0,8
tick,0x7ffdc994fb34,296328827,0,0x0,8
tick,0x7ffdc994fb34,296344345,0,0x0,8
tick,0x7ffdc994fb34,296359842,0,0x0,8
tick,0x7ffdc994fb34,296375319,0,0x0,8
tick,0x7ffdc994fb34,296391454,0,0x0,8
tick,0x7ffdc994fb34,296407245,0,0x0,8
tick,0x7ffdc994fb34,296422796,0,0x0,8
tick,0x7ffdc994fb34,296438218,0,0x0,8
tick,0x7ffdc994fb34,296453622,0,0x0,8
tick,0x7ffdc994fb34,296468858,0,0x0,8
tick,0x7ffdc994fb34,296484709,0,0x0,8
tick,0x7ffdc994fb34,296499862,0,0x0,8
tick,0x7ffdc994fb34,296515640,0,0x0,8
tick,0x7ffdc994fb34,296531806,0,0x0,8
tick,0x7ffdc994fb34,296546973,0,0x0,8
tick,0x7ffdc994fb34,296563094,0,0x0,8
tick,0x7ffdc994fb34,296578789,0,0x0,8
tick,0x7ffdc994fb34,296594367,0,0x0,8
tick,0x7ffdc994fb34,296609461,0,0x0,8
tick,0x7ffdc994fb34,296624984,0,0x0,8
tick,0x7ffdc994fb34,296640720,0,0x0,8
tick,0x7ffdc994fb34,296655886,0,0x0,8
tick,0x7ffdc994fb34,296671418,0,0x0,8
tick,0x7ffdc994fb34,296686897,0,0x0,8
tick,0x7ffdc994fb34,296703065,0,0x0,8
tick,0x7ffdc994fb34,296718939,0,0x0,8
tick,0x7ffdc994fb34,296734398,0,0x0,8
tick,0x7ffdc994fb34,296749900,0,0x0,8
tick,0x7ffdc994fb34,296765605,0,0x0,8
tick,0x7ffdc994fb34,296781233,0,0x0,8
tick,0x7ffdc994fb34,296796707,0,0x0,8
tick,0x7ffdc994fb34,296812456,0,0x0,8
tick,0x7ffdc994fb34,296827481,0,0x0,8
tick,0x7ffdc994fb34,296843633,0,0x0,8
tick,0x7ffdc994fb34,296859541,0,0x0,8
tick,0x7ffdc994fb34,296875340,0,0x0,8
tick,0x7ffdc994fb34,296890968,0,0x0,8
tick,0x7ffdc994fb34,296906768,0,0x0,8
tick,0x7ffdc994fb34,296922191,0,0x0,8
tick,0x7ffdc994fb34,296937716,0,0x0,8
tick,0x7ffdc994fb34,296953096,0,0x0,8
tick,0x7ffdc994fb34,296968916,0,0x0,8
tick,0x7ffdc994fb34,296984282,0,0x0,8
tick,0x7ffdc994fb34,297000298,0,0x0,8
tick,0x7ffdc994fb34,297016139,0,0x0,8
tick,0x7ffdc994fb34,297031834,0,0x0,8
tick,0x7ffdc994fb34,297047686,0,0x0,8
tick,0x7ffdc994fb34,297062980,0,0x0,8
tick,0x7ffdc994fb34,297078135,0,0x0,8
tick,0x7ffdc994fb34,297093283,0,0x0,8
tick,0x7ffdc994fb34,297108914,0,0x0,8
tick,0x7ffdc994fb34,297123818,0,0x0,8
tick,0x7ffdc994fb34,297139694,0,0x0,8
tick,0x7ffdc994fb34,297154951,0,0x0,8
tick,0x7ffdc994fb34,297170400,0,0x0,8
tick,0x7ffdc994fb34,297186048,0,0x0,8
tick,0x7ffdc994fb34,297201237,0,0x0,8
tick,0x7ffdc994fb34,297216892,0,0x0,8
tick,0x7ffdc994fb34,297232279,0,0x0,8
tick,0x7ffdc994fb34,297248032,0,0x0,8
tick,0x7ffdc994fb34,297263182,0,0x0,8
tick,0x7ffdc994fb34,297278598,0,0x0,8
tick,0x7ffdc994fb34,297294089,0,0x0,8
tick,0x7ffdc994fb34,297309706,0,0x0,8
tick,0x7ffdc994fb34,297324969,0,0x0,8
tick,0x7ffdc994fb34,297340632,0,0x0,8
tick,0x7ffdc994fb34,297356223,0,0x0,8
tick,0x7ffdc994fb34,297371966,0,0x0,8
tick,0x7ffdc994fb34,297387670,0,0x0,8
tick,0x7ffdc994fb34,297403383,0,0x0,8
tick,0x7ffdc994fb34,297419182,0,0x0,8
tick,0x7ffdc994fb34,297434930,0,0x0,8
tick,0x7ffdc994fb34,297450515,0,0x0,8
tick,0x7ffdc994fb34,297466055,0,0x0,8
tick,0x7ffdc994fb34,297481395,0,0x0,8
tick,0x7ffdc994fb34,297497092,0,0x0,8
tick,0x7ffdc994fb34,297512408,0,0x0,8
tick,0x7ffdc994fb34,297528037,0,0x0,8
tick,0x7ffdc994fb34,297543368,0,0x0,8
tick,0x7ffdc994fb34,297559259,0,0x0,8
tick,0x7ffdc994fb34,297574560,0,0x0,8
tick,0x7ffdc994fb34,297590133,0,0x0,8
tick,0x7ffdc994fb34,297605390,0,0x0,8
tick,0x7ffdc994fb34,297621420,0,0x0,8
tick,0x7ffdc994fb34,297636632,0,0x0,8
tick,0x7ffdc994fb34,297652205,0,0x0,8
tick,0x7ffdc994fb34,297667955,0,0x0,8
tick,0x7ffdc994fb34,297683488,0,0x0,8
tick,0x7ffdc994fb34,297698949,0,0x0,8
tick,0x7ffdc994fb34,297714951,0,0x0,8
tick,0x7ffdc994fb34,297730464,0,0x0,8
tick,0x7ffdc994fb34,297745556,0,0x0,8
tick,0x7ffdc994fb34,297761344,0,0x0,8
tick,0x7ffdc994fb34,297776577,0,0x0,8
tick,0x7ffdc994fb34,297792598,0,0x0,8
tick,0x7ffdc994fb34,297807715,0,0x0,8
tick,0x7ffdc994fb34,297823257,0,0x0,8
tick,0x7ffdc994fb34,297838792,0,0x0,8
tick,0x7ffdc994fb34,297853900,0,0x0,8
tick,0x7ffdc994fb34,297869485,0,0x0,8
tick,0x7ffdc994fb34,297885229,0,0x0,8
tick,0x7ffdc994fb34,297901126,0,0x0,8
tick,0x7ffdc994fb34,297915881,0,0x0,8
tick,0x7ffdc994fb34,297931617,0,0x0,8
tick,0x7ffdc994fb34,297946999,0,0x0,8
tick,0x7ffdc994fb34,297963143,0,0x0,8
tick,0x7ffdc994fb34,297978514,0,0x0,8
tick,0x7ffdc994fb34,297993890,0,0x0,8
tick,0x7ffdc994fb34,298009313,0,0x0,8
tick,0x7ffdc994fb34,298024701,0,0x0,8
tick,0x7ffdc994fb34,298040233,0,0x0,8
tick,0x7ffdc994fb34,298055336,0,0x0,8
tick,0x7ffdc994fb34,298070946,0,0x0,8
tick,0x7ffdc994fb34,298086387,0,0x0,8
tick,0x7ffdc994fb34,298102732,0,0x0,8
tick,0x7ffdc994fb34,298118800,0,0x0,8
tick,0x7ffdc994fb34,298133786,0,0x0,8
tick,0x7ffdc994fb34,298149487,0,0x0,8
tick,0x7ffdc994fb34,298165038,0,0x0,8
tick,0x7ffdc994fb34,298180488,0,0x0,8
tick,0x7ffdc994fb34,298196337,0,0x0,8
tick,0x7ffdc994fb34,298212001,0,0x0,8
tick,0x7ffdc994fb34,298227381,0,0x0,8
tick,0x7ffdc994fb34,298242583,0,0x0,8
tick,0x7ffdc994fb34,298257763,0,0x0,8
tick,0x7ffdc994fb34,298273226,0,0x0,8
tick,0x7ffdc994fb34,298289022,0,0x0,8
tick,0x7ffdc994fb34,298304476,0,0x0,8
tick,0x7ffdc994fb34,298320001,0,0x0,8
tick,0x7ffdc994fb34,298335566,0,0x0,8
tick,0x7ffdc994fb34,298350957,0,0x0,8
tick,0x7ffdc994fb34,298366789,0,0x0,8
tick,0x7ffdc994fb34,298382124,0,0x0,8
tick,0x7ffdc994fb34,298397667,0,0x0,8
tick,0x7ffdc994fb34,298413445,0,0x0,8
tick,0x7ffdc994fb34,298428130,0,0x0,8
tick,0x7ffdc994fb34,298443307,0,0x0,8
tick,0x7ffdc994fb34,298459000,0,0x0,8
tick,0x7ffdc994fb34,298474074,0,0x0,8
tick,0x7ffdc994fb34,298489683,0,0x0,8
tick,0x7ffdc994fb34,298505743,0,0x0,8
tick,0x7ffdc994fb34,298521400,0,0x0,8
tick,0x7ffdc994fb34,298537273,0,0x0,8
tick,0x7ffdc994fb34,298553451,0,0x0,8
tick,0x7ffdc994fb34,298569379,0,0x0,8
tick,0x7ffdc994fb34,298584780,0,0x0,8
tick,0x7ffdc994fb34,298600342,0,0x0,8
tick,0x7ffdc994fb34,298616397,0,0x0,8
tick,0x7ffdc994fb34,298632193,0,0x0,8
tick,0x7ffdc994fb34,298647532,0,0x0,8
tick,0x7ffdc994fb34,298662867,0,0x0,8
tick,0x7ffdc994fb34,298678703,0,0x0,8
tick,0x7ffdc994fb34,298693966,0,0x0,8
tick,0x7ffdc994fb34,298709047,0,0x0,8
tick,0x7ffdc994fb34,298724315,0,0x0,8
tick,0x7ffdc994fb34,298740485,0,0x0,8
tick,0x7ffdc994fb34,298756528,0,0x0,8
tick,0x7ffdc994fb34,298771801,0,0x0,8
tick,0x7ffdc994fb34,298787140,0,0x0,8
tick,0x7ffdc994fb34,298802566,0,0x0,8
tick,0x7ffdc994fb34,298818735,0,0x0,8
tick,0x7ffdc994fb34,298834683,0,0x0,8
tick,0x7ffdc994fb34,298850788,0,0x0,8
tick,0x7ffdc994fb34,298866325,0,0x0,8
tick,0x7ffdc994fb34,298882430,0,0x0,8
tick,0x7ffdc994fb34,298897946,0,0x0,8
tick,0x7ffdc994fb34,298913207,0,0x0,8
tick,0x7ffdc994fb34,298929304,0,0x0,8
tick,0x7ffdc994fb34,298944566,0,0x0,8
tick,0x7ffdc994fb34,298960231,0,0x0,8
tick,0x7ffdc994fb34,298976136,0,0x0,8
tick,0x7ffdc994fb34,298992084,0,0x0,8
tick,0x7ffdc994fb34,299008015,0,0x0,8
tick,0x7ffdc994fb34,299022971,0,0x0,8
tick,0x7ffdc994fb34,299038054,0,0x0,8
tick,0x7ffdc994fb34,299053230,0,0x0,8
tick,0x7ffdc994fb34,299068778,0,0x0,8
tick,0x7ffdc994fb34,299083835,0,0x0,8
tick,0x7ffdc994fb34,299099223,0,0x0,8
tick,0x7ffdc994fb34,299114325,0,0x0,8
tick,0x7ffdc994fb34,299129974,0,0x0,8
tick,0x7ffdc994fb34,299145674,0,0x0,8
tick,0x7ffdc994fb34,299161387,0,0x0,8
tick,0x7ffdc994fb34,299177291,0,0x0,8
tick,0x7ffdc994fb34,299192825,0,0x0,8
tick,0x7ffdc994fb34,299208143,0,0x0,8
tick,0x7ffdc994fb34,299223233,0,0x0,8
tick,0x7ffdc994fb34,299238341,0,0x0,8
tick,0x7ffdc994fb34,299253809,0,0x0,8
tick,0x7ffdc994fb34,299269361,0,0x0,8
tick,0x7ffdc994fb34,299284797,0,0x0,8
tick,0x7ffdc994fb34,299300135,0,0x0,8
tick,0x7ffdc994fb34,299315961,0,0x0,8
tick,0x7ffdc994fb34,299331526,0,0x0,8
tick,0x7ffdc994fb34,299347291,0,0x0,8
tick,0x7ffdc994fb34,299362872,0,0x0,8
tick,0x7ffdc994fb34,299378466,0,0x0,8
tick,0x7ffdc994fb34,299393898,0,0x0,8
tick,0x7ffdc994fb34,299409217,0,0x0,8
tick,0x7ffdc994fb34,299424532,0,0x0,8
tick,0x7ffdc994fb34,299440093,0,0x0,8
tick,0x7ffdc994fb34,299455782,0,0x0,8
tick,0x7ffdc994fb34,299470947,0,0x0,8
tick,0x7ffdc994fb34,299486632,0,0x0,8
tick,0x7ffdc994fb34,299502088,0,0x0,8
tick,0x7ffdc994fb34,299517945,0,0x0,8
tick,0x7ffdc994fb34,299533271,0,0x0,8
tick,0x7ffdc994fb34,299549151,0,0x0,8
tick,0x7ffdc994fb34,299564584,0,0x0,8
tick,0x7ffdc994fb34,299580151,0,0x0,8
tick,0x7ffdc994fb34,299595324,0,0x0,8
tick,0x7ffdc994fb34,299610886,0,0x0,8
tick,0x7ffdc994fb34,299626227,0,0x0,8
tick,0x7ffdc994fb34,299641465,0,0x0,8
tick,0x7ffdc994fb34,299657184,0,0x0,8
tick,0x7ffdc994fb34,299672613,0,0x0,8
tick,0x7ffdc994fb34,299688102,0,0x0,8
tick,0x7ffdc994fb34,299703796,0,0x0,8
tick,0x7ffdc994fb34,299719568,0,0x0,8
tick,0x7ffdc994fb34,299734646,0,0x0,8
tick,0x7ffdc994fb34,299750721,0,0x0,8
tick,0x7ffdc994fb34,299766414,0,0x0,8
tick,0x7ffdc994fb34,299781661,0,0x0,8
tick,0x7ffdc994fb34,299797694,0,0x0,8
tick,0x7ffdc994fb34,299813015,0,0x0,8
tick,0x7ffdc994fb34,299828891,0,0x0,8
tick,0x7ffdc994fb34,299844124,0,0x0,8
tick,0x7ffdc994fb34,299859681,0,0x0,8
tick,0x7ffdc994fb34,299875458,0,0x0,8
tick,0x7ffdc994fb34,299890715,0,0x0,8
tick,0x7ffdc994fb34,299906201,0,0x0,8
tick,0x7ffdc994fb34,299921545,0,0x0,8
tick,0x7ffdc994fb34,299937510,0,0x0,8
tick,0x7ffdc994fb34,299952743,0,0x0,8
tick,0x7ffdc994fb34,299967681,0,0x0,8
tick,0x7ffdc994fb34,299982886,0,0x0,8
tick,0x7ffdc994fb34,299998655,0,0x0,8
tick,0x7ffdc994fb34,300014151,0,0x0,8
tick,0x7ffdc994fb34,300030097,0,0x0,8
tick,0x7ffdc994fb34,300045831,0,0x0,8
tick,0x7ffdc994fb34,300061641,0,0x0,8
tick,0x7ffdc994fb34,300077817,0,0x0,8
tick,0x7ffdc994fb34,300093772,0,0x0,8
tick,0x7ffdc994fb34,300109508,0,0x0,8
tick,0x7ffdc994fb34,300124411,0,0x0,8
tick,0x7ffdc994fb34,300139823,0,0x0,8
tick,0x7ffdc994fb34,300155212,0,0x0,8
tick,0x7ffdc994fb34,300170727,0,0x0,8
tick,0x7ffdc994fb34,300186023,0,0x0,8
tick,0x7ffdc994fb34,300201514,0,0x0,8
tick,0x7ffdc994fb34,300217314,0,0x0,8
tick,0x7ffdc994fb34,300232783,0,0x0,8
tick,0x7ffdc994fb34,300248518,0,0x0,8
tick,0x7ffdc994fb34,300264322,0,0x0,8
tick,0x7ffdc994fb34,300280092,0,0x0,8
tick,0x7ffdc994fb34,300296055,0,0x0,8
tick,0x7ffdc994fb34,300311825,0,0x0,8
tick,0x7ffdc994fb34,300327943,0,0x0,8
tick,0x7ffdc994fb34,300343321,0,0x0,8
tick,0x7ffdc994fb34,300359246,0,0x0,8
tick,0x7ffdc994fb34,300374898,0,0x0,8
tick,0x7ffdc994fb34,300390263,0,0x0,8
tick,0x7ffdc994fb34,300406009,0,0x0,8
tick,0x7ffdc994fb34,300421948,0,0x0,8
tick,0x7ffdc994fb34,300437898,0,0x0,8
tick,0x7ffdc994fb34,300453352,0,0x0,8
tick,0x7ffdc994fb34,300468452,0,0x0,8
tick,0x7ffdc994fb34,300483788,0,0x0,8
tick,0x7ffdc994fb34,300499380,0,0x0,8
tick,0x7ffdc994fb34,300515109,0,0x0,8
tick,0x7ffdc994fb34,300530749,0,0x0,8
tick,0x7ffdc994fb34,300545996,0,0x0,8
tick,0x7ffdc994fb34,300562069,0,0x0,8
tick,0x7ffdc994fb34,300578150,0,0x0,8
tick,0x7ffdc994fb34,300594058,0,0x0,8
tick,0x7ffdc994fb34,300610077,0,0x0,8
tick,0x7ffdc994fb34,300626291,0,0x0,8
tick,0x7ffdc994fb34,300642116,0,0x0,8
tick,0x7ffdc994fb34,300657993,0,0x0,8
tick,0x7ffdc994fb34,300674102,0,0x0,8
tick,0x7ffdc994fb34,300690207,0,0x0,8
tick,0x7ffdc994fb34,300706080,0,0x0,8
tick,0x7ffdc994fb34,300721484,0,0x0,8
tick,0x7ffdc994fb34,300737450,0,0x0,8
tick,0x7ffdc994fb34,300753605,0,0x0,8
tick,0x7ffdc994fb34,300769249,0,0x0,8
tick,0x7ffdc994fb34,300785200,0,0x0,8
tick,0x7ffdc994fb34,300801640,0,0x0,8
tick,0x7ffdc994fb34,300817445,0,0x0,8
tick,0x7ffdc994fb34,300832656,0,0x0,8
tick,0x7ffdc994fb34,300848716,0,0x0,8
tick,0x7ffdc994fb34,300864712,0,0x0,8
tick,0x7ffdc994fb34,300880149,0,0x0,8
tick,0x7ffdc994fb34,300896356,0,0x0,8
tick,0x7ffdc994fb34,300912286,0,0x0,8
tick,0x7ffdc994fb34,300928217,0,0x0,8
tick,0x7ffdc994fb34,300944356,0,0x0,8
tick,0x7ffdc994fb34,300960136,0,0x0,8
tick,0x7ffdc994fb34,300976232,0,0x0,8
tick,0x7ffdc994fb34,300992150,0,0x0,8
tick,0x7ffdc994fb34,301007587,0,0x0,8
tick,0x7ffdc994fb34,301023324,0,0x0,8
tick,0x7ffdc994fb34,301039178,0,0x0,8
tick,0x7ffdc994fb34,301055137,0,0x0,8
tick,0x7ffdc994fb34,301070768,0,0x0,8
tick,0x7ffdc994fb34,301086331,0,0x0,8
tick,0x7ffdc994fb34,301102313,0,0x0,8
tick,0x7ffdc994fb34,301117401,0,0x0,8
tick,0x7ffdc994fb34,301132409,0,0x0,8
tick,0x7ffdc994fb34,301148412,0,0x0,8
tick,0x7ffdc994fb34,301163586,0,0x0,8
tick,0x7ffdc994fb34,301179584,0,0x0,8
tick,0x7ffdc994fb34,301195800,0,0x0,8
tick,0x7ffdc994fb34,301211132,0,0x0,8
tick,0x7ffdc994fb34,301227384,0,0x0,8
tick,0x7ffdc994fb34,301243017,0,0x0,8
tick,0x7ffdc994fb34,301258850,0,0x0,8
tick,0x7ffdc994fb34,301275107,0,0x0,8
tick,0x7ffdc994fb34,301290443,0,0x0,8
tick,0x7ffdc994fb34,301306282,0,0x0,8
tick,0x7ffdc994fb34,301322315,0,0x0,8
tick,0x7ffdc994fb34,301338548,0,0x0,8
tick,0x7ffdc994fb34,301354212,0,0x0,8
tick,0x7ffdc994fb34,301370436,0,0x0,8
tick,0x7ffdc994fb34,301386731,0,0x0,8
tick,0x7ffdc994fb34,301402241,0,0x0,8
tick,0x7ffdc994fb34,301417633,0,0x0,8
tick,0x7ffdc994fb34,301433043,0,0x0,8
tick,0x7ffdc994fb34,301448715,0,0x0,8
tick,0x7ffdc994fb34,301464715,0,0x0,8
tick,0x7ffdc994fb34,301480778,0,0x0,8
tick,0x7ffdc994fb34,301495931,0,0x0,8
tick,0x7ffdc994fb34,301511798,0,0x0,8
tick,0x7ffdc994fb34,301527804,0,0x0,8
tick,0x7ffdc994fb34,301543662,0,0x0,8
tick,0x7ffdc994fb34,301559255,0,0x0,8
tick,0x7ffdc994fb34,301574600,0,0x0,8
tick,0x7ffdc994fb34,301590465,0,0x0,8
tick,0x7ffdc994fb34,301605556,0,0x0,8
tick,0x7ffdc994fb34,301623754,0,0x0,8
tick,0x7ffdc994fb34,301637205,0,0x0,8
tick,0x7ffdc994fb34,301652548,0,0x0,8
tick,0x7ffdc994fb34,301668676,0,0x0,8
tick,0x7ffdc994fb34,301684638,0,0x0,8
tick,0x7ffdc994fb34,301700668,0,0x0,8
tick,0x7ffdc994fb34,301716339,0,0x0,8
tick,0x7ffdc994fb34,301732487,0,0x0,8
tick,0x7ffdc994fb34,301748279,0,0x0,8
tick,0x7ffdc994fb34,301764398,0,0x0,8
tick,0x7ffdc994fb34,301779772,0,0x0,8
tick,0x7ffdc994fb34,301795994,0,0x0,8
tick,0x7ffdc994fb34,301811806,0,0x0,8
tick,0x7ffdc994fb34,301827293,0,0x0,8
tick,0x7ffdc994fb34,301842509,0,0x0,8
tick,0x7ffdc994fb34,301858242,0,0x0,8
tick,0x7ffdc994fb34,301873718,0,0x0,8
tick,0x7ffdc994fb34,301888957,0,0x0,8
tick,0x7ffdc994fb34,301904154,0,0x0,8
tick,0x7ffdc994fb34,301919439,0,0x0,8
tick,0x7ffdc994fb34,301934680,0,0x0,8
tick,0x7ffdc994fb34,301950556,0,0x0,8
tick,0x7ffdc994fb34,301966591,0,0x0,8
tick,0x7ffdc994fb34,301982621,0,0x0,8
tick,0x7ffdc994fb34,301998559,0,0x0,8
tick,0x7ffdc994fb34,302013393,0,0x0,8
tick,0x7ffdc994fb34,302029409,0,0x0,8
tick,0x7ffdc994fb34,302045581,0,0x0,8
tick,0x7ffdc994fb34,302060510,0,0x0,8
tick,0x7ffdc994fb34,302076303,0,0x0,8
tick,0x7ffdc994fb34,302092596,0,0x0,8
tick,0x7ffdc994fb34,302108566,0,0x0,8
tick,0x7ffdc994fb34,302123422,0,0x0,8
tick,0x7ffdc994fb34,302139438,0,0x0,8
tick,0x7ffdc994fb34,302155671,0,0x0,8
tick,0x7ffdc994fb34,302170775,0,0x0,8
tick,0x7ffdc994fb34,302186039,0,0x0,8
tick,0x7ffdc994fb34,302202005,0,0x0,8
tick,0x7ffdc994fb34,302218356,0,0x0,8
tick,0x7ffdc994fb34,302233302,0,0x0,8
tick,0x7ffdc994fb34,302248569,0,0x0,8
tick,0x7ffdc994fb34,302264063,0,0x0,8
tick,0x7ffdc994fb34,302280037,0,0x0,8
tick,0x7ffdc994fb34,302296305,0,0x0,8
tick,0x7ffdc994fb34,302311185,0,0x0,8
tick,0x7ffdc994fb34,302326399,0,0x0,8
tick,0x7ffdc994fb34,302341772,0,0x0,8
tick,0x7ffdc994fb34,302357777,0,0x0,8
tick,0x7ffdc994fb34,302373585,0,0x0,8
tick,0x7ffdc994fb34,302389627,0,0x0,8
tick,0x7ffdc994fb34,302405586,0,0x0,8
tick,0x7ffdc994fb34,302421092,0,0x0,8
tick,0x7ffdc994fb34,302436169,0,0x0,8
tick,0x7ffdc994fb34,302452396,0,0x0,8
tick,0x7ffdc994fb34,302468421,0,0x0,8
tick,0x7ffdc994fb34,302484407,0,0x0,8
tick,0x7ffdc994fb34,302499753,0,0x0,8
tick,0x7ffdc994fb34,302515711,0,0x0,8
tick,0x7ffdc994fb34,302531512,0,0x0,8
tick,0x7ffdc994fb34,302547603,0,0x0,8
tick,0x7ffdc994fb34,302562576,0,0x0,8
tick,0x7ffdc994fb34,302577881,0,0x0,8
tick,0x7ffdc994fb34,302593958,0,0x0,8
tick,0x7ffdc994fb34,302609912,0,0x0,8
tick,0x7ffdc994fb34,302626278,0,0x0,8
tick,0x7ffdc994fb34,302642179,0,0x0,8
tick,0x7ffdc994fb34,302657817,0,0x0,8
tick,0x7ffdc994fb34,302672618,0,0x0,8
tick,0x7ffdc994fb34,302687979,0,0x0,8
tick,0x7ffdc994fb34,302703911,0,0x0,8
tick,0x7ffdc994fb34,302719609,0,0x0,8
tick,0x7ffdc994fb34,302735542,0,0x0,8
tick,0x7ffdc994fb34,302750891,0,0x0,8
tick,0x7ffdc994fb34,302766445,0,0x0,8
tick,0x7ffdc994fb34,302782446,0,0x0,8
tick,0x7ffdc994fb34,302797644,0,0x0,8
tick,0x7ffdc994fb34,302813426,0,0x0,8
tick,0x7ffdc994fb34,302829456,0,0x0,8
tick,0x7ffdc994fb34,302845102,0,0x0,8
tick,0x7ffdc994fb34,302861031,0,0x0,8
tick,0x7ffdc994fb34,302876428,0,0x0,8
tick,0x7ffdc994fb34,302892700,0,0x0,8
tick,0x7ffdc994fb34,302908442,0,0x0,8
tick,0x7ffdc994fb34,302924402,0,0x0,8
tick,0x7ffdc994fb34,302940498,0,0x0,8
tick,0x7ffdc994fb34,302956456,0,0x0,8
tick,0x7ffdc994fb34,302972529,0,0x0,8
tick,0x7ffdc994fb34,302988408,0,0x0,8
tick,0x7ffdc994fb34,303004369,0,0x0,8
tick,0x7ffdc994fb34,303020431,0,0x0,8
tick,0x7ffdc994fb34,303036377,0,0x0,8
tick,0x7ffdc994fb34,303052640,0,0x0,8
tick,0x7ffdc994fb34,303068394,0,0x0,8
tick,0x7ffdc994fb34,303084369,0,0x0,8
tick,0x7ffdc994fb34,303100436,0,0x0,8
tick,0x7ffdc994fb34,303116424,0,0x0,8
tick,0x7ffdc994fb34,303132448,0,0x0,8
tick,0x7ffdc994fb34,303148295,0,0x0,8
tick,0x7ffdc994fb34,303163617,0,0x0,8
tick,0x7ffdc994fb34,303179823,0,0x0,8
tick,0x7ffdc994fb34,303195876,0,0x0,8
tick,0x7ffdc994fb34,303211563,0,0x0,8
tick,0x7ffdc994fb34,303227632,0,0x0,8
tick,0x7ffdc994fb34,303243085,0,0x0,8
tick,0x7ffdc994fb34,303258974,0,0x0,8
tick,0x7ffdc994fb34,303275076,0,0x0,8
tick,0x7ffdc994fb34,303290216,0,0x0,8
tick,0x7ffdc994fb34,303306106,0,0x0,8
tick,0x7ffdc994fb34,303322211,0,0x0,8
tick,0x7ffdc994fb34,303337475,0,0x0,8
tick,0x7ffdc994fb34,303353246,0,0x0,8
tick,0x7ffdc994fb34,303368945,0,0x0,8
tick,0x7ffdc994fb34,303384893,0,0x0,8
tick,0x7ffdc994fb34,303400795,0,0x0,8
tick,0x7ffdc994fb34,303416453,0,0x0,8
tick,0x7ffdc994fb34,303431734,0,0x0,8
tick,0x7ffdc994fb34,303447582,0,0x0,8
tick,0x7ffdc994fb34,303463344,0,0x0,8
tick,0x7ffdc994fb34,303478834,0,0x0,8
tick,0x7ffdc994fb34,303494714,0,0x0,8
tick,0x7ffdc994fb34,303510794,0,0x0,8
tick,0x7ffdc994fb34,303525658,0,0x0,8
tick,0x7ffdc994fb34,303541380,0,0x0,8
tick,0x7ffdc994fb34,303556707,0,0x0,8
tick,0x7ffdc994fb34,303572469,0,0x0,8
tick,0x7ffdc994fb34,303588242,0,0x0,8
tick,0x7ffdc994fb34,303604196,0,0x0,8
tick,0x7ffdc994fb34,303620074,0,0x0,8
tick,0x7ffdc994fb34,303635761,0,0x0,8
tick,0x7ffdc994fb34,303651905,0,0x0,8
tick,0x7ffdc994fb34,303667507,0,0x0,8
tick,0x7ffdc994fb34,303683409,0,0x0,8
tick,0x7ffdc994fb34,303699572,0,0x0,8
tick,0x7ffdc994fb34,303715617,0,0x0,8
tick,0x7ffdc994fb34,303730576,0,0x0,8
tick,0x7ffdc994fb34,303746479,0,0x0,8
tick,0x7ffdc994fb34,303761962,0,0x0,8
tick,0x7ffdc994fb34,303777986,0,0x0,8
tick,0x7ffdc994fb34,303794098,0,0x0,8
tick,0x7ffdc994fb34,303809425,0,0x0,8
tick,0x7ffdc994fb34,303824826,0,0x0,8
tick,0x7ffdc994fb34,303840217,0,0x0,8
tick,0x7ffdc994fb34,303855586,0,0x0,8
tick,0x7ffdc994fb34,303871539,0,0x0,8
tick,0x7ffdc994fb34,303886872,0,0x0,8
tick,0x7ffdc994fb34,303902165,0,0x0,8
tick,0x7ffdc994fb34,303917984,0,0x0,8
tick,0x7ffdc994fb34,303933375,0,0x0,8
tick,0x7ffdc994fb34,303948992,0,0x0,8
tick,0x7ffdc994fb34,303964422,0,0x0,8
tick,0x7ffdc994fb34,303980331,0,0x0,8
tick,0x7ffdc994fb34,303996565,0,0x0,8
tick,0x7ffdc994fb34,304012738,0,0x0,8
tick,0x7ffdc994fb34,304027887,0,0x0,8
tick,0x7ffdc994fb34,304043734,0,0x0,8
tick,0x7ffdc994fb34,304058919,0,0x0,8
tick,0x7ffdc994fb34,304074986,0,0x0,8
tick,0x7ffdc994fb34,304090835,0,0x0,8
tick,0x7ffdc994fb34,304105985,0,0x0,8
tick,0x7ffdc994fb34,304121833,0,0x0,8
tick,0x7ffdc994fb34,304137377,0,0x0,8
tick,0x7ffdc994fb34,304153266,0,0x0,8
tick,0x7ffdc994fb34,304169269,0,0x0,8
tick,0x7ffdc994fb34,304184675,0,0x0,8
tick,0x7ffdc994fb34,304200162,0,0x0,8
tick,0x7ffdc994fb34,304215927,0,0x0,8
tick,0x7ffdc994fb34,304232285,0,0x0,8
tick,0x7ffdc994fb34,304247363,0,0x0,8
tick,0x7ffdc994fb34,304263666,0,0x0,8
tick,0x7ffdc994fb34,304279231,0,0x0,8
tick,0x7ffdc994fb34,304294801,0,0x0,8
tick,0x7ffdc994fb34,304310465,0,0x0,8
tick,0x7ffdc994fb34,304326264,0,0x0,8
tick,0x7ffdc994fb34,304341685,0,0x0,8
tick,0x7ffdc994fb34,304357429,0,0x0,8
tick,0x7ffdc994fb34,304373413,0,0x0,8
tick,0x7ffdc994fb34,304389309,0,0x0,8
tick,0x7ffdc994fb34,304404525,0,0x0,8
tick,0x7ffdc994fb34,304419990,0,0x0,8
tick,0x7ffdc994fb34,304435006,0,0x0,8
tick,0x7ffdc994fb34,304450579,0,0x0,8
tick,0x7ffdc994fb34,304466206,0,0x0,8
tick,0x7ffdc994fb34,304482298,0,0x0,8
tick,0x7ffdc994fb34,304497739,0,0x0,8
tick,0x7ffdc994fb34,304512826,0,0x0,8
tick,0x7ffdc994fb34,304528780,0,0x0,8
tick,0x7ffdc994fb34,304544082,0,0x0,8
tick,0x7ffdc994fb34,304559254,0,0x0,8
tick,0x7ffdc994fb34,304574731,0,0x0,8
tick,0x7ffdc994fb34,304590009,0,0x0,8
tick,0x7ffdc994fb34,304605932,0,0x0,8
tick,0x7ffdc994fb34,304621343,0,0x0,8
tick,0x7ffdc994fb34,304637119,0,0x0,8
tick,0x7ffdc994fb34,304652376,0,0x0,8
tick,0x7ffdc994fb34,304668107,0,0x0,8
tick,0x7ffdc994fb34,304683602,0,0x0,8
tick,0x7ffdc994fb34,304699430,0,0x0,8
tick,0x7ffdc994fb34,304714650,0,0x0,8
tick,0x7ffdc994fb34,304730077,0,0x0,8
tick,0x7ffdc994fb34,304745694,0,0x0,8
tick,0x7ffdc994fb34,304761449,0,0x0,8
tick,0x7ffdc994fb34,304776662,0,0x0,8
tick,0x7ffdc994fb34,304792524,0,0x0,8
tick,0x7ffdc994fb34,304807856,0,0x0,8
tick,0x7ffdc994fb34,304823253,0,0x0,8
tick,0x7ffdc994fb34,304838729,0,0x0,8
tick,0x7ffdc994fb34,304854481,0,0x0,8
tick,0x7ffdc994fb34,304869736,0,0x0,8
tick,0x7ffdc994fb34,304885122,0,0x0,8
tick,0x7ffdc994fb34,304900461,0,0x0,8
tick,0x7ffdc994fb34,304915915,0,0x0,8
tick,0x7ffdc994fb34,304931004,0,0x0,8
tick,0x7ffdc994fb34,304946705,0,0x0,8
tick,0x7ffdc994fb34,304962733,0,0x0,8
tick,0x7ffdc994fb34,304977892,0,0x0,8
tick,0x7ffdc994fb34,304994081,0,0x0,8
tick,0x7ffdc994fb34,305010038,0,0x0,8
tick,0x7ffdc994fb34,305025347,0,0x0,8
tick,0x7ffdc994fb34,305041119,0,0x0,8
tick,0x7ffdc994fb34,305056449,0,0x0,8
tick,0x7ffdc994fb34,305072046,0,0x0,8
tick,0x7ffdc994fb34,305087649,0,0x0,8
tick,0x7ffdc994fb34,305103493,0,0x0,8
tick,0x7ffdc994fb34,305119322,0,0x0,8
tick,0x7ffdc994fb34,305134807,0,0x0,8
tick,0x7ffdc994fb34,305150632,0,0x0,8
tick,0x7ffdc994fb34,305166037,0,0x0,8
tick,0x7ffdc994fb34,305181179,0,0x0,8
tick,0x7ffdc994fb34,305196992,0,0x0,8
tick,0x7ffdc994fb34,305212424,0,0x0,8
tick,0x7ffdc994fb34,305227586,0,0x0,8
tick,0x7ffdc994fb34,305243363,0,0x0,8
tick,0x7ffdc994fb34,305258699,0,0x0,8
tick,0x7ffdc994fb34,305274019,0,0x0,8
tick,0x7ffdc994fb34,305289629,0,0x0,8
tick,0x7ffdc994fb34,305305129,0,0x0,8
tick,0x7ffdc994fb34,305321201,0,0x0,8
tick,0x7ffdc994fb34,305336568,0,0x0,8
tick,0x7ffdc994fb34,305352049,0,0x0,8
tick,0x7ffdc994fb34,305367530,0,0x0,8
tick,0x7ffdc994fb34,305383400,0,0x0,8
tick,0x7ffdc994fb34,305399254,0,0x0,8
tick,0x7ffdc994fb34,305414300,0,0x0,8
tick,0x7ffdc994fb34,305430002,0,0x0,8
tick,0x7ffdc994fb34,305445192,0,0x0,8
tick,0x7ffdc994fb34,305460821,0,0x0,8
tick,0x7ffdc994fb34,305475982,0,0x0,8
tick,0x7ffdc994fb34,305491683,0,0x0,8
tick,0x7ffdc994fb34,305507240,0,0x0,8
tick,0x7ffdc994fb34,305522889,0,0x0,8
tick,0x7ffdc994fb34,305537816,0,0x0,8
tick,0x7ffdc994fb34,305553444,0,0x0,8
tick,0x7ffdc994fb34,305568869,0,0x0,8
tick,0x7ffdc994fb34,305584280,0,0x0,8
tick,0x7ffdc994fb34,305599550,0,0x0,8
tick,0x7ffdc994fb34,305615047,0,0x0,8
tick,0x7ffdc994fb34,305630890,0,0x0,8
tick,0x7ffdc994fb34,305646719,0,0x0,8
tick,0x7ffdc994fb34,305662008,0,0x0,8
tick,0x7ffdc994fb34,305677987,0,0x0,8
tick,0x7ffdc994fb34,305693151,0,0x0,8
tick,0x7ffdc994fb34,305708821,0,0x0,8
tick,0x7ffdc994fb34,305724314,0,0x0,8
tick,0x7ffdc994fb34,305739931,0,0x0,8
tick,0x7ffdc994fb34,305755280,0,0x0,8
tick,0x7ffdc994fb34,305771059,0,0x0,8
tick,0x7ffdc994fb34,305785954,0,0x0,8
tick,0x7ffdc994fb34,305802129,0,0x0,8
tick,0x7ffdc994fb34,305817726,0,0x0,8
tick,0x7ffdc994fb34,305833286,0,0x0,8
tick,0x7ffdc994fb34,305848614,0,0x0,8
tick,0x7ffdc994fb34,305863911,0,0x0,8
tick,0x7ffdc994fb34,305879610,0,0x0,8
tick,0x7ffdc994fb34,305894537,0,0x0,8
tick,0x7ffdc994fb34,305910130,0,0x0,8
tick,0x7ffdc994fb34,305925401,0,0x0,8
tick,0x7ffdc994fb34,305940839,0,0x0,8
tick,0x7ffdc994fb34,305955910,0,0x0,8
tick,0x7ffdc994fb34,305971247,0,0x0,8
tick,0x7ffdc994fb34,305986582,0,0x0,8
tick,0x7ffdc994fb34,306002211,0,0x0,8
tick,0x7ffdc994fb34,306017877,0,0x0,8
tick,0x7ffdc994fb34,306032940,0,0x0,8
tick,0x7ffdc994fb34,306048509,0,0x0,8
tick,0x7ffdc994fb34,306063649,0,0x0,8
tick,0x7ffdc994fb34,306079690,0,0x0,8
tick,0x7ffdc994fb34,306095194,0,0x0,8
tick,0x7ffdc994fb34,306110873,0,0x0,8
tick,0x7ffdc994fb34,306126029,0,0x0,8
tick,0x7ffdc994fb34,306141814,0,0x0,8
tick,0x7ffdc994fb34,306157147,0,0x0,8
tick,0x7ffdc994fb34,306172853,0,0x0,8
tick,0x7ffdc994fb34,306187563,0,0x0,8
tick,0x7ffdc994fb34,306203396,0,0x0,8
tick,0x7ffdc994fb34,306219068,0,0x0,8
tick,0x7ffdc994fb34,306234532,0,0x0,8
tick,0x7ffdc994fb34,306250056,0,0x0,8
tick,0x7ffdc994fb34,306265587,0,0x0,8
tick,0x7ffdc994fb34,306281043,0,0x0,8
tick,0x7ffdc994fb34,306296753,0,0x0,8
tick,0x7ffdc994fb34,306312179,0,0x0,8
tick,0x7ffdc994fb34,306328152,0,0x0,8
tick,0x7ffdc994fb34,306343317,0,0x0,8
tick,0x7ffdc994fb34,306359281,0,0x0,8
tick,0x7ffdc994fb34,306374915,0,0x0,8
tick,0x7ffdc994fb34,306390189,0,0x0,8
tick,0x7ffdc994fb34,306406450,0,0x0,8
tick,0x7ffdc994fb34,306421665,0,0x0,8
tick,0x7ffdc994fb34,306437087,0,0x0,8
tick,0x7ffdc994fb34,306453219,0,0x0,8
tick,0x7ffdc994fb34,306468706,0,0x0,8
tick,0x7ffdc994fb34,306484148,0,0x0,8
tick,0x7ffdc994fb34,306499987,0,0x0,8
tick,0x7ffdc994fb34,306515072,0,0x0,8
tick,0x7ffdc994fb34,306531237,0,0x0,8
tick,0x7ffdc994fb34,306547000,0,0x0,8
tick,0x7ffdc994fb34,306562354,0,0x0,8
tick,0x7ffdc994fb34,306577741,0,0x0,8
tick,0x7ffdc994fb34,306593441,0,0x0,8
tick,0x7ffdc994fb34,306609027,0,0x0,8
tick,0x7ffdc994fb34,306624764,0,0x0,8
tick,0x7ffdc994fb34,306640314,0,0x0,8
tick,0x7ffdc994fb34,306656614,0,0x0,8
tick,0x7ffdc994fb34,306672194,0,0x0,8
tick,0x7ffdc994fb34,306687245,0,0x0,8
tick,0x7ffdc994fb34,306702835,0,0x0,8
tick,0x7ffdc994fb34,306717817,0,0x0,8
tick,0x7ffdc994fb34,306733454,0,0x0,8
tick,0x7ffdc994fb34,306748898,0,0x0,8
tick,0x7ffdc994fb34,306764307,0,0x0,8
tick,0x7ffdc994fb34,306780303,0,0x0,8
tick,0x7ffdc994fb34,306795393,0,0x0,8
tick,0x7ffdc994fb34,306810919,0,0x0,8
tick,0x7ffdc994fb34,306826269,0,0x0,8
tick,0x7ffdc994fb34,306842439,0,0x0,8
tick,0x7ffdc994fb34,306857927,0,0x0,8
tick,0x7ffdc994fb34,306873407,0,0x0,8
tick,0x7ffdc994fb34,306889025,0,0x0,8
tick,0x7ffdc994fb34,306904634,0,0x0,8
tick,0x7ffdc994fb34,306920125,0,0x0,8
tick,0x7ffdc994fb34,306935635,0,0x0,8
tick,0x7ffdc994fb34,306951187,0,0x0,8
tick,0x7ffdc994fb34,306966916,0,0x0,8
tick,0x7ffdc994fb34,306982970,0,0x0,8
tick,0x7ffdc994fb34,306998854,0,0x0,8
tick,0x7ffdc994fb34,307014320,0,0x0,8
tick,0x7ffdc994fb34,307029768,0,0x0,8
tick,0x7ffdc994fb34,307045215,0,0x0,8
tick,0x7ffdc994fb34,307060912,0,0x0,8
tick,0x7ffdc994fb34,307076912,0,0x0,8
tick,0x7ffdc994fb34,307092905,0,0x0,8
tick,0x7ffdc994fb34,307108716,0,0x0,8
tick,0x7ffdc994fb34,307123969,0,0x0,8
tick,0x7ffdc994fb34,307139735,0,0x0,8
tick,0x7ffdc994fb34,307155399,0,0x0,8
tick,0x7ffdc994fb34,307171020,0,0x0,8
tick,0x7ffdc994fb34,307186463,0,0x0,8
tick,0x7ffdc994fb34,307202336,0,0x0,8
tick,0x7ffdc994fb34,307217837,0,0x0,8
tick,0x7ffdc994fb34,307233430,0,0x0,8
tick,0x7ffdc994fb34,307249431,0,0x0,8
tick,0x7ffdc994fb34,307265156,0,0x0,8
tick,0x7ffdc994fb34,307280994,0,0x0,8
tick,0x7ffdc994fb34,307296249,0,0x0,8
tick,0x7ffdc994fb34,307311678,0,0x0,8
tick,0x7ffdc994fb34,307327309,0,0x0,8
tick,0x7ffdc994fb34,307342554,0,0x0,8
tick,0x7ffdc994fb34,307357844,0,0x0,8
tick,0x7ffdc994fb34,307373552,0,0x0,8
tick,0x7ffdc994fb34,307389590,0,0x0,8
tick,0x7ffdc994fb34,307404784,0,0x0,8
tick,0x7ffdc994fb34,307421157,0,0x0,8
tick,0x7ffdc994fb34,307436886,0,0x0,8
tick,0x7ffdc994fb34,307452990,0,0x0,8
tick,0x7ffdc994fb34,307468361,0,0x0,8
tick,0x7ffdc994fb34,307483760,0,0x0,8
tick,0x7ffdc994fb34,307499052,0,0x0,8
tick,0x7ffdc994fb34,307514750,0,0x0,8
tick,0x7ffdc994fb34,307529990,0,0x0,8
tick,0x7ffdc994fb34,307545787,0,0x0,8
tick,0x7ffdc994fb34,307561033,0,0x0,8
tick,0x7ffdc994fb34,307576827,0,0x0,8
tick,0x7ffdc994fb34,307592013,0,0x0,8
tick,0x7ffdc994fb34,307607726,0,0x0,8
tick,0x7ffdc994fb34,307622899,0,0x0,8
tick,0x7ffdc994fb34,307637966,0,0x0,8
tick,0x7ffdc994fb34,307653008,0,0x0,8
tick,0x7ffdc994fb34,307668826,0,0x0,8
tick,0x7ffdc994fb34,307684176,0,0x0,8
tick,0x7ffdc994fb34,307699641,0,0x0,8
tick,0x7ffdc994fb34,307715410,0,0x0,8
tick,0x7ffdc994fb34,307731091,0,0x0,8
tick,0x7ffdc994fb34,307746180,0,0x0,8
tick,0x7ffdc994fb34,307762649,0,0x0,8
tick,0x7ffdc994fb34,307777587,0,0x0,8
tick,0x7ffdc994fb34,307793351,0,0x0,8
tick,0x7ffdc994fb34,307808684,0,0x0,8
tick,0x7ffdc994fb34,307824083,0,0x0,8
tick,0x7ffdc994fb34,307839758,0,0x0,8
tick,0x7ffdc994fb34,307854818,0,0x0,8
tick,0x7ffdc994fb34,307870537,0,0x0,8
tick,0x7ffdc994fb34,307886401,0,0x0,8
tick,0x7ffdc994fb34,307902380,0,0x0,8
tick,0x7ffdc994fb34,307918185,0,0x0,8
tick,0x7ffdc994fb34,307934339,0,0x0,8
tick,0x7ffdc994fb34,307949982,0,0x0,8
tick,0x7ffdc994fb34,307965459,0,0x0,8
tick,0x7ffdc994fb34,307981142,0,0x0,8
tick,0x7ffdc994fb34,307996495,0,0x0,8
tick,0x7ffdc994fb34,308012480,0,0x0,8
tick,0x7ffdc994fb34,308028270,0,0x0,8
tick,0x7ffdc994fb34,308043056,0,0x0,8
tick,0x7ffdc994fb34,308059169,0,0x0,8
tick,0x7ffdc994fb34,308074531,0,0x0,8
tick,0x7ffdc994fb34,308090312,0,0x0,8
tick,0x7ffdc994fb34,308105787,0,0x0,8
tick,0x7ffdc994fb34,308121281,0,0x0,8
tick,0x7ffdc994fb34,308136941,0,0x0,8
tick,0x7ffdc994fb34,308152176,0,0x0,8
tick,0x7ffdc994fb34,308168109,0,0x0,8
tick,0x7ffdc994fb34,308183922,0,0x0,8
tick,0x7ffdc994fb34,308199218,0,0x0,8
tick,0x7ffdc994fb34,308215116,0,0x0,8
tick,0x7ffdc994fb34,308230888,0,0x0,8
tick,0x7ffdc994fb34,308245807,0,0x0,8
tick,0x7ffdc994fb34,308261848,0,0x0,8
tick,0x7ffdc994fb34,308277010,0,0x0,8
tick,0x7ffdc994fb34,308292597,0,0x0,8
tick,0x7ffdc994fb34,308307868,0,0x0,8
tick,0x7ffdc994fb34,308323042,0,0x0,8
tick,0x7ffdc994fb34,308338589,0,0x0,8
tick,0x7ffdc994fb34,308354233,0,0x0,8
tick,0x7ffdc994fb34,308369520,0,0x0,8
tick,0x7ffdc994fb34,308384984,0,0x0,8
tick,0x7ffdc994fb34,308400314,0,0x0,8
tick,0x7ffdc994fb34,308416210,0,0x0,8
tick,0x7ffdc994fb34,308432634,0,0x0,8
tick,0x7ffdc994fb34,308448267,0,0x0,8
tick,0x7ffdc994fb34,308463558,0,0x0,8
tick,0x7ffdc994fb34,308478905,0,0x0,8
tick,0x7ffdc994fb34,308494605,0,0x0,8
tick,0x7ffdc994fb34,308509870,0,0x0,8
tick,0x7ffdc994fb34,308525805,0,0x0,8
tick,0x7ffdc994fb34,308541568,0,0x0,8
tick,0x7ffdc994fb34,308556839,0,0x0,8
tick,0x7ffdc994fb34,308572080,0,0x0,8
tick,0x7ffdc994fb34,308587722,0,0x0,8
tick,0x7ffdc994fb34,308603001,0,0x0,8
tick,0x7ffdc994fb34,308618429,0,0x0,8
tick,0x7ffdc994fb34,308633679,0,0x0,8
tick,0x7ffdc994fb34,308649100,0,0x0,8
tick,0x7ffdc994fb34,308664914,0,0x0,8
tick,0x7ffdc994fb34,308680303,0,0x0,8
tick,0x7ffdc994fb34,308696083,0,0x0,8
tick,0x7ffdc994fb34,308711275,0,0x0,8
tick,0x7ffdc994fb34,308726896,0,0x0,8
tick,0x7ffdc994fb34,308742567,0,0x0,8
tick,0x7ffdc994fb34,308757943,0,0x0,8
tick,0x7ffdc994fb34,308773316,0,0x0,8
tick,0x7ffdc994fb34,308789112,0,0x0,8
tick,0x7ffdc994fb34,308804490,0,0x0,8
tick,0x7ffdc994fb34,308820119,0,0x0,8
tick,0x7ffdc994fb34,308835364,0,0x0,8
tick,0x7ffdc994fb34,308850878,0,0x0,8
tick,0x7ffdc994fb34,308866308,0,0x0,8
tick,0x7ffdc994fb34,308882077,0,0x0,8
tick,0x7ffdc994fb34,308897303,0,0x0,8
tick,0x7ffdc994fb34,308913099,0,0x0,8
tick,0x7ffdc994fb34,308928632,0,0x0,8
tick,0x7ffdc994fb34,308944780,0,0x0,8
tick,0x7ffdc994fb34,308960303,0,0x0,8
tick,0x7ffdc994fb34,308975839,0,0x0,8
tick,0x7ffdc994fb34,308991467,0,0x0,8
tick,0x7ffdc994fb34,309006033,0,0x0,8
tick,0x7ffdc994fb34,309022019,0,0x0,8
tick,0x7ffdc994fb34,309037271,0,0x0,8
tick,0x7ffdc994fb34,309053428,0,0x0,8
tick,0x7ffdc994fb34,309069110,0,0x0,8
tick,0x7ffdc994fb34,309084527,0,0x0,8
tick,0x7ffdc994fb34,309100760,0,0x0,8
tick,0x7ffdc994fb34,309116571,0,0x0,8
tick,0x7ffdc994fb34,309132829,0,0x0,8
tick,0x7ffdc994fb34,309148495,0,0x0,8
tick,0x7ffdc994fb34,309163658,0,0x0,8
tick,0x7ffdc994fb34,309179282,0,0x0,8
tick,0x7ffdc994fb34,309195079,0,0x0,8
tick,0x7ffdc994fb34,309210472,0,0x0,8
tick,0x7ffdc994fb34,309225995,0,0x0,8
tick,0x7ffdc994fb34,309242115,0,0x0,8
tick,0x7ffdc994fb34,309257416,0,0x0,8
tick,0x7ffdc994fb34,309273096,0,0x0,8
tick,0x7ffdc994fb34,309288216,0,0x0,8
tick,0x7ffdc994fb34,309303735,0,0x0,8
tick,0x7ffdc994fb34,309319447,0,0x0,8
tick,0x7ffdc994fb34,309334548,0,0x0,8
tick,0x7ffdc994fb34,309350368,0,0x0,8
tick,0x7ffdc994fb34,309365529,0,0x0,8
tick,0x7ffdc994fb34,309381206,0,0x0,8
tick,0x7ffdc994fb34,309396961,0,0x0,8
tick,0x7ffdc994fb34,309412552,0,0x0,8
tick,0x7ffdc994fb34,309427747,0,0x0,8
tick,0x7ffdc994fb34,309442716,0,0x0,8
tick,0x7ffdc994fb34,309458602,0,0x0,8
tick,0x7ffdc994fb34,309474357,0,0x0,8
tick,0x7ffdc994fb34,309489518,0,0x0,8
tick,0x7ffdc994fb34,309504613,0,0x0,8
tick,0x7ffdc994fb34,309519837,0,0x0,8
tick,0x7ffdc994fb34,309534986,0,0x0,8
tick,0x7ffdc994fb34,309551014,0,0x0,8
tick,0x7ffdc994fb34,309566082,0,0x0,8
tick,0x7ffdc994fb34,309582054,0,0x0,8
tick,0x7ffdc994fb34,309597145,0,0x0,8
tick,0x7ffdc994fb34,309613403,0,0x0,8
tick,0x7ffdc994fb34,309629236,0,0x0,8
tick,0x7ffdc994fb34,309644422,0,0x0,8
tick,0x7ffdc994fb34,309659649,0,0x0,8
tick,0x7ffdc994fb34,309675493,0,0x0,8
tick,0x7ffdc994fb34,309690586,0,0x0,8
tick,0x7ffdc994fb34,309705831,0,0x0,8
tick,0x7ffdc994fb34,309721474,0,0x0,8
tick,0x7ffdc994fb34,309736778,0,0x0,8
tick,0x7ffdc994fb34,309752366,0,0x0,8
tick,0x7ffdc994fb34,309767469,0,0x0,8
tick,0x7ffdc994fb34,309782840,0,0x0,8
tick,0x7ffdc994fb34,309798850,0,0x0,8
tick,0x7ffdc994fb34,309813849,0,0x0,8
tick,0x7ffdc994fb34,309829477,0,0x0,8
tick,0x7ffdc994fb34,309845526,0,0x0,8
tick,0x7ffdc994fb34,309860840,0,0x0,8
tick,0x7ffdc994fb34,309875959,0,0x0,8
tick,0x7ffdc994fb34,309892251,0,0x0,8
tick,0x7ffdc994fb34,309907955,0,0x0,8
tick,0x7ffdc994fb34,309923390,0,0x0,8
tick,0x7ffdc994fb34,309938611,0,0x0,8
tick,0x7ffdc994fb34,309954804,0,0x0,8
tick,0x7ffdc994fb34,309969646,0,0x0,8
tick,0x7ffdc994fb34,309984977,0,0x0,8
tick,0x7ffdc994fb34,310000636,0,0x0,8
tick,0x7ffdc994fb34,310016018,0,0x0,8
tick,0x7ffdc994fb34,310031064,0,0x0,8
tick,0x7ffdc994fb34,310046164,0,0x0,8
tick,0x7ffdc994fb34,310061942,0,0x0,8
tick,0x7ffdc994fb34,310077544,0,0x0,8
tick,0x7ffdc994fb34,310093296,0,0x0,8
tick,0x7ffdc994fb34,310109236,0,0x0,8
tick,0x7ffdc994fb34,310125371,0,0x0,8
tick,0x7ffdc994fb34,310141131,0,0x0,8
tick,0x7ffdc994fb34,310157249,0,0x0,8
tick,0x7ffdc994fb34,310172808,0,0x0,8
tick,0x7ffdc994fb34,310188791,0,0x0,8
tick,0x7ffdc994fb34,310204203,0,0x0,8
tick,0x7ffdc994fb34,310219539,0,0x0,8
tick,0x7ffdc994fb34,310235069,0,0x0,8
tick,0x7ffdc994fb34,310250917,0,0x0,8
tick,0x7ffdc994fb34,310266352,0,0x0,8
tick,0x7ffdc994fb34,310282041,0,0x0,8
tick,0x7ffdc994fb34,310297818,0,0x0,8
tick,0x7ffdc994fb34,310313582,0,0x0,8
tick,0x7ffdc994fb34,310328943,0,0x0,8
tick,0x7ffdc994fb34,310344434,0,0x0,8
tick,0x7ffdc994fb34,310359777,0,0x0,8
tick,0x7ffdc994fb34,310374910,0,0x0,8
tick,0x7ffdc994fb34,310390094,0,0x0,8
tick,0x7ffdc994fb34,310405425,0,0x0,8
tick,0x7ffdc994fb34,310421142,0,0x0,8
tick,0x7ffdc994fb34,310436773,0,0x0,8
tick,0x7ffdc994fb34,310452699,0,0x0,8
tick,0x7ffdc994fb34,310468180,0,0x0,8
tick,0x7ffdc994fb34,310484313,0,0x0,8
tick,0x7ffdc994fb34,310499415,0,0x0,8
tick,0x7ffdc994fb34,310514923,0,0x0,8
tick,0x7ffdc994fb34,310529955,0,0x0,8
tick,0x7ffdc994fb34,310545232,0,0x0,8
tick,0x7ffdc994fb34,310560328,0,0x0,8
tick,0x7ffdc994fb34,310575494,0,0x0,8
tick,0x7ffdc994fb34,310591215,0,0x0,8
tick,0x7ffdc994fb34,310607137,0,0x0,8
tick,0x7ffdc994fb34,310622650,0,0x0,8
tick,0x7ffdc994fb34,310638379,0,0x0,8
tick,0x7ffdc994fb34,310654283,0,0x0,8
tick,0x7ffdc994fb34,310669911,0,0x0,8
tick,0x7ffdc994fb34,310685885,0,0x0,8
tick,0x7ffdc994fb34,310701901,0,0x0,8
tick,0x7ffdc994fb34,310716951,0,0x0,8
tick,0x7ffdc994fb34,310732557,0,0x0,8
tick,0x7ffdc994fb34,310747740,0,0x0,8
tick,0x7ffdc994fb34,310763124,0,0x0,8
tick,0x7ffdc994fb34,310777731,0,0x0,8
tick,0x7ffdc994fb34,310793036,0,0x0,8
tick,0x7ffdc994fb34,310808882,0,0x0,8
tick,0x7ffdc994fb34,310823838,0,0x0,8
tick,0x7ffdc994fb34,310840732,0,0x0,8
tick,0x7ffdc994fb34,310854937,0,0x0,8
tick,0x7ffdc994fb34,310870573,0,0x0,8
tick,0x7ffdc994fb34,310892407,0,0x0,8
tick,0x7ffdc994fb34,310900791,0,0x0,8
tick,0x7ffdc994fb34,310916676,0,0x0,8
tick,0x7ffdc994fb34,310931844,0,0x0,8
tick,0x7ffdc994fb34,310947508,0,0x0,8
tick,0x7ffdc994fb34,310962500,0,0x0,8
tick,0x7ffdc994fb34,310978307,0,0x0,8
tick,0x7ffdc994fb34,310994419,0,0x0,8
tick,0x7ffdc994fb34,311009725,0,0x0,8
tick,0x7ffdc994fb34,311025390,0,0x0,8
tick,0x7ffdc994fb34,311040536,0,0x0,8
tick,0x7ffdc994fb34,311055920,0,0x0,8
tick,0x7ffdc994fb34,311070992,0,0x0,8
tick,0x7ffdc994fb34,311086550,0,0x0,8
tick,0x7ffdc994fb34,311101652,0,0x0,8
tick,0x7ffdc994fb34,311117427,0,0x0,8
tick,0x7ffdc994fb34,311132759,0,0x0,8
tick,0x7ffdc994fb34,311148068,0,0x0,8
tick,0x7ffdc994fb34,311163363,0,0x0,8
tick,0x7ffdc994fb34,311178869,0,0x0,8
tick,0x7ffdc994fb34,311194116,0,0x0,8
tick,0x7ffdc994fb34,311209380,0,0x0,8
tick,0x7ffdc994fb34,311224266,0,0x0,8
tick,0x7ffdc994fb34,311240439,0,0x0,8
tick,0x7ffdc994fb34,311255810,0,0x0,8
tick,0x7ffdc994fb34,311270944,0,0x0,8
tick,0x7ffdc994fb34,311286397,0,0x0,8
tick,0x7ffdc994fb34,311301986,0,0x0,8
tick,0x7ffdc994fb34,311317907,0,0x0,8
tick,0x7ffdc994fb34,311333591,0,0x0,8
tick,0x7ffdc994fb34,311349546,0,0x0,8
tick,0x7ffdc994fb34,311364567,0,0x0,8
tick,0x7ffdc994fb34,311380785,0,0x0,8
tick,0x7ffdc994fb34,311396106,0,0x0,8
tick,0x7ffdc994fb34,311411752,0,0x0,8
tick,0x7ffdc994fb34,311427064,0,0x0,8
tick,0x7ffdc994fb34,311443189,0,0x0,8
tick,0x7ffdc994fb34,311458963,0,0x0,8
tick,0x7ffdc994fb34,311474694,0,0x0,8
tick,0x7ffdc994fb34,311490450,0,0x0,8
tick,0x7ffdc994fb34,311505680,0,0x0,8
tick,0x7ffdc994fb34,311520924,0,0x0,8
tick,0x7ffdc994fb34,311536583,0,0x0,8
tick,0x7ffdc994fb34,311552265,0,0x0,8
tick,0x7ffdc994fb34,311567961,0,0x0,8
tick,0x7ffdc994fb34,311584250,0,0x0,8
tick,0x7ffdc994fb34,311599542,0,0x0,8
tick,0x7ffdc994fb34,311615073,0,0x0,8
tick,0x7ffdc994fb34,311630511,0,0x0,8
tick,0x7ffdc994fb34,311646309,0,0x0,8
tick,0x7ffdc994fb34,311661947,0,0x0,8
tick,0x7ffdc994fb34,311677834,0,0x0,8
tick,0x7ffdc994fb34,311693041,0,0x0,8
tick,0x7ffdc994fb34,311708390,0,0x0,8
tick,0x7ffdc994fb34,311724129,0,0x0,8
tick,0x7ffdc994fb34,311739659,0,0x0,8
tick,0x7ffdc994fb34,311755101,0,0x0,8
tick,0x7ffdc994fb34,311770891,0,0x0,8
tick,0x7ffdc994fb34,311786664,0,0x0,8
tick,0x7ffdc994fb34,311802835,0,0x0,8
tick,0x7ffdc994fb34,311818443,0,0x0,8
tick,0x7ffdc994fb34,311833873,0,0x0,8
tick,0x7ffdc994fb34,311849780,0,0x0,8
tick,0x7ffdc994fb34,311865835,0,0x0,8
tick,0x7ffdc994fb34,311881217,0,0x0,8
tick,0x7ffdc994fb34,311897421,0,0x0,8
tick,0x7ffdc994fb34,311912819,0,0x0,8
tick,0x7ffdc994fb34,311928486,0,0x0,8
tick,0x7ffdc994fb34,311943932,0,0x0,8
tick,0x7ffdc994fb34,311959449,0,0x0,8
tick,0x7ffdc994fb34,311975297,0,0x0,8
tick,0x7ffdc994fb34,311991089,0,0x0,8
tick,0x7ffdc994fb34,312006376,0,0x0,8
tick,0x7ffdc994fb34,312022100,0,0x0,8
tick,0x7ffdc994fb34,312037615,0,0x0,8
tick,0x7ffdc994fb34,312053419,0,0x0,8
tick,0x7ffdc994fb34,312069217,0,0x0,8
tick,0x7ffdc994fb34,312084764,0,0x0,8
tick,0x7ffdc994fb34,312100126,0,0x0,8
tick,0x7ffdc994fb34,312115660,0,0x0,8
tick,0x7ffdc994fb34,312130667,0,0x0,8
tick,0x7ffdc994fb34,312146618,0,0x0,8
tick,0x7ffdc994fb34,312162417,0,0x0,8
tick,0x7ffdc994fb34,312177879,0,0x0,8
tick,0x7ffdc994fb34,312193428,0,0x0,8
tick,0x7ffdc994fb34,312208714,0,0x0,8
tick,0x7ffdc994fb34,312223985,0,0x0,8
tick,0x7ffdc994fb34,312239616,0,0x0,8
tick,0x7ffdc994fb34,312254947,0,0x0,8
tick,0x7ffdc994fb34,312270959,0,0x0,8
tick,0x7ffdc994fb34,312286330,0,0x0,8
tick,0x7ffdc994fb34,312302239,0,0x0,8
tick,0x7ffdc994fb34,312318060,0,0x0,8
tick,0x7ffdc994fb34,312333558,0,0x0,8
tick,0x7ffdc994fb34,312349178,0,0x0,8
tick,0x7ffdc994fb34,312364378,0,0x0,8
tick,0x7ffdc994fb34,312379653,0,0x0,8
tick,0x7ffdc994fb34,312394872,0,0x0,8
tick,0x7ffdc994fb34,312410585,0,0x0,8
tick,0x7ffdc994fb34,312426138,0,0x0,8
tick,0x7ffdc994fb34,312441831,0,0x0,8
tick,0x7ffdc994fb34,312457424,0,0x0,8
tick,0x7ffdc994fb34,312473286,0,0x0,8
tick,0x7ffdc994fb34,312488979,0,0x0,8
tick,0x7ffdc994fb34,312504280,0,0x0,8
tick,0x7ffdc994fb34,312520310,0,0x0,8
tick,0x7ffdc994fb34,312535974,0,0x0,8
tick,0x7ffdc994fb34,312551405,0,0x0,8
tick,0x7ffdc994fb34,312567202,0,0x0,8
tick,0x7ffdc994fb34,312582782,0,0x0,8
tick,0x7ffdc994fb34,312598689,0,0x0,8
tick,0x7ffdc994fb34,312614323,0,0x0,8
tick,0x7ffdc994fb34,312629731,0,0x0,8
tick,0x7ffdc994fb34,312645645,0,0x0,8
tick,0x7ffdc994fb34,312661188,0,0x0,8
tick,0x7ffdc994fb34,312676567,0,0x0,8
tick,0x7ffdc994fb34,312691612,0,0x0,8
tick,0x7ffdc994fb34,312706693,0,0x0,8
tick,0x7ffdc994fb34,312722488,0,0x0,8
tick,0x7ffdc994fb34,312737900,0,0x0,8
tick,0x7ffdc994fb34,312753822,0,0x0,8
tick,0x7ffdc994fb34,312769060,0,0x0,8
tick,0x7ffdc994fb34,312784459,0,0x0,8
tick,0x7ffdc994fb34,312800188,0,0x0,8
tick,0x7ffdc994fb34,312815881,0,0x0,8
tick,0x7ffdc994fb34,312831375,0,0x0,8
tick,0x7ffdc994fb34,312846997,0,0x0,8
tick,0x7ffdc994fb34,312862225,0,0x0,8
tick,0x7ffdc994fb34,312877595,0,0x0,8
tick,0x7ffdc994fb34,312892958,0,0x0,8
tick,0x7ffdc994fb34,312908307,0,0x0,8
tick,0x7ffdc994fb34,312924096,0,0x0,8
tick,0x7ffdc994fb34,312939681,0,0x0,8
tick,0x7ffdc994fb34,312955250,0,0x0,8
tick,0x7ffdc994fb34,312970834,0,0x0,8
tick,0x7ffdc994fb34,312986936,0,0x0,8
tick,0x7ffdc994fb34,313002228,0,0x0,8
tick,0x7ffdc994fb34,313018026,0,0x0,8
tick,0x7ffdc994fb34,313033629,0,0x0,8
tick,0x7ffdc994fb34,313049115,0,0x0,8
tick,0x7ffdc994fb34,313064087,0,0x0,8
tick,0x7ffdc994fb34,313080017,0,0x0,8
tick,0x7ffdc994fb34,313096058,0,0x0,8
tick,0x7ffdc994fb34,313111248,0,0x0,8
tick,0x7ffdc994fb34,313127154,0,0x0,8
tick,0x7ffdc994fb34,313142760,0,0x0,8
tick,0x7ffdc994fb34,313157951,0,0x0,8
tick,0x7ffdc994fb34,313173200,0,0x0,8
tick,0x7ffdc994fb34,313188856,0,0x0,8
tick,0x7ffdc994fb34,313204013,0,0x0,8
tick,0x7ffdc994fb34,313219612,0,0x0,8
tick,0x7ffdc994fb34,313235082,0,0x0,8
tick,0x7ffdc994fb34,313250727,0,0x0,8
tick,0x7ffdc994fb34,313266173,0,0x0,8
tick,0x7ffdc994fb34,313281875,0,0x0,8
tick,0x7ffdc994fb34,313297624,0,0x0,8
tick,0x7ffdc994fb34,313312623,0,0x0,8
tick,0x7ffdc994fb34,313328449,0,0x0,8
tick,0x7ffdc994fb34,313344378,0,0x0,8
tick,0x7ffdc994fb34,313359665,0,0x0,8
tick,0x7ffdc994fb34,313374956,0,0x0,8
tick,0x7ffdc994fb34,313390293,0,0x0,8
tick,0x7ffdc994fb34,313405585,0,0x0,8
tick,0x7ffdc994fb34,313421048,0,0x0,8
tick,0x7ffdc994fb34,313437152,0,0x0,8
tick,0x7ffdc994fb34,313452299,0,0x0,8
tick,0x7ffdc994fb34,313467837,0,0x0,8
tick,0x7ffdc994fb34,313483304,0,0x0,8
tick,0x7ffdc994fb34,313498853,0,0x0,8
tick,0x7ffdc994fb34,313514653,0,0x0,8
tick,0x7ffdc994fb34,313529994,0,0x0,8
tick,0x7ffdc994fb34,313545553,0,0x0,8
tick,0x7ffdc994fb34,313561180,0,0x0,8
tick,0x7ffdc994fb34,313577054,0,0x0,8
tick,0x7ffdc994fb34,313592847,0,0x0,8
tick,0x7ffdc994fb34,313608904,0,0x0,8
tick,0x7ffdc994fb34,313623800,0,0x0,8
tick,0x7ffdc994fb34,313639628,0,0x0,8
tick,0x7ffdc994fb34,313655496,0,0x0,8
tick,0x7ffdc994fb34,313671323,0,0x0,8
tick,0x7ffdc994fb34,313686900,0,0x0,8
tick,0x7ffdc994fb34,313702979,0,0x0,8
tick,0x7ffdc994fb34,313719029,0,0x0,8
tick,0x7ffdc994fb34,313735076,0,0x0,8
tick,0x7ffdc994fb34,313750477,0,0x0,8
tick,0x7ffdc994fb34,313766222,0,0x0,8
tick,0x7ffdc994fb34,313781405,0,0x0,8
tick,0x7ffdc994fb34,313796897,0,0x0,8
tick,0x7ffdc994fb34,313812329,0,0x0,8
tick,0x7ffdc994fb34,313827963,0,0x0,8
tick,0x7ffdc994fb34,313843181,0,0x0,8
tick,0x7ffdc994fb34,313858690,0,0x0,8
tick,0x7ffdc994fb34,313873977,0,0x0,8
tick,0x7ffdc994fb34,313889625,0,0x0,8
tick,0x7ffdc994fb34,313905394,0,0x0,8
tick,0x7ffdc994fb34,313921040,0,0x0,8
tick,0x7ffdc994fb34,313935718,0,0x0,8
tick,0x7ffdc994fb34,313951817,0,0x0,8
tick,0x7ffdc994fb34,313967204,0,0x0,8
tick,0x7ffdc994fb34,313982328,0,0x0,8
tick,0x7ffdc994fb34,313998132,0,0x0,8
tick,0x7ffdc994fb34,314013538,0,0x0,8
tick,0x7ffdc994fb34,314029377,0,0x0,8
tick,0x7ffdc994fb34,314044832,0,0x0,8
tick,0x7ffdc994fb34,314060017,0,0x0,8
tick,0x7ffdc994fb34,314075884,0,0x0,8
tick,0x7ffdc994fb34,314092122,0,0x0,8
tick,0x7ffdc994fb34,314107733,0,0x0,8
tick,0x7ffdc994fb34,314122951,0,0x0,8
tick,0x7ffdc994fb34,314138911,0,0x0,8
tick,0x7ffdc994fb34,314154402,0,0x0,8
tick,0x7ffdc994fb34,314170166,0,0x0,8
tick,0x7ffdc994fb34,314185373,0,0x0,8
tick,0x7ffdc994fb34,314201309,0,0x0,8
tick,0x7ffdc994fb34,314216449,0,0x0,8
tick,0x7ffdc994fb34,314232480,0,0x0,8
tick,0x7ffdc994fb34,314247476,0,0x0,8
tick,0x7ffdc994fb34,314263628,0,0x0,8
tick,0x7ffdc994fb34,314279158,0,0x0,8
tick,0x7ffdc994fb34,314294569,0,0x0,8
tick,0x7ffdc994fb34,314310204,0,0x0,8
tick,0x7ffdc994fb34,314326149,0,0x0,8
tick,0x7ffdc994fb34,314342193,0,0x0,8
tick,0x7ffdc994fb34,314357157,0,0x0,8
tick,0x7ffdc994fb34,314373122,0,0x0,8
tick,0x7ffdc994fb34,314388890,0,0x0,8
tick,0x7ffdc994fb34,314404338,0,0x0,8
tick,0x7ffdc994fb34,314420528,0,0x0,8
tick,0x7ffdc994fb34,314435581,0,0x0,8
tick,0x7ffdc994fb34,314451339,0,0x0,8
tick,0x7ffdc994fb34,314467216,0,0x0,8
tick,0x7ffdc994fb34,314482658,0,0x0,8
tick,0x7ffdc994fb34,314498127,0,0x0,8
tick,0x7ffdc994fb34,314513967,0,0x0,8
tick,0x7ffdc994fb34,314529308,0,0x0,8
tick,0x7ffdc994fb34,314544606,0,0x0,8
tick,0x7ffdc994fb34,314560256,0,0x0,8
tick,0x7ffdc994fb34,314575942,0,0x0,8
tick,0x7ffdc994fb34,314591229,0,0x0,8
tick,0x7ffdc994fb34,314606890,0,0x0,8
tick,0x7ffdc994fb34,314622226,0,0x0,8
tick,0x7ffdc994fb34,314637742,0,0x0,8
tick,0x7ffdc994fb34,314653377,0,0x0,8
tick,0x7ffdc994fb34,314668983,0,0x0,8
tick,0x7ffdc994fb34,314684182,0,0x0,8
tick,0x7ffdc994fb34,314699697,0,0x0,8
tick,0x7ffdc994fb34,314715087,0,0x0,8
tick,0x7ffdc994fb34,314730845,0,0x0,8
tick,0x7ffdc994fb34,314746495,0,0x0,8
tick,0x7ffdc994fb34,314761981,0,0x0,8
tick,0x7ffdc994fb34,314777149,0,0x0,8
tick,0x7ffdc994fb34,314793057,0,0x0,8
tick,0x7ffdc994fb34,314808592,0,0x0,8
tick,0x7ffdc994fb34,314823773,0,0x0,8
tick,0x7ffdc994fb34,314839110,0,0x0,8
tick,0x7ffdc994fb34,314854603,0,0x0,8
tick,0x7ffdc994fb34,314869826,0,0x0,8
tick,0x7ffdc994fb34,314885817,0,0x0,8
tick,0x7ffdc994fb34,314901538,0,0x0,8
tick,0x7ffdc994fb34,314916906,0,0x0,8
tick,0x7ffdc994fb34,314932473,0,0x0,8
tick,0x7ffdc994fb34,314948218,0,0x0,8
tick,0x7ffdc994fb34,314963438,0,0x0,8
tick,0x7ffdc994fb34,314978681,0,0x0,8
tick,0x7ffdc994fb34,314994140,0,0x0,8
tick,0x7ffdc994fb34,315009769,0,0x0,8
tick,0x7ffdc994fb34,315025284,0,0x0,8
tick,0x7ffdc994fb34,315041540,0,0x0,8
tick,0x7ffdc994fb34,315057517,0,0x0,8
tick,0x7ffdc994fb34,315073488,0,0x0,8
tick,0x7ffdc994fb34,315089125,0,0x0,8
tick,0x7ffdc994fb34,315104524,0,0x0,8
tick,0x7ffdc994fb34,315119915,0,0x0,8
tick,0x7ffdc994fb34,315135832,0,0x0,8
tick,0x7ffdc994fb34,315151298,0,0x0,8
tick,0x7ffdc994fb34,315166769,0,0x0,8
tick,0x7ffdc994fb34,315182936,0,0x0,8
tick,0x7ffdc994fb34,315198499,0,0x0,8
tick,0x7ffdc994fb34,315213911,0,0x0,8
tick,0x7ffdc994fb34,315229505,0,0x0,8
tick,0x7ffdc994fb34,315245085,0,0x0,8
tick,0x7ffdc994fb34,315260662,0,0x0,8
tick,0x7ffdc994fb34,315275952,0,0x0,8
tick,0x7ffdc994fb34,315291698,0,0x0,8
tick,0x7ffdc994fb34,315307010,0,0x0,8
tick,0x7ffdc994fb34,315322480,0,0x0,8
tick,0x7ffdc994fb34,315338440,0,0x0,8
tick,0x7ffdc994fb34,315353868,0,0x0,8
tick,0x7ffdc994fb34,315369833,0,0x0,8
tick,0x7ffdc994fb34,315385044,0,0x0,8
tick,0x7ffdc994fb34,315400396,0,0x0,8
tick,0x7ffdc994fb34,315416227,0,0x0,8
tick,0x7ffdc994fb34,315431444,0,0x0,8
tick,0x7ffdc994fb34,315446736,0,0x0,8
tick,0x7ffdc994fb34,315462058,0,0x0,8
tick,0x7ffdc994fb34,315477732,0,0x0,8
tick,0x7ffdc994fb34,315493178,0,0x0,8
tick,0x7ffdc994fb34,315508995,0,0x0,8
tick,0x7ffdc994fb34,315524152,0,0x0,8
tick,0x7ffdc994fb34,315539837,0,0x0,8
tick,0x7ffdc994fb34,315555126,0,0x0,8
tick,0x7ffdc994fb34,315570538,0,0x0,8
tick,0x7ffdc994fb34,315586404,0,0x0,8
tick,0x7ffdc994fb34,315602644,0,0x0,8
tick,0x7ffdc994fb34,315617744,0,0x0,8
tick,0x7ffdc994fb34,315633973,0,0x0,8
tick,0x7ffdc994fb34,315649579,0,0x0,8
tick,0x7ffdc994fb34,315665106,0,0x0,8
tick,0x7ffdc994fb34,315680682,0,0x0,8
tick,0x7ffdc994fb34,315695973,0,0x0,8
tick,0x7ffdc994fb34,315711663,0,0x0,8
tick,0x7ffdc994fb34,315727265,0,0x0,8
tick,0x7ffdc994fb34,315742611,0,0x0,8
tick,0x7ffdc994fb34,315758108,0,0x0,8
tick,0x7ffdc994fb34,315773481,0,0x0,8
tick,0x7ffdc994fb34,315789510,0,0x0,8
tick,0x7ffdc994fb34,315804407,0,0x0,8
tick,0x7ffdc994fb34,315820664,0,0x0,8
tick,0x7ffdc994fb34,315836699,0,0x0,8
tick,0x7ffdc994fb34,315852212,0,0x0,8
tick,0x7ffdc994fb34,315867830,0,0x0,8
tick,0x7ffdc994fb34,315883237,0,0x0,8
tick,0x7ffdc994fb34,315898793,0,0x0,8
tick,0x7ffdc994fb34,315914354,0,0x0,8
tick,0x7ffdc994fb34,315929767,0,0x0,8
tick,0x7ffdc994fb34,315945263,0,0x0,8
tick,0x7ffdc994fb34,315960982,0,0x0,8
tick,0x7ffdc994fb34,315976610,0,0x0,8
tick,0x7ffdc994fb34,315991766,0,0x0,8
tick,0x7ffdc994fb34,316007480,0,0x0,8
tick,0x7ffdc994fb34,316022767,0,0x0,8
tick,0x7ffdc994fb34,316037722,0,0x0,8
tick,0x7ffdc994fb34,316052844,0,0x0,8
tick,0x7ffdc994fb34,316068531,0,0x0,8
tick,0x7ffdc994fb34,316084495,0,0x0,8
tick,0x7ffdc994fb34,316099740,0,0x0,8
tick,0x7ffdc994fb34,316114979,0,0x0,8
tick,0x7ffdc994fb34,316130299,0,0x0,8
tick,0x7ffdc994fb34,316145691,0,0x0,8
tick,0x7ffdc994fb34,316161522,0,0x0,8
tick,0x7ffdc994fb34,316177387,0,0x0,8
tick,0x7ffdc994fb34,316192755,0,0x0,8
tick,0x7ffdc994fb34,316208184,0,0x0,8
tick,0x7ffdc994fb34,316223955,0,0x0,8
tick,0x7ffdc994fb34,316239536,0,0x0,8
tick,0x7ffdc994fb34,316254955,0,0x0,8
tick,0x7ffdc994fb34,316270574,0,0x0,8
tick,0x7ffdc994fb34,316286485,0,0x0,8
tick,0x7ffdc994fb34,316301585,0,0x0,8
tick,0x7ffdc994fb34,316317230,0,0x0,8
tick,0x7ffdc994fb34,316332886,0,0x0,8
tick,0x7ffdc994fb34,316348528,0,0x0,8
tick,0x7ffdc994fb34,316363947,0,0x0,8
tick,0x7ffdc994fb34,316379679,0,0x0,8
tick,0x7ffdc994fb34,316394867,0,0x0,8
tick,0x7ffdc994fb34,316410599,0,0x0,8
tick,0x7ffdc994fb34,316426207,0,0x0,8
tick,0x7ffdc994fb34,316441556,0,0x0,8
tick,0x7ffdc994fb34,316457499,0,0x0,8
tick,0x7ffdc994fb34,316473574,0,0x0,8
tick,0x7ffdc994fb34,316489514,0,0x0,8
tick,0x7ffdc994fb34,316504956,0,0x0,8
tick,0x7ffdc994fb34,316520754,0,0x0,8
tick,0x7ffdc994fb34,316536572,0,0x0,8
tick,0x7ffdc994fb34,316551346,0,0x0,8
tick,0x7ffdc994fb34,316566540,0,0x0,8
tick,0x7ffdc994fb34,316582693,0,0x0,8
tick,0x7ffdc994fb34,316597616,0,0x0,8
tick,0x7ffdc994fb34,316612928,0,0x0,8
tick,0x7ffdc994fb34,316629088,0,0x0,8
tick,0x7ffdc994fb34,316644178,0,0x0,8
tick,0x7ffdc994fb34,316659714,0,0x0,8
tick,0x7ffdc994fb34,316675433,0,0x0,8
tick,0x7ffdc994fb34,316690885,0,0x0,8
tick,0x7ffdc994fb34,316706580,0,0x0,8
tick,0x7ffdc994fb34,316721797,0,0x0,8
tick,0x7ffdc994fb34,316737178,0,0x0,8
tick,0x7ffdc994fb34,316753048,0,0x0,8
tick,0x7ffdc994fb34,316768380,0,0x0,8
tick,0x7ffdc994fb34,316783776,0,0x0,8
tick,0x7ffdc994fb34,316799764,0,0x0,8
tick,0x7ffdc994fb34,316815558,0,0x0,8
tick,0x7ffdc994fb34,316831530,0,0x0,8
tick,0x7ffdc994fb34,316847531,0,0x0,8
tick,0x7ffdc994fb34,316862524,0,0x0,8
tick,0x7ffdc994fb34,316878662,0,0x0,8
tick,0x7ffdc994fb34,316893828,0,0x0,8
tick,0x7ffdc994fb34,316909570,0,0x0,8
tick,0x7ffdc994fb34,316925166,0,0x0,8
tick,0x7ffdc994fb34,316940442,0,0x0,8
tick,0x7ffdc994fb34,316955939,0,0x0,8
tick,0x7ffdc994fb34,316971221,0,0x0,8
tick,0x7ffdc994fb34,316987032,0,0x0,8
tick,0x7ffdc994fb34,317002268,0,0x0,8
tick,0x7ffdc994fb34,317018074,0,0x0,8
tick,0x7ffdc994fb34,317034147,0,0x0,8
tick,0x7ffdc994fb34,317049775,0,0x0,8
tick,0x7ffdc994fb34,317065278,0,0x0,8
tick,0x7ffdc994fb34,317081403,0,0x0,8
tick,0x7ffdc994fb34,317096871,0,0x0,8
tick,0x7ffdc994fb34,317113019,0,0x0,8
tick,0x7ffdc994fb34,317128511,0,0x0,8
tick,0x7ffdc994fb34,317143867,0,0x0,8
tick,0x7ffdc994fb34,317159504,0,0x0,8
tick,0x7ffdc994fb34,317174890,0,0x0,8
tick,0x7ffdc994fb34,317190716,0,0x0,8
tick,0x7ffdc994fb34,317205859,0,0x0,8
tick,0x7ffdc994fb34,317222035,0,0x0,8
tick,0x7ffdc994fb34,317236971,0,0x0,8
tick,0x7ffdc994fb34,317252809,0,0x0,8
tick,0x7ffdc994fb34,317268645,0,0x0,8
tick,0x7ffdc994fb34,317283971,0,0x0,8
tick,0x7ffdc994fb34,317299800,0,0x0,8
tick,0x7ffdc994fb34,317315292,0,0x0,8
tick,0x7ffdc994fb34,317330164,0,0x0,8
tick,0x7ffdc994fb34,317345399,0,0x0,8
tick,0x7ffdc994fb34,317360898,0,0x0,8
tick,0x7ffdc994fb34,317376410,0,0x0,8
tick,0x7ffdc994fb34,317392274,0,0x0,8
tick,0x7ffdc994fb34,317407878,0,0x0,8
tick,0x7ffdc994fb34,317423508,0,0x0,8
tick,0x7ffdc994fb34,317438838,0,0x0,8
tick,0x7ffdc994fb34,317453827,0,0x0,8
tick,0x7ffdc994fb34,317469505,0,0x0,8
tick,0x7ffdc994fb34,317484405,0,0x0,8
tick,0x7ffdc994fb34,317500374,0,0x0,8
tick,0x7ffdc994fb34,317515522,0,0x0,8
tick,0x7ffdc994fb34,317531475,0,0x0,8
tick,0x7ffdc994fb34,317547758,0,0x0,8
tick,0x7ffdc994fb34,317563555,0,0x0,8
tick,0x7ffdc994fb34,317579235,0,0x0,8
tick,0x7ffdc994fb34,317594418,0,0x0,8
tick,0x7ffdc994fb34,317609689,0,0x0,8
tick,0x7ffdc994fb34,317625275,0,0x0,8
tick,0x7ffdc994fb34,317641011,0,0x0,8
tick,0x7ffdc994fb34,317656989,0,0x0,8
tick,0x7ffdc994fb34,317672879,0,0x0,8
tick,0x7ffdc994fb34,317688553,0,0x0,8
tick,0x7ffdc994fb34,317703964,0,0x0,8
tick,0x7ffdc994fb34,317719238,0,0x0,8
tick,0x7ffdc994fb34,317734874,0,0x0,8
tick,0x7ffdc994fb34,317749995,0,0x0,8
tick,0x7ffdc994fb34,317766001,0,0x0,8
tick,0x7ffdc994fb34,317781497,0,0x0,8
tick,0x7ffdc994fb34,317796746,0,0x0,8
tick,0x7ffdc994fb34,317812319,0,0x0,8
tick,0x7ffdc994fb34,317828154,0,0x0,8
tick,0x7ffdc994fb34,317843285,0,0x0,8
tick,0x7ffdc994fb34,317858494,0,0x0,8
tick,0x7ffdc994fb34,317874951,0,0x0,8
tick,0x7ffdc994fb34,317890610,0,0x0,8
tick,0x7ffdc994fb34,317905629,0,0x0,8
tick,0x7ffdc994fb34,317921030,0,0x0,8
tick,0x7ffdc994fb34,317936719,0,0x0,8
tick,0x7ffdc994fb34,317952222,0,0x0,8
tick,0x7ffdc994fb34,317967879,0,0x0,8
tick,0x7ffdc994fb34,317983066,0,0x0,8
tick,0x7ffdc994fb34,317998506,0,0x0,8
tick,0x7ffdc994fb34,318013955,0,0x0,8
tick,0x7ffdc994fb34,318029866,0,0x0,8
tick,0x7ffdc994fb34,318045773,0,0x0,8
tick,0x7ffdc994fb34,318061459,0,0x0,8
tick,0x7ffdc994fb34,318076992,0,0x0,8
tick,0x7ffdc994fb34,318092662,0,0x0,8
tick,0x7ffdc994fb34,318107957,0,0x0,8
tick,0x7ffdc994fb34,318123173,0,0x0,8
tick,0x7ffdc994fb34,318138527,0,0x0,8
tick,0x7ffdc994fb34,318153705,0,0x0,8
tick,0x7ffdc994fb34,318169067,0,0x0,8
tick,0x7ffdc994fb34,318184411,0,0x0,8
tick,0x7ffdc994fb34,318200196,0,0x0,8
tick,0x7ffdc994fb34,318215411,0,0x0,8
tick,0x7ffdc994fb34,318230895,0,0x0,8
tick,0x7ffdc994fb34,318246840,0,0x0,8
tick,0x7ffdc994fb34,318262265,0,0x0,8
tick,0x7ffdc994fb34,318278210,0,0x0,8
tick,0x7ffdc994fb34,318293326,0,0x0,8
tick,0x7ffdc994fb34,318308706,0,0x0,8
tick,0x7ffdc994fb34,318324473,0,0x0,8
tick,0x7ffdc994fb34,318339811,0,0x0,8
tick,0x7ffdc994fb34,318355596,0,0x0,8
tick,0x7ffdc994fb34,318371176,0,0x0,8
tick,0x7ffdc994fb34,318386718,0,0x0,8
tick,0x7ffdc994fb34,318402647,0,0x0,8
tick,0x7ffdc994fb34,318418314,0,0x0,8
tick,0x7ffdc994fb34,318433857,0,0x0,8
tick,0x7ffdc994fb34,318450221,0,0x0,8
tick,0x7ffdc994fb34,318466158,0,0x0,8
tick,0x7ffdc994fb34,318481026,0,0x0,8
tick,0x7ffdc994fb34,318496732,0,0x0,8
tick,0x7ffdc994fb34,318512505,0,0x0,8
tick,0x7ffdc994fb34,318527512,0,0x0,8
tick,0x7ffdc994fb34,318543454,0,0x0,8
tick,0x7ffdc994fb34,318559194,0,0x0,8
tick,0x7ffdc994fb34,318574688,0,0x0,8
tick,0x7ffdc994fb34,318590366,0,0x0,8
tick,0x7ffdc994fb34,318605763,0,0x0,8
tick,0x7ffdc994fb34,318621519,0,0x0,8
tick,0x7ffdc994fb34,318637312,0,0x0,8
tick,0x7ffdc994fb34,318653528,0,0x0,8
tick,0x7ffdc994fb34,318669251,0,0x0,8
tick,0x7ffdc994fb34,318684982,0,0x0,8
tick,0x7ffdc994fb34,318700035,0,0x0,8
tick,0x7ffdc994fb34,318715962,0,0x0,8
tick,0x7ffdc994fb34,318732352,0,0x0,8
tick,0x7ffdc994fb34,318747404,0,0x0,8
tick,0x7ffdc994fb34,318762686,0,0x0,8
tick,0x7ffdc994fb34,318778221,0,0x0,8
tick,0x7ffdc994fb34,318794280,0,0x0,8
tick,0x7ffdc994fb34,318809877,0,0x0,8
tick,0x7ffdc994fb34,318825226,0,0x0,8
tick,0x7ffdc994fb34,318840730,0,0x0,8
tick,0x7ffdc994fb34,318856047,0,0x0,8
tick,0x7ffdc994fb34,318871761,0,0x0,8
tick,0x7ffdc994fb34,318887334,0,0x0,8
tick,0x7ffdc994fb34,318902630,0,0x0,8
tick,0x7ffdc994fb34,318918991,0,0x0,8
tick,0x7ffdc994fb34,318934285,0,0x0,8
tick,0x7ffdc994fb34,318949913,0,0x0,8
tick,0x7ffdc994fb34,318965159,0,0x0,8
tick,0x7ffdc994fb34,318980487,0,0x0,8
tick,0x7ffdc994fb34,318996113,0,0x0,8
tick,0x7ffdc994fb34,319011448,0,0x0,8
tick,0x7ffdc994fb34,319026888,0,0x0,8
tick,0x7ffdc994fb34,319042809,0,0x0,8
tick,0x7ffdc994fb34,319058699,0,0x0,8
tick,0x7ffdc994fb34,319074570,0,0x0,8
tick,0x7ffdc994fb34,319090379,0,0x0,8
tick,0x7ffdc994fb34,319105954,0,0x0,8
tick,0x7ffdc994fb34,319121498,0,0x0,8
tick,0x7ffdc994fb34,319137202,0,0x0,8
tick,0x7ffdc994fb34,319152549,0,0x0,8
tick,0x7ffdc994fb34,319168371,0,0x0,8
tick,0x7ffdc994fb34,319183805,0,0x0,8
tick,0x7ffdc994fb34,319199685,0,0x0,8
tick,0x7ffdc994fb34,319214808,0,0x0,8
tick,0x7ffdc994fb34,319229894,0,0x0,8
tick,0x7ffdc994fb34,319245092,0,0x0,8
tick,0x7ffdc994fb34,319261177,0,0x0,8
tick,0x7ffdc994fb34,319276336,0,0x0,8
tick,0x7ffdc994fb34,319291781,0,0x0,8
tick,0x7ffdc994fb34,319307094,0,0x0,8
tick,0x7ffdc994fb34,319322989,0,0x0,8
tick,0x7ffdc994fb34,319338244,0,0x0,8
tick,0x7ffdc994fb34,319353856,0,0x0,8
tick,0x7ffdc994fb34,319369359,0,0x0,8
tick,0x7ffdc994fb34,319384509,0,0x0,8
tick,0x7ffdc994fb34,319400100,0,0x0,8
tick,0x7ffdc994fb34,319415760,0,0x0,8
tick,0x7ffdc994fb34,319431384,0,0x0,8
tick,0x7ffdc994fb34,319446847,0,0x0,8
tick,0x7ffdc994fb34,319462164,0,0x0,8
tick,0x7ffdc994fb34,319478211,0,0x0,8
tick,0x7ffdc994fb34,319493135,0,0x0,8
tick,0x7ffdc994fb34,319508855,0,0x0,8
tick,0x7ffdc994fb34,319524175,0,0x0,8
tick,0x7ffdc994fb34,319539781,0,0x0,8
tick,0x7ffdc994fb34,319555018,0,0x0,8
tick,0x7ffdc994fb34,319570856,0,0x0,8
tick,0x7ffdc994fb34,319586087,0,0x0,8
tick,0x7ffdc994fb34,319601570,0,0x0,8
tick,0x7ffdc994fb34,319617400,0,0x0,8
tick,0x7ffdc994fb34,319632933,0,0x0,8
tick,0x7ffdc994fb34,319648475,0,0x0,8
tick,0x7ffdc994fb34,319663586,0,0x0,8
tick,0x7ffdc994fb34,319679309,0,0x0,8
tick,0x7ffdc994fb34,319694901,0,0x0,8
tick,0x7ffdc994fb34,319710489,0,0x0,8
tick,0x7ffdc994fb34,319725655,0,0x0,8
tick,0x7ffdc994fb34,319741386,0,0x0,8
tick,0x7ffdc994fb34,319756664,0,0x0,8
tick,0x7ffdc994fb34,319772216,0,0x0,8
tick,0x7ffdc994fb34,319787915,0,0x0,8
tick,0x7ffdc994fb34,319802942,0,0x0,8
tick,0x7ffdc994fb34,319818772,0,0x0,8
tick,0x7ffdc994fb34,319834050,0,0x0,8
tick,0x7ffdc994fb34,319849593,0,0x0,8
tick,0x7ffdc994fb34,319864763,0,0x0,8
tick,0x7ffdc994fb34,319880547,0,0x0,8
tick,0x7ffdc994fb34,319895758,0,0x0,8
tick,0x7ffdc994fb34,319911705,0,0x0,8
tick,0x7ffdc994fb34,319927291,0,0x0,8
tick,0x7ffdc994fb34,319943085,0,0x0,8
tick,0x7ffdc994fb34,319958118,0,0x0,8
tick,0x7ffdc994fb34,319973586,0,0x0,8
tick,0x7ffdc994fb34,319989257,0,0x0,8
tick,0x7ffdc994fb34,320004852,0,0x0,8
tick,0x7ffdc994fb34,320020393,0,0x0,8
tick,0x7ffdc994fb34,320035476,0,0x0,8
tick,0x7ffdc994fb34,320051200,0,0x0,8
tick,0x7ffdc994fb34,320066155,0,0x0,8
tick,0x7ffdc994fb34,320081690,0,0x0,8
tick,0x7ffdc994fb34,320096964,0,0x0,8
tick,0x7ffdc994fb34,320112522,0,0x0,8
tick,0x7ffdc994fb34,320128463,0,0x0,8
tick,0x7ffdc994fb34,320143845,0,0x0,8
tick,0x7ffdc994fb34,320159620,0,0x0,8
tick,0x7ffdc994fb34,320174954,0,0x0,8
tick,0x7ffdc994fb34,320190505,0,0x0,8
tick,0x7ffdc994fb34,320206131,0,0x0,8
tick,0x7ffdc994fb34,320221499,0,0x0,8
tick,0x7ffdc994fb34,320237029,0,0x0,8
tick,0x7ffdc994fb34,320252598,0,0x0,8
tick,0x7ffdc994fb34,320268638,0,0x0,8
tick,0x7ffdc994fb34,320284374,0,0x0,8
tick,0x7ffdc994fb34,320299915,0,0x0,8
tick,0x7ffdc994fb34,320315092,0,0x0,8
tick,0x7ffdc994fb34,320331289,0,0x0,8
tick,0x7ffdc994fb34,320347259,0,0x0,8
tick,0x7ffdc994fb34,320362775,0,0x0,8
tick,0x7ffdc994fb34,320378378,0,0x0,8
tick,0x7ffdc994fb34,320393768,0,0x0,8
tick,0x7ffdc994fb34,320409504,0,0x0,8
tick,0x7ffdc994fb34,320424669,0,0x0,8
tick,0x7ffdc994fb34,320440299,0,0x0,8
tick,0x7ffdc994fb34,320456392,0,0x0,8
tick,0x7ffdc994fb34,320471867,0,0x0,8
tick,0x7ffdc994fb34,320487935,0,0x0,8
tick,0x7ffdc994fb34,320503005,0,0x0,8
tick,0x7ffdc994fb34,320518422,0,0x0,8
tick,0x7ffdc994fb34,320533865,0,0x0,8
tick,0x7ffdc994fb34,320549572,0,0x0,8
tick,0x7ffdc994fb34,320564949,0,0x0,8
tick,0x7ffdc994fb34,320580551,0,0x0,8
tick,0x7ffdc994fb34,320595887,0,0x0,8
tick,0x7ffdc994fb34,320611195,0,0x0,8
tick,0x7ffdc994fb34,320626482,0,0x0,8
tick,0x7ffdc994fb34,320641931,0,0x0,8
tick,0x7ffdc994fb34,320657667,0,0x0,8
tick,0x7ffdc994fb34,320672894,0,0x0,8
tick,0x7ffdc994fb34,320688136,0,0x0,8
tick,0x7ffdc994fb34,320703415,0,0x0,8
tick,0x7ffdc994fb34,320719315,0,0x0,8
tick,0x7ffdc994fb34,320734868,0,0x0,8
tick,0x7ffdc994fb34,320750515,0,0x0,8
tick,0x7ffdc994fb34,320765817,0,0x0,8
tick,0x7ffdc994fb34,320781411,0,0x0,8
tick,0x7ffdc994fb34,320796779,0,0x0,8
tick,0x7ffdc994fb34,320812605,0,0x0,8
tick,0x7ffdc994fb34,320828294,0,0x0,8
tick,0x7ffdc994fb34,320843612,0,0x0,8
tick,0x7ffdc994fb34,320859470,0,0x0,8
tick,0x7ffdc994fb34,320874840,0,0x0,8
tick,0x7ffdc994fb34,320890184,0,0x0,8
tick,0x7ffdc994fb34,320905573,0,0x0,8
tick,0x7ffdc994fb34,320921335,0,0x0,8
tick,0x7ffdc994fb34,320936913,0,0x0,8
tick,0x7ffdc994fb34,320952813,0,0x0,8
tick,0x7ffdc994fb34,320968732,0,0x0,8
tick,0x7ffdc994fb34,320984746,0,0x0,8
tick,0x7ffdc994fb34,320999918,0,0x0,8
tick,0x7ffdc994fb34,321015550,0,0x0,8
tick,0x7ffdc994fb34,321031262,0,0x0,8
tick,0x7ffdc994fb34,321046771,0,0x0,8
tick,0x7ffdc994fb34,321061290,0,0x0,8
tick,0x7ffdc994fb34,321076772,0,0x0,8
tick,0x7ffdc994fb34,321093059,0,0x0,8
tick,0x7ffdc994fb34,321108267,0,0x0,8
tick,0x7ffdc994fb34,321123299,0,0x0,8
tick,0x7ffdc994fb34,321139304,0,0x0,8
tick,0x7ffdc994fb34,321154461,0,0x0,8
tick,0x7ffdc994fb34,321170499,0,0x0,8
tick,0x7ffdc994fb34,321185434,0,0x0,8
tick,0x7ffdc994fb34,321201242,0,0x0,8
tick,0x7ffdc994fb34,321216756,0,0x0,8
tick,0x7ffdc994fb34,321232251,0,0x0,8
tick,0x7ffdc994fb34,321248216,0,0x0,8
tick,0x7ffdc994fb34,321263272,0,0x0,8
tick,0x7ffdc994fb34,321278781,0,0x0,8
tick,0x7ffdc994fb34,321294241,0,0x0,8
tick,0x7ffdc994fb34,321309738,0,0x0,8
tick,0x7ffdc994fb34,321325096,0,0x0,8
tick,0x7ffdc994fb34,321341206,0,0x0,8
tick,0x7ffdc994fb34,321356705,0,0x0,8
tick,0x7ffdc994fb34,321372151,0,0x0,8
tick,0x7ffdc994fb34,321387767,0,0x0,8
tick,0x7ffdc994fb34,321403089,0,0x0,8
tick,0x7ffdc994fb34,321418835,0,0x0,8
tick,0x7ffdc994fb34,321434180,0,0x0,8
tick,0x7ffdc994fb34,321449700,0,0x0,8
tick,0x7ffdc994fb34,321465721,0,0x0,8
tick,0x7ffdc994fb34,321480994,0,0x0,8
tick,0x7ffdc994fb34,321496372,0,0x0,8
tick,0x7ffdc994fb34,321511580,0,0x0,8
tick,0x7ffdc994fb34,321527066,0,0x0,8
tick,0x7ffdc994fb34,321542486,0,0x0,8
tick,0x7ffdc994fb34,321558472,0,0x0,8
tick,0x7ffdc994fb34,321573897,0,0x0,8
tick,0x7ffdc994fb34,321589536,0,0x0,8
tick,0x7ffdc994fb34,321604939,0,0x0,8
tick,0x7ffdc994fb34,321620591,0,0x0,8
tick,0x7ffdc994fb34,321636042,0,0x0,8
tick,0x7ffdc994fb34,321651404,0,0x0,8
tick,0x7ffdc994fb34,321667228,0,0x0,8
tick,0x7ffdc994fb34,321682786,0,0x0,8
tick,0x7ffdc994fb34,321698190,0,0x0,8
tick,0x7ffdc994fb34,321713856,0,0x0,8
tick,0x7ffdc994fb34,321729373,0,0x0,8
tick,0x7ffdc994fb34,321744536,0,0x0,8
tick,0x7ffdc994fb34,321760405,0,0x0,8
tick,0x7ffdc994fb34,321775806,0,0x0,8
tick,0x7ffdc994fb34,321791025,0,0x0,8
tick,0x7ffdc994fb34,321806380,0,0x0,8
tick,0x7ffdc994fb34,321822627,0,0x0,8
tick,0x7ffdc994fb34,321838034,0,0x0,8
tick,0x7ffdc994fb34,321853423,0,0x0,8
tick,0x7ffdc994fb34,321869155,0,0x0,8
tick,0x7ffdc994fb34,321884547,0,0x0,8
tick,0x7ffdc994fb34,321900690,0,0x0,8
tick,0x7ffdc994fb34,321916321,0,0x0,8
tick,0x7ffdc994fb34,321931479,0,0x0,8
tick,0x7ffdc994fb34,321946669,0,0x0,8
tick,0x7ffdc994fb34,321962642,0,0x0,8
tick,0x7ffdc994fb34,321978031,0,0x0,8
tick,0x7ffdc994fb34,321993555,0,0x0,8
tick,0x7ffdc994fb34,322008818,0,0x0,8
tick,0x7ffdc994fb34,322024212,0,0x0,8
tick,0x7ffdc994fb34,322039479,0,0x0,8
tick,0x7ffdc994fb34,322055108,0,0x0,8
tick,0x7ffdc994fb34,322070820,0,0x0,8
tick,0x7ffdc994fb34,322086631,0,0x0,8
tick,0x7ffdc994fb34,322101666,0,0x0,8
tick,0x7ffdc994fb34,322117735,0,0x0,8
tick,0x7ffdc994fb34,322133264,0,0x0,8
tick,0x7ffdc994fb34,322148546,0,0x0,8
tick,0x7ffdc994fb34,322164709,0,0x0,8
tick,0x7ffdc994fb34,322179472,0,0x0,8
tick,0x7ffdc994fb34,322195045,0,0x0,8
tick,0x7ffdc994fb34,322210322,0,0x0,8
tick,0x7ffdc994fb34,322225919,0,0x0,8
tick,0x7ffdc994fb34,322241609,0,0x0,8
tick,0x7ffdc994fb34,322256897,0,0x0,8
tick,0x7ffdc994fb34,322272674,0,0x0,8
tick,0x7ffdc994fb34,322287919,0,0x0,8
tick,0x7ffdc994fb34,322303231,0,0x0,8
tick,0x7ffdc994fb34,322318800,0,0x0,8
tick,0x7ffdc994fb34,322334716,0,0x0,8
tick,0x7ffdc994fb34,322350356,0,0x0,8
tick,0x7ffdc994fb34,322365537,0,0x0,8
tick,0x7ffdc994fb34,322381412,0,0x0,8
tick,0x7ffdc994fb34,322396914,0,0x0,8
tick,0x7ffdc994fb34,322413037,0,0x0,8
tick,0x7ffdc994fb34,322428750,0,0x0,8
tick,0x7ffdc994fb34,322444415,0,0x0,8
tick,0x7ffdc994fb34,322459999,0,0x0,8
tick,0x7ffdc994fb34,322475481,0,0x0,8
tick,0x7ffdc994fb34,322491202,0,0x0,8
tick,0x7ffdc994fb34,322506407,0,0x0,8
tick,0x7ffdc994fb34,322521968,0,0x0,8
tick,0x7ffdc994fb34,322537798,0,0x0,8
tick,0x7ffdc994fb34,322553292,0,0x0,8
tick,0x7ffdc994fb34,322568439,0,0x0,8
tick,0x7ffdc994fb34,322584525,0,0x0,8
tick,0x7ffdc994fb34,322599936,0,0x0,8
tick,0x7ffdc994fb34,322615538,0,0x0,8
tick,0x7ffdc994fb34,322630469,0,0x0,8
tick,0x7ffdc994fb34,322646032,0,0x0,8
tick,0x7ffdc994fb34,322660870,0,0x0,8
tick,0x7ffdc994fb34,322676345,0,0x0,8
tick,0x7ffdc994fb34,322692327,0,0x0,8
tick,0x7ffdc994fb34,322707652,0,0x0,8
tick,0x7ffdc994fb34,322723213,0,0x0,8
tick,0x7ffdc994fb34,322738676,0,0x0,8
tick,0x7ffdc994fb34,322753990,0,0x0,8
tick,0x7ffdc994fb34,322769765,0,0x0,8
tick,0x7ffdc994fb34,322785007,0,0x0,8
tick,0x7ffdc994fb34,322800760,0,0x0,8
tick,0x7ffdc994fb34,322816417,0,0x0,8
tick,0x7ffdc994fb34,322831948,0,0x0,8
tick,0x7ffdc994fb34,322848059,0,0x0,8
tick,0x7ffdc994fb34,322863836,0,0x0,8
tick,0x7ffdc994fb34,322879498,0,0x0,8
tick,0x7ffdc994fb34,322894296,0,0x0,8
tick,0x7ffdc994fb34,322909977,0,0x0,8
tick,0x7ffdc994fb34,322925672,0,0x0,8
tick,0x7ffdc994fb34,322940722,0,0x0,8
tick,0x7ffdc994fb34,322956462,0,0x0,8
tick,0x7ffdc994fb34,322972114,0,0x0,8
tick,0x7ffdc994fb34,322987528,0,0x0,8
tick,0x7ffdc994fb34,323003189,0,0x0,8
tick,0x7ffdc994fb34,323018932,0,0x0,8
tick,0x7ffdc994fb34,323034180,0,0x0,8
tick,0x7ffdc994fb34,323050002,0,0x0,8
tick,0x7ffdc994fb34,323065342,0,0x0,8
tick,0x7ffdc994fb34,323080659,0,0x0,8
tick,0x7ffdc994fb34,323095790,0,0x0,8
tick,0x7ffdc994fb34,323111941,0,0x0,8
tick,0x7ffdc994fb34,323127966,0,0x0,8
tick,0x7ffdc994fb34,323143655,0,0x0,8
tick,0x7ffdc994fb34,323159623,0,0x0,8
tick,0x7ffdc994fb34,323174861,0,0x0,8
tick,0x7ffdc994fb34,323190742,0,0x0,8
tick,0x7ffdc994fb34,323206078,0,0x0,8
tick,0x7ffdc994fb34,323221317,0,0x0,8
tick,0x7ffdc994fb34,323236699,0,0x0,8
tick,0x7ffdc994fb34,323252330,0,0x0,8
tick,0x7ffdc994fb34,323267736,0,0x0,8
tick,0x7ffdc994fb34,323283239,0,0x0,8
tick,0x7ffdc994fb34,323298523,0,0x0,8
tick,0x7ffdc994fb34,323313635,0,0x0,8
tick,0x7ffdc994fb34,323329656,0,0x0,8
tick,0x7ffdc994fb34,323345178,0,0x0,8
tick,0x7ffdc994fb34,323360565,0,0x0,8
tick,0x7ffdc994fb34,323376075,0,0x0,8
tick,0x7ffdc994fb34,323391693,0,0x0,8
tick,0x7ffdc994fb34,323407350,0,0x0,8
tick,0x7ffdc994fb34,323423139,0,0x0,8
tick,0x7ffdc994fb34,323439226,0,0x0,8
tick,0x7ffdc994fb34,323454565,0,0x0,8
tick,0x7ffdc994fb34,323470414,0,0x0,8
tick,0x7ffdc994fb34,323485813,0,0x0,8
tick,0x7ffdc994fb34,323501173,0,0x0,8
tick,0x7ffdc994fb34,323517113,0,0x0,8
tick,0x7ffdc994fb34,323533313,0,0x0,8
tick,0x7ffdc994fb34,323548825,0,0x0,8
tick,0x7ffdc994fb34,323564307,0,0x0,8
tick,0x7ffdc994fb34,323579968,0,0x0,8
tick,0x7ffdc994fb34,323595580,0,0x0,8
tick,0x7ffdc994fb34,323611329,0,0x0,8
tick,0x7ffdc994fb34,323627099,0,0x0,8
tick,0x7ffdc994fb34,323642089,0,0x0,8
tick,0x7ffdc994fb34,323657536,0,0x0,8
tick,0x7ffdc994fb34,323673339,0,0x0,8
tick,0x7ffdc994fb34,323689347,0,0x0,8
tick,0x7ffdc994fb34,323705006,0,0x0,8
tick,0x7ffdc994fb34,323720594,0,0x0,8
tick,0x7ffdc994fb34,323735908,0,0x0,8
tick,0x7ffdc994fb34,323751297,0,0x0,8
tick,0x7ffdc994fb34,323767228,0,0x0,8
tick,0x7ffdc994fb34,323782569,0,0x0,8
tick,0x7ffdc994fb34,323797793,0,0x0,8
tick,0x7ffdc994fb34,323814195,0,0x0,8
tick,0x7ffdc994fb34,323829579,0,0x0,8
tick,0x7ffdc994fb34,323844582,0,0x0,8
tick,0x7ffdc994fb34,323860214,0,0x0,8
tick,0x7ffdc994fb34,323875351,0,0x0,8
tick,0x7ffdc994fb34,323891191,0,0x0,8
tick,0x7ffdc994fb34,323906007,0,0x0,8
tick,0x7ffdc994fb34,323921611,0,0x0,8
tick,0x7ffdc994fb34,323936629,0,0x0,8
tick,0x7ffdc994fb34,323952548,0,0x0,8
tick,0x7ffdc994fb34,323968147,0,0x0,8
tick,0x7ffdc994fb34,323984008,0,0x0,8
tick,0x7ffdc994fb34,323999976,0,0x0,8
tick,0x7ffdc994fb34,324015223,0,0x0,8
tick,0x7ffdc994fb34,324030471,0,0x0,8
tick,0x7ffdc994fb34,324046212,0,0x0,8
tick,0x7ffdc994fb34,324062548,0,0x0,8
tick,0x7ffdc994fb34,324077851,0,0x0,8
tick,0x7ffdc994fb34,324093031,0,0x0,8
tick,0x7ffdc994fb34,324109045,0,0x0,8
tick,0x7ffdc994fb34,324124526,0,0x0,8
tick,0x7ffdc994fb34,324140006,0,0x0,8
tick,0x7ffdc994fb34,324155521,0,0x0,8
tick,0x7ffdc994fb34,324171315,0,0x0,8
tick,0x7ffdc994fb34,324186842,0,0x0,8
tick,0x7ffdc994fb34,324202486,0,0x0,8
tick,0x7ffdc994fb34,324217397,0,0x0,8
tick,0x7ffdc994fb34,324232856,0,0x0,8
tick,0x7ffdc994fb34,324248515,0,0x0,8
tick,0x7ffdc994fb34,324263887,0,0x0,8
tick,0x7ffdc994fb34,324279429,0,0x0,8
tick,0x7ffdc994fb34,324295076,0,0x0,8
tick,0x7ffdc994fb34,324310626,0,0x0,8
tick,0x7ffdc994fb34,324325970,0,0x0,8
tick,0x7ffdc994fb34,324342474,0,0x0,8
tick,0x7ffdc994fb34,324357820,0,0x0,8
tick,0x7ffdc994fb34,324373346,0,0x0,8
tick,0x7ffdc994fb34,324388517,0,0x0,8
tick,0x7ffdc994fb34,324404524,0,0x0,8
tick,0x7ffdc994fb34,324420284,0,0x0,8
tick,0x7ffdc994fb34,324435846,0,0x0,8
tick,0x7ffdc994fb34,324450943,0,0x0,8
tick,0x7ffdc994fb34,324466446,0,0x0,8
tick,0x7ffdc994fb34,324481487,0,0x0,8
tick,0x7ffdc994fb34,324497673,0,0x0,8
tick,0x7ffdc994fb34,324512928,0,0x0,8
tick,0x7ffdc994fb34,324528471,0,0x0,8
tick,0x7ffdc994fb34,324544219,0,0x0,8
tick,0x7ffdc994fb34,324559813,0,0x0,8
tick,0x7ffdc994fb34,324575117,0,0x0,8
tick,0x7ffdc994fb34,324591086,0,0x0,8
tick,0x7ffdc994fb34,324606343,0,0x0,8
tick,0x7ffdc994fb34,324621790,0,0x0,8
tick,0x7ffdc994fb34,324637422,0,0x0,8
tick,0x7ffdc994fb34,324653213,0,0x0,8
tick,0x7ffdc994fb34,324668148,0,0x0,8
tick,0x7ffdc994fb34,324683770,0,0x0,8
tick,0x7ffdc994fb34,324699275,0,0x0,8
tick,0x7ffdc994fb34,324714710,0,0x0,8
tick,0x7ffdc994fb34,324730305,0,0x0,8
tick,0x7ffdc994fb34,324745887,0,0x0,8
tick,0x7ffdc994fb34,324761526,0,0x0,8
tick,0x7ffdc994fb34,324776792,0,0x0,8
tick,0x7ffdc994fb34,324792884,0,0x0,8
tick,0x7ffdc994fb34,324808390,0,0x0,8
tick,0x7ffdc994fb34,324823842,0,0x0,8
tick,0x7ffdc994fb34,324839465,0,0x0,8
tick,0x7ffdc994fb34,324855348,0,0x0,8
tick,0x7ffdc994fb34,324871609,0,0x0,8
tick,0x7ffdc994fb34,324887490,0,0x0,8
tick,0x7ffdc994fb34,324903966,0,0x0,8
tick,0x7ffdc994fb34,324919338,0,0x0,8
tick,0x7ffdc994fb34,324934860,0,0x0,8
tick,0x7ffdc994fb34,324950629,0,0x0,8
tick,0x7ffdc994fb34,324966195,0,0x0,8
tick,0x7ffdc994fb34,324982396,0,0x0,8
tick,0x7ffdc994fb34,324997639,0,0x0,8
tick,0x7ffdc994fb34,325012701,0,0x0,8
tick,0x7ffdc994fb34,325028744,0,0x0,8
tick,0x7ffdc994fb34,325044043,0,0x0,8
tick,0x7ffdc994fb34,325059659,0,0x0,8
tick,0x7ffdc994fb34,325075505,0,0x0,8
tick,0x7ffdc994fb34,325091816,0,0x0,8
tick,0x7ffdc994fb34,325107801,0,0x0,8
tick,0x7ffdc994fb34,325123100,0,0x0,8
tick,0x7ffdc994fb34,325139122,0,0x0,8
tick,0x7ffdc994fb34,325154544,0,0x0,8
tick,0x7ffdc994fb34,325169964,0,0x0,8
tick,0x7ffdc994fb34,325185649,0,0x0,8
tick,0x7ffdc994fb34,325201812,0,0x0,8
tick,0x7ffdc994fb34,325217254,0,0x0,8
tick,0x7ffdc994fb34,325232603,0,0x0,8
tick,0x7ffdc994fb34,325247715,0,0x0,8
tick,0x7ffdc994fb34,325262645,0,0x0,8
tick,0x7ffdc994fb34,325278695,0,0x0,8
tick,0x7ffdc994fb34,325293766,0,0x0,8
tick,0x7ffdc994fb34,325309218,0,0x0,8
tick,0x7ffdc994fb34,325324546,0,0x0,8
tick,0x7ffdc994fb34,325340286,0,0x0,8
tick,0x7ffdc994fb34,325355850,0,0x0,8
tick,0x7ffdc994fb34,325371364,0,0x0,8
tick,0x7ffdc994fb34,325386469,0,0x0,8
tick,0x7ffdc994fb34,325402528,0,0x0,8
tick,0x7ffdc994fb34,325417636,0,0x0,8
tick,0x7ffdc994fb34,325432817,0,0x0,8
tick,0x7ffdc994fb34,325448552,0,0x0,8
tick,0x7ffdc994fb34,325463958,0,0x0,8
tick,0x7ffdc994fb34,325479689,0,0x0,8
tick,0x7ffdc994fb34,325495394,0,0x0,8
tick,0x7ffdc994fb34,325510890,0,0x0,8
tick,0x7ffdc994fb34,325526221,0,0x0,8
tick,0x7ffdc994fb34,325542013,0,0x0,8
tick,0x7ffdc994fb34,325557540,0,0x0,8
tick,0x7ffdc994fb34,325572986,0,0x0,8
tick,0x7ffdc994fb34,325588716,0,0x0,8
tick,0x7ffdc994fb34,325604297,0,0x0,8
tick,0x7ffdc994fb34,325620022,0,0x0,8
tick,0x7ffdc994fb34,325634771,0,0x0,8
tick,0x7ffdc994fb34,325650517,0,0x0,8
tick,0x7ffdc994fb34,325666091,0,0x0,8
tick,0x7ffdc994fb34,325681665,0,0x0,8
tick,0x7ffdc994fb34,325697013,0,0x0,8
tick,0x7ffdc994fb34,325712612,0,0x0,8
tick,0x7ffdc994fb34,325728622,0,0x0,8
tick,0x7ffdc994fb34,325744045,0,0x0,8
tick,0x7ffdc994fb34,325759509,0,0x0,8
tick,0x7ffdc994fb34,325774733,0,0x0,8
tick,0x7ffdc994fb34,325790012,0,0x0,8
tick,0x7ffdc994fb34,325805692,0,0x0,8
tick,0x7ffdc994fb34,325821507,0,0x0,8
tick,0x7ffdc994fb34,325836787,0,0x0,8
tick,0x7ffdc994fb34,325852308,0,0x0,8
tick,0x7ffdc994fb34,325867735,0,0x0,8
tick,0x7ffdc994fb34,325883162,0,0x0,8
tick,0x7ffdc994fb34,325898614,0,0x0,8
tick,0x7ffdc994fb34,325914624,0,0x0,8
tick,0x7ffdc994fb34,325929668,0,0x0,8
tick,0x7ffdc994fb34,325945760,0,0x0,8
tick,0x7ffdc994fb34,325961457,0,0x0,8
tick,0x7ffdc994fb34,325977465,0,0x0,8
tick,0x7ffdc994fb34,325992945,0,0x0,8
tick,0x7ffdc994fb34,326008503,0,0x0,8
tick,0x7ffdc994fb34,326024609,0,0x0,8
tick,0x7ffdc994fb34,326039640,0,0x0,8
tick,0x7ffdc994fb34,326055028,0,0x0,8
tick,0x7ffdc994fb34,326070405,0,0x0,8
tick,0x7ffdc994fb34,326086203,0,0x0,8
tick,0x7ffdc994fb34,326101817,0,0x0,8
tick,0x7ffdc994fb34,326117285,0,0x0,8
tick,0x7ffdc994fb34,326132773,0,0x0,8
tick,0x7ffdc994fb34,326148302,0,0x0,8
tick,0x7ffdc994fb34,326164128,0,0x0,8
tick,0x7ffdc994fb34,326179543,0,0x0,8
tick,0x7ffdc994fb34,326194999,0,0x0,8
tick,0x7ffdc994fb34,326210651,0,0x0,8
tick,0x7ffdc994fb34,326226011,0,0x0,8
tick,0x7ffdc994fb34,326240913,0,0x0,8
tick,0x7ffdc994fb34,326256560,0,0x0,8
tick,0x7ffdc994fb34,326272369,0,0x0,8
tick,0x7ffdc994fb34,326287852,0,0x0,8
tick,0x7ffdc994fb34,326303263,0,0x0,8
tick,0x7ffdc994fb34,326318919,0,0x0,8
tick,0x7ffdc994fb34,326334393,0,0x0,8
tick,0x7ffdc994fb34,326349844,0,0x0,8
tick,0x7ffdc994fb34,326365563,0,0x0,8
tick,0x7ffdc994fb34,326381081,0,0x0,8
tick,0x7ffdc994fb34,326396670,0,0x0,8
tick,0x7ffdc994fb34,326412180,0,0x0,8
tick,0x7ffdc994fb34,326427719,0,0x0,8
tick,0x7ffdc994fb34,326443080,0,0x0,8
tick,0x7ffdc994fb34,326458629,0,0x0,8
tick,0x7ffdc994fb34,326474124,0,0x0,8
tick,0x7ffdc994fb34,326489628,0,0x0,8
tick,0x7ffdc994fb34,326505058,0,0x0,8
tick,0x7ffdc994fb34,326520536,0,0x0,8
tick,0x7ffdc994fb34,326536405,0,0x0,8
tick,0x7ffdc994fb34,326551375,0,0x0,8
tick,0x7ffdc994fb34,326567360,0,0x0,8
tick,0x7ffdc994fb34,326583656,0,0x0,8
tick,0x7ffdc994fb34,326599335,0,0x0,8
tick,0x7ffdc994fb34,326614541,0,0x0,8
tick,0x7ffdc994fb34,326630259,0,0x0,8
tick,0x7ffdc994fb34,326646144,0,0x0,8
tick,0x7ffdc994fb34,326662048,0,0x0,8
tick,0x7ffdc994fb34,326677673,0,0x0,8
tick,0x7ffdc994fb34,326693552,0,0x0,8
tick,0x7ffdc994fb34,326708942,0,0x0,8
tick,0x7ffdc994fb34,326724645,0,0x0,8
tick,0x7ffdc994fb34,326739707,0,0x0,8
tick,0x7ffdc994fb34,326755118,0,0x0,8
tick,0x7ffdc994fb34,326771023,0,0x0,8
tick,0x7ffdc994fb34,326786557,0,0x0,8
tick,0x7ffdc994fb34,326802094,0,0x0,8
tick,0x7ffdc994fb34,326817300,0,0x0,8
tick,0x7ffdc994fb34,326832666,0,0x0,8
tick,0x7ffdc994fb34,326848088,0,0x0,8
tick,0x7ffdc994fb34,326863744,0,0x0,8
tick,0x7ffdc994fb34,326879055,0,0x0,8
tick,0x7ffdc994fb34,326894428,0,0x0,8
tick,0x7ffdc994fb34,326909976,0,0x0,8
tick,0x7ffdc994fb34,326924998,0,0x0,8
tick,0x7ffdc994fb34,326940714,0,0x0,8
tick,0x7ffdc994fb34,326956264,0,0x0,8
tick,0x7ffdc994fb34,326972095,0,0x0,8
tick,0x7ffdc994fb34,326987123,0,0x0,8
tick,0x7ffdc994fb34,327002126,0,0x0,8
tick,0x7ffdc994fb34,327018308,0,0x0,8
tick,0x7ffdc994fb34,327033762,0,0x0,8
tick,0x7ffdc994fb34,327049200,0,0x0,8
tick,0x7ffdc994fb34,327065164,0,0x0,8
tick,0x7ffdc994fb34,327081021,0,0x0,8
tick,0x7ffdc994fb34,327096735,0,0x0,8
tick,0x7ffdc994fb34,327113404,0,0x0,8
tick,0x7ffdc994fb34,327128381,0,0x0,8
tick,0x7ffdc994fb34,327144076,0,0x0,8
tick,0x7ffdc994fb34,327159499,0,0x0,8
tick,0x7ffdc994fb34,327174796,0,0x0,8
tick,0x7ffdc994fb34,327190467,0,0x0,8
tick,0x7ffdc994fb34,327205742,0,0x0,8
tick,0x7ffdc994fb34,327221269,0,0x0,8
tick,0x7ffdc994fb34,327236899,0,0x0,8
tick,0x7ffdc994fb34,327252203,0,0x0,8
tick,0x7ffdc994fb34,327267104,0,0x0,8
tick,0x7ffdc994fb34,327283353,0,0x0,8
tick,0x7ffdc994fb34,327299475,0,0x0,8
tick,0x7ffdc994fb34,327314652,0,0x0,8
tick,0x7ffdc994fb34,327330228,0,0x0,8
tick,0x7ffdc994fb34,327346199,0,0x0,8
tick,0x7ffdc994fb34,327361794,0,0x0,8
tick,0x7ffdc994fb34,327377297,0,0x0,8
tick,0x7ffdc994fb34,327393136,0,0x0,8
tick,0x7ffdc994fb34,327407602,0,0x0,8
tick,0x7ffdc994fb34,327422989,0,0x0,8
tick,0x7ffdc994fb34,327438184,0,0x0,8
tick,0x7ffdc994fb34,327453613,0,0x0,8
tick,0x7ffdc994fb34,327469278,0,0x0,8
tick,0x7ffdc994fb34,327484453,0,0x0,8
tick,0x7ffdc994fb34,327500143,0,0x0,8
tick,0x7ffdc994fb34,327515324,0,0x0,8
tick,0x7ffdc994fb34,327530612,0,0x0,8
tick,0x7ffdc994fb34,327546662,0,0x0,8
tick,0x7ffdc994fb34,327562729,0,0x0,8
tick,0x7ffdc994fb34,327578614,0,0x0,8
tick,0x7ffdc994fb34,327593885,0,0x0,8
tick,0x7ffdc994fb34,327609573,0,0x0,8
tick,0x7ffdc994fb34,327624846,0,0x0,8
tick,0x7ffdc994fb34,327640714,0,0x0,8
tick,0x7ffdc994fb34,327656281,0,0x0,8
tick,0x7ffdc994fb34,327672678,0,0x0,8
tick,0x7ffdc994fb34,327687395,0,0x0,8
tick,0x7ffdc994fb34,327703577,0,0x0,8
tick,0x7ffdc994fb34,327719113,0,0x0,8
tick,0x7ffdc994fb34,327734547,0,0x0,8
tick,0x7ffdc994fb34,327750185,0,0x0,8
tick,0x7ffdc994fb34,327765185,0,0x0,8
tick,0x7ffdc994fb34,327780943,0,0x0,8
tick,0x7ffdc994fb34,327796227,0,0x0,8
tick,0x7ffdc994fb34,327811994,0,0x0,8
tick,0x7ffdc994fb34,327827371,0,0x0,8
tick,0x7ffdc994fb34,327842523,0,0x0,8
tick,0x7ffdc994fb34,327858069,0,0x0,8
tick,0x7ffdc994fb34,327873459,0,0x0,8
tick,0x7ffdc994fb34,327889429,0,0x0,8
tick,0x7ffdc994fb34,327904572,0,0x0,8
tick,0x7ffdc994fb34,327920647,0,0x0,8
tick,0x7ffdc994fb34,327936180,0,0x0,8
tick,0x7ffdc994fb34,327951839,0,0x0,8
tick,0x7ffdc994fb34,327967511,0,0x0,8
tick,0x7ffdc994fb34,327982972,0,0x0,8
tick,0x7ffdc994fb34,327998524,0,0x0,8
tick,0x7ffdc994fb34,328013751,0,0x0,8
tick,0x7ffdc994fb34,328029719,0,0x0,8
tick,0x7ffdc994fb34,328044873,0,0x0,8
tick,0x7ffdc994fb34,328060718,0,0x0,8
tick,0x7ffdc994fb34,328075996,0,0x0,8
tick,0x7ffdc994fb34,328091802,0,0x0,8
tick,0x7ffdc994fb34,328107577,0,0x0,8
tick,0x7ffdc994fb34,328123189,0,0x0,8
tick,0x7ffdc994fb34,328138749,0,0x0,8
tick,0x7ffdc994fb34,328154073,0,0x0,8
tick,0x7ffdc994fb34,328169300,0,0x0,8
tick,0x7ffdc994fb34,328184947,0,0x0,8
tick,0x7ffdc994fb34,328200358,0,0x0,8
tick,0x7ffdc994fb34,328215415,0,0x0,8
tick,0x7ffdc994fb34,328231310,0,0x0,8
tick,0x7ffdc994fb34,328246629,0,0x0,8
tick,0x7ffdc994fb34,328262561,0,0x0,8
tick,0x7ffdc994fb34,328277792,0,0x0,8
tick,0x7ffdc994fb34,328293468,0,0x0,8
tick,0x7ffdc994fb34,328308618,0,0x0,8
tick,0x7ffdc994fb34,328324454,0,0x0,8
tick,0x7ffdc994fb34,328340237,0,0x0,8
tick,0x7ffdc994fb34,328355670,0,0x0,8
tick,0x7ffdc994fb34,328371550,0,0x0,8
tick,0x7ffdc994fb34,328386669,0,0x0,8
tick,0x7ffdc994fb34,328402803,0,0x0,8
tick,0x7ffdc994fb34,328418176,0,0x0,8
tick,0x7ffdc994fb34,328433833,0,0x0,8
tick,0x7ffdc994fb34,328449049,0,0x0,8
tick,0x7ffdc994fb34,328464777,0,0x0,8
tick,0x7ffdc994fb34,328480239,0,0x0,8
tick,0x7ffdc994fb34,328495893,0,0x0,8
tick,0x7ffdc994fb34,328511349,0,0x0,8
tick,0x7ffdc994fb34,328527159,0,0x0,8
tick,0x7ffdc994fb34,328542288,0,0x0,8
tick,0x7ffdc994fb34,328557960,0,0x0,8
tick,0x7ffdc994fb34,328573308,0,0x0,8
tick,0x7ffdc994fb34,328589295,0,0x0,8
tick,0x7ffdc994fb34,328604438,0,0x0,8
tick,0x7ffdc994fb34,328619709,0,0x0,8
tick,0x7ffdc994fb34,328635098,0,0x0,8
tick,0x7ffdc994fb34,328650692,0,0x0,8
tick,0x7ffdc994fb34,328666251,0,0x0,8
tick,0x7ffdc994fb34,328681842,0,0x0,8
tick,0x7ffdc994fb34,328697324,0,0x0,8
tick,0x7ffdc994fb34,328713157,0,0x0,8
tick,0x7ffdc994fb34,328728014,0,0x0,8
tick,0x7ffdc994fb34,328743433,0,0x0,8
tick,0x7ffdc994fb34,328759055,0,0x0,8
tick,0x7ffdc994fb34,328774825,0,0x0,8
tick,0x7ffdc994fb34,328790846,0,0x0,8
tick,0x7ffdc994fb34,328806554,0,0x0,8
tick,0x7ffdc994fb34,328822025,0,0x0,8
tick,0x7ffdc994fb34,328837289,0,0x0,8
tick,0x7ffdc994fb34,328853325,0,0x0,8
tick,0x7ffdc994fb34,328868600,0,0x0,8
tick,0x7ffdc994fb34,328884344,0,0x0,8
tick,0x7ffdc994fb34,328899821,0,0x0,8
tick,0x7ffdc994fb34,328914882,0,0x0,8
tick,0x7ffdc994fb34,328930227,0,0x0,8
tick,0x7ffdc994fb34,328945781,0,0x0,8
tick,0x7ffdc994fb34,328962318,0,0x0,8
tick,0x7ffdc994fb34,328977952,0,0x0,8
tick,0x7ffdc994fb34,328993517,0,0x0,8
tick,0x7ffdc994fb34,329008882,0,0x0,8
tick,0x7ffdc994fb34,329024468,0,0x0,8
tick,0x7ffdc994fb34,329039956,0,0x0,8
tick,0x7ffdc994fb34,329055346,0,0x0,8
tick,0x7ffdc994fb34,329070700,0,0x0,8
tick,0x7ffdc994fb34,329086244,0,0x0,8
tick,0x7ffdc994fb34,329101692,0,0x0,8
tick,0x7ffdc994fb34,329117218,0,0x0,8
tick,0x7ffdc994fb34,329132907,0,0x0,8
tick,0x7ffdc994fb34,329148325,0,0x0,8
tick,0x7ffdc994fb34,329163768,0,0x0,8
tick,0x7ffdc994fb34,329179672,0,0x0,8
tick,0x7ffdc994fb34,329194791,0,0x0,8
tick,0x7ffdc994fb34,329210633,0,0x0,8
tick,0x7ffdc994fb34,329226037,0,0x0,8
tick,0x7ffdc994fb34,329242101,0,0x0,8
tick,0x7ffdc994fb34,329257449,0,0x0,8
tick,0x7ffdc994fb34,329272863,0,0x0,8
tick,0x7ffdc994fb34,329288278,0,0x0,8
tick,0x7ffdc994fb34,329303849,0,0x0,8
tick,0x7ffdc994fb34,329319309,0,0x0,8
tick,0x7ffdc994fb34,329334146,0,0x0,8
tick,0x7ffdc994fb34,329350060,0,0x0,8
tick,0x7ffdc994fb34,329365185,0,0x0,8
tick,0x7ffdc994fb34,329380631,0,0x0,8
tick,0x7ffdc994fb34,329396110,0,0x0,8
tick,0x7ffdc994fb34,329411683,0,0x0,8
tick,0x7ffdc994fb34,329427121,0,0x0,8
tick,0x7ffdc994fb34,329442073,0,0x0,8
tick,0x7ffdc994fb34,329458055,0,0x0,8
tick,0x7ffdc994fb34,329473021,0,0x0,8
tick,0x7ffdc994fb34,329488385,0,0x0,8
tick,0x7ffdc994fb34,329503920,0,0x0,8
tick,0x7ffdc994fb34,329520006,0,0x0,8
tick,0x7ffdc994fb34,329535783,0,0x0,8
tick,0x7ffdc994fb34,329551670,0,0x0,8
tick,0x7ffdc994fb34,329567673,0,0x0,8
tick,0x7ffdc994fb34,329583131,0,0x0,8
tick,0x7ffdc994fb34,329598888,0,0x0,8
tick,0x7ffdc994fb34,329614527,0,0x0,8
tick,0x7ffdc994fb34,329630021,0,0x0,8
tick,0x7ffdc994fb34,329645719,0,0x0,8
tick,0x7ffdc994fb34,329661097,0,0x0,8
tick,0x7ffdc994fb34,329676761,0,0x0,8
tick,0x7ffdc994fb34,329692167,0,0x0,8
tick,0x7ffdc994fb34,329707981,0,0x0,8
tick,0x7ffdc994fb34,329723020,0,0x0,8
tick,0x7ffdc994fb34,329738651,0,0x0,8
tick,0x7ffdc994fb34,329754145,0,0x0,8
tick,0x7ffdc994fb34,329769386,0,0x0,8
tick,0x7ffdc994fb34,329784527,0,0x0,8
tick,0x7ffdc994fb34,329800594,0,0x0,8
tick,0x7ffdc994fb34,329816221,0,0x0,8
tick,0x7ffdc994fb34,329831882,0,0x0,8
tick,0x7ffdc994fb34,329847202,0,0x0,8
tick,0x7ffdc994fb34,329862483,0,0x0,8
tick,0x7ffdc994fb34,329878232,0,0x0,8
tick,0x7ffdc994fb34,329893684,0,0x0,8
tick,0x7ffdc994fb34,329909274,0,0x0,8
tick,0x7ffdc994fb34,329925063,0,0x0,8
tick,0x7ffdc994fb34,329941081,0,0x0,8
tick,0x7ffdc994fb34,329956517,0,0x0,8
tick,0x7ffdc994fb34,329971535,0,0x0,8
tick,0x7ffdc994fb34,329987096,0,0x0,8
tick,0x7ffdc994fb34,330003042,0,0x0,8
tick,0x7ffdc994fb34,330018430,0,0x0,8
tick,0x7ffdc994fb34,330034226,0,0x0,8
tick,0x7ffdc994fb34,330050417,0,0x0,8
tick,0x7ffdc994fb34,330065740,0,0x0,8
tick,0x7ffdc994fb34,330081394,0,0x0,8
tick,0x7ffdc994fb34,330097468,0,0x0,8
tick,0x7ffdc994fb34,330113147,0,0x0,8
tick,0x7ffdc994fb34,330128839,0,0x0,8
tick,0x7ffdc994fb34,330143745,0,0x0,8
tick,0x7ffdc994fb34,330159771,0,0x0,8
tick,0x7ffdc994fb34,330175021,0,0x0,8
tick,0x7ffdc994fb34,330190931,0,0x0,8
tick,0x7ffdc994fb34,330206765,0,0x0,8
tick,0x7ffdc994fb34,330222004,0,0x0,8
tick,0x7ffdc994fb34,330238144,0,0x0,8
tick,0x7ffdc994fb34,330254146,0,0x0,8
tick,0x7ffdc994fb34,330269311,0,0x0,8
tick,0x7ffdc994fb34,330284486,0,0x0,8
tick,0x7ffdc994fb34,330299728,0,0x0,8
tick,0x7ffdc994fb34,330315620,0,0x0,8
tick,0x7ffdc994fb34,330331065,0,0x0,8
tick,0x7ffdc994fb34,330346618,0,0x0,8
tick,0x7ffdc994fb34,330361830,0,0x0,8
tick,0x7ffdc994fb34,330376969,0,0x0,8
tick,0x7ffdc994fb34,330392731,0,0x0,8
tick,0x7ffdc994fb34,330408174,0,0x0,8
tick,0x7ffdc994fb34,330424002,0,0x0,8
tick,0x7ffdc994fb34,330439431,0,0x0,8
tick,0x7ffdc994fb34,330454507,0,0x0,8
tick,0x7ffdc994fb34,330470479,0,0x0,8
tick,0x7ffdc994fb34,330485814,0,0x0,8
tick,0x7ffdc994fb34,330501552,0,0x0,8
tick,0x7ffdc994fb34,330517484,0,0x0,8
tick,0x7ffdc994fb34,330533477,0,0x0,8
tick,0x7ffdc994fb34,330549448,0,0x0,8
tick,0x7ffdc994fb34,330564608,0,0x0,8
tick,0x7ffdc994fb34,330580753,0,0x0,8
tick,0x7ffdc994fb34,330595717,0,0x0,8
tick,0x7ffdc994fb34,330611531,0,0x0,8
tick,0x7ffdc994fb34,330627520,0,0x0,8
tick,0x7ffdc994fb34,330642854,0,0x0,8
tick,0x7ffdc994fb34,330658298,0,0x0,8
tick,0x7ffdc994fb34,330673201,0,0x0,8
tick,0x7ffdc994fb34,330689016,0,0x0,8
tick,0x7ffdc994fb34,330704842,0,0x0,8
tick,0x7ffdc994fb34,330720443,0,0x0,8
tick,0x7ffdc994fb34,330735931,0,0x0,8
tick,0x7ffdc994fb34,330751400,0,0x0,8
tick,0x7ffdc994fb34,330766977,0,0x0,8
tick,0x7ffdc994fb34,330781991,0,0x0,8
tick,0x7ffdc994fb34,330797411,0,0x0,8
tick,0x7ffdc994fb34,330813033,0,0x0,8
tick,0x7ffdc994fb34,330828429,0,0x0,8
tick,0x7ffdc994fb34,330844356,0,0x0,8
tick,0x7ffdc994fb34,330859903,0,0x0,8
tick,0x7ffdc994fb34,330875407,0,0x0,8
tick,0x7ffdc994fb34,330891105,0,0x0,8
tick,0x7ffdc994fb34,330906482,0,0x0,8
tick,0x7ffdc994fb34,330921571,0,0x0,8
tick,0x7ffdc994fb34,330937175,0,0x0,8
tick,0x7ffdc994fb34,330952915,0,0x0,8
tick,0x7ffdc994fb34,330968294,0,0x0,8
tick,0x7ffdc994fb34,330983830,0,0x0,8
tick,0x7ffdc994fb34,330999550,0,0x0,8
tick,0x7ffdc994fb34,331014949,0,0x0,8
tick,0x7ffdc994fb34,331030735,0,0x0,8
tick,0x7ffdc994fb34,331045990,0,0x0,8
tick,0x7ffdc994fb34,331062055,0,0x0,8
tick,0x7ffdc994fb34,331077842,0,0x0,8
tick,0x7ffdc994fb34,331093753,0,0x0,8
tick,0x7ffdc994fb34,331109070,0,0x0,8
tick,0x7ffdc994fb34,331124758,0,0x0,8
tick,0x7ffdc994fb34,331140350,0,0x0,8
tick,0x7ffdc994fb34,331156195,0,0x0,8
tick,0x7ffdc994fb34,331171523,0,0x0,8
tick,0x7ffdc994fb34,331186814,0,0x0,8
tick,0x7ffdc994fb34,331202256,0,0x0,8
tick,0x7ffdc994fb34,331217419,0,0x0,8
tick,0x7ffdc994fb34,331233199,0,0x0,8
tick,0x7ffdc994fb34,331248842,0,0x0,8
tick,0x7ffdc994fb34,331263955,0,0x0,8
tick,0x7ffdc994fb34,331279808,0,0x0,8
tick,0x7ffdc994fb34,331295091,0,0x0,8
tick,0x7ffdc994fb34,331310792,0,0x0,8
tick,0x7ffdc994fb34,331325956,0,0x0,8
tick,0x7ffdc994fb34,331341442,0,0x0,8
tick,0x7ffdc994fb34,331357213,0,0x0,8
tick,0x7ffdc994fb34,331373528,0,0x0,8
tick,0x7ffdc994fb34,331389608,0,0x0,8
tick,0x7ffdc994fb34,331404855,0,0x0,8
tick,0x7ffdc994fb34,331420338,0,0x0,8
tick,0x7ffdc994fb34,331435831,0,0x0,8
tick,0x7ffdc994fb34,331451394,0,0x0,8
tick,0x7ffdc994fb34,331467340,0,0x0,8
tick,0x7ffdc994fb34,331483044,0,0x0,8
tick,0x7ffdc994fb34,331498184,0,0x0,8
tick,0x7ffdc994fb34,331514031,0,0x0,8
tick,0x7ffdc994fb34,331529893,0,0x0,8
tick,0x7ffdc994fb34,331545335,0,0x0,8
tick,0x7ffdc994fb34,331561332,0,0x0,8
tick,0x7ffdc994fb34,331576644,0,0x0,8
tick,0x7ffdc994fb34,331592865,0,0x0,8
tick,0x7ffdc994fb34,331608511,0,0x0,8
tick,0x7ffdc994fb34,331623941,0,0x0,8
tick,0x7ffdc994fb34,331639346,0,0x0,8
tick,0x7ffdc994fb34,331654155,0,0x0,8
tick,0x7ffdc994fb34,331669176,0,0x0,8
tick,0x7ffdc994fb34,331684392,0,0x0,8
tick,0x7ffdc994fb34,331699748,0,0x0,8
tick,0x7ffdc994fb34,331715465,0,0x0,8
tick,0x7ffdc994fb34,331730832,0,0x0,8
tick,0x7ffdc994fb34,331746771,0,0x0,8
tick,0x7ffdc994fb34,331761929,0,0x0,8
tick,0x7ffdc994fb34,331777419,0,0x0,8
tick,0x7ffdc994fb34,331793150,0,0x0,8
tick,0x7ffdc994fb34,331808936,0,0x0,8
tick,0x7ffdc994fb34,331824125,0,0x0,8
tick,0x7ffdc994fb34,331840052,0,0x0,8
tick,0x7ffdc994fb34,331856202,0,0x0,8
tick,0x7ffdc994fb34,331872282,0,0x0,8
tick,0x7ffdc994fb34,331887998,0,0x0,8
tick,0x7ffdc994fb34,331903962,0,0x0,8
tick,0x7ffdc994fb34,331919240,0,0x0,8
tick,0x7ffdc994fb34,331934951,0,0x0,8
tick,0x7ffdc994fb34,331950689,0,0x0,8
tick,0x7ffdc994fb34,331966409,0,0x0,8
tick,0x7ffdc994fb34,331982316,0,0x0,8
tick,0x7ffdc994fb34,331997729,0,0x0,8
tick,0x7ffdc994fb34,332013823,0,0x0,8
tick,0x7ffdc994fb34,332028868,0,0x0,8
tick,0x7ffdc994fb34,332044270,0,0x0,8
tick,0x7ffdc994fb34,332060002,0,0x0,8
tick,0x7ffdc994fb34,332087113,0,0x0,8
tick,0x7ffdc994fb34,332096002,0,0x0,8
tick,0x7ffdc994fb34,332106741,0,0x0,8
tick,0x7ffdc994fb34,332122694,0,0x0,8
tick,0x7ffdc994fb34,332137897,0,0x0,8
tick,0x7ffdc994fb34,332153930,0,0x0,8
tick,0x7ffdc994fb34,332169300,0,0x0,8
tick,0x7ffdc994fb34,332184768,0,0x0,8
tick,0x7ffdc994fb34,332200576,0,0x0,8
tick,0x7ffdc994fb34,332216249,0,0x0,8
tick,0x7ffdc994fb34,332231717,0,0x0,8
tick,0x7ffdc994fb34,332247093,0,0x0,8
tick,0x7ffdc994fb34,332263385,0,0x0,8
tick,0x7ffdc994fb34,332278705,0,0x0,8
tick,0x7ffdc994fb34,332294784,0,0x0,8
tick,0x7ffdc994fb34,332309944,0,0x0,8
tick,0x7ffdc994fb34,332325805,0,0x0,8
tick,0x7ffdc994fb34,332341259,0,0x0,8
tick,0x7ffdc994fb34,332357067,0,0x0,8
tick,0x7ffdc994fb34,332372972,0,0x0,8
tick,0x7ffdc994fb34,332388344,0,0x0,8
tick,0x7ffdc994fb34,332403313,0,0x0,8
tick,0x7ffdc994fb34,332418762,0,0x0,8
tick,0x7ffdc994fb34,332434141,0,0x0,8
tick,0x7ffdc994fb34,332449519,0,0x0,8
tick,0x7ffdc994fb34,332464569,0,0x0,8
tick,0x7ffdc994fb34,332479970,0,0x0,8
tick,0x7ffdc994fb34,332495602,0,0x0,8
tick,0x7ffdc994fb34,332511509,0,0x0,8
tick,0x7ffdc994fb34,332526878,0,0x0,8
tick,0x7ffdc994fb34,332542456,0,0x0,8
tick,0x7ffdc994fb34,332558010,0,0x0,8
tick,0x7ffdc994fb34,332573413,0,0x0,8
tick,0x7ffdc994fb34,332589194,0,0x0,8
tick,0x7ffdc994fb34,332604657,0,0x0,8
tick,0x7ffdc994fb34,332620127,0,0x0,8
tick,0x7ffdc994fb34,332635790,0,0x0,8
tick,0x7ffdc994fb34,332651591,0,0x0,8
tick,0x7ffdc994fb34,332666557,0,0x0,8
tick,0x7ffdc994fb34,332680990,0,0x0,8
tick,0x7ffdc994fb34,332696482,0,0x0,8
tick,0x7ffdc994fb34,332712218,0,0x0,8
tick,0x7ffdc994fb34,332727769,0,0x0,8
tick,0x7ffdc994fb34,332743254,0,0x0,8
tick,0x7ffdc994fb34,332758175,0,0x0,8
tick,0x7ffdc994fb34,332773443,0,0x0,8
tick,0x7ffdc994fb34,332789716,0,0x0,8
tick,0x7ffdc994fb34,332804894,0,0x0,8
tick,0x7ffdc994fb34,332820488,0,0x0,8
tick,0x7ffdc994fb34,332835700,0,0x0,8
tick,0x7ffdc994fb34,332850666,0,0x0,8
tick,0x7ffdc994fb34,332866231,0,0x0,8
tick,0x7ffdc994fb34,332881711,0,0x0,8
tick,0x7ffdc994fb34,332897530,0,0x0,8
tick,0x7ffdc994fb34,332912709,0,0x0,8
tick,0x7ffdc994fb34,332928250,0,0x0,8
tick,0x7ffdc994fb34,332944438,0,0x0,8
tick,0x7ffdc994fb34,332959831,0,0x0,8
tick,0x7ffdc994fb34,332975484,0,0x0,8
tick,0x7ffdc994fb34,332990975,0,0x0,8
tick,0x7ffdc994fb34,333006577,0,0x0,8
tick,0x7ffdc994fb34,333021713,0,0x0,8
tick,0x7ffdc994fb34,333037874,0,0x0,8
tick,0x7ffdc994fb34,333053130,0,0x0,8
tick,0x7ffdc994fb34,333069151,0,0x0,8
tick,0x7ffdc994fb34,333085156,0,0x0,8
tick,0x7ffdc994fb34,333100886,0,0x0,8
tick,0x7ffdc994fb34,333116093,0,0x0,8
tick,0x7ffdc994fb34,333132242,0,0x0,8
tick,0x7ffdc994fb34,333147495,0,0x0,8
tick,0x7ffdc994fb34,333162793,0,0x0,8
tick,0x7ffdc994fb34,333177989,0,0x0,8
tick,0x7ffdc994fb34,333194312,0,0x0,8
tick,0x7ffdc994fb34,333209617,0,0x0,8
tick,0x7ffdc994fb34,333225021,0,0x0,8
tick,0x7ffdc994fb34,333240795,0,0x0,8
tick,0x7ffdc994fb34,333256280,0,0x0,8
tick,0x7ffdc994fb34,333271828,0,0x0,8
tick,0x7ffdc994fb34,333287256,0,0x0,8
tick,0x7ffdc994fb34,333302530,0,0x0,8
tick,0x7ffdc994fb34,333318619,0,0x0,8
tick,0x7ffdc994fb34,333333891,0,0x0,8
tick,0x7ffdc994fb34,333349503,0,0x0,8
tick,0x7ffdc994fb34,333364795,0,0x0,8
tick,0x7ffdc994fb34,333380918,0,0x0,8
tick,0x7ffdc994fb34,333396200,0,0x0,8
tick,0x7ffdc994fb34,333411693,0,0x0,8
tick,0x7ffdc994fb34,333427837,0,0x0,8
tick,0x7ffdc994fb34,333443077,0,0x0,8
tick,0x7ffdc994fb34,333458617,0,0x0,8
tick,0x7ffdc994fb34,333473538,0,0x0,8
tick,0x7ffdc994fb34,333489459,0,0x0,8
tick,0x7ffdc994fb34,333504811,0,0x0,8
tick,0x7ffdc994fb34,333520297,0,0x0,8
tick,0x7ffdc994fb34,333535979,0,0x0,8
tick,0x7ffdc994fb34,333551434,0,0x0,8
tick,0x7ffdc994fb34,333567412,0,0x0,8
tick,0x7ffdc994fb34,333582557,0,0x0,8
tick,0x7ffdc994fb34,333598370,0,0x0,8
tick,0x7ffdc994fb34,333614049,0,0x0,8
tick,0x7ffdc994fb34,333629625,0,0x0,8
tick,0x7ffdc994fb34,333645041,0,0x0,8
tick,0x7ffdc994fb34,333660958,0,0x0,8
tick,0x7ffdc994fb34,333677043,0,0x0,8
tick,0x7ffdc994fb34,333692670,0,0x0,8
tick,0x7ffdc994fb34,333708187,0,0x0,8
tick,0x7ffdc994fb34,333723991,0,0x0,8
tick,0x7ffdc994fb34,333739814,0,0x0,8
tick,0x7ffdc994fb34,333755431,0,0x0,8
tick,0x7ffdc994fb34,333770974,0,0x0,8
tick,0x7ffdc994fb34,333786715,0,0x0,8
tick,0x7ffdc994fb34,333802782,0,0x0,8
tick,0x7ffdc994fb34,333818590,0,0x0,8
tick,0x7ffdc994fb34,333834203,0,0x0,8
tick,0x7ffdc994fb34,333849371,0,0x0,8
tick,0x7ffdc994fb34,333864913,0,0x0,8
tick,0x7ffdc994fb34,333880784,0,0x0,8
tick,0x7ffdc994fb34,333896067,0,0x0,8
tick,0x7ffdc994fb34,333911801,0,0x0,8
tick,0x7ffdc994fb34,333927043,0,0x0,8
tick,0x7ffdc994fb34,333942615,0,0x0,8
tick,0x7ffdc994fb34,333957770,0,0x0,8
tick,0x7ffdc994fb34,333973201,0,0x0,8
tick,0x7ffdc994fb34,333988836,0,0x0,8
tick,0x7ffdc994fb34,334004231,0,0x0,8
tick,0x7ffdc994fb34,334020138,0,0x0,8
tick,0x7ffdc994fb34,334035392,0,0x0,8
tick,0x7ffdc994fb34,334050715,0,0x0,8
tick,0x7ffdc994fb34,334066604,0,0x0,8
tick,0x7ffdc994fb34,334081785,0,0x0,8
tick,0x7ffdc994fb34,334097831,0,0x0,8
tick,0x7ffdc994fb34,334113152,0,0x0,8
tick,0x7ffdc994fb34,334129589,0,0x0,8
tick,0x7ffdc994fb34,334145058,0,0x0,8
tick,0x7ffdc994fb34,334160347,0,0x0,8
tick,0x7ffdc994fb34,334175850,0,0x0,8
tick,0x7ffdc994fb34,334191375,0,0x0,8
tick,0x7ffdc994fb34,334207180,0,0x0,8
tick,0x7ffdc994fb34,334222481,0,0x0,8
tick,0x7ffdc994fb34,334238093,0,0x0,8
tick,0x7ffdc994fb34,334253547,0,0x0,8
tick,0x7ffdc994fb34,334269315,0,0x0,8
tick,0x7ffdc994fb34,334284465,0,0x0,8
tick,0x7ffdc994fb34,334300061,0,0x0,8
tick,0x7ffdc994fb34,334315773,0,0x0,8
tick,0x7ffdc994fb34,334331204,0,0x0,8
tick,0x7ffdc994fb34,334346668,0,0x0,8
tick,0x7ffdc994fb34,334362520,0,0x0,8
tick,0x7ffdc994fb34,334378375,0,0x0,8
tick,0x7ffdc994fb34,334393906,0,0x0,8
tick,0x7ffdc994fb34,334409669,0,0x0,8
tick,0x7ffdc994fb34,334424954,0,0x0,8
tick,0x7ffdc994fb34,334440044,0,0x0,8
tick,0x7ffdc994fb34,334455728,0,0x0,8
tick,0x7ffdc994fb34,334472185,0,0x0,8
tick,0x7ffdc994fb34,334488097,0,0x0,8
tick,0x7ffdc994fb34,334503095,0,0x0,8
tick,0x7ffdc994fb34,334518797,0,0x0,8
tick,0x7ffdc994fb34,334534326,0,0x0,8
tick,0x7ffdc994fb34,334549662,0,0x0,8
tick,0x7ffdc994fb34,334564720,0,0x0,8
tick,0x7ffdc994fb34,334580193,0,0x0,8
tick,0x7ffdc994fb34,334596017,0,0x0,8
tick,0x7ffdc994fb34,334611719,0,0x0,8
tick,0x7ffdc994fb34,334627655,0,0x0,8
tick,0x7ffdc994fb34,334642875,0,0x0,8
tick,0x7ffdc994fb34,334658670,0,0x0,8
tick,0x7ffdc994fb34,334674032,0,0x0,8
tick,0x7ffdc994fb34,334689798,0,0x0,8
tick,0x7ffdc994fb34,334704944,0,0x0,8
tick,0x7ffdc994fb34,334720814,0,0x0,8
tick,0x7ffdc994fb34,334736120,0,0x0,8
tick,0x7ffdc994fb34,334751251,0,0x0,8
tick,0x7ffdc994fb34,334767586,0,0x0,8
tick,0x7ffdc994fb34,334782813,0,0x0,8
tick,0x7ffdc994fb34,334798084,0,0x0,8
tick,0x7ffdc994fb34,334813603,0,0x0,8
tick,0x7ffdc994fb34,334829087,0,0x0,8
tick,0x7ffdc994fb34,334844651,0,0x0,8
tick,0x7ffdc994fb34,334860285,0,0x0,8
tick,0x7ffdc994fb34,334876464,0,0x0,8
tick,0x7ffdc994fb34,334891772,0,0x0,8
tick,0x7ffdc994fb34,334907511,0,0x0,8
tick,0x7ffdc994fb34,334922976,0,0x0,8
tick,0x7ffdc994fb34,334938726,0,0x0,8
tick,0x7ffdc994fb34,334954389,0,0x0,8
tick,0x7ffdc994fb34,334969376,0,0x0,8
tick,0x7ffdc994fb34,334984637,0,0x0,8
tick,0x7ffdc994fb34,335000264,0,0x0,8
tick,0x7ffdc994fb34,335015842,0,0x0,8
tick,0x7ffdc994fb34,335030919,0,0x0,8
tick,0x7ffdc994fb34,335046298,0,0x0,8
tick,0x7ffdc994fb34,335061613,0,0x0,8
tick,0x7ffdc994fb34,335077576,0,0x0,8
tick,0x7ffdc994fb34,335093683,0,0x0,8
tick,0x7ffdc994fb34,335109105,0,0x0,8
tick,0x7ffdc994fb34,335124822,0,0x0,8
tick,0x7ffdc994fb34,335140974,0,0x0,8
tick,0x7ffdc994fb34,335155993,0,0x0,8
tick,0x7ffdc994fb34,335171641,0,0x0,8
tick,0x7ffdc994fb34,335186928,0,0x0,8
tick,0x7ffdc994fb34,335202543,0,0x0,8
tick,0x7ffdc994fb34,335218146,0,0x0,8
tick,0x7ffdc994fb34,335234131,0,0x0,8
tick,0x7ffdc994fb34,335249920,0,0x0,8
tick,0x7ffdc994fb34,335264991,0,0x0,8
tick,0x7ffdc994fb34,335280799,0,0x0,8
tick,0x7ffdc994fb34,335296126,0,0x0,8
tick,0x7ffdc994fb34,335312129,0,0x0,8
tick,0x7ffdc994fb34,335327413,0,0x0,8
tick,0x7ffdc994fb34,335342433,0,0x0,8
tick,0x7ffdc994fb34,335357666,0,0x0,8
tick,0x7ffdc994fb34,335373008,0,0x0,8
tick,0x7ffdc994fb34,335388322,0,0x0,8
tick,0x7ffdc994fb34,335403892,0,0x0,8
tick,0x7ffdc994fb34,335418852,0,0x0,8
tick,0x7ffdc994fb34,335434406,0,0x0,8
tick,0x7ffdc994fb34,335449903,0,0x0,8
tick,0x7ffdc994fb34,335465042,0,0x0,8
tick,0x7ffdc994fb34,335480636,0,0x0,8
tick,0x7ffdc994fb34,335495651,0,0x0,8
tick,0x7ffdc994fb34,335512131,0,0x0,8
tick,0x7ffdc994fb34,335527840,0,0x0,8
tick,0x7ffdc994fb34,335543995,0,0x0,8
tick,0x7ffdc994fb34,335559615,0,0x0,8
tick,0x7ffdc994fb34,335575304,0,0x0,8
tick,0x7ffdc994fb34,335591321,0,0x0,8
tick,0x7ffdc994fb34,335607464,0,0x0,8
tick,0x7ffdc994fb34,335622955,0,0x0,8
tick,0x7ffdc994fb34,335638553,0,0x0,8
tick,0x7ffdc994fb34,335653893,0,0x0,8
tick,0x7ffdc994fb34,335669526,0,0x0,8
tick,0x7ffdc994fb34,335684830,0,0x0,8
tick,0x7ffdc994fb34,335701003,0,0x0,8
tick,0x7ffdc994fb34,335716338,0,0x0,8
tick,0x7ffdc994fb34,335731595,0,0x0,8
tick,0x7ffdc994fb34,335747085,0,0x0,8
tick,0x7ffdc994fb34,335763040,0,0x0,8
tick,0x7ffdc994fb34,335778620,0,0x0,8
tick,0x7ffdc994fb34,335793959,0,0x0,8
tick,0x7ffdc994fb34,335809520,0,0x0,8
tick,0x7ffdc994fb34,335824916,0,0x0,8
tick,0x7ffdc994fb34,335840461,0,0x0,8
tick,0x7ffdc994fb34,335855499,0,0x0,8
tick,0x7ffdc994fb34,335870907,0,0x0,8
tick,0x7ffdc994fb34,335886431,0,0x0,8
tick,0x7ffdc994fb34,335902101,0,0x0,8
tick,0x7ffdc994fb34,335917311,0,0x0,8
tick,0x7ffdc994fb34,335933074,0,0x0,8
tick,0x7ffdc994fb34,335948159,0,0x0,8
tick,0x7ffdc994fb34,335964266,0,0x0,8
tick,0x7ffdc994fb34,335979524,0,0x0,8
tick,0x7ffdc994fb34,335994748,0,0x0,8
tick,0x7ffdc994fb34,336010086,0,0x0,8
tick,0x7ffdc994fb34,336025200,0,0x0,8
tick,0x7ffdc994fb34,336041107,0,0x0,8
tick,0x7ffdc994fb34,336057040,0,0x0,8
tick,0x7ffdc994fb34,336072672,0,0x0,8
tick,0x7ffdc994fb34,336088567,0,0x0,8
tick,0x7ffdc994fb34,336104507,0,0x0,8
tick,0x7ffdc994fb34,336119752,0,0x0,8
tick,0x7ffdc994fb34,336134533,0,0x0,8
tick,0x7ffdc994fb34,336149511,0,0x0,8
tick,0x7ffdc994fb34,336165147,0,0x0,8
tick,0x7ffdc994fb34,336181063,0,0x0,8
tick,0x7ffdc994fb34,336196480,0,0x0,8
tick,0x7ffdc994fb34,336211910,0,0x0,8
tick,0x7ffdc994fb34,336227385,0,0x0,8
tick,0x7ffdc994fb34,336242711,0,0x0,8
tick,0x7ffdc994fb34,336258940,0,0x0,8
tick,0x7ffdc994fb34,336273661,0,0x0,8
tick,0x7ffdc994fb34,336289077,0,0x0,8
tick,0x7ffdc994fb34,336305020,0,0x0,8
tick,0x7ffdc994fb34,336320969,0,0x0,8
tick,0x7ffdc994fb34,336336566,0,0x0,8
tick,0x7ffdc994fb34,336352159,0,0x0,8
tick,0x7ffdc994fb34,336367322,0,0x0,8
tick,0x7ffdc994fb34,336382589,0,0x0,8
tick,0x7ffdc994fb34,336398145,0,0x0,8
tick,0x7ffdc994fb34,336413514,0,0x0,8
tick,0x7ffdc994fb34,336429181,0,0x0,8
tick,0x7ffdc994fb34,336444550,0,0x0,8
tick,0x7ffdc994fb34,336459993,0,0x0,8
tick,0x7ffdc994fb34,336475286,0,0x0,8
tick,0x7ffdc994fb34,336490544,0,0x0,8
tick,0x7ffdc994fb34,336506581,0,0x0,8
tick,0x7ffdc994fb34,336522632,0,0x0,8
tick,0x7ffdc994fb34,336538370,0,0x0,8
tick,0x7ffdc994fb34,336553675,0,0x0,8
tick,0x7ffdc994fb34,336569322,0,0x0,8
tick,0x7ffdc994fb34,336584879,0,0x0,8
tick,0x7ffdc994fb34,336600466,0,0x0,8
tick,0x7ffdc994fb34,336615789,0,0x0,8
tick,0x7ffdc994fb34,336631522,0,0x0,8
tick,0x7ffdc994fb34,336646981,0,0x0,8
tick,0x7ffdc994fb34,336662155,0,0x0,8
tick,0x7ffdc994fb34,336677787,0,0x0,8
tick,0x7ffdc994fb34,336693612,0,0x0,8
tick,0x7ffdc994fb34,336709146,0,0x0,8
tick,0x7ffdc994fb34,336725200,0,0x0,8
tick,0x7ffdc994fb34,336740939,0,0x0,8
tick,0x7ffdc994fb34,336755810,0,0x0,8
tick,0x7ffdc994fb34,336771491,0,0x0,8
tick,0x7ffdc994fb34,336786663,0,0x0,8
tick,0x7ffdc994fb34,336802103,0,0x0,8
tick,0x7ffdc994fb34,336818361,0,0x0,8
tick,0x7ffdc994fb34,336834333,0,0x0,8
tick,0x7ffdc994fb34,336850256,0,0x0,8
tick,0x7ffdc994fb34,336866106,0,0x0,8
tick,0x7ffdc994fb34,336882251,0,0x0,8
tick,0x7ffdc994fb34,336897828,0,0x0,8
tick,0x7ffdc994fb34,336913996,0,0x0,8
tick,0x7ffdc994fb34,336929927,0,0x0,8
tick,0x7ffdc994fb34,336945805,0,0x0,8
tick,0x7ffdc994fb34,336962114,0,0x0,8
tick,0x7ffdc994fb34,336977956,0,0x0,8
tick,0x7ffdc994fb34,336993690,0,0x0,8
tick,0x7ffdc994fb34,337009646,0,0x0,8
tick,0x7ffdc994fb34,337025804,0,0x0,8
tick,0x7ffdc994fb34,337041844,0,0x0,8
tick,0x7ffdc994fb34,337057768,0,0x0,8
tick,0x7ffdc994fb34,337073627,0,0x0,8
tick,0x7ffdc994fb34,337089647,0,0x0,8
tick,0x7ffdc994fb34,337105671,0,0x0,8
tick,0x7ffdc994fb34,337121602,0,0x0,8
tick,0x7ffdc994fb34,337136987,0,0x0,8
tick,0x7ffdc994fb34,337153019,0,0x0,8
tick,0x7ffdc994fb34,337169051,0,0x0,8
tick,0x7ffdc994fb34,337184938,0,0x0,8
tick,0x7ffdc994fb34,337201092,0,0x0,8
tick,0x7ffdc994fb34,337217077,0,0x0,8
tick,0x7ffdc994fb34,337232683,0,0x0,8
tick,0x7ffdc994fb34,337247813,0,0x0,8
tick,0x7ffdc994fb34,337263566,0,0x0,8
tick,0x7ffdc994fb34,337279882,0,0x0,8
tick,0x7ffdc994fb34,337295454,0,0x0,8
tick,0x7ffdc994fb34,337311723,0,0x0,8
tick,0x7ffdc994fb34,337327541,0,0x0,8
tick,0x7ffdc994fb34,337343713,0,0x0,8
tick,0x7ffdc994fb34,337359328,0,0x0,8
tick,0x7ffdc994fb34,337375379,0,0x0,8
tick,0x7ffdc994fb34,337391466,0,0x0,8
tick,0x7ffdc994fb34,337407431,0,0x0,8
tick,0x7ffdc994fb34,337423017,0,0x0,8
tick,0x7ffdc994fb34,337439272,0,0x0,8
tick,0x7ffdc994fb34,337455285,0,0x0,8
tick,0x7ffdc994fb34,337471227,0,0x0,8
tick,0x7ffdc994fb34,337487221,0,0x0,8
tick,0x7ffdc994fb34,337503131,0,0x0,8
tick,0x7ffdc994fb34,337519036,0,0x0,8
tick,0x7ffdc994fb34,337534942,0,0x0,8
tick,0x7ffdc994fb34,337550495,0,0x0,8
tick,0x7ffdc994fb34,337566532,0,0x0,8
tick,0x7ffdc994fb34,337582674,0,0x0,8
tick,0x7ffdc994fb34,337598579,0,0x0,8
tick,0x7ffdc994fb34,337614344,0,0x0,8
tick,0x7ffdc994fb34,337630469,0,0x0,8
tick,0x7ffdc994fb34,337646479,0,0x0,8
tick,0x7ffdc994fb34,337661803,0,0x0,8
tick,0x7ffdc994fb34,337678059,0,0x0,8
tick,0x7ffdc994fb34,337693037,0,0x0,8
tick,0x7ffdc994fb34,337708955,0,0x0,8
tick,0x7ffdc994fb34,337723609,0,0x0,8
tick,0x7ffdc994fb34,337739648,0,0x0,8
tick,0x7ffdc994fb34,337755692,0,0x0,8
tick,0x7ffdc994fb34,337771613,0,0x0,8
tick,0x7ffdc994fb34,337787617,0,0x0,8
tick,0x7ffdc994fb34,337803694,0,0x0,8
tick,0x7ffdc994fb34,337819632,0,0x0,8
tick,0x7ffdc994fb34,337835840,0,0x0,8
tick,0x7ffdc994fb34,337851451,0,0x0,8
tick,0x7ffdc994fb34,337867344,0,0x0,8
tick,0x7ffdc994fb34,337883308,0,0x0,8
tick,0x7ffdc994fb34,337899391,0,0x0,8
tick,0x7ffdc994fb34,337915654,0,0x0,8
tick,0x7ffdc994fb34,337931456,0,0x0,8
tick,0x7ffdc994fb34,337947437,0,0x0,8
tick,0x7ffdc994fb34,337963429,0,0x0,8
tick,0x7ffdc994fb34,337978865,0,0x0,8
tick,0x7ffdc994fb34,337994948,0,0x0,8
tick,0x7ffdc994fb34,338010861,0,0x0,8
tick,0x7ffdc994fb34,338026939,0,0x0,8
tick,0x7ffdc994fb34,338042802,0,0x0,8
tick,0x7ffdc994fb34,338058194,0,0x0,8
tick,0x7ffdc994fb34,338074135,0,0x0,8
tick,0x7ffdc994fb34,338090276,0,0x0,8
tick,0x7ffdc994fb34,338106136,0,0x0,8
tick,0x7ffdc994fb34,338121725,0,0x0,8
tick,0x7ffdc994fb34,338137452,0,0x0,8
tick,0x7ffdc994fb34,338153557,0,0x0,8
tick,0x7ffdc994fb34,338169499,0,0x0,8
tick,0x7ffdc994fb34,338185449,0,0x0,8
tick,0x7ffdc994fb34,338201484,0,0x0,8
tick,0x7ffdc994fb34,338217355,0,0x0,8
tick,0x7ffdc994fb34,338233051,0,0x0,8
tick,0x7ffdc994fb34,338248780,0,0x0,8
tick,0x7ffdc994fb34,338264854,0,0x0,8
tick,0x7ffdc994fb34,338280861,0,0x0,8
tick,0x7ffdc994fb34,338296660,0,0x0,8
tick,0x7ffdc994fb34,338312682,0,0x0,8
tick,0x7ffdc994fb34,338328732,0,0x0,8
tick,0x7ffdc994fb34,338344814,0,0x0,8
tick,0x7ffdc994fb34,338360607,0,0x0,8
tick,0x7ffdc994fb34,338376103,0,0x0,8
tick,0x7ffdc994fb34,338391940,0,0x0,8
tick,0x7ffdc994fb34,338407442,0,0x0,8
tick,0x7ffdc994fb34,338423520,0,0x0,8
tick,0x7ffdc994fb34,338439681,0,0x0,8
tick,0x7ffdc994fb34,338455505,0,0x0,8
tick,0x7ffdc994fb34,338471521,0,0x0,8
tick,0x7ffdc994fb34,338487739,0,0x0,8
tick,0x7ffdc994fb34,338503634,0,0x0,8
tick,0x7ffdc994fb34,338519273,0,0x0,8
tick,0x7ffdc994fb34,338535423,0,0x0,8
tick,0x7ffdc994fb34,338551580,0,0x0,8
tick,0x7ffdc994fb34,338567401,0,0x0,8
tick,0x7ffdc994fb34,338583471,0,0x0,8
tick,0x7ffdc994fb34,338598776,0,0x0,8
tick,0x7ffdc994fb34,338615220,0,0x0,8
tick,0x7ffdc994fb34,338631010,0,0x0,8
tick,0x7ffdc994fb34,338647199,0,0x0,8
tick,0x7ffdc994fb34,338663239,0,0x0,8
tick,0x7ffdc994fb34,338678619,0,0x0,8
tick,0x7ffdc994fb34,338694529,0,0x0,8
tick,0x7ffdc994fb34,338710472,0,0x0,8
tick,0x7ffdc994fb34,338726578,0,0x0,8
tick,0x7ffdc994fb34,338741693,0,0x0,8
tick,0x7ffdc994fb34,338756991,0,0x0,8
tick,0x7ffdc994fb34,338772853,0,0x0,8
tick,0x7ffdc994fb34,338789173,0,0x0,8
tick,0x7ffdc994fb34,338804886,0,0x0,8
tick,0x7ffdc994fb34,338820893,0,0x0,8
tick,0x7ffdc994fb34,338837127,0,0x0,8
tick,0x7ffdc994fb34,338853075,0,0x0,8
tick,0x7ffdc994fb34,338868936,0,0x0,8
tick,0x7ffdc994fb34,338884168,0,0x0,8
tick,0x7ffdc994fb34,338900397,0,0x0,8
tick,0x7ffdc994fb34,338916141,0,0x0,8
tick,0x7ffdc994fb34,338932280,0,0x0,8
tick,0x7ffdc994fb34,338947810,0,0x0,8
tick,0x7ffdc994fb34,338963803,0,0x0,8
tick,0x7ffdc994fb34,338979461,0,0x0,8
tick,0x7ffdc994fb34,338994956,0,0x0,8
tick,0x7ffdc994fb34,339011115,0,0x0,8
tick,0x7ffdc994fb34,339026841,0,0x0,8
tick,0x7ffdc994fb34,339042331,0,0x0,8
tick,0x7ffdc994fb34,339058273,0,0x0,8
tick,0x7ffdc994fb34,339073643,0,0x0,8
tick,0x7ffdc994fb34,339089653,0,0x0,8
tick,0x7ffdc994fb34,339106045,0,0x0,8
tick,0x7ffdc994fb34,339121162,0,0x0,8
tick,0x7ffdc994fb34,339137266,0,0x0,8
tick,0x7ffdc994fb34,339153272,0,0x0,8
tick,0x7ffdc994fb34,339169098,0,0x0,8
tick,0x7ffdc994fb34,339184497,0,0x0,8
tick,0x7ffdc994fb34,339200169,0,0x0,8
tick,0x7ffdc994fb34,339215844,0,0x0,8
tick,0x7ffdc994fb34,339231869,0,0x0,8
tick,0x7ffdc994fb34,339247208,0,0x0,8
tick,0x7ffdc994fb34,339262651,0,0x0,8
tick,0x7ffdc994fb34,339278664,0,0x0,8
tick,0x7ffdc994fb34,339294697,0,0x0,8
tick,0x7ffdc994fb34,339310712,0,0x0,8
tick,0x7ffdc994fb34,339326029,0,0x0,8
tick,0x7ffdc994fb34,339341918,0,0x0,8
tick,0x7ffdc994fb34,339357471,0,0x0,8
tick,0x7ffdc994fb34,339372545,0,0x0,8
tick,0x7ffdc994fb34,339388724,0,0x0,8
tick,0x7ffdc994fb34,339403760,0,0x0,8
tick,0x7ffdc994fb34,339419053,0,0x0,8
tick,0x7ffdc994fb34,339433853,0,0x0,8
tick,0x7ffdc994fb34,339449958,0,0x0,8
tick,0x7ffdc994fb34,339465168,0,0x0,8
tick,0x7ffdc994fb34,339480761,0,0x0,8
tick,0x7ffdc994fb34,339496221,0,0x0,8
tick,0x7ffdc994fb34,339511466,0,0x0,8
tick,0x7ffdc994fb34,339526637,0,0x0,8
tick,0x7ffdc994fb34,339542220,0,0x0,8
tick,0x7ffdc994fb34,339557797,0,0x0,8
tick,0x7ffdc994fb34,339573799,0,0x0,8
tick,0x7ffdc994fb34,339589053,0,0x0,8
tick,0x7ffdc994fb34,339605097,0,0x0,8
tick,0x7ffdc994fb34,339620927,0,0x0,8
tick,0x7ffdc994fb34,339636905,0,0x0,8
tick,0x7ffdc994fb34,339652594,0,0x0,8
tick,0x7ffdc994fb34,339668058,0,0x0,8
tick,0x7ffdc994fb34,339683498,0,0x0,8
tick,0x7ffdc994fb34,339698714,0,0x0,8
tick,0x7ffdc994fb34,339714537,0,0x0,8
tick,0x7ffdc994fb34,339730067,0,0x0,8
tick,0x7ffdc994fb34,339744962,0,0x0,8
tick,0x7ffdc994fb34,339760799,0,0x0,8
tick,0x7ffdc994fb34,339776123,0,0x0,8
tick,0x7ffdc994fb34,339791313,0,0x0,8
tick,0x7ffdc994fb34,339807316,0,0x0,8
tick,0x7ffdc994fb34,339823224,0,0x0,8
tick,0x7ffdc994fb34,339838843,0,0x0,8
tick,0x7ffdc994fb34,339854636,0,0x0,8
tick,0x7ffdc994fb34,339870849,0,0x0,8
tick,0x7ffdc994fb34,339886400,0,0x0,8
tick,0x7ffdc994fb34,339901597,0,0x0,8
tick,0x7ffdc994fb34,339918514,0,0x0,8
tick,0x7ffdc994fb34,339932950,0,0x0,8
tick,0x7ffdc994fb34,339948822,0,0x0,8
tick,0x7ffdc994fb34,339971303,0,0x0,8
tick,0x7ffdc994fb34,339980190,0,0x0,8
tick,0x7ffdc994fb34,339994893,0,0x0,8
tick,0x7ffdc994fb34,340011346,0,0x0,8
tick,0x7ffdc994fb34,340025136,0,0x0,8
tick,0x7ffdc994fb34,340040660,0,0x0,8
tick,0x7ffdc994fb34,340056664,0,0x0,8
tick,0x7ffdc994fb34,340073191,0,0x0,8
tick,0x7ffdc994fb34,340089841,0,0x0,8
tick,0x7ffdc994fb34,340103737,0,0x0,8
tick,0x7ffdc994fb34,340119078,0,0x0,8
tick,0x7ffdc994fb34,340135091,0,0x0,8
tick,0x7ffdc994fb34,340150064,0,0x0,8
tick,0x7ffdc994fb34,340169554,0,0x0,8
tick,0x7ffdc994fb34,340183455,0,0x0,8
tick,0x7ffdc994fb34,340195534,0,0x0,8
tick,0x7ffdc994fb34,340211012,0,0x0,8
tick,0x7ffdc994fb34,340227337,0,0x0,8
tick,0x7ffdc994fb34,340253987,0,0x0,8
tick,0x7ffdc994fb34,340262817,0,0x0,8
tick,0x7ffdc994fb34,340274694,0,0x0,8
tick,0x7ffdc994fb34,340288932,0,0x0,8
tick,0x7ffdc994fb34,340306778,0,0x0,8
tick,0x7ffdc994fb34,340319978,0,0x0,8
tick,0x7ffdc994fb34,340335183,0,0x0,8
tick,0x7ffdc994fb34,340350858,0,0x0,8
tick,0x7ffdc994fb34,340366697,0,0x0,8
tick,0x7ffdc994fb34,340384864,0,0x0,8
tick,0x7ffdc994fb34,340397753,0,0x0,8
tick,0x7ffdc994fb34,340413166,0,0x0,8
tick,0x7ffdc994fb34,340428414,0,0x0,8
tick,0x7ffdc994fb34,340444231,0,0x0,8
tick,0x7ffdc994fb34,340459728,0,0x0,8
tick,0x7ffdc994fb34,340476767,0,0x0,8
tick,0x7ffdc994fb34,340491317,0,0x0,8
tick,0x7ffdc994fb34,340506455,0,0x0,8
tick,0x7ffdc994fb34,340522087,0,0x0,8
tick,0x7ffdc994fb34,340537863,0,0x0,8
tick,0x7ffdc994fb34,340553616,0,0x0,8
tick,0x7ffdc994fb34,340569209,0,0x0,8
tick,0x7ffdc994fb34,340584417,0,0x0,8
tick,0x7ffdc994fb34,340600164,0,0x0,8
tick,0x7ffdc994fb34,340615926,0,0x0,8
tick,0x7ffdc994fb34,340631652,0,0x0,8
tick,0x7ffdc994fb34,340648586,0,0x0,8
tick,0x7ffdc994fb34,340666432,0,0x0,8
tick,0x7ffdc994fb34,340679210,0,0x0,8
tick,0x7ffdc994fb34,340696112,0,0x0,8
tick,0x7ffdc994fb34,340710260,0,0x0,8
tick,0x7ffdc994fb34,340725642,0,0x0,8
tick,0x7ffdc994fb34,340740728,0,0x0,8
tick,0x7ffdc994fb34,340756446,0,0x0,8
tick,0x7ffdc994fb34,340772145,0,0x0,8
tick,0x7ffdc994fb34,340787878,0,0x0,8
tick,0x7ffdc994fb34,340803113,0,0x0,8
tick,0x7ffdc994fb34,340818719,0,0x0,8
tick,0x7ffdc994fb34,340834616,0,0x0,8
tick,0x7ffdc994fb34,340849930,0,0x0,8
tick,0x7ffdc994fb34,340865918,0,0x0,8
tick,0x7ffdc994fb34,340882445,0,0x0,8
tick,0x7ffdc994fb34,340897199,0,0x0,8
tick,0x7ffdc994fb34,340913206,0,0x0,8
tick,0x7ffdc994fb34,340928913,0,0x0,8
tick,0x7ffdc994fb34,340945530,0,0x0,8
tick,0x7ffdc994fb34,340960849,0,0x0,8
tick,0x7ffdc994fb34,340975381,0,0x0,8
tick,0x7ffdc994fb34,340990863,0,0x0,8
tick,0x7ffdc994fb34,341006454,0,0x0,8
tick,0x7ffdc994fb34,341021725,0,0x0,8
tick,0x7ffdc994fb34,341037725,0,0x0,8
tick,0x7ffdc994fb34,341053761,0,0x0,8
tick,0x7ffdc994fb34,341069770,0,0x0,8
tick,0x7ffdc994fb34,341085553,0,0x0,8
tick,0x7ffdc994fb34,341101412,0,0x0,8
tick,0x7ffdc994fb34,341117448,0,0x0,8
tick,0x7ffdc994fb34,341132640,0,0x0,8
tick,0x7ffdc994fb34,341147982,0,0x0,8
tick,0x7ffdc994fb34,341163225,0,0x0,8
tick,0x7ffdc994fb34,341178717,0,0x0,8
tick,0x7ffdc994fb34,341194595,0,0x0,8
tick,0x7ffdc994fb34,341210537,0,0x0,8
tick,0x7ffdc994fb34,341226255,0,0x0,8
tick,0x7ffdc994fb34,341242035,0,0x0,8
tick,0x7ffdc994fb34,341258011,0,0x0,8
tick,0x7ffdc994fb34,341274159,0,0x0,8
tick,0x7ffdc994fb34,341289968,0,0x0,8
tick,0x7ffdc994fb34,341306115,0,0x0,8
tick,0x7ffdc994fb34,341321812,0,0x0,8
tick,0x7ffdc994fb34,341336924,0,0x0,8
tick,0x7ffdc994fb34,341352725,0,0x0,8
tick,0x7ffdc994fb34,341367961,0,0x0,8
tick,0x7ffdc994fb34,341383185,0,0x0,8
tick,0x7ffdc994fb34,341399289,0,0x0,8
tick,0x7ffdc994fb34,341415107,0,0x0,8
tick,0x7ffdc994fb34,341430423,0,0x0,8
tick,0x7ffdc994fb34,341446628,0,0x0,8
tick,0x7ffdc994fb34,341462557,0,0x0,8
tick,0x7ffdc994fb34,341477319,0,0x0,8
tick,0x7ffdc994fb34,341492513,0,0x0,8
tick,0x7ffdc994fb34,341507738,0,0x0,8
tick,0x7ffdc994fb34,341523153,0,0x0,8
tick,0x7ffdc994fb34,341538649,0,0x0,8
tick,0x7ffdc994fb34,341554524,0,0x0,8
tick,0x7ffdc994fb34,341570415,0,0x0,8
tick,0x7ffdc994fb34,341586270,0,0x0,8
tick,0x7ffdc994fb34,341602381,0,0x0,8
tick,0x7ffdc994fb34,341617657,0,0x0,8
tick,0x7ffdc994fb34,341632865,0,0x0,8
tick,0x7ffdc994fb34,341648440,0,0x0,8
tick,0x7ffdc994fb34,341664365,0,0x0,8
tick,0x7ffdc994fb34,341679922,0,0x0,8
tick,0x7ffdc994fb34,341695249,0,0x0,8
tick,0x7ffdc994fb34,341710229,0,0x0,8
tick,0x7ffdc994fb34,341725775,0,0x0,8
tick,0x7ffdc994fb34,341740502,0,0x0,8
tick,0x7ffdc994fb34,341756239,0,0x0,8
tick,0x7ffdc994fb34,341772064,0,0x0,8
tick,0x7ffdc994fb34,341788338,0,0x0,8
tick,0x7ffdc994fb34,341803257,0,0x0,8
tick,0x7ffdc994fb34,341818698,0,0x0,8
tick,0x7ffdc994fb34,341834645,0,0x0,8
tick,0x7ffdc994fb34,341850166,0,0x0,8
tick,0x7ffdc994fb34,341865327,0,0x0,8
tick,0x7ffdc994fb34,341880885,0,0x0,8
tick,0x7ffdc994fb34,341896929,0,0x0,8
tick,0x7ffdc994fb34,341911980,0,0x0,8
tick,0x7ffdc994fb34,341928142,0,0x0,8
tick,0x7ffdc994fb34,341944227,0,0x0,8
tick,0x7ffdc994fb34,341960013,0,0x0,8
tick,0x7ffdc994fb34,341975620,0,0x0,8
tick,0x7ffdc994fb34,341991452,0,0x0,8
tick,0x7ffdc994fb34,342007651,0,0x0,8
tick,0x7ffdc994fb34,342023549,0,0x0,8
tick,0x7ffdc994fb34,342038853,0,0x0,8
tick,0x7ffdc994fb34,342055175,0,0x0,8
tick,0x7ffdc994fb34,342069920,0,0x0,8
tick,0x7ffdc994fb34,342085255,0,0x0,8
tick,0x7ffdc994fb34,342101367,0,0x0,8
tick,0x7ffdc994fb34,342117398,0,0x0,8
tick,0x7ffdc994fb34,342133575,0,0x0,8
tick,0x7ffdc994fb34,342149222,0,0x0,8
tick,0x7ffdc994fb34,342165678,0,0x0,8
tick,0x7ffdc994fb34,342180971,0,0x0,8
tick,0x7ffdc994fb34,342196285,0,0x0,8
tick,0x7ffdc994fb34,342212247,0,0x0,8
tick,0x7ffdc994fb34,342228296,0,0x0,8
tick,0x7ffdc994fb34,342243446,0,0x0,8
tick,0x7ffdc994fb34,342259371,0,0x0,8
tick,0x7ffdc994fb34,342275013,0,0x0,8
tick,0x7ffdc994fb34,342290656,0,0x0,8
tick,0x7ffdc994fb34,342306754,0,0x0,8
tick,0x7ffdc994fb34,342322186,0,0x0,8
tick,0x7ffdc994fb34,342337435,0,0x0,8
tick,0x7ffdc994fb34,342352827,0,0x0,8
tick,0x7ffdc994fb34,342368567,0,0x0,8
tick,0x7ffdc994fb34,342384618,0,0x0,8
tick,0x7ffdc994fb34,342400048,0,0x0,8
tick,0x7ffdc994fb34,342415947,0,0x0,8
tick,0x7ffdc994fb34,342431421,0,0x0,8
tick,0x7ffdc994fb34,342447302,0,0x0,8
tick,0x7ffdc994fb34,342462506,0,0x0,8
tick,0x7ffdc994fb34,342477826,0,0x0,8
tick,0x7ffdc994fb34,342493656,0,0x0,8
tick,0x7ffdc994fb34,342509626,0,0x0,8
tick,0x7ffdc994fb34,342524466,0,0x0,8
tick,0x7ffdc994fb34,342539899,0,0x0,8
tick,0x7ffdc994fb34,342555186,0,0x0,8
tick,0x7ffdc994fb34,342571030,0,0x0,8
tick,0x7ffdc994fb34,342587032,0,0x0,8
tick,0x7ffdc994fb34,342602445,0,0x0,8
tick,0x7ffdc994fb34,342617847,0,0x0,8
tick,0x7ffdc994fb34,342633512,0,0x0,8
tick,0x7ffdc994fb34,342649536,0,0x0,8
tick,0x7ffdc994fb34,342665364,0,0x0,8
tick,0x7ffdc994fb34,342681609,0,0x0,8
tick,0x7ffdc994fb34,342697172,0,0x0,8
tick,0x7ffdc994fb34,342712764,0,0x0,8
tick,0x7ffdc994fb34,342728827,0,0x0,8
tick,0x7ffdc994fb34,342744877,0,0x0,8
tick,0x7ffdc994fb34,342760732,0,0x0,8
tick,0x7ffdc994fb34,342776715,0,0x0,8
tick,0x7ffdc994fb34,342792541,0,0x0,8
tick,0x7ffdc994fb34,342808481,0,0x0,8
tick,0x7ffdc994fb34,342823745,0,0x0,8
tick,0x7ffdc994fb34,342839018,0,0x0,8
tick,0x7ffdc994fb34,342855062,0,0x0,8
tick,0x7ffdc994fb34,342871004,0,0x0,8
tick,0x7ffdc994fb34,342886555,0,0x0,8
tick,0x7ffdc994fb34,342902536,0,0x0,8
tick,0x7ffdc994fb34,342918757,0,0x0,8
tick,0x7ffdc994fb34,342934950,0,0x0,8
tick,0x7ffdc994fb34,342950766,0,0x0,8
tick,0x7ffdc994fb34,342966806,0,0x0,8
tick,0x7ffdc994fb34,342982167,0,0x0,8
tick,0x7ffdc994fb34,342997758,0,0x0,8
tick,0x7ffdc994fb34,343013299,0,0x0,8
tick,0x7ffdc994fb34,343028776,0,0x0,8
tick,0x7ffdc994fb34,343044785,0,0x0,8
tick,0x7ffdc994fb34,343060241,0,0x0,8
tick,0x7ffdc994fb34,343076312,0,0x0,8
tick,0x7ffdc994fb34,343091761,0,0x0,8
tick,0x7ffdc994fb34,343107038,0,0x0,8
tick,0x7ffdc994fb34,343123261,0,0x0,8
tick,0x7ffdc994fb34,343138611,0,0x0,8
tick,0x7ffdc994fb34,343154608,0,0x0,8
tick,0x7ffdc994fb34,343170508,0,0x0,8
tick,0x7ffdc994fb34,343186277,0,0x0,8
tick,0x7ffdc994fb34,343202910,0,0x0,8
tick,0x7ffdc994fb34,343217695,0,0x0,8
tick,0x7ffdc994fb34,343233713,0,0x0,8
tick,0x7ffdc994fb34,343249718,0,0x0,8
tick,0x7ffdc994fb34,343265170,0,0x0,8
tick,0x7ffdc994fb34,343281171,0,0x0,8
tick,0x7ffdc994fb34,343296080,0,0x0,8
tick,0x7ffdc994fb34,343311145,0,0x0,8
tick,0x7ffdc994fb34,343327215,0,0x0,8
tick,0x7ffdc994fb34,343343861,0,0x0,8
tick,0x7ffdc994fb34,343358956,0,0x0,8
tick,0x7ffdc994fb34,343373762,0,0x0,8
tick,0x7ffdc994fb34,343388784,0,0x0,8
tick,0x7ffdc994fb34,343406098,0,0x0,8
tick,0x7ffdc994fb34,343419710,0,0x0,8
tick,0x7ffdc994fb34,343435170,0,0x0,8
tick,0x7ffdc994fb34,343450501,0,0x0,8
tick,0x7ffdc994fb34,343465971,0,0x0,8
tick,0x7ffdc994fb34,343481384,0,0x0,8
tick,0x7ffdc994fb34,343496742,0,0x0,8
tick,0x7ffdc994fb34,343512397,0,0x0,8
tick,0x7ffdc994fb34,343528356,0,0x0,8
tick,0x7ffdc994fb34,343543681,0,0x0,8
tick,0x7ffdc994fb34,343558280,0,0x0,8
tick,0x7ffdc994fb34,343574052,0,0x0,8
tick,0x7ffdc994fb34,343588968,0,0x0,8
tick,0x7ffdc994fb34,343604082,0,0x0,8
tick,0x7ffdc994fb34,343618912,0,0x0,8
tick,0x7ffdc994fb34,343635214,0,0x0,8
tick,0x7ffdc994fb34,343649364,0,0x0,8
tick,0x7ffdc994fb34,343665472,0,0x0,8
tick,0x7ffdc994fb34,343680862,0,0x0,8
tick,0x7ffdc994fb34,343696112,0,0x0,8
tick,0x7ffdc994fb34,343712623,0,0x0,8
tick,0x7ffdc994fb34,343732293,0,0x0,8
tick,0x7ffdc994fb34,343747780,0,0x0,8
tick,0x7ffdc994fb34,343762769,0,0x0,8
tick,0x7ffdc994fb34,343773387,0,0x0,8
tick,0x7ffdc994fb34,343788875,0,0x0,8
tick,0x7ffdc994fb34,343804107,0,0x0,8
tick,0x7ffdc994fb34,343819880,0,0x0,8
tick,0x7ffdc994fb34,343834967,0,0x0,8
tick,0x7ffdc994fb34,343850388,0,0x0,8
tick,0x7ffdc994fb34,343866046,0,0x0,8
tick,0x7ffdc994fb34,343881434,0,0x0,8
tick,0x7ffdc994fb34,343896869,0,0x0,8
tick,0x7ffdc994fb34,343912267,0,0x0,8
tick,0x7ffdc994fb34,343929018,0,0x0,8
tick,0x7ffdc994fb34,343943936,0,0x0,8
tick,0x7ffdc994fb34,343964698,0,0x0,8
tick,0x7ffdc994fb34,343979169,0,0x0,8
tick,0x7ffdc994fb34,343990706,0,0x0,8
tick,0x7ffdc994fb34,344005618,0,0x0,8
tick,0x7ffdc994fb34,344020799,0,0x0,8
tick,0x7ffdc994fb34,344036083,0,0x0,8
tick,0x7ffdc994fb34,344052134,0,0x0,8
tick,0x7ffdc994fb34,344067642,0,0x0,8
tick,0x7ffdc994fb34,344083177,0,0x0,8
tick,0x7ffdc994fb34,344099210,0,0x0,8
tick,0x7ffdc994fb34,344114609,0,0x0,8
tick,0x7ffdc994fb34,344130947,0,0x0,8
tick,0x7ffdc994fb34,344145724,0,0x0,8
tick,0x7ffdc994fb34,344161506,0,0x0,8
tick,0x7ffdc994fb34,344176444,0,0x0,8
tick,0x7ffdc994fb34,344192459,0,0x0,8
tick,0x7ffdc994fb34,344208242,0,0x0,8
tick,0x7ffdc994fb34,344224243,0,0x0,8
tick,0x7ffdc994fb34,344239870,0,0x0,8
tick,0x7ffdc994fb34,344255659,0,0x0,8
tick,0x7ffdc994fb34,344270839,0,0x0,8
tick,0x7ffdc994fb34,344286931,0,0x0,8
tick,0x7ffdc994fb34,344302693,0,0x0,8
tick,0x7ffdc994fb34,344318655,0,0x0,8
tick,0x7ffdc994fb34,344334681,0,0x0,8
tick,0x7ffdc994fb34,344350091,0,0x0,8
tick,0x7ffdc994fb34,344365334,0,0x0,8
tick,0x7ffdc994fb34,344380714,0,0x0,8
tick,0x7ffdc994fb34,344396468,0,0x0,8
tick,0x7ffdc994fb34,344412270,0,0x0,8
tick,0x7ffdc994fb34,344427257,0,0x0,8
tick,0x7ffdc994fb34,344443313,0,0x0,8
tick,0x7ffdc994fb34,344459021,0,0x0,8
tick,0x7ffdc994fb34,344475152,0,0x0,8
tick,0x7ffdc994fb34,344490620,0,0x0,8
tick,0x7ffdc994fb34,344505682,0,0x0,8
tick,0x7ffdc994fb34,344521602,0,0x0,8
tick,0x7ffdc994fb34,344537548,0,0x0,8
tick,0x7ffdc994fb34,344552986,0,0x0,8
tick,0x7ffdc994fb34,344568921,0,0x0,8
tick,0x7ffdc994fb34,344584162,0,0x0,8
tick,0x7ffdc994fb34,344600177,0,0x0,8
tick,0x7ffdc994fb34,344615372,0,0x0,8
tick,0x7ffdc994fb34,344630650,0,0x0,8
tick,0x7ffdc994fb34,344645969,0,0x0,8
tick,0x7ffdc994fb34,344662140,0,0x0,8
tick,0x7ffdc994fb34,344677338,0,0x0,8
tick,0x7ffdc994fb34,344693730,0,0x0,8
tick,0x7ffdc994fb34,344708223,0,0x0,8
tick,0x7ffdc994fb34,344723039,0,0x0,8
tick,0x7ffdc994fb34,344739030,0,0x0,8
tick,0x7ffdc994fb34,344755031,0,0x0,8
tick,0x7ffdc994fb34,344770336,0,0x0,8
tick,0x7ffdc994fb34,344786406,0,0x0,8
tick,0x7ffdc994fb34,344801638,0,0x0,8
tick,0x7ffdc994fb34,344817297,0,0x0,8
tick,0x7ffdc994fb34,344833016,0,0x0,8
tick,0x7ffdc994fb34,344849112,0,0x0,8
tick,0x7ffdc994fb34,344864663,0,0x0,8
tick,0x7ffdc994fb34,344879818,0,0x0,8
tick,0x7ffdc994fb34,344895358,0,0x0,8
tick,0x7ffdc994fb34,344911048,0,0x0,8
tick,0x7ffdc994fb34,344926832,0,0x0,8
tick,0x7ffdc994fb34,344942870,0,0x0,8
tick,0x7ffdc994fb34,344958782,0,0x0,8
tick,0x7ffdc994fb34,344974165,0,0x0,8
tick,0x7ffdc994fb34,344989536,0,0x0,8
tick,0x7ffdc994fb34,345005455,0,0x0,8
tick,0x7ffdc994fb34,345020814,0,0x0,8
tick,0x7ffdc994fb34,345035653,0,0x0,8
tick,0x7ffdc994fb34,345051591,0,0x0,8
tick,0x7ffdc994fb34,345067485,0,0x0,8
tick,0x7ffdc994fb34,345083280,0,0x0,8
tick,0x7ffdc994fb34,345098442,0,0x0,8
tick,0x7ffdc994fb34,345139967,0,0x0,8
tick,0x7ffdc994fb34,345145629,0,0x0,8
tick,0x7ffdc994fb34,345161796,0,0x0,8
tick,0x7ffdc994fb34,345176931,0,0x0,8
tick,0x7ffdc994fb34,345192271,0,0x0,8
tick,0x7ffdc994fb34,345209855,0,0x0,8
tick,0x7ffdc994fb34,345223112,0,0x0,8
tick,0x7ffdc994fb34,345239353,0,0x0,8
tick,0x7ffdc994fb34,345253710,0,0x0,8
tick,0x7ffdc994fb34,345269486,0,0x0,8
tick,0x7ffdc994fb34,345284918,0,0x0,8
tick,0x7ffdc994fb34,345300803,0,0x0,8
tick,0x7ffdc994fb34,345316093,0,0x0,8
tick,0x7ffdc994fb34,345332217,0,0x0,8
tick,0x7ffdc994fb34,345347302,0,0x0,8
tick,0x7ffdc994fb34,345363014,0,0x0,8
tick,0x7ffdc994fb34,345378200,0,0x0,8
tick,0x7ffdc994fb34,345393392,0,0x0,8
tick,0x7ffdc994fb34,345409082,0,0x0,8
tick,0x7ffdc994fb34,345424815,0,0x0,8
tick,0x7ffdc994fb34,345440677,0,0x0,8
tick,0x7ffdc994fb34,345456184,0,0x0,8
tick,0x7ffdc994fb34,345471988,0,0x0,8
tick,0x7ffdc994fb34,345487633,0,0x0,8
tick,0x7ffdc994fb34,345503981,0,0x0,8
tick,0x7ffdc994fb34,345519086,0,0x0,8
tick,0x7ffdc994fb34,345534575,0,0x0,8
tick,0x7ffdc994fb34,345550116,0,0x0,8
tick,0x7ffdc994fb34,345566209,0,0x0,8
tick,0x7ffdc994fb34,345581114,0,0x0,8
tick,0x7ffdc994fb34,345597065,0,0x0,8
tick,0x7ffdc994fb34,345612047,0,0x0,8
tick,0x7ffdc994fb34,345627538,0,0x0,8
tick,0x7ffdc994fb34,345643555,0,0x0,8
tick,0x7ffdc994fb34,345659199,0,0x0,8
tick,0x7ffdc994fb34,345674598,0,0x0,8
tick,0x7ffdc994fb34,345690129,0,0x0,8
tick,0x7ffdc994fb34,345705632,0,0x0,8
tick,0x7ffdc994fb34,345721634,0,0x0,8
tick,0x7ffdc994fb34,345736775,0,0x0,8
tick,0x7ffdc994fb34,345752674,0,0x0,8
tick,0x7ffdc994fb34,345768842,0,0x0,8
tick,0x7ffdc994fb34,345784806,0,0x0,8
tick,0x7ffdc994fb34,345800359,0,0x0,8
tick,0x7ffdc994fb34,345815443,0,0x0,8
tick,0x7ffdc994fb34,345831001,0,0x0,8
tick,0x7ffdc994fb34,345846864,0,0x0,8
tick,0x7ffdc994fb34,345862149,0,0x0,8
tick,0x7ffdc994fb34,345877093,0,0x0,8
tick,0x7ffdc994fb34,345893096,0,0x0,8
tick,0x7ffdc994fb34,345908276,0,0x0,8
tick,0x7ffdc994fb34,345922994,0,0x0,8
tick,0x7ffdc994fb34,345938534,0,0x0,8
tick,0x7ffdc994fb34,345954413,0,0x0,8
tick,0x7ffdc994fb34,345969549,0,0x0,8
tick,0x7ffdc994fb34,345984692,0,0x0,8
tick,0x7ffdc994fb34,345999774,0,0x0,8
tick,0x7ffdc994fb34,346015154,0,0x0,8
tick,0x7ffdc994fb34,346030420,0,0x0,8
tick,0x7ffdc994fb34,346045946,0,0x0,8
tick,0x7ffdc994fb34,346061620,0,0x0,8
tick,0x7ffdc994fb34,346077707,0,0x0,8
tick,0x7ffdc994fb34,346093505,0,0x0,8
tick,0x7ffdc994fb34,346108724,0,0x0,8
tick,0x7ffdc994fb34,346124456,0,0x0,8
tick,0x7ffdc994fb34,346140028,0,0x0,8
tick,0x7ffdc994fb34,346155275,0,0x0,8
tick,0x7ffdc994fb34,346170542,0,0x0,8
tick,0x7ffdc994fb34,346186447,0,0x0,8
tick,0x7ffdc994fb34,346202398,0,0x0,8
tick,0x7ffdc994fb34,346217755,0,0x0,8
tick,0x7ffdc994fb34,346234052,0,0x0,8
tick,0x7ffdc994fb34,346249845,0,0x0,8
tick,0x7ffdc994fb34,346265056,0,0x0,8
tick,0x7ffdc994fb34,346280811,0,0x0,8
tick,0x7ffdc994fb34,346296394,0,0x0,8
tick,0x7ffdc994fb34,346311818,0,0x0,8
tick,0x7ffdc994fb34,346326984,0,0x0,8
tick,0x7ffdc994fb34,346342748,0,0x0,8
tick,0x7ffdc994fb34,346358474,0,0x0,8
tick,0x7ffdc994fb34,346374566,0,0x0,8
tick,0x7ffdc994fb34,346390600,0,0x0,8
tick,0x7ffdc994fb34,346405859,0,0x0,8
tick,0x7ffdc994fb34,346421605,0,0x0,8
tick,0x7ffdc994fb34,346437074,0,0x0,8
tick,0x7ffdc994fb34,346452697,0,0x0,8
tick,0x7ffdc994fb34,346468623,0,0x0,8
tick,0x7ffdc994fb34,346484069,0,0x0,8
tick,0x7ffdc994fb34,346500078,0,0x0,8
tick,0x7ffdc994fb34,346515503,0,0x0,8
tick,0x7ffdc994fb34,346530831,0,0x0,8
tick,0x7ffdc994fb34,346546647,0,0x0,8
tick,0x7ffdc994fb34,346561849,0,0x0,8
tick,0x7ffdc994fb34,346577681,0,0x0,8
tick,0x7ffdc994fb34,346592974,0,0x0,8
tick,0x7ffdc994fb34,346608370,0,0x0,8
tick,0x7ffdc994fb34,346623751,0,0x0,8
tick,0x7ffdc994fb34,346639229,0,0x0,8
tick,0x7ffdc994fb34,346654584,0,0x0,8
tick,0x7ffdc994fb34,346670307,0,0x0,8
tick,0x7ffdc994fb34,346685769,0,0x0,8
tick,0x7ffdc994fb34,346701247,0,0x0,8
tick,0x7ffdc994fb34,346717490,0,0x0,8
tick,0x7ffdc994fb34,346733321,0,0x0,8
tick,0x7ffdc994fb34,346748749,0,0x0,8
tick,0x7ffdc994fb34,346763803,0,0x0,8
tick,0x7ffdc994fb34,346779738,0,0x0,8
tick,0x7ffdc994fb34,346795721,0,0x0,8
tick,0x7ffdc994fb34,346811451,0,0x0,8
tick,0x7ffdc994fb34,346827303,0,0x0,8
tick,0x7ffdc994fb34,346842732,0,0x0,8
tick,0x7ffdc994fb34,346858307,0,0x0,8
tick,0x7ffdc994fb34,346873920,0,0x0,8
tick,0x7ffdc994fb34,346889973,0,0x0,8
tick,0x7ffdc994fb34,346905872,0,0x0,8
tick,0x7ffdc994fb34,346921825,0,0x0,8
tick,0x7ffdc994fb34,346937533,0,0x0,8
tick,0x7ffdc994fb34,346952799,0,0x0,8
tick,0x7ffdc994fb34,346968100,0,0x0,8
tick,0x7ffdc994fb34,346983406,0,0x0,8
tick,0x7ffdc994fb34,346998626,0,0x0,8
tick,0x7ffdc994fb34,347013992,0,0x0,8
tick,0x7ffdc994fb34,347029612,0,0x0,8
tick,0x7ffdc994fb34,347045315,0,0x0,8
tick,0x7ffdc994fb34,347060863,0,0x0,8
tick,0x7ffdc994fb34,347076590,0,0x0,8
tick,0x7ffdc994fb34,347091889,0,0x0,8
tick,0x7ffdc994fb34,347107279,0,0x0,8
tick,0x7ffdc994fb34,347122988,0,0x0,8
tick,0x7ffdc994fb34,347138897,0,0x0,8
tick,0x7ffdc994fb34,347154184,0,0x0,8
tick,0x7ffdc994fb34,347169768,0,0x0,8
tick,0x7ffdc994fb34,347185228,0,0x0,8
tick,0x7ffdc994fb34,347201040,0,0x0,8
tick,0x7ffdc994fb34,347216770,0,0x0,8
tick,0x7ffdc994fb34,347232385,0,0x0,8
tick,0x7ffdc994fb34,347247627,0,0x0,8
tick,0x7ffdc994fb34,347262772,0,0x0,8
tick,0x7ffdc994fb34,347278364,0,0x0,8
tick,0x7ffdc994fb34,347293921,0,0x0,8
tick,0x7ffdc994fb34,347309182,0,0x0,8
tick,0x7ffdc994fb34,347324912,0,0x0,8
tick,0x7ffdc994fb34,347340746,0,0x0,8
tick,0x7ffdc994fb34,347356524,0,0x0,8
tick,0x7ffdc994fb34,347372086,0,0x0,8
tick,0x7ffdc994fb34,347387627,0,0x0,8
tick,0x7ffdc994fb34,347402563,0,0x0,8
tick,0x7ffdc994fb34,347417839,0,0x0,8
tick,0x7ffdc994fb34,347433205,0,0x0,8
tick,0x7ffdc994fb34,347448629,0,0x0,8
tick,0x7ffdc994fb34,347464516,0,0x0,8
tick,0x7ffdc994fb34,347479859,0,0x0,8
tick,0x7ffdc994fb34,347495862,0,0x0,8
tick,0x7ffdc994fb34,347511541,0,0x0,8
tick,0x7ffdc994fb34,347527574,0,0x0,8
tick,0x7ffdc994fb34,347543350,0,0x0,8
tick,0x7ffdc994fb34,347558481,0,0x0,8
tick,0x7ffdc994fb34,347573627,0,0x0,8
tick,0x7ffdc994fb34,347589113,0,0x0,8
tick,0x7ffdc994fb34,347604842,0,0x0,8
tick,0x7ffdc994fb34,347620686,0,0x0,8
tick,0x7ffdc994fb34,347636429,0,0x0,8
tick,0x7ffdc994fb34,347651518,0,0x0,8
tick,0x7ffdc994fb34,347667075,0,0x0,8
tick,0x7ffdc994fb34,347683412,0,0x0,8
tick,0x7ffdc994fb34,347699000,0,0x0,8
tick,0x7ffdc994fb34,347714826,0,0x0,8
tick,0x7ffdc994fb34,347730413,0,0x0,8
tick,0x7ffdc994fb34,347745774,0,0x0,8
tick,0x7ffdc994fb34,347761279,0,0x0,8
tick,0x7ffdc994fb34,347777097,0,0x0,8
tick,0x7ffdc994fb34,347793156,0,0x0,8
tick,0x7ffdc994fb34,347809053,0,0x0,8
tick,0x7ffdc994fb34,347824323,0,0x0,8
tick,0x7ffdc994fb34,347839553,0,0x0,8
tick,0x7ffdc994fb34,347855424,0,0x0,8
tick,0x7ffdc994fb34,347871494,0,0x0,8
tick,0x7ffdc994fb34,347887215,0,0x0,8
tick,0x7ffdc994fb34,347903185,0,0x0,8
tick,0x7ffdc994fb34,347918370,0,0x0,8
tick,0x7ffdc994fb34,347934080,0,0x0,8
tick,0x7ffdc994fb34,347949804,0,0x0,8
tick,0x7ffdc994fb34,347965325,0,0x0,8
tick,0x7ffdc994fb34,347981609,0,0x0,8
tick,0x7ffdc994fb34,347997299,0,0x0,8
tick,0x7ffdc994fb34,348013586,0,0x0,8
tick,0x7ffdc994fb34,348028584,0,0x0,8
tick,0x7ffdc994fb34,348043863,0,0x0,8
tick,0x7ffdc994fb34,348059647,0,0x0,8
tick,0x7ffdc994fb34,348075349,0,0x0,8
tick,0x7ffdc994fb34,348091073,0,0x0,8
tick,0x7ffdc994fb34,348106479,0,0x0,8
tick,0x7ffdc994fb34,348121214,0,0x0,8
tick,0x7ffdc994fb34,348137035,0,0x0,8
tick,0x7ffdc994fb34,348152439,0,0x0,8
tick,0x7ffdc994fb34,348168010,0,0x0,8
tick,0x7ffdc994fb34,348183078,0,0x0,8
tick,0x7ffdc994fb34,348198482,0,0x0,8
tick,0x7ffdc994fb34,348214232,0,0x0,8
tick,0x7ffdc994fb34,348230262,0,0x0,8
tick,0x7ffdc994fb34,348245558,0,0x0,8
tick,0x7ffdc994fb34,348260873,0,0x0,8
tick,0x7ffdc994fb34,348276351,0,0x0,8
tick,0x7ffdc994fb34,348292019,0,0x0,8
tick,0x7ffdc994fb34,348307394,0,0x0,8
tick,0x7ffdc994fb34,348323159,0,0x0,8
tick,0x7ffdc994fb34,348338726,0,0x0,8
tick,0x7ffdc994fb34,348354248,0,0x0,8
tick,0x7ffdc994fb34,348369866,0,0x0,8
tick,0x7ffdc994fb34,348385050,0,0x0,8
tick,0x7ffdc994fb34,348400634,0,0x0,8
tick,0x7ffdc994fb34,348415941,0,0x0,8
tick,0x7ffdc994fb34,348432403,0,0x0,8
tick,0x7ffdc994fb34,348447513,0,0x0,8
tick,0x7ffdc994fb34,348463169,0,0x0,8
tick,0x7ffdc994fb34,348479043,0,0x0,8
tick,0x7ffdc994fb34,348495219,0,0x0,8
tick,0x7ffdc994fb34,348511240,0,0x0,8
tick,0x7ffdc994fb34,348527096,0,0x0,8
tick,0x7ffdc994fb34,348542709,0,0x0,8
tick,0x7ffdc994fb34,348558178,0,0x0,8
tick,0x7ffdc994fb34,348573384,0,0x0,8
tick,0x7ffdc994fb34,348589170,0,0x0,8
tick,0x7ffdc994fb34,348604498,0,0x0,8
tick,0x7ffdc994fb34,348619535,0,0x0,8
tick,0x7ffdc994fb34,348634847,0,0x0,8
tick,0x7ffdc994fb34,348651158,0,0x0,8
tick,0x7ffdc994fb34,348666598,0,0x0,8
tick,0x7ffdc994fb34,348682840,0,0x0,8
tick,0x7ffdc994fb34,348697470,0,0x0,8
tick,0x7ffdc994fb34,348712783,0,0x0,8
tick,0x7ffdc994fb34,348727856,0,0x0,8
tick,0x7ffdc994fb34,348743150,0,0x0,8
tick,0x7ffdc994fb34,348758254,0,0x0,8
tick,0x7ffdc994fb34,348773816,0,0x0,8
tick,0x7ffdc994fb34,348789102,0,0x0,8
tick,0x7ffdc994fb34,348804231,0,0x0,8
tick,0x7ffdc994fb34,348819983,0,0x0,8
tick,0x7ffdc994fb34,348835639,0,0x0,8
tick,0x7ffdc994fb34,348851065,0,0x0,8
tick,0x7ffdc994fb34,348867160,0,0x0,8
tick,0x7ffdc994fb34,348882649,0,0x0,8
tick,0x7ffdc994fb34,348898867,0,0x0,8
tick,0x7ffdc994fb34,348914368,0,0x0,8
tick,0x7ffdc994fb34,348929480,0,0x0,8
tick,0x7ffdc994fb34,348945195,0,0x0,8
tick,0x7ffdc994fb34,348960739,0,0x0,8
tick,0x7ffdc994fb34,348975979,0,0x0,8
tick,0x7ffdc994fb34,348991049,0,0x0,8
tick,0x7ffdc994fb34,349006774,0,0x0,8
tick,0x7ffdc994fb34,349022149,0,0x0,8
tick,0x7ffdc994fb34,349037935,0,0x0,8
tick,0x7ffdc994fb34,349053695,0,0x0,8
tick,0x7ffdc994fb34,349069392,0,0x0,8
tick,0x7ffdc994fb34,349084329,0,0x0,8
tick,0x7ffdc994fb34,349099718,0,0x0,8
tick,0x7ffdc994fb34,349115405,0,0x0,8
tick,0x7ffdc994fb34,349130871,0,0x0,8
tick,0x7ffdc994fb34,349146750,0,0x0,8
tick,0x7ffdc994fb34,349161822,0,0x0,8
tick,0x7ffdc994fb34,349177347,0,0x0,8
tick,0x7ffdc994fb34,349193145,0,0x0,8
tick,0x7ffdc994fb34,349208702,0,0x0,8
tick,0x7ffdc994fb34,349224518,0,0x0,8
tick,0x7ffdc994fb34,349240022,0,0x0,8
tick,0x7ffdc994fb34,349255822,0,0x0,8
tick,0x7ffdc994fb34,349271460,0,0x0,8
tick,0x7ffdc994fb34,349286732,0,0x0,8
tick,0x7ffdc994fb34,349303021,0,0x0,8
tick,0x7ffdc994fb34,349317677,0,0x0,8
tick,0x7ffdc994fb34,349333890,0,0x0,8
tick,0x7ffdc994fb34,349349507,0,0x0,8
tick,0x7ffdc994fb34,349365475,0,0x0,8
tick,0x7ffdc994fb34,349380932,0,0x0,8
tick,0x7ffdc994fb34,349396505,0,0x0,8
tick,0x7ffdc994fb34,349412638,0,0x0,8
tick,0x7ffdc994fb34,349427961,0,0x0,8
tick,0x7ffdc994fb34,349443017,0,0x0,8
tick,0x7ffdc994fb34,349458955,0,0x0,8
tick,0x7ffdc994fb34,349474959,0,0x0,8
tick,0x7ffdc994fb34,349490254,0,0x0,8
tick,0x7ffdc994fb34,349505630,0,0x0,8
tick,0x7ffdc994fb34,349521369,0,0x0,8
tick,0x7ffdc994fb34,349558882,0,0x0,8
tick,0x7ffdc994fb34,349568761,0,0x0,8
tick,0x7ffdc994fb34,349584079,0,0x0,8
tick,0x7ffdc994fb34,349599328,0,0x0,8
tick,0x7ffdc994fb34,349615361,0,0x0,8
tick,0x7ffdc994fb34,349630194,0,0x0,8
tick,0x7ffdc994fb34,349645636,0,0x0,8
tick,0x7ffdc994fb34,349661528,0,0x0,8
tick,0x7ffdc994fb34,349677096,0,0x0,8
tick,0x7ffdc994fb34,349693106,0,0x0,8
tick,0x7ffdc994fb34,349708911,0,0x0,8
tick,0x7ffdc994fb34,349725084,0,0x0,8
tick,0x7ffdc994fb34,349740203,0,0x0,8
tick,0x7ffdc994fb34,349755411,0,0x0,8
tick,0x7ffdc994fb34,349771733,0,0x0,8
tick,0x7ffdc994fb34,349787175,0,0x0,8
tick,0x7ffdc994fb34,349803430,0,0x0,8
tick,0x7ffdc994fb34,349818698,0,0x0,8
tick,0x7ffdc994fb34,349833722,0,0x0,8
tick,0x7ffdc994fb34,349849443,0,0x0,8
tick,0x7ffdc994fb34,349864660,0,0x0,8
tick,0x7ffdc994fb34,349880415,0,0x0,8
tick,0x7ffdc994fb34,349895836,0,0x0,8
tick,0x7ffdc994fb34,349911630,0,0x0,8
tick,0x7ffdc994fb34,349926858,0,0x0,8
tick,0x7ffdc994fb34,349942304,0,0x0,8
tick,0x7ffdc994fb34,349957962,0,0x0,8
tick,0x7ffdc994fb34,349973249,0,0x0,8
tick,0x7ffdc994fb34,349989201,0,0x0,8
tick,0x7ffdc994fb34,350004411,0,0x0,8
tick,0x7ffdc994fb34,350020276,0,0x0,8
tick,0x7ffdc994fb34,350036135,0,0x0,8
tick,0x7ffdc994fb34,350052384,0,0x0,8
tick,0x7ffdc994fb34,350067897,0,0x0,8
tick,0x7ffdc994fb34,350083119,0,0x0,8
tick,0x7ffdc994fb34,350098496,0,0x0,8
tick,0x7ffdc994fb34,350114312,0,0x0,8
tick,0x7ffdc994fb34,350129612,0,0x0,8
tick,0x7ffdc994fb34,350144970,0,0x0,8
tick,0x7ffdc994fb34,350160762,0,0x0,8
tick,0x7ffdc994fb34,350176745,0,0x0,8
tick,0x7ffdc994fb34,350192628,0,0x0,8
tick,0x7ffdc994fb34,350208122,0,0x0,8
tick,0x7ffdc994fb34,350223190,0,0x0,8
tick,0x7ffdc994fb34,350239214,0,0x0,8
tick,0x7ffdc994fb34,350254685,0,0x0,8
tick,0x7ffdc994fb34,350270475,0,0x0,8
tick,0x7ffdc994fb34,350285732,0,0x0,8
tick,0x7ffdc994fb34,350301091,0,0x0,8
tick,0x7ffdc994fb34,350316797,0,0x0,8
tick,0x7ffdc994fb34,350332350,0,0x0,8
tick,0x7ffdc994fb34,350348372,0,0x0,8
tick,0x7ffdc994fb34,350363383,0,0x0,8
tick,0x7ffdc994fb34,350379341,0,0x0,8
tick,0x7ffdc994fb34,350394983,0,0x0,8
tick,0x7ffdc994fb34,350410635,0,0x0,8
tick,0x7ffdc994fb34,350426103,0,0x0,8
tick,0x7ffdc994fb34,350441961,0,0x0,8
tick,0x7ffdc994fb34,350457914,0,0x0,8
tick,0x7ffdc994fb34,350473172,0,0x0,8
tick,0x7ffdc994fb34,350488333,0,0x0,8
tick,0x7ffdc994fb34,350503214,0,0x0,8
tick,0x7ffdc994fb34,350518948,0,0x0,8
tick,0x7ffdc994fb34,350534300,0,0x0,8
tick,0x7ffdc994fb34,350549989,0,0x0,8
tick,0x7ffdc994fb34,350566108,0,0x0,8
tick,0x7ffdc994fb34,350581624,0,0x0,8
tick,0x7ffdc994fb34,350596600,0,0x0,8
tick,0x7ffdc994fb34,350612113,0,0x0,8
tick,0x7ffdc994fb34,350627543,0,0x0,8
tick,0x7ffdc994fb34,350642660,0,0x0,8
tick,0x7ffdc994fb34,350658188,0,0x0,8
tick,0x7ffdc994fb34,350673349,0,0x0,8
tick,0x7ffdc994fb34,350689018,0,0x0,8
tick,0x7ffdc994fb34,350704472,0,0x0,8
tick,0x7ffdc994fb34,350719911,0,0x0,8
tick,0x7ffdc994fb34,350735652,0,0x0,8
tick,0x7ffdc994fb34,350750910,0,0x0,8
tick,0x7ffdc994fb34,350766442,0,0x0,8
tick,0x7ffdc994fb34,350782063,0,0x0,8
tick,0x7ffdc994fb34,350797398,0,0x0,8
tick,0x7ffdc994fb34,350812913,0,0x0,8
tick,0x7ffdc994fb34,350828578,0,0x0,8
tick,0x7ffdc994fb34,350844397,0,0x0,8
tick,0x7ffdc994fb34,350860164,0,0x0,8
tick,0x7ffdc994fb34,350875770,0,0x0,8
tick,0x7ffdc994fb34,350891367,0,0x0,8
tick,0x7ffdc994fb34,350906524,0,0x0,8
tick,0x7ffdc994fb34,350922013,0,0x0,8
tick,0x7ffdc994fb34,350937530,0,0x0,8
tick,0x7ffdc994fb34,350952896,0,0x0,8
tick,0x7ffdc994fb34,350968640,0,0x0,8
tick,0x7ffdc994fb34,350983746,0,0x0,8
tick,0x7ffdc994fb34,350999254,0,0x0,8
tick,0x7ffdc994fb34,351015183,0,0x0,8
tick,0x7ffdc994fb34,351030759,0,0x0,8
tick,0x7ffdc994fb34,351046204,0,0x0,8
tick,0x7ffdc994fb34,351062090,0,0x0,8
tick,0x7ffdc994fb34,351077826,0,0x0,8
tick,0x7ffdc994fb34,351092900,0,0x0,8
tick,0x7ffdc994fb34,351108500,0,0x0,8
tick,0x7ffdc994fb34,351123709,0,0x0,8
tick,0x7ffdc994fb34,351139630,0,0x0,8
tick,0x7ffdc994fb34,351155001,0,0x0,8
tick,0x7ffdc994fb34,351170812,0,0x0,8
tick,0x7ffdc994fb34,351186569,0,0x0,8
tick,0x7ffdc994fb34,351202722,0,0x0,8
tick,0x7ffdc994fb34,351217701,0,0x0,8
tick,0x7ffdc994fb34,351233487,0,0x0,8
tick,0x7ffdc994fb34,351249272,0,0x0,8
tick,0x7ffdc994fb34,351265290,0,0x0,8
tick,0x7ffdc994fb34,351281115,0,0x0,8
tick,0x7ffdc994fb34,351296625,0,0x0,8
tick,0x7ffdc994fb34,351312483,0,0x0,8
tick,0x7ffdc994fb34,351327854,0,0x0,8
tick,0x7ffdc994fb34,351343363,0,0x0,8
tick,0x7ffdc994fb34,351358907,0,0x0,8
tick,0x7ffdc994fb34,351374457,0,0x0,8
tick,0x7ffdc994fb34,351390063,0,0x0,8
tick,0x7ffdc994fb34,351405686,0,0x0,8
tick,0x7ffdc994fb34,351421075,0,0x0,8
tick,0x7ffdc994fb34,351436962,0,0x0,8
tick,0x7ffdc994fb34,351452466,0,0x0,8
tick,0x7ffdc994fb34,351467978,0,0x0,8
tick,0x7ffdc994fb34,351483492,0,0x0,8
tick,0x7ffdc994fb34,351499041,0,0x0,8
tick,0x7ffdc994fb34,351514339,0,0x0,8
tick,0x7ffdc994fb34,351529991,0,0x0,8
tick,0x7ffdc994fb34,351545255,0,0x0,8
tick,0x7ffdc994fb34,351561418,0,0x0,8
tick,0x7ffdc994fb34,351577480,0,0x0,8
tick,0x7ffdc994fb34,351592995,0,0x0,8
tick,0x7ffdc994fb34,351608386,0,0x0,8
tick,0x7ffdc994fb34,351623341,0,0x0,8
tick,0x7ffdc994fb34,351639462,0,0x0,8
tick,0x7ffdc994fb34,351654775,0,0x0,8
tick,0x7ffdc994fb34,351670599,0,0x0,8
tick,0x7ffdc994fb34,351686100,0,0x0,8
tick,0x7ffdc994fb34,351701517,0,0x0,8
tick,0x7ffdc994fb34,351717302,0,0x0,8
tick,0x7ffdc994fb34,351732940,0,0x0,8
tick,0x7ffdc994fb34,351748830,0,0x0,8
tick,0x7ffdc994fb34,351764099,0,0x0,8
tick,0x7ffdc994fb34,351779835,0,0x0,8
tick,0x7ffdc994fb34,351795590,0,0x0,8
tick,0x7ffdc994fb34,351811128,0,0x0,8
tick,0x7ffdc994fb34,351826534,0,0x0,8
tick,0x7ffdc994fb34,351842083,0,0x0,8
tick,0x7ffdc994fb34,351857945,0,0x0,8
tick,0x7ffdc994fb34,351873093,0,0x0,8
tick,0x7ffdc994fb34,351888916,0,0x0,8
tick,0x7ffdc994fb34,351904822,0,0x0,8
tick,0x7ffdc994fb34,351920499,0,0x0,8
tick,0x7ffdc994fb34,351935427,0,0x0,8
tick,0x7ffdc994fb34,351950730,0,0x0,8
tick,0x7ffdc994fb34,351966141,0,0x0,8
tick,0x7ffdc994fb34,351982158,0,0x0,8
tick,0x7ffdc994fb34,351997658,0,0x0,8
tick,0x7ffdc994fb34,352014134,0,0x0,8
tick,0x7ffdc994fb34,352029155,0,0x0,8
tick,0x7ffdc994fb34,352044436,0,0x0,8
tick,0x7ffdc994fb34,352060274,0,0x0,8
tick,0x7ffdc994fb34,352076560,0,0x0,8
tick,0x7ffdc994fb34,352091769,0,0x0,8
tick,0x7ffdc994fb34,352107437,0,0x0,8
tick,0x7ffdc994fb34,352123507,0,0x0,8
tick,0x7ffdc994fb34,352139191,0,0x0,8
tick,0x7ffdc994fb34,352154444,0,0x0,8
tick,0x7ffdc994fb34,352170537,0,0x0,8
tick,0x7ffdc994fb34,352185863,0,0x0,8
tick,0x7ffdc994fb34,352201639,0,0x0,8
tick,0x7ffdc994fb34,352216703,0,0x0,8
tick,0x7ffdc994fb34,352232313,0,0x0,8
tick,0x7ffdc994fb34,352248107,0,0x0,8
tick,0x7ffdc994fb34,352263305,0,0x0,8
tick,0x7ffdc994fb34,352278920,0,0x0,8
tick,0x7ffdc994fb34,352294322,0,0x0,8
tick,0x7ffdc994fb34,352309470,0,0x0,8
tick,0x7ffdc994fb34,352324712,0,0x0,8
tick,0x7ffdc994fb34,352340527,0,0x0,8
tick,0x7ffdc994fb34,352355401,0,0x0,8
tick,0x7ffdc994fb34,352371275,0,0x0,8
tick,0x7ffdc994fb34,352386732,0,0x0,8
tick,0x7ffdc994fb34,352402348,0,0x0,8
tick,0x7ffdc994fb34,352417541,0,0x0,8
tick,0x7ffdc994fb34,352432803,0,0x0,8
tick,0x7ffdc994fb34,352448428,0,0x0,8
tick,0x7ffdc994fb34,352463838,0,0x0,8
tick,0x7ffdc994fb34,352479619,0,0x0,8
tick,0x7ffdc994fb34,352495910,0,0x0,8
tick,0x7ffdc994fb34,352511167,0,0x0,8
tick,0x7ffdc994fb34,352526570,0,0x0,8
tick,0x7ffdc994fb34,352542573,0,0x0,8
tick,0x7ffdc994fb34,352557954,0,0x0,8
tick,0x7ffdc994fb34,352572986,0,0x0,8
tick,0x7ffdc994fb34,352588615,0,0x0,8
tick,0x7ffdc994fb34,352604286,0,0x0,8
tick,0x7ffdc994fb34,352619810,0,0x0,8
tick,0x7ffdc994fb34,352634738,0,0x0,8
tick,0x7ffdc994fb34,352650515,0,0x0,8
tick,0x7ffdc994fb34,352665655,0,0x0,8
tick,0x7ffdc994fb34,352681426,0,0x0,8
tick,0x7ffdc994fb34,352696213,0,0x0,8
tick,0x7ffdc994fb34,352711457,0,0x0,8
tick,0x7ffdc994fb34,352727477,0,0x0,8
tick,0x7ffdc994fb34,352742790,0,0x0,8
tick,0x7ffdc994fb34,352758423,0,0x0,8
tick,0x7ffdc994fb34,352773584,0,0x0,8
tick,0x7ffdc994fb34,352789332,0,0x0,8
tick,0x7ffdc994fb34,352804976,0,0x0,8
tick,0x7ffdc994fb34,352820767,0,0x0,8
tick,0x7ffdc994fb34,352835733,0,0x0,8
tick,0x7ffdc994fb34,352851944,0,0x0,8
tick,0x7ffdc994fb34,352867142,0,0x0,8
tick,0x7ffdc994fb34,352882631,0,0x0,8
tick,0x7ffdc994fb34,352898700,0,0x0,8
tick,0x7ffdc994fb34,352914557,0,0x0,8
tick,0x7ffdc994fb34,352930249,0,0x0,8
tick,0x7ffdc994fb34,352945332,0,0x0,8
tick,0x7ffdc994fb34,352961142,0,0x0,8
tick,0x7ffdc994fb34,352976638,0,0x0,8
tick,0x7ffdc994fb34,352992231,0,0x0,8
tick,0x7ffdc994fb34,353008152,0,0x0,8
tick,0x7ffdc994fb34,353023077,0,0x0,8
tick,0x7ffdc994fb34,353039052,0,0x0,8
tick,0x7ffdc994fb34,353054345,0,0x0,8
tick,0x7ffdc994fb34,353070214,0,0x0,8
tick,0x7ffdc994fb34,353085842,0,0x0,8
tick,0x7ffdc994fb34,353102242,0,0x0,8
tick,0x7ffdc994fb34,353117882,0,0x0,8
tick,0x7ffdc994fb34,353132952,0,0x0,8
tick,0x7ffdc994fb34,353149015,0,0x0,8
tick,0x7ffdc994fb34,353164960,0,0x0,8
tick,0x7ffdc994fb34,353180654,0,0x0,8
tick,0x7ffdc994fb34,353197129,0,0x0,8
tick,0x7ffdc994fb34,353212715,0,0x0,8
tick,0x7ffdc994fb34,353228809,0,0x0,8
tick,0x7ffdc994fb34,353244686,0,0x0,8
tick,0x7ffdc994fb34,353259972,0,0x0,8
tick,0x7ffdc994fb34,353276115,0,0x0,8
tick,0x7ffdc994fb34,353291617,0,0x0,8
tick,0x7ffdc994fb34,353306950,0,0x0,8
tick,0x7ffdc994fb34,353322168,0,0x0,8
tick,0x7ffdc994fb34,353337972,0,0x0,8
tick,0x7ffdc994fb34,353353414,0,0x0,8
tick,0x7ffdc994fb34,353368620,0,0x0,8
tick,0x7ffdc994fb34,353384123,0,0x0,8
tick,0x7ffdc994fb34,353399159,0,0x0,8
tick,0x7ffdc994fb34,353414938,0,0x0,8
tick,0x7ffdc994fb34,353430609,0,0x0,8
tick,0x7ffdc994fb34,353446549,0,0x0,8
tick,0x7ffdc994fb34,353461982,0,0x0,8
tick,0x7ffdc994fb34,353477893,0,0x0,8
tick,0x7ffdc994fb34,353492986,0,0x0,8
tick,0x7ffdc994fb34,353508652,0,0x0,8
tick,0x7ffdc994fb34,353524719,0,0x0,8
tick,0x7ffdc994fb34,353539831,0,0x0,8
tick,0x7ffdc994fb34,353555296,0,0x0,8
tick,0x7ffdc994fb34,353570912,0,0x0,8
tick,0x7ffdc994fb34,353586599,0,0x0,8
tick,0x7ffdc994fb34,353602476,0,0x0,8
tick,0x7ffdc994fb34,353617870,0,0x0,8
tick,0x7ffdc994fb34,353632980,0,0x0,8
tick,0x7ffdc994fb34,353649303,0,0x0,8
tick,0x7ffdc994fb34,353664934,0,0x0,8
tick,0x7ffdc994fb34,353681026,0,0x0,8
tick,0x7ffdc994fb34,353695954,0,0x0,8
tick,0x7ffdc994fb34,353711308,0,0x0,8
tick,0x7ffdc994fb34,353727152,0,0x0,8
tick,0x7ffdc994fb34,353742932,0,0x0,8
tick,0x7ffdc994fb34,353759014,0,0x0,8
tick,0x7ffdc994fb34,353774213,0,0x0,8
tick,0x7ffdc994fb34,353789874,0,0x0,8
tick,0x7ffdc994fb34,353805348,0,0x0,8
tick,0x7ffdc994fb34,353820932,0,0x0,8
tick,0x7ffdc994fb34,353836610,0,0x0,8
tick,0x7ffdc994fb34,353852259,0,0x0,8
tick,0x7ffdc994fb34,353867806,0,0x0,8
tick,0x7ffdc994fb34,353882858,0,0x0,8
tick,0x7ffdc994fb34,353898619,0,0x0,8
tick,0x7ffdc994fb34,353913939,0,0x0,8
tick,0x7ffdc994fb34,353929829,0,0x0,8
tick,0x7ffdc994fb34,353945641,0,0x0,8
tick,0x7ffdc994fb34,353960685,0,0x0,8
tick,0x7ffdc994fb34,353976490,0,0x0,8
tick,0x7ffdc994fb34,353991497,0,0x0,8
tick,0x7ffdc994fb34,354006331,0,0x0,8
tick,0x7ffdc994fb34,354021991,0,0x0,8
tick,0x7ffdc994fb34,354037442,0,0x0,8
tick,0x7ffdc994fb34,354053026,0,0x0,8
tick,0x7ffdc994fb34,354068461,0,0x0,8
tick,0x7ffdc994fb34,354084563,0,0x0,8
tick,0x7ffdc994fb34,354099929,0,0x0,8
tick,0x7ffdc994fb34,354115686,0,0x0,8
tick,0x7ffdc994fb34,354131236,0,0x0,8
tick,0x7ffdc994fb34,354146688,0,0x0,8
tick,0x7ffdc994fb34,354162084,0,0x0,8
tick,0x7ffdc994fb34,354177091,0,0x0,8
tick,0x7ffdc994fb34,354192904,0,0x0,8
tick,0x7ffdc994fb34,354208877,0,0x0,8
tick,0x7ffdc994fb34,354224186,0,0x0,8
tick,0x7ffdc994fb34,354239694,0,0x0,8
tick,0x7ffdc994fb34,354255060,0,0x0,8
tick,0x7ffdc994fb34,354270912,0,0x0,8
tick,0x7ffdc994fb34,354286722,0,0x0,8
tick,0x7ffdc994fb34,354302327,0,0x0,8
tick,0x7ffdc994fb34,354317244,0,0x0,8
tick,0x7ffdc994fb34,354333195,0,0x0,8
tick,0x7ffdc994fb34,354349827,0,0x0,8
tick,0x7ffdc994fb34,354364475,0,0x0,8
tick,0x7ffdc994fb34,354379924,0,0x0,8
tick,0x7ffdc994fb34,354395370,0,0x0,8
tick,0x7ffdc994fb34,354411190,0,0x0,8
tick,0x7ffdc994fb34,354426738,0,0x0,8
tick,0x7ffdc994fb34,354442210,0,0x0,8
tick,0x7ffdc994fb34,354457305,0,0x0,8
tick,0x7ffdc994fb34,354473288,0,0x0,8
tick,0x7ffdc994fb34,354488813,0,0x0,8
tick,0x7ffdc994fb34,354505032,0,0x0,8
tick,0x7ffdc994fb34,354520672,0,0x0,8
tick,0x7ffdc994fb34,354535725,0,0x0,8
tick,0x7ffdc994fb34,354551403,0,0x0,8
tick,0x7ffdc994fb34,354566907,0,0x0,8
tick,0x7ffdc994fb34,354582550,0,0x0,8
tick,0x7ffdc994fb34,354598443,0,0x0,8
tick,0x7ffdc994fb34,354613698,0,0x0,8
tick,0x7ffdc994fb34,354629829,0,0x0,8
tick,0x7ffdc994fb34,354645337,0,0x0,8
tick,0x7ffdc994fb34,354660555,0,0x0,8
tick,0x7ffdc994fb34,354676625,0,0x0,8
tick,0x7ffdc994fb34,354692089,0,0x0,8
tick,0x7ffdc994fb34,354707370,0,0x0,8
tick,0x7ffdc994fb34,354722928,0,0x0,8
tick,0x7ffdc994fb34,354738519,0,0x0,8
tick,0x7ffdc994fb34,354754630,0,0x0,8
tick,0x7ffdc994fb34,354770507,0,0x0,8
tick,0x7ffdc994fb34,354786240,0,0x0,8
tick,0x7ffdc994fb34,354801718,0,0x0,8
tick,0x7ffdc994fb34,354816877,0,0x0,8
tick,0x7ffdc994fb34,354832665,0,0x0,8
tick,0x7ffdc994fb34,354847912,0,0x0,8
tick,0x7ffdc994fb34,354863957,0,0x0,8
tick,0x7ffdc994fb34,354879631,0,0x0,8
tick,0x7ffdc994fb34,354894958,0,0x0,8
tick,0x7ffdc994fb34,354910102,0,0x0,8
tick,0x7ffdc994fb34,354925589,0,0x0,8
tick,0x7ffdc994fb34,354941645,0,0x0,8
tick,0x7ffdc994fb34,354956701,0,0x0,8
tick,0x7ffdc994fb34,354971949,0,0x0,8
tick,0x7ffdc994fb34,354987317,0,0x0,8
tick,0x7ffdc994fb34,355003512,0,0x0,8
tick,0x7ffdc994fb34,355019452,0,0x0,8
tick,0x7ffdc994fb34,355035519,0,0x0,8
tick,0x7ffdc994fb34,355050649,0,0x0,8
tick,0x7ffdc994fb34,355066800,0,0x0,8
tick,0x7ffdc994fb34,355082772,0,0x0,8
tick,0x7ffdc994fb34,355097790,0,0x0,8
tick,0x7ffdc994fb34,355113123,0,0x0,8
tick,0x7ffdc994fb34,355128684,0,0x0,8
tick,0x7ffdc994fb34,355144039,0,0x0,8
tick,0x7ffdc994fb34,355160167,0,0x0,8
tick,0x7ffdc994fb34,355174995,0,0x0,8
tick,0x7ffdc994fb34,355190602,0,0x0,8
tick,0x7ffdc994fb34,355206603,0,0x0,8
tick,0x7ffdc994fb34,355221849,0,0x0,8
tick,0x7ffdc994fb34,355236893,0,0x0,8
tick,0x7ffdc994fb34,355253192,0,0x0,8
tick,0x7ffdc994fb34,355267894,0,0x0,8
tick,0x7ffdc994fb34,355283103,0,0x0,8
tick,0x7ffdc994fb34,355299237,0,0x0,8
tick,0x7ffdc994fb34,355314535,0,0x0,8
tick,0x7ffdc994fb34,355330042,0,0x0,8
tick,0x7ffdc994fb34,355346182,0,0x0,8
tick,0x7ffdc994fb34,355361633,0,0x0,8
tick,0x7ffdc994fb34,355377304,0,0x0,8
tick,0x7ffdc994fb34,355392834,0,0x0,8
tick,0x7ffdc994fb34,355408277,0,0x0,8
tick,0x7ffdc994fb34,355423759,0,0x0,8
tick,0x7ffdc994fb34,355440040,0,0x0,8
tick,0x7ffdc994fb34,355455236,0,0x0,8
tick,0x7ffdc994fb34,355470535,0,0x0,8
tick,0x7ffdc994fb34,355485719,0,0x0,8
tick,0x7ffdc994fb34,355501380,0,0x0,8
tick,0x7ffdc994fb34,355517135,0,0x0,8
tick,0x7ffdc994fb34,355532542,0,0x0,8
tick,0x7ffdc994fb34,355548623,0,0x0,8
tick,0x7ffdc994fb34,355564630,0,0x0,8
tick,0x7ffdc994fb34,355580167,0,0x0,8
tick,0x7ffdc994fb34,355595216,0,0x0,8
tick,0x7ffdc994fb34,355611308,0,0x0,8
tick,0x7ffdc994fb34,355626581,0,0x0,8
tick,0x7ffdc994fb34,355641703,0,0x0,8
tick,0x7ffdc994fb34,355656835,0,0x0,8
tick,0x7ffdc994fb34,355672485,0,0x0,8
tick,0x7ffdc994fb34,355687992,0,0x0,8
tick,0x7ffdc994fb34,355704137,0,0x0,8
tick,0x7ffdc994fb34,355719258,0,0x0,8
tick,0x7ffdc994fb34,355735017,0,0x0,8
tick,0x7ffdc994fb34,355749936,0,0x0,8
tick,0x7ffdc994fb34,355765808,0,0x0,8
tick,0x7ffdc994fb34,355781438,0,0x0,8
tick,0x7ffdc994fb34,355797460,0,0x0,8
tick,0x7ffdc994fb34,355813003,0,0x0,8
tick,0x7ffdc994fb34,355828150,0,0x0,8
tick,0x7ffdc994fb34,355843693,0,0x0,8
tick,0x7ffdc994fb34,355858752,0,0x0,8
tick,0x7ffdc994fb34,355874053,0,0x0,8
tick,0x7ffdc994fb34,355889585,0,0x0,8
tick,0x7ffdc994fb34,355905280,0,0x0,8
tick,0x7ffdc994fb34,355920967,0,0x0,8
tick,0x7ffdc994fb34,355936261,0,0x0,8
tick,0x7ffdc994fb34,355952305,0,0x0,8
tick,0x7ffdc994fb34,355968247,0,0x0,8
tick,0x7ffdc994fb34,355983992,0,0x0,8
tick,0x7ffdc994fb34,355999414,0,0x0,8
tick,0x7ffdc994fb34,356014618,0,0x0,8
tick,0x7ffdc994fb34,356030558,0,0x0,8
tick,0x7ffdc994fb34,356046609,0,0x0,8
tick,0x7ffdc994fb34,356062314,0,0x0,8
tick,0x7ffdc994fb34,356077935,0,0x0,8
tick,0x7ffdc994fb34,356093400,0,0x0,8
tick,0x7ffdc994fb34,356109049,0,0x0,8
tick,0x7ffdc994fb34,356125101,0,0x0,8
tick,0x7ffdc994fb34,356141219,0,0x0,8
tick,0x7ffdc994fb34,356157099,0,0x0,8
tick,0x7ffdc994fb34,356173068,0,0x0,8
tick,0x7ffdc994fb34,356188294,0,0x0,8
tick,0x7ffdc994fb34,356203519,0,0x0,8
tick,0x7ffdc994fb34,356219150,0,0x0,8
tick,0x7ffdc994fb34,356234790,0,0x0,8
tick,0x7ffdc994fb34,356250194,0,0x0,8
tick,0x7ffdc994fb34,356265806,0,0x0,8
tick,0x7ffdc994fb34,356281859,0,0x0,8
tick,0x7ffdc994fb34,356296967,0,0x0,8
tick,0x7ffdc994fb34,356313011,0,0x0,8
tick,0x7ffdc994fb34,356328394,0,0x0,8
tick,0x7ffdc994fb34,356344534,0,0x0,8
tick,0x7ffdc994fb34,356360667,0,0x0,8
tick,0x7ffdc994fb34,356376051,0,0x0,8
tick,0x7ffdc994fb34,356391379,0,0x0,8
tick,0x7ffdc994fb34,356406550,0,0x0,8
tick,0x7ffdc994fb34,356421919,0,0x0,8
tick,0x7ffdc994fb34,356437759,0,0x0,8
tick,0x7ffdc994fb34,356453759,0,0x0,8
tick,0x7ffdc994fb34,356469467,0,0x0,8
tick,0x7ffdc994fb34,356485028,0,0x0,8
tick,0x7ffdc994fb34,356500389,0,0x0,8
tick,0x7ffdc994fb34,356516266,0,0x0,8
tick,0x7ffdc994fb34,356531635,0,0x0,8
tick,0x7ffdc994fb34,356547260,0,0x0,8
tick,0x7ffdc994fb34,356562662,0,0x0,8
tick,0x7ffdc994fb34,356577898,0,0x0,8
tick,0x7ffdc994fb34,356593418,0,0x0,8
tick,0x7ffdc994fb34,356608961,0,0x0,8
tick,0x7ffdc994fb34,356624605,0,0x0,8
tick,0x7ffdc994fb34,356639873,0,0x0,8
tick,0x7ffdc994fb34,356655551,0,0x0,8
tick,0x7ffdc994fb34,356671006,0,0x0,8
tick,0x7ffdc994fb34,356686716,0,0x0,8
tick,0x7ffdc994fb34,356702830,0,0x0,8
tick,0x7ffdc994fb34,356718815,0,0x0,8
tick,0x7ffdc994fb34,356733738,0,0x0,8
tick,0x7ffdc994fb34,356749389,0,0x0,8
tick,0x7ffdc994fb34,356764636,0,0x0,8
tick,0x7ffdc994fb34,356780110,0,0x0,8
tick,0x7ffdc994fb34,356795660,0,0x0,8
tick,0x7ffdc994fb34,356811483,0,0x0,8
tick,0x7ffdc994fb34,356827290,0,0x0,8
tick,0x7ffdc994fb34,356842763,0,0x0,8
tick,0x7ffdc994fb34,356858863,0,0x0,8
tick,0x7ffdc994fb34,356874133,0,0x0,8
tick,0x7ffdc994fb34,356889605,0,0x0,8
tick,0x7ffdc994fb34,356904852,0,0x0,8
tick,0x7ffdc994fb34,356920497,0,0x0,8
tick,0x7ffdc994fb34,356936663,0,0x0,8
tick,0x7ffdc994fb34,356952207,0,0x0,8
tick,0x7ffdc994fb34,356967480,0,0x0,8
tick,0x7ffdc994fb34,356982883,0,0x0,8
tick,0x7ffdc994fb34,356998463,0,0x0,8
tick,0x7ffdc994fb34,357013989,0,0x0,8
tick,0x7ffdc994fb34,357030199,0,0x0,8
tick,0x7ffdc994fb34,357045457,0,0x0,8
tick,0x7ffdc994fb34,357060782,0,0x0,8
tick,0x7ffdc994fb34,357076099,0,0x0,8
tick,0x7ffdc994fb34,357091821,0,0x0,8
tick,0x7ffdc994fb34,357107217,0,0x0,8
tick,0x7ffdc994fb34,357123277,0,0x0,8
tick,0x7ffdc994fb34,357138487,0,0x0,8
tick,0x7ffdc994fb34,357154098,0,0x0,8
tick,0x7ffdc994fb34,357169493,0,0x0,8
tick,0x7ffdc994fb34,357184832,0,0x0,8
tick,0x7ffdc994fb34,357200682,0,0x0,8
tick,0x7ffdc994fb34,357215928,0,0x0,8
tick,0x7ffdc994fb34,357231835,0,0x0,8
tick,0x7ffdc994fb34,357247291,0,0x0,8
tick,0x7ffdc994fb34,357262745,0,0x0,8
tick,0x7ffdc994fb34,357278177,0,0x0,8
tick,0x7ffdc994fb34,357293704,0,0x0,8
tick,0x7ffdc994fb34,357309423,0,0x0,8
tick,0x7ffdc994fb34,357325426,0,0x0,8
tick,0x7ffdc994fb34,357341081,0,0x0,8
tick,0x7ffdc994fb34,357356296,0,0x0,8
tick,0x7ffdc994fb34,357372654,0,0x0,8
tick,0x7ffdc994fb34,357388205,0,0x0,8
tick,0x7ffdc994fb34,357403473,0,0x0,8
tick,0x7ffdc994fb34,357418963,0,0x0,8
tick,0x7ffdc994fb34,357434869,0,0x0,8
tick,0x7ffdc994fb34,357450349,0,0x0,8
tick,0x7ffdc994fb34,357466078,0,0x0,8
tick,0x7ffdc994fb34,357481361,0,0x0,8
tick,0x7ffdc994fb34,357496886,0,0x0,8
tick,0x7ffdc994fb34,357512492,0,0x0,8
tick,0x7ffdc994fb34,357528198,0,0x0,8
tick,0x7ffdc994fb34,357543535,0,0x0,8
tick,0x7ffdc994fb34,357559242,0,0x0,8
tick,0x7ffdc994fb34,357574559,0,0x0,8
tick,0x7ffdc994fb34,357589914,0,0x0,8
tick,0x7ffdc994fb34,357605676,0,0x0,8
tick,0x7ffdc994fb34,357621323,0,0x0,8
tick,0x7ffdc994fb34,357636570,0,0x0,8
tick,0x7ffdc994fb34,357651844,0,0x0,8
tick,0x7ffdc994fb34,357667769,0,0x0,8
tick,0x7ffdc994fb34,357683263,0,0x0,8
tick,0x7ffdc994fb34,357698844,0,0x0,8
tick,0x7ffdc994fb34,357714259,0,0x0,8
tick,0x7ffdc994fb34,357730246,0,0x0,8
tick,0x7ffdc994fb34,357745878,0,0x0,8
tick,0x7ffdc994fb34,357761852,0,0x0,8
tick,0x7ffdc994fb34,357777723,0,0x0,8
tick,0x7ffdc994fb34,357793738,0,0x0,8
tick,0x7ffdc994fb34,357809685,0,0x0,8
tick,0x7ffdc994fb34,357825480,0,0x0,8
tick,0x7ffdc994fb34,357841440,0,0x0,8
tick,0x7ffdc994fb34,357856878,0,0x0,8
tick,0x7ffdc994fb34,357872394,0,0x0,8
tick,0x7ffdc994fb34,357887506,0,0x0,8
tick,0x7ffdc994fb34,357902980,0,0x0,8
tick,0x7ffdc994fb34,357918831,0,0x0,8
tick,0x7ffdc994fb34,357933608,0,0x0,8
tick,0x7ffdc994fb34,357949390,0,0x0,8
tick,0x7ffdc994fb34,357965509,0,0x0,8
tick,0x7ffdc994fb34,357980903,0,0x0,8
tick,0x7ffdc994fb34,357996673,0,0x0,8
tick,0x7ffdc994fb34,358012335,0,0x0,8
tick,0x7ffdc994fb34,358027459,0,0x0,8
tick,0x7ffdc994fb34,358042921,0,0x0,8
tick,0x7ffdc994fb34,358057919,0,0x0,8
tick,0x7ffdc994fb34,358072854,0,0x0,8
tick,0x7ffdc994fb34,358089289,0,0x0,8
tick,0x7ffdc994fb34,358108965,0,0x0,8
tick,0x7ffdc994fb34,358122832,0,0x0,8
tick,0x7ffdc994fb34,358135939,0,0x0,8
tick,0x7ffdc994fb34,358151991,0,0x0,8
tick,0x7ffdc994fb34,358167484,0,0x0,8
tick,0x7ffdc994fb34,358182980,0,0x0,8
tick,0x7ffdc994fb34,358199018,0,0x0,8
tick,0x7ffdc994fb34,358214997,0,0x0,8
tick,0x7ffdc994fb34,358231162,0,0x0,8
tick,0x7ffdc994fb34,358246982,0,0x0,8
tick,0x7ffdc994fb34,358263258,0,0x0,8
tick,0x7ffdc994fb34,358278981,0,0x0,8
tick,0x7ffdc994fb34,358294339,0,0x0,8
tick,0x7ffdc994fb34,358310278,0,0x0,8
tick,0x7ffdc994fb34,358325172,0,0x0,8
tick,0x7ffdc994fb34,358341277,0,0x0,8
tick,0x7ffdc994fb34,358356640,0,0x0,8
tick,0x7ffdc994fb34,358372165,0,0x0,8
tick,0x7ffdc994fb34,358387153,0,0x0,8
tick,0x7ffdc994fb34,358402940,0,0x0,8
tick,0x7ffdc994fb34,358418432,0,0x0,8
tick,0x7ffdc994fb34,358433810,0,0x0,8
tick,0x7ffdc994fb34,358449527,0,0x0,8
tick,0x7ffdc994fb34,358464688,0,0x0,8
tick,0x7ffdc994fb34,358480493,0,0x0,8
tick,0x7ffdc994fb34,358496437,0,0x0,8
tick,0x7ffdc994fb34,358512474,0,0x0,8
tick,0x7ffdc994fb34,358527950,0,0x0,8
tick,0x7ffdc994fb34,358543216,0,0x0,8
tick,0x7ffdc994fb34,358558844,0,0x0,8
tick,0x7ffdc994fb34,358574114,0,0x0,8
tick,0x7ffdc994fb34,358590329,0,0x0,8
tick,0x7ffdc994fb34,358606124,0,0x0,8
tick,0x7ffdc994fb34,358621566,0,0x0,8
tick,0x7ffdc994fb34,358637542,0,0x0,8
tick,0x7ffdc994fb34,358653002,0,0x0,8
tick,0x7ffdc994fb34,358668632,0,0x0,8
tick,0x7ffdc994fb34,358683666,0,0x0,8
tick,0x7ffdc994fb34,358699601,0,0x0,8
tick,0x7ffdc994fb34,358714874,0,0x0,8
tick,0x7ffdc994fb34,358730500,0,0x0,8
tick,0x7ffdc994fb34,358745985,0,0x0,8
tick,0x7ffdc994fb34,358761247,0,0x0,8
tick,0x7ffdc994fb34,358777110,0,0x0,8
tick,0x7ffdc994fb34,358793291,0,0x0,8
tick,0x7ffdc994fb34,358808624,0,0x0,8
tick,0x7ffdc994fb34,358823496,0,0x0,8
tick,0x7ffdc994fb34,358838838,0,0x0,8
tick,0x7ffdc994fb34,358854741,0,0x0,8
tick,0x7ffdc994fb34,358870381,0,0x0,8
tick,0x7ffdc994fb34,358885847,0,0x0,8
tick,0x7ffdc994fb34,358901198,0,0x0,8
tick,0x7ffdc994fb34,358916873,0,0x0,8
tick,0x7ffdc994fb34,358932326,0,0x0,8
tick,0x7ffdc994fb34,358948213,0,0x0,8
tick,0x7ffdc994fb34,358962986,0,0x0,8
tick,0x7ffdc994fb34,358978688,0,0x0,8
tick,0x7ffdc994fb34,358994507,0,0x0,8
tick,0x7ffdc994fb34,359009882,0,0x0,8
tick,0x7ffdc994fb34,359025609,0,0x0,8
tick,0x7ffdc994fb34,359041434,0,0x0,8
tick,0x7ffdc994fb34,359056418,0,0x0,8
tick,0x7ffdc994fb34,359071941,0,0x0,8
tick,0x7ffdc994fb34,359087387,0,0x0,8
tick,0x7ffdc994fb34,359103720,0,0x0,8
tick,0x7ffdc994fb34,359119660,0,0x0,8
tick,0x7ffdc994fb34,359135048,0,0x0,8
tick,0x7ffdc994fb34,359150576,0,0x0,8
tick,0x7ffdc994fb34,359165929,0,0x0,8
tick,0x7ffdc994fb34,359181537,0,0x0,8
tick,0x7ffdc994fb34,359197520,0,0x0,8
tick,0x7ffdc994fb34,359213099,0,0x0,8
tick,0x7ffdc994fb34,359228337,0,0x0,8
tick,0x7ffdc994fb34,359244030,0,0x0,8
tick,0x7ffdc994fb34,359259474,0,0x0,8
tick,0x7ffdc994fb34,359274836,0,0x0,8
tick,0x7ffdc994fb34,359290698,0,0x0,8
tick,0x7ffdc994fb34,359306127,0,0x0,8
tick,0x7ffdc994fb34,359321682,0,0x0,8
tick,0x7ffdc994fb34,359337583,0,0x0,8
tick,0x7ffdc994fb34,359352801,0,0x0,8
tick,0x7ffdc994fb34,359368527,0,0x0,8
tick,0x7ffdc994fb34,359383694,0,0x0,8
tick,0x7ffdc994fb34,359399511,0,0x0,8
tick,0x7ffdc994fb34,359415098,0,0x0,8
tick,0x7ffdc994fb34,359430960,0,0x0,8
tick,0x7ffdc994fb34,359446117,0,0x0,8
tick,0x7ffdc994fb34,359461750,0,0x0,8
tick,0x7ffdc994fb34,359476910,0,0x0,8
tick,0x7ffdc994fb34,359492667,0,0x0,8
tick,0x7ffdc994fb34,359508246,0,0x0,8
tick,0x7ffdc994fb34,359523409,0,0x0,8
tick,0x7ffdc994fb34,359538998,0,0x0,8
tick,0x7ffdc994fb34,359554263,0,0x0,8
tick,0x7ffdc994fb34,359569812,0,0x0,8
tick,0x7ffdc994fb34,359584918,0,0x0,8
tick,0x7ffdc994fb34,359600760,0,0x0,8
tick,0x7ffdc994fb34,359616535,0,0x0,8
tick,0x7ffdc994fb34,359632256,0,0x0,8
tick,0x7ffdc994fb34,359647641,0,0x0,8
tick,0x7ffdc994fb34,359662864,0,0x0,8
tick,0x7ffdc994fb34,359678536,0,0x0,8
tick,0x7ffdc994fb34,359693470,0,0x0,8
tick,0x7ffdc994fb34,359709198,0,0x0,8
tick,0x7ffdc994fb34,359724754,0,0x0,8
tick,0x7ffdc994fb34,359740565,0,0x0,8
tick,0x7ffdc994fb34,359756220,0,0x0,8
tick,0x7ffdc994fb34,359771426,0,0x0,8
tick,0x7ffdc994fb34,359786636,0,0x0,8
tick,0x7ffdc994fb34,359802236,0,0x0,8
tick,0x7ffdc994fb34,359818305,0,0x0,8
tick,0x7ffdc994fb34,359833537,0,0x0,8
tick,0x7ffdc994fb34,359849181,0,0x0,8
tick,0x7ffdc994fb34,359865063,0,0x0,8
tick,0x7ffdc994fb34,359880685,0,0x0,8
tick,0x7ffdc994fb34,359896749,0,0x0,8
tick,0x7ffdc994fb34,359912005,0,0x0,8
tick,0x7ffdc994fb34,359928321,0,0x0,8
tick,0x7ffdc994fb34,359943139,0,0x0,8
tick,0x7ffdc994fb34,359958966,0,0x0,8
tick,0x7ffdc994fb34,359974196,0,0x0,8
tick,0x7ffdc994fb34,359990175,0,0x0,8
tick,0x7ffdc994fb34,360005445,0,0x0,8
tick,0x7ffdc994fb34,360020926,0,0x0,8
tick,0x7ffdc994fb34,360036271,0,0x0,8
tick,0x7ffdc994fb34,360052079,0,0x0,8
tick,0x7ffdc994fb34,360068187,0,0x0,8
tick,0x7ffdc994fb34,360083469,0,0x0,8
tick,0x7ffdc994fb34,360098861,0,0x0,8
tick,0x7ffdc994fb34,360114037,0,0x0,8
tick,0x7ffdc994fb34,360130326,0,0x0,8
tick,0x7ffdc994fb34,360145579,0,0x0,8
tick,0x7ffdc994fb34,360161404,0,0x0,8
tick,0x7ffdc994fb34,360177025,0,0x0,8
tick,0x7ffdc994fb34,360192795,0,0x0,8
tick,0x7ffdc994fb34,360208089,0,0x0,8
tick,0x7ffdc994fb34,360223702,0,0x0,8
tick,0x7ffdc994fb34,360239644,0,0x0,8
tick,0x7ffdc994fb34,360254838,0,0x0,8
tick,0x7ffdc994fb34,360270181,0,0x0,8
tick,0x7ffdc994fb34,360285277,0,0x0,8
tick,0x7ffdc994fb34,360300990,0,0x0,8
tick,0x7ffdc994fb34,360316454,0,0x0,8
tick,0x7ffdc994fb34,360331623,0,0x0,8
tick,0x7ffdc994fb34,360346979,0,0x0,8
tick,0x7ffdc994fb34,360363007,0,0x0,8
tick,0x7ffdc994fb34,360378441,0,0x0,8
tick,0x7ffdc994fb34,360394244,0,0x0,8
tick,0x7ffdc994fb34,360410329,0,0x0,8
tick,0x7ffdc994fb34,360425688,0,0x0,8
tick,0x7ffdc994fb34,360441391,0,0x0,8
tick,0x7ffdc994fb34,360457192,0,0x0,8
tick,0x7ffdc994fb34,360472762,0,0x0,8
tick,0x7ffdc994fb34,360488044,0,0x0,8
tick,0x7ffdc994fb34,360503450,0,0x0,8
tick,0x7ffdc994fb34,360519161,0,0x0,8
tick,0x7ffdc994fb34,360534356,0,0x0,8
tick,0x7ffdc994fb34,360550069,0,0x0,8
tick,0x7ffdc994fb34,360565918,0,0x0,8
tick,0x7ffdc994fb34,360582080,0,0x0,8
tick,0x7ffdc994fb34,360597675,0,0x0,8
tick,0x7ffdc994fb34,360613307,0,0x0,8
tick,0x7ffdc994fb34,360629229,0,0x0,8
tick,0x7ffdc994fb34,360644548,0,0x0,8
tick,0x7ffdc994fb34,360660097,0,0x0,8
tick,0x7ffdc994fb34,360675586,0,0x0,8
tick,0x7ffdc994fb34,360690806,0,0x0,8
tick,0x7ffdc994fb34,360707106,0,0x0,8
tick,0x7ffdc994fb34,360721924,0,0x0,8
tick,0x7ffdc994fb34,360737688,0,0x0,8
tick,0x7ffdc994fb34,360752981,0,0x0,8
tick,0x7ffdc994fb34,360768551,0,0x0,8
tick,0x7ffdc994fb34,360783593,0,0x0,8
tick,0x7ffdc994fb34,360799764,0,0x0,8
tick,0x7ffdc994fb34,360815460,0,0x0,8
tick,0x7ffdc994fb34,360831983,0,0x0,8
tick,0x7ffdc994fb34,360846936,0,0x0,8
tick,0x7ffdc994fb34,360862972,0,0x0,8
tick,0x7ffdc994fb34,360877950,0,0x0,8
tick,0x7ffdc994fb34,360893645,0,0x0,8
tick,0x7ffdc994fb34,360908942,0,0x0,8
tick,0x7ffdc994fb34,360924935,0,0x0,8
tick,0x7ffdc994fb34,360941010,0,0x0,8
tick,0x7ffdc994fb34,360956579,0,0x0,8
tick,0x7ffdc994fb34,360971479,0,0x0,8
tick,0x7ffdc994fb34,360986766,0,0x0,8
tick,0x7ffdc994fb34,361002232,0,0x0,8
tick,0x7ffdc994fb34,361017694,0,0x0,8
tick,0x7ffdc994fb34,361033063,0,0x0,8
tick,0x7ffdc994fb34,361048360,0,0x0,8
tick,0x7ffdc994fb34,361063782,0,0x0,8
tick,0x7ffdc994fb34,361079192,0,0x0,8
tick,0x7ffdc994fb34,361094401,0,0x0,8
tick,0x7ffdc994fb34,361109407,0,0x0,8
tick,0x7ffdc994fb34,361124833,0,0x0,8
tick,0x7ffdc994fb34,361139804,0,0x0,8
tick,0x7ffdc994fb34,361155124,0,0x0,8
tick,0x7ffdc994fb34,361171202,0,0x0,8
tick,0x7ffdc994fb34,361186615,0,0x0,8
tick,0x7ffdc994fb34,361202314,0,0x0,8
tick,0x7ffdc994fb34,361217857,0,0x0,8
tick,0x7ffdc994fb34,361233578,0,0x0,8
tick,0x7ffdc994fb34,361249956,0,0x0,8
tick,0x7ffdc994fb34,361264900,0,0x0,8
tick,0x7ffdc994fb34,361280727,0,0x0,8
tick,0x7ffdc994fb34,361296553,0,0x0,8
tick,0x7ffdc994fb34,361311716,0,0x0,8
tick,0x7ffdc994fb34,361327930,0,0x0,8
tick,0x7ffdc994fb34,361343115,0,0x0,8
tick,0x7ffdc994fb34,361359042,0,0x0,8
tick,0x7ffdc994fb34,361374634,0,0x0,8
tick,0x7ffdc994fb34,361390177,0,0x0,8
tick,0x7ffdc994fb34,361405389,0,0x0,8
tick,0x7ffdc994fb34,361420781,0,0x0,8
tick,0x7ffdc994fb34,361436608,0,0x0,8
tick,0x7ffdc994fb34,361452613,0,0x0,8
tick,0x7ffdc994fb34,361467642,0,0x0,8
tick,0x7ffdc994fb34,361483528,0,0x0,8
tick,0x7ffdc994fb34,361498885,0,0x0,8
tick,0x7ffdc994fb34,361514532,0,0x0,8
tick,0x7ffdc994fb34,361529968,0,0x0,8
tick,0x7ffdc994fb34,361545973,0,0x0,8
tick,0x7ffdc994fb34,361561008,0,0x0,8
tick,0x7ffdc994fb34,361576627,0,0x0,8
tick,0x7ffdc994fb34,361591828,0,0x0,8
tick,0x7ffdc994fb34,361607211,0,0x0,8
tick,0x7ffdc994fb34,361622870,0,0x0,8
tick,0x7ffdc994fb34,361637736,0,0x0,8
tick,0x7ffdc994fb34,361653047,0,0x0,8
tick,0x7ffdc994fb34,361668340,0,0x0,8
tick,0x7ffdc994fb34,361684386,0,0x0,8
tick,0x7ffdc994fb34,361700109,0,0x0,8
tick,0x7ffdc994fb34,361715854,0,0x0,8
tick,0x7ffdc994fb34,361731319,0,0x0,8
tick,0x7ffdc994fb34,361747234,0,0x0,8
tick,0x7ffdc994fb34,361763199,0,0x0,8
tick,0x7ffdc994fb34,361779151,0,0x0,8
tick,0x7ffdc994fb34,361795529,0,0x0,8
tick,0x7ffdc994fb34,361810401,0,0x0,8
tick,0x7ffdc994fb34,361826127,0,0x0,8
tick,0x7ffdc994fb34,361841423,0,0x0,8
tick,0x7ffdc994fb34,361856991,0,0x0,8
tick,0x7ffdc994fb34,361873047,0,0x0,8
tick,0x7ffdc994fb34,361888576,0,0x0,8
tick,0x7ffdc994fb34,361903756,0,0x0,8
tick,0x7ffdc994fb34,361919527,0,0x0,8
tick,0x7ffdc994fb34,361935288,0,0x0,8
tick,0x7ffdc994fb34,361951008,0,0x0,8
tick,0x7ffdc994fb34,361966602,0,0x0,8
tick,0x7ffdc994fb34,361982155,0,0x0,8
tick,0x7ffdc994fb34,361997477,0,0x0,8
tick,0x7ffdc994fb34,362012906,0,0x0,8
tick,0x7ffdc994fb34,362028745,0,0x0,8
tick,0x7ffdc994fb34,362044073,0,0x0,8
tick,0x7ffdc994fb34,362059522,0,0x0,8
tick,0x7ffdc994fb34,362075110,0,0x0,8
tick,0x7ffdc994fb34,362090411,0,0x0,8
tick,0x7ffdc994fb34,362105959,0,0x0,8
tick,0x7ffdc994fb34,362121352,0,0x0,8
tick,0x7ffdc994fb34,362136737,0,0x0,8
tick,0x7ffdc994fb34,362152366,0,0x0,8
tick,0x7ffdc994fb34,362168234,0,0x0,8
tick,0x7ffdc994fb34,362183553,0,0x0,8
tick,0x7ffdc994fb34,362199182,0,0x0,8
tick,0x7ffdc994fb34,362214528,0,0x0,8
tick,0x7ffdc994fb34,362229846,0,0x0,8
tick,0x7ffdc994fb34,362245719,0,0x0,8
tick,0x7ffdc994fb34,362261275,0,0x0,8
tick,0x7ffdc994fb34,362276658,0,0x0,8
tick,0x7ffdc994fb34,362292357,0,0x0,8
tick,0x7ffdc994fb34,362307783,0,0x0,8
tick,0x7ffdc994fb34,362323504,0,0x0,8
tick,0x7ffdc994fb34,362339419,0,0x0,8
tick,0x7ffdc994fb34,362354526,0,0x0,8
tick,0x7ffdc994fb34,362370166,0,0x0,8
tick,0x7ffdc994fb34,362385564,0,0x0,8
tick,0x7ffdc994fb34,362401372,0,0x0,8
tick,0x7ffdc994fb34,362416685,0,0x0,8
tick,0x7ffdc994fb34,362432529,0,0x0,8
tick,0x7ffdc994fb34,362448022,0,0x0,8
tick,0x7ffdc994fb34,362463680,0,0x0,8
tick,0x7ffdc994fb34,362479319,0,0x0,8
tick,0x7ffdc994fb34,362494662,0,0x0,8
tick,0x7ffdc994fb34,362509928,0,0x0,8
tick,0x7ffdc994fb34,362525415,0,0x0,8
tick,0x7ffdc994fb34,362540530,0,0x0,8
tick,0x7ffdc994fb34,362556439,0,0x0,8
tick,0x7ffdc994fb34,362571057,0,0x0,8
tick,0x7ffdc994fb34,362586719,0,0x0,8
tick,0x7ffdc994fb34,362602237,0,0x0,8
tick,0x7ffdc994fb34,362617643,0,0x0,8
tick,0x7ffdc994fb34,362633289,0,0x0,8
tick,0x7ffdc994fb34,362648867,0,0x0,8
tick,0x7ffdc994fb34,362663988,0,0x0,8
tick,0x7ffdc994fb34,362679627,0,0x0,8
tick,0x7ffdc994fb34,362694714,0,0x0,8
tick,0x7ffdc994fb34,362710332,0,0x0,8
tick,0x7ffdc994fb34,362726769,0,0x0,8
tick,0x7ffdc994fb34,362742233,0,0x0,8
tick,0x7ffdc994fb34,362757531,0,0x0,8
tick,0x7ffdc994fb34,362772672,0,0x0,8
tick,0x7ffdc994fb34,362788376,0,0x0,8
tick,0x7ffdc994fb34,362803841,0,0x0,8
tick,0x7ffdc994fb34,362819258,0,0x0,8
tick,0x7ffdc994fb34,362834644,0,0x0,8
tick,0x7ffdc994fb34,362850188,0,0x0,8
tick,0x7ffdc994fb34,362865363,0,0x0,8
tick,0x7ffdc994fb34,362881676,0,0x0,8
tick,0x7ffdc994fb34,362897211,0,0x0,8
tick,0x7ffdc994fb34,362913714,0,0x0,8
tick,0x7ffdc994fb34,362929419,0,0x0,8
tick,0x7ffdc994fb34,362944837,0,0x0,8
tick,0x7ffdc994fb34,362960429,0,0x0,8
tick,0x7ffdc994fb34,362975944,0,0x0,8
tick,0x7ffdc994fb34,362992212,0,0x0,8
tick,0x7ffdc994fb34,363008052,0,0x0,8
tick,0x7ffdc994fb34,363023704,0,0x0,8
tick,0x7ffdc994fb34,363039611,0,0x0,8
tick,0x7ffdc994fb34,363054725,0,0x0,8
tick,0x7ffdc994fb34,363070194,0,0x0,8
tick,0x7ffdc994fb34,363085348,0,0x0,8
tick,0x7ffdc994fb34,363100892,0,0x0,8
tick,0x7ffdc994fb34,363116678,0,0x0,8
tick,0x7ffdc994fb34,363132809,0,0x0,8
tick,0x7ffdc994fb34,363148007,0,0x0,8
tick,0x7ffdc994fb34,363163695,0,0x0,8
tick,0x7ffdc994fb34,363179443,0,0x0,8
tick,0x7ffdc994fb34,363194347,0,0x0,8
tick,0x7ffdc994fb34,363210099,0,0x0,8
tick,0x7ffdc994fb34,363225513,0,0x0,8
tick,0x7ffdc994fb34,363240963,0,0x0,8
tick,0x7ffdc994fb34,363256654,0,0x0,8
tick,0x7ffdc994fb34,363272098,0,0x0,8
tick,0x7ffdc994fb34,363287376,0,0x0,8
tick,0x7ffdc994fb34,363303043,0,0x0,8
tick,0x7ffdc994fb34,363318792,0,0x0,8
tick,0x7ffdc994fb34,363334148,0,0x0,8
tick,0x7ffdc994fb34,363349954,0,0x0,8
tick,0x7ffdc994fb34,363365271,0,0x0,8
tick,0x7ffdc994fb34,363380103,0,0x0,8
tick,0x7ffdc994fb34,363396305,0,0x0,8
tick,0x7ffdc994fb34,363411927,0,0x0,8
tick,0x7ffdc994fb34,363427112,0,0x0,8
tick,0x7ffdc994fb34,363442981,0,0x0,8
tick,0x7ffdc994fb34,363458222,0,0x0,8
tick,0x7ffdc994fb34,363473321,0,0x0,8
tick,0x7ffdc994fb34,363488757,0,0x0,8
tick,0x7ffdc994fb34,363504443,0,0x0,8
tick,0x7ffdc994fb34,363519809,0,0x0,8
tick,0x7ffdc994fb34,363535282,0,0x0,8
tick,0x7ffdc994fb34,363550476,0,0x0,8
tick,0x7ffdc994fb34,363565938,0,0x0,8
tick,0x7ffdc994fb34,363581062,0,0x0,8
tick,0x7ffdc994fb34,363596724,0,0x0,8
tick,0x7ffdc994fb34,363612054,0,0x0,8
tick,0x7ffdc994fb34,363627927,0,0x0,8
tick,0x7ffdc994fb34,363643478,0,0x0,8
tick,0x7ffdc994fb34,363659319,0,0x0,8
tick,0x7ffdc994fb34,363675039,0,0x0,8
tick,0x7ffdc994fb34,363690986,0,0x0,8
tick,0x7ffdc994fb34,363706219,0,0x0,8
tick,0x7ffdc994fb34,363722054,0,0x0,8
tick,0x7ffdc994fb34,363737371,0,0x0,8
tick,0x7ffdc994fb34,363752749,0,0x0,8
tick,0x7ffdc994fb34,363768644,0,0x0,8
tick,0x7ffdc994fb34,363783759,0,0x0,8
tick,0x7ffdc994fb34,363799531,0,0x0,8
tick,0x7ffdc994fb34,363814645,0,0x0,8
tick,0x7ffdc994fb34,363830357,0,0x0,8
tick,0x7ffdc994fb34,363846035,0,0x0,8
tick,0x7ffdc994fb34,363861300,0,0x0,8
tick,0x7ffdc994fb34,363876861,0,0x0,8
tick,0x7ffdc994fb34,363892007,0,0x0,8
tick,0x7ffdc994fb34,363908421,0,0x0,8
tick,0x7ffdc994fb34,363923651,0,0x0,8
tick,0x7ffdc994fb34,363939447,0,0x0,8
tick,0x7ffdc994fb34,363954573,0,0x0,8
tick,0x7ffdc994fb34,363970561,0,0x0,8
tick,0x7ffdc994fb34,363985887,0,0x0,8
tick,0x7ffdc994fb34,364001613,0,0x0,8
tick,0x7ffdc994fb34,364016990,0,0x0,8
tick,0x7ffdc994fb34,364032966,0,0x0,8
tick,0x7ffdc994fb34,364048110,0,0x0,8
tick,0x7ffdc994fb34,364064113,0,0x0,8
tick,0x7ffdc994fb34,364079832,0,0x0,8
tick,0x7ffdc994fb34,364095111,0,0x0,8
tick,0x7ffdc994fb34,364110997,0,0x0,8
tick,0x7ffdc994fb34,364126008,0,0x0,8
tick,0x7ffdc994fb34,364142412,0,0x0,8
tick,0x7ffdc994fb34,364157490,0,0x0,8
tick,0x7ffdc994fb34,364173696,0,0x0,8
tick,0x7ffdc994fb34,364189382,0,0x0,8
tick,0x7ffdc994fb34,364204892,0,0x0,8
tick,0x7ffdc994fb34,364220531,0,0x0,8
tick,0x7ffdc994fb34,364235676,0,0x0,8
tick,0x7ffdc994fb34,364251543,0,0x0,8
tick,0x7ffdc994fb34,364266972,0,0x0,8
tick,0x7ffdc994fb34,364282291,0,0x0,8
tick,0x7ffdc994fb34,364297671,0,0x0,8
tick,0x7ffdc994fb34,364313289,0,0x0,8
tick,0x7ffdc994fb34,364328772,0,0x0,8
tick,0x7ffdc994fb34,364344206,0,0x0,8
tick,0x7ffdc994fb34,364359532,0,0x0,8
tick,0x7ffdc994fb34,364374516,0,0x0,8
tick,0x7ffdc994fb34,364390553,0,0x0,8
tick,0x7ffdc994fb34,364405419,0,0x0,8
tick,0x7ffdc994fb34,364420902,0,0x0,8
tick,0x7ffdc994fb34,364436157,0,0x0,8
tick,0x7ffdc994fb34,364451471,0,0x0,8
tick,0x7ffdc994fb34,364466877,0,0x0,8
tick,0x7ffdc994fb34,364482547,0,0x0,8
tick,0x7ffdc994fb34,364498654,0,0x0,8
tick,0x7ffdc994fb34,364514126,0,0x0,8
tick,0x7ffdc994fb34,364530126,0,0x0,8
tick,0x7ffdc994fb34,364546321,0,0x0,8
tick,0x7ffdc994fb34,364561890,0,0x0,8
tick,0x7ffdc994fb34,364577955,0,0x0,8
tick,0x7ffdc994fb34,364593151,0,0x0,8
tick,0x7ffdc994fb34,364608488,0,0x0,8
tick,0x7ffdc994fb34,364623609,0,0x0,8
tick,0x7ffdc994fb34,364639228,0,0x0,8
tick,0x7ffdc994fb34,364654751,0,0x0,8
tick,0x7ffdc994fb34,364670643,0,0x0,8
tick,0x7ffdc994fb34,364685957,0,0x0,8
tick,0x7ffdc994fb34,364701384,0,0x0,8
tick,0x7ffdc994fb34,364717982,0,0x0,8
tick,0x7ffdc994fb34,364733541,0,0x0,8
tick,0x7ffdc994fb34,364748875,0,0x0,8
tick,0x7ffdc994fb34,364764655,0,0x0,8
tick,0x7ffdc994fb34,364780532,0,0x0,8
tick,0x7ffdc994fb34,364796434,0,0x0,8
tick,0x7ffdc994fb34,364811696,0,0x0,8
tick,0x7ffdc994fb34,364827295,0,0x0,8
tick,0x7ffdc994fb34,364842766,0,0x0,8
tick,0x7ffdc994fb34,364858469,0,0x0,8
tick,0x7ffdc994fb34,364874067,0,0x0,8
tick,0x7ffdc994fb34,364889763,0,0x0,8
tick,0x7ffdc994fb34,364905176,0,0x0,8
tick,0x7ffdc994fb34,364920638,0,0x0,8
tick,0x7ffdc994fb34,364936513,0,0x0,8
tick,0x7ffdc994fb34,364952555,0,0x0,8
tick,0x7ffdc994fb34,364967717,0,0x0,8
tick,0x7ffdc994fb34,364983054,0,0x0,8
tick,0x7ffdc994fb34,364998588,0,0x0,8
tick,0x7ffdc994fb34,365013721,0,0x0,8
tick,0x7ffdc994fb34,365028937,0,0x0,8
tick,0x7ffdc994fb34,365044530,0,0x0,8
tick,0x7ffdc994fb34,365059632,0,0x0,8
tick,0x7ffdc994fb34,365075114,0,0x0,8
tick,0x7ffdc994fb34,365090575,0,0x0,8
tick,0x7ffdc994fb34,365106541,0,0x0,8
tick,0x7ffdc994fb34,365122366,0,0x0,8
tick,0x7ffdc994fb34,365150843,0,0x0,8
tick,0x7ffdc994fb34,365163877,0,0x0,8
tick,0x7ffdc994fb34,365171575,0,0x0,8
tick,0x7ffdc994fb34,365196090,0,0x0,8
tick,0x7ffdc994fb34,365201407,0,0x0,8
tick,0x7ffdc994fb34,365216350,0,0x0,8
tick,0x7ffdc994fb34,365231648,0,0x0,8
tick,0x7ffdc994fb34,365247120,0,0x0,8
tick,0x7ffdc994fb34,365262781,0,0x0,8
tick,0x7ffdc994fb34,365278430,0,0x0,8
tick,0x7ffdc994fb34,365294487,0,0x0,8
tick,0x7ffdc994fb34,365309889,0,0x0,8
tick,0x7ffdc994fb34,365325087,0,0x0,8
tick,0x7ffdc994fb34,365340553,0,0x0,8
tick,0x7ffdc994fb34,365356089,0,0x0,8
tick,0x7ffdc994fb34,365371926,0,0x0,8
tick,0x7ffdc994fb34,365387297,0,0x0,8
tick,0x7ffdc994fb34,365403195,0,0x0,8
tick,0x7ffdc994fb34,365418545,0,0x0,8
tick,0x7ffdc994fb34,365434368,0,0x0,8
tick,0x7ffdc994fb34,365449888,0,0x0,8
tick,0x7ffdc994fb34,365465603,0,0x0,8
tick,0x7ffdc994fb34,365481307,0,0x0,8
tick,0x7ffdc994fb34,365496861,0,0x0,8
tick,0x7ffdc994fb34,365512037,0,0x0,8
tick,0x7ffdc994fb34,365527562,0,0x0,8
tick,0x7ffdc994fb34,365544220,0,0x0,8
tick,0x7ffdc994fb34,365560981,0,0x0,8
tick,0x7ffdc994fb34,365574809,0,0x0,8
tick,0x7ffdc994fb34,365590029,0,0x0,8
tick,0x7ffdc994fb34,365606006,0,0x0,8
tick,0x7ffdc994fb34,365621930,0,0x0,8
tick,0x7ffdc994fb34,365637627,0,0x0,8
tick,0x7ffdc994fb34,365653677,0,0x0,8
tick,0x7ffdc994fb34,365668919,0,0x0,8
tick,0x7ffdc994fb34,365684282,0,0x0,8
tick,0x7ffdc994fb34,365699046,0,0x0,8
tick,0x7ffdc994fb34,365714250,0,0x0,8
tick,0x7ffdc994fb34,365729548,0,0x0,8
tick,0x7ffdc994fb34,365745724,0,0x0,8
tick,0x7ffdc994fb34,365761557,0,0x0,8
tick,0x7ffdc994fb34,365776633,0,0x0,8
tick,0x7ffdc994fb34,365791918,0,0x0,8
tick,0x7ffdc994fb34,365807548,0,0x0,8
tick,0x7ffdc994fb34,365822679,0,0x0,8
tick,0x7ffdc994fb34,365838186,0,0x0,8
tick,0x7ffdc994fb34,365853963,0,0x0,8
tick,0x7ffdc994fb34,365870092,0,0x0,8
tick,0x7ffdc994fb34,365885399,0,0x0,8
tick,0x7ffdc994fb34,365901504,0,0x0,8
tick,0x7ffdc994fb34,365917390,0,0x0,8
tick,0x7ffdc994fb34,365933000,0,0x0,8
tick,0x7ffdc994fb34,365948529,0,0x0,8
tick,0x7ffdc994fb34,365963771,0,0x0,8
tick,0x7ffdc994fb34,365979613,0,0x0,8
tick,0x7ffdc994fb34,365994924,0,0x0,8
tick,0x7ffdc994fb34,366010563,0,0x0,8
tick,0x7ffdc994fb34,366026639,0,0x0,8
tick,0x7ffdc994fb34,366041864,0,0x0,8
tick,0x7ffdc994fb34,366057077,0,0x0,8
tick,0x7ffdc994fb34,366072481,0,0x0,8
tick,0x7ffdc994fb34,366088080,0,0x0,8
tick,0x7ffdc994fb34,366103721,0,0x0,8
tick,0x7ffdc994fb34,366119592,0,0x0,8
tick,0x7ffdc994fb34,366135103,0,0x0,8
tick,0x7ffdc994fb34,366150349,0,0x0,8
tick,0x7ffdc994fb34,366166535,0,0x0,8
tick,0x7ffdc994fb34,366181501,0,0x0,8
tick,0x7ffdc994fb34,366197300,0,0x0,8
tick,0x7ffdc994fb34,366213087,0,0x0,8
tick,0x7ffdc994fb34,366228156,0,0x0,8
tick,0x7ffdc994fb34,366242800,0,0x0,8
tick,0x7ffdc994fb34,366258312,0,0x0,8
tick,0x7ffdc994fb34,366273538,0,0x0,8
tick,0x7ffdc994fb34,366289128,0,0x0,8
tick,0x7ffdc994fb34,366304634,0,0x0,8
tick,0x7ffdc994fb34,366320741,0,0x0,8
tick,0x7ffdc994fb34,366335890,0,0x0,8
tick,0x7ffdc994fb34,366351869,0,0x0,8
tick,0x7ffdc994fb34,366367762,0,0x0,8
tick,0x7ffdc994fb34,366384175,0,0x0,8
tick,0x7ffdc994fb34,366399326,0,0x0,8
tick,0x7ffdc994fb34,366414912,0,0x0,8
tick,0x7ffdc994fb34,366431019,0,0x0,8
tick,0x7ffdc994fb34,366445770,0,0x0,8
tick,0x7ffdc994fb34,366460978,0,0x0,8
tick,0x7ffdc994fb34,366476849,0,0x0,8
tick,0x7ffdc994fb34,366492438,0,0x0,8
tick,0x7ffdc994fb34,366508245,0,0x0,8
tick,0x7ffdc994fb34,366524458,0,0x0,8
tick,0x7ffdc994fb34,366539940,0,0x0,8
tick,0x7ffdc994fb34,366556229,0,0x0,8
tick,0x7ffdc994fb34,366571216,0,0x0,8
tick,0x7ffdc994fb34,366586342,0,0x0,8
tick,0x7ffdc994fb34,366601997,0,0x0,8
tick,0x7ffdc994fb34,366617808,0,0x0,8
tick,0x7ffdc994fb34,366632803,0,0x0,8
tick,0x7ffdc994fb34,366648588,0,0x0,8
tick,0x7ffdc994fb34,366663660,0,0x0,8
tick,0x7ffdc994fb34,366679761,0,0x0,8
tick,0x7ffdc994fb34,366695715,0,0x0,8
tick,0x7ffdc994fb34,366711507,0,0x0,8
tick,0x7ffdc994fb34,366727429,0,0x0,8
tick,0x7ffdc994fb34,366742796,0,0x0,8
tick,0x7ffdc994fb34,366758454,0,0x0,8
tick,0x7ffdc994fb34,366773528,0,0x0,8
tick,0x7ffdc994fb34,366789143,0,0x0,8
tick,0x7ffdc994fb34,366804762,0,0x0,8
tick,0x7ffdc994fb34,366820893,0,0x0,8
tick,0x7ffdc994fb34,366836960,0,0x0,8
tick,0x7ffdc994fb34,366852273,0,0x0,8
tick,0x7ffdc994fb34,366867439,0,0x0,8
tick,0x7ffdc994fb34,366883287,0,0x0,8
tick,0x7ffdc994fb34,366898879,0,0x0,8
tick,0x7ffdc994fb34,366914843,0,0x0,8
tick,0x7ffdc994fb34,366930570,0,0x0,8
tick,0x7ffdc994fb34,366946330,0,0x0,8
tick,0x7ffdc994fb34,366961961,0,0x0,8
tick,0x7ffdc994fb34,366977736,0,0x0,8
tick,0x7ffdc994fb34,366993325,0,0x0,8
tick,0x7ffdc994fb34,367009316,0,0x0,8
tick,0x7ffdc994fb34,367024578,0,0x0,8
tick,0x7ffdc994fb34,367039953,0,0x0,8
tick,0x7ffdc994fb34,367054938,0,0x0,8
tick,0x7ffdc994fb34,367070859,0,0x0,8
tick,0x7ffdc994fb34,367086512,0,0x0,8
tick,0x7ffdc994fb34,367102056,0,0x0,8
tick,0x7ffdc994fb34,367118063,0,0x0,8
tick,0x7ffdc994fb34,367133464,0,0x0,8
tick,0x7ffdc994fb34,367148791,0,0x0,8
tick,0x7ffdc994fb34,367164753,0,0x0,8
tick,0x7ffdc994fb34,367180004,0,0x0,8
tick,0x7ffdc994fb34,367195975,0,0x0,8
tick,0x7ffdc994fb34,367211276,0,0x0,8
tick,0x7ffdc994fb34,367227143,0,0x0,8
tick,0x7ffdc994fb34,367243267,0,0x0,8
tick,0x7ffdc994fb34,367257922,0,0x0,8
tick,0x7ffdc994fb34,367273322,0,0x0,8
tick,0x7ffdc994fb34,367289068,0,0x0,8
tick,0x7ffdc994fb34,367305462,0,0x0,8
tick,0x7ffdc994fb34,367321106,0,0x0,8
tick,0x7ffdc994fb34,367336641,0,0x0,8
tick,0x7ffdc994fb34,367352070,0,0x0,8
tick,0x7ffdc994fb34,367367738,0,0x0,8
tick,0x7ffdc994fb34,367382850,0,0x0,8
tick,0x7ffdc994fb34,367398401,0,0x0,8
tick,0x7ffdc994fb34,367414101,0,0x0,8
tick,0x7ffdc994fb34,367429714,0,0x0,8
tick,0x7ffdc994fb34,367444979,0,0x0,8
tick,0x7ffdc994fb34,367460083,0,0x0,8
tick,0x7ffdc994fb34,367475588,0,0x0,8
tick,0x7ffdc994fb34,367490990,0,0x0,8
tick,0x7ffdc994fb34,367506276,0,0x0,8
tick,0x7ffdc994fb34,367522195,0,0x0,8
tick,0x7ffdc994fb34,367538066,0,0x0,8
tick,0x7ffdc994fb34,367553334,0,0x0,8
tick,0x7ffdc994fb34,367568909,0,0x0,8
tick,0x7ffdc994fb34,367584113,0,0x0,8
tick,0x7ffdc994fb34,367600035,0,0x0,8
tick,0x7ffdc994fb34,367616409,0,0x0,8
tick,0x7ffdc994fb34,367631690,0,0x0,8
tick,0x7ffdc994fb34,367647230,0,0x0,8
tick,0x7ffdc994fb34,367662782,0,0x0,8
tick,0x7ffdc994fb34,367678902,0,0x0,8
tick,0x7ffdc994fb34,367694812,0,0x0,8
tick,0x7ffdc994fb34,367710209,0,0x0,8
tick,0x7ffdc994fb34,367725121,0,0x0,8
tick,0x7ffdc994fb34,367740296,0,0x0,8
tick,0x7ffdc994fb34,367755446,0,0x0,8
tick,0x7ffdc994fb34,367771326,0,0x0,8
tick,0x7ffdc994fb34,367786599,0,0x0,8
tick,0x7ffdc994fb34,367802297,0,0x0,8
tick,0x7ffdc994fb34,367817552,0,0x0,8
tick,0x7ffdc994fb34,367833243,0,0x0,8
tick,0x7ffdc994fb34,367849000,0,0x0,8
tick,0x7ffdc994fb34,367864332,0,0x0,8
tick,0x7ffdc994fb34,367879849,0,0x0,8
tick,0x7ffdc994fb34,367895335,0,0x0,8
tick,0x7ffdc994fb34,367911032,0,0x0,8
tick,0x7ffdc994fb34,367926252,0,0x0,8
tick,0x7ffdc994fb34,367941781,0,0x0,8
tick,0x7ffdc994fb34,367957452,0,0x0,8
tick,0x7ffdc994fb34,367972546,0,0x0,8
tick,0x7ffdc994fb34,367988513,0,0x0,8
tick,0x7ffdc994fb34,368004251,0,0x0,8
tick,0x7ffdc994fb34,368020412,0,0x0,8
tick,0x7ffdc994fb34,368036488,0,0x0,8
tick,0x7ffdc994fb34,368051509,0,0x0,8
tick,0x7ffdc994fb34,368067044,0,0x0,8
tick,0x7ffdc994fb34,368082586,0,0x0,8
tick,0x7ffdc994fb34,368098312,0,0x0,8
tick,0x7ffdc994fb34,368113610,0,0x0,8
tick,0x7ffdc994fb34,368128868,0,0x0,8
tick,0x7ffdc994fb34,368144280,0,0x0,8
tick,0x7ffdc994fb34,368159971,0,0x0,8
tick,0x7ffdc994fb34,368175037,0,0x0,8
tick,0x7ffdc994fb34,368191036,0,0x0,8
tick,0x7ffdc994fb34,368207191,0,0x0,8
tick,0x7ffdc994fb34,368222333,0,0x0,8
tick,0x7ffdc994fb34,368237511,0,0x0,8
tick,0x7ffdc994fb34,368253247,0,0x0,8
tick,0x7ffdc994fb34,368268794,0,0x0,8
tick,0x7ffdc994fb34,368284691,0,0x0,8
tick,0x7ffdc994fb34,368299752,0,0x0,8
tick,0x7ffdc994fb34,368315453,0,0x0,8
tick,0x7ffdc994fb34,368330983,0,0x0,8
tick,0x7ffdc994fb34,368346442,0,0x0,8
tick,0x7ffdc994fb34,368361988,0,0x0,8
tick,0x7ffdc994fb34,368377714,0,0x0,8
tick,0x7ffdc994fb34,368393036,0,0x0,8
tick,0x7ffdc994fb34,368408866,0,0x0,8
tick,0x7ffdc994fb34,368424311,0,0x0,8
tick,0x7ffdc994fb34,368439956,0,0x0,8
tick,0x7ffdc994fb34,368455377,0,0x0,8
tick,0x7ffdc994fb34,368471103,0,0x0,8
tick,0x7ffdc994fb34,368486795,0,0x0,8
tick,0x7ffdc994fb34,368503122,0,0x0,8
tick,0x7ffdc994fb34,368518647,0,0x0,8
tick,0x7ffdc994fb34,368534418,0,0x0,8
tick,0x7ffdc994fb34,368550118,0,0x0,8
tick,0x7ffdc994fb34,368565754,0,0x0,8
tick,0x7ffdc994fb34,368580939,0,0x0,8
tick,0x7ffdc994fb34,368596813,0,0x0,8
tick,0x7ffdc994fb34,368611983,0,0x0,8
tick,0x7ffdc994fb34,368627530,0,0x0,8
tick,0x7ffdc994fb34,368643196,0,0x0,8
tick,0x7ffdc994fb34,368658883,0,0x0,8
tick,0x7ffdc994fb34,368674286,0,0x0,8
tick,0x7ffdc994fb34,368689568,0,0x0,8
tick,0x7ffdc994fb34,368704948,0,0x0,8
tick,0x7ffdc994fb34,368720371,0,0x0,8
tick,0x7ffdc994fb34,368736191,0,0x0,8
tick,0x7ffdc994fb34,368751741,0,0x0,8
tick,0x7ffdc994fb34,368767364,0,0x0,8
tick,0x7ffdc994fb34,368782977,0,0x0,8
tick,0x7ffdc994fb34,368798141,0,0x0,8
tick,0x7ffdc994fb34,368813928,0,0x0,8
tick,0x7ffdc994fb34,368829619,0,0x0,8
tick,0x7ffdc994fb34,368844822,0,0x0,8
tick,0x7ffdc994fb34,368860558,0,0x0,8
tick,0x7ffdc994fb34,368875840,0,0x0,8
tick,0x7ffdc994fb34,368891078,0,0x0,8
tick,0x7ffdc994fb34,368906703,0,0x0,8
tick,0x7ffdc994fb34,368922379,0,0x0,8
tick,0x7ffdc994fb34,368937643,0,0x0,8
tick,0x7ffdc994fb34,368953033,0,0x0,8
tick,0x7ffdc994fb34,368968176,0,0x0,8
tick,0x7ffdc994fb34,368983908,0,0x0,8
tick,0x7ffdc994fb34,368999346,0,0x0,8
tick,0x7ffdc994fb34,369014657,0,0x0,8
tick,0x7ffdc994fb34,369029942,0,0x0,8
tick,0x7ffdc994fb34,369045776,0,0x0,8
tick,0x7ffdc994fb34,369061212,0,0x0,8
tick,0x7ffdc994fb34,369076897,0,0x0,8
tick,0x7ffdc994fb34,369092211,0,0x0,8
tick,0x7ffdc994fb34,369107681,0,0x0,8
tick,0x7ffdc994fb34,369122785,0,0x0,8
tick,0x7ffdc994fb34,369138314,0,0x0,8
tick,0x7ffdc994fb34,369154084,0,0x0,8
tick,0x7ffdc994fb34,369169357,0,0x0,8
tick,0x7ffdc994fb34,369185118,0,0x0,8
tick,0x7ffdc994fb34,369200892,0,0x0,8
tick,0x7ffdc994fb34,369215741,0,0x0,8
tick,0x7ffdc994fb34,369231438,0,0x0,8
tick,0x7ffdc994fb34,369246522,0,0x0,8
tick,0x7ffdc994fb34,369262864,0,0x0,8
tick,0x7ffdc994fb34,369278496,0,0x0,8
tick,0x7ffdc994fb34,369293676,0,0x0,8
tick,0x7ffdc994fb34,369309072,0,0x0,8
tick,0x7ffdc994fb34,369325360,0,0x0,8
tick,0x7ffdc994fb34,369340953,0,0x0,8
tick,0x7ffdc994fb34,369356905,0,0x0,8
tick,0x7ffdc994fb34,369372268,0,0x0,8
tick,0x7ffdc994fb34,369388118,0,0x0,8
tick,0x7ffdc994fb34,369403797,0,0x0,8
tick,0x7ffdc994fb34,369419696,0,0x0,8
tick,0x7ffdc994fb34,369435464,0,0x0,8
tick,0x7ffdc994fb34,369450596,0,0x0,8
tick,0x7ffdc994fb34,369466349,0,0x0,8
tick,0x7ffdc994fb34,369481606,0,0x0,8
tick,0x7ffdc994fb34,369496869,0,0x0,8
tick,0x7ffdc994fb34,369513091,0,0x0,8
tick,0x7ffdc994fb34,369528932,0,0x0,8
tick,0x7ffdc994fb34,369544264,0,0x0,8
tick,0x7ffdc994fb34,369560234,0,0x0,8
tick,0x7ffdc994fb34,369575402,0,0x0,8
tick,0x7ffdc994fb34,369591564,0,0x0,8
tick,0x7ffdc994fb34,369606905,0,0x0,8
tick,0x7ffdc994fb34,369622447,0,0x0,8
tick,0x7ffdc994fb34,369638148,0,0x0,8
tick,0x7ffdc994fb34,369653641,0,0x0,8
tick,0x7ffdc994fb34,369669053,0,0x0,8
tick,0x7ffdc994fb34,369684053,0,0x0,8
tick,0x7ffdc994fb34,369699854,0,0x0,8
tick,0x7ffdc994fb34,369715287,0,0x0,8
tick,0x7ffdc994fb34,369730961,0,0x0,8
tick,0x7ffdc994fb34,369746424,0,0x0,8
tick,0x7ffdc994fb34,369762198,0,0x0,8
tick,0x7ffdc994fb34,369777748,0,0x0,8
tick,0x7ffdc994fb34,369793301,0,0x0,8
tick,0x7ffdc994fb34,369808649,0,0x0,8
tick,0x7ffdc994fb34,369823755,0,0x0,8
tick,0x7ffdc994fb34,369839406,0,0x0,8
tick,0x7ffdc994fb34,369854611,0,0x0,8
tick,0x7ffdc994fb34,369870434,0,0x0,8
tick,0x7ffdc994fb34,369885387,0,0x0,8
tick,0x7ffdc994fb34,369900754,0,0x0,8
tick,0x7ffdc994fb34,369916339,0,0x0,8
tick,0x7ffdc994fb34,369931702,0,0x0,8
tick,0x7ffdc994fb34,369947181,0,0x0,8
tick,0x7ffdc994fb34,369962656,0,0x0,8
tick,0x7ffdc994fb34,369978296,0,0x0,8
tick,0x7ffdc994fb34,369993632,0,0x0,8
tick,0x7ffdc994fb34,370009522,0,0x0,8
tick,0x7ffdc994fb34,370025556,0,0x0,8
tick,0x7ffdc994fb34,370041353,0,0x0,8
tick,0x7ffdc994fb34,370057017,0,0x0,8
tick,0x7ffdc994fb34,370072459,0,0x0,8
tick,0x7ffdc994fb34,370087528,0,0x0,8
tick,0x7ffdc994fb34,370102729,0,0x0,8
tick,0x7ffdc994fb34,370118737,0,0x0,8
tick,0x7ffdc994fb34,370134062,0,0x0,8
tick,0x7ffdc994fb34,370150131,0,0x0,8
tick,0x7ffdc994fb34,370166087,0,0x0,8
tick,0x7ffdc994fb34,370181935,0,0x0,8
tick,0x7ffdc994fb34,370198182,0,0x0,8
tick,0x7ffdc994fb34,370214412,0,0x0,8
tick,0x7ffdc994fb34,370229723,0,0x0,8
tick,0x7ffdc994fb34,370245012,0,0x0,8
tick,0x7ffdc994fb34,370260689,0,0x0,8
tick,0x7ffdc994fb34,370276038,0,0x0,8
tick,0x7ffdc994fb34,370292273,0,0x0,8
tick,0x7ffdc994fb34,370307700,0,0x0,8
tick,0x7ffdc994fb34,370323343,0,0x0,8
tick,0x7ffdc994fb34,370339062,0,0x0,8
tick,0x7ffdc994fb34,370354421,0,0x0,8
tick,0x7ffdc994fb34,370370411,0,0x0,8
tick,0x7ffdc994fb34,370386225,0,0x0,8
tick,0x7ffdc994fb34,370402279,0,0x0,8
tick,0x7ffdc994fb34,370417355,0,0x0,8
tick,0x7ffdc994fb34,370432732,0,0x0,8
tick,0x7ffdc994fb34,370448734,0,0x0,8
tick,0x7ffdc994fb34,370464254,0,0x0,8
tick,0x7ffdc994fb34,370479625,0,0x0,8
tick,0x7ffdc994fb34,370494981,0,0x0,8
tick,0x7ffdc994fb34,370510711,0,0x0,8
tick,0x7ffdc994fb34,370526346,0,0x0,8
tick,0x7ffdc994fb34,370541936,0,0x0,8
tick,0x7ffdc994fb34,370557659,0,0x0,8
tick,0x7ffdc994fb34,370572986,0,0x0,8
tick,0x7ffdc994fb34,370588630,0,0x0,8
tick,0x7ffdc994fb34,370604387,0,0x0,8
tick,0x7ffdc994fb34,370619702,0,0x0,8
tick,0x7ffdc994fb34,370636024,0,0x0,8
tick,0x7ffdc994fb34,370651781,0,0x0,8
tick,0x7ffdc994fb34,370667109,0,0x0,8
tick,0x7ffdc994fb34,370682988,0,0x0,8
tick,0x7ffdc994fb34,370698557,0,0x0,8
tick,0x7ffdc994fb34,370714399,0,0x0,8
tick,0x7ffdc994fb34,370730154,0,0x0,8
tick,0x7ffdc994fb34,370745416,0,0x0,8
tick,0x7ffdc994fb34,370761335,0,0x0,8
tick,0x7ffdc994fb34,370776033,0,0x0,8
tick,0x7ffdc994fb34,370791263,0,0x0,8
tick,0x7ffdc994fb34,370806790,0,0x0,8
tick,0x7ffdc994fb34,370822755,0,0x0,8
tick,0x7ffdc994fb34,370838186,0,0x0,8
tick,0x7ffdc994fb34,370853568,0,0x0,8
tick,0x7ffdc994fb34,370868954,0,0x0,8
tick,0x7ffdc994fb34,370884770,0,0x0,8
tick,0x7ffdc994fb34,370900355,0,0x0,8
tick,0x7ffdc994fb34,370915975,0,0x0,8
tick,0x7ffdc994fb34,370931908,0,0x0,8
tick,0x7ffdc994fb34,370947459,0,0x0,8
tick,0x7ffdc994fb34,370963288,0,0x0,8
tick,0x7ffdc994fb34,370978812,0,0x0,8
tick,0x7ffdc994fb34,370994256,0,0x0,8
tick,0x7ffdc994fb34,371009850,0,0x0,8
tick,0x7ffdc994fb34,371024942,0,0x0,8
tick,0x7ffdc994fb34,371040875,0,0x0,8
tick,0x7ffdc994fb34,371055979,0,0x0,8
tick,0x7ffdc994fb34,371071888,0,0x0,8
tick,0x7ffdc994fb34,371087728,0,0x0,8
tick,0x7ffdc994fb34,371103192,0,0x0,8
tick,0x7ffdc994fb34,371118780,0,0x0,8
tick,0x7ffdc994fb34,371134092,0,0x0,8
tick,0x7ffdc994fb34,371149506,0,0x0,8
tick,0x7ffdc994fb34,371164751,0,0x0,8
tick,0x7ffdc994fb34,371180250,0,0x0,8
tick,0x7ffdc994fb34,371195660,0,0x0,8
tick,0x7ffdc994fb34,371211392,0,0x0,8
tick,0x7ffdc994fb34,371226517,0,0x0,8
tick,0x7ffdc994fb34,371242100,0,0x0,8
tick,0x7ffdc994fb34,371257466,0,0x0,8
tick,0x7ffdc994fb34,371272997,0,0x0,8
tick,0x7ffdc994fb34,371288743,0,0x0,8
tick,0x7ffdc994fb34,371304218,0,0x0,8
tick,0x7ffdc994fb34,371320021,0,0x0,8
tick,0x7ffdc994fb34,371335999,0,0x0,8
tick,0x7ffdc994fb34,371352161,0,0x0,8
tick,0x7ffdc994fb34,371368030,0,0x0,8
tick,0x7ffdc994fb34,371383303,0,0x0,8
tick,0x7ffdc994fb34,371398923,0,0x0,8
tick,0x7ffdc994fb34,371414799,0,0x0,8
tick,0x7ffdc994fb34,371430562,0,0x0,8
tick,0x7ffdc994fb34,371446741,0,0x0,8
tick,0x7ffdc994fb34,371462578,0,0x0,8
tick,0x7ffdc994fb34,371478071,0,0x0,8
tick,0x7ffdc994fb34,371493472,0,0x0,8
tick,0x7ffdc994fb34,371509328,0,0x0,8
tick,0x7ffdc994fb34,371524675,0,0x0,8
tick,0x7ffdc994fb34,371540364,0,0x0,8
tick,0x7ffdc994fb34,371555785,0,0x0,8
tick,0x7ffdc994fb34,371571755,0,0x0,8
tick,0x7ffdc994fb34,371586919,0,0x0,8
tick,0x7ffdc994fb34,371602466,0,0x0,8
tick,0x7ffdc994fb34,371617943,0,0x0,8
tick,0x7ffdc994fb34,371633911,0,0x0,8
tick,0x7ffdc994fb34,371649340,0,0x0,8
tick,0x7ffdc994fb34,371665229,0,0x0,8
tick,0x7ffdc994fb34,371681044,0,0x0,8
tick,0x7ffdc994fb34,371696806,0,0x0,8
tick,0x7ffdc994fb34,371712341,0,0x0,8
tick,0x7ffdc994fb34,371727823,0,0x0,8
tick,0x7ffdc994fb34,371743116,0,0x0,8
tick,0x7ffdc994fb34,371758531,0,0x0,8
tick,0x7ffdc994fb34,371773815,0,0x0,8
tick,0x7ffdc994fb34,371789061,0,0x0,8
tick,0x7ffdc994fb34,371804402,0,0x0,8
tick,0x7ffdc994fb34,371820192,0,0x0,8
tick,0x7ffdc994fb34,371836000,0,0x0,8
tick,0x7ffdc994fb34,371851402,0,0x0,8
tick,0x7ffdc994fb34,371866722,0,0x0,8
tick,0x7ffdc994fb34,371882365,0,0x0,8
tick,0x7ffdc994fb34,371897815,0,0x0,8
tick,0x7ffdc994fb34,371913632,0,0x0,8
tick,0x7ffdc994fb34,371928846,0,0x0,8
tick,0x7ffdc994fb34,371944737,0,0x0,8
tick,0x7ffdc994fb34,371960118,0,0x0,8
tick,0x7ffdc994fb34,371975834,0,0x0,8
tick,0x7ffdc994fb34,371991698,0,0x0,8
tick,0x7ffdc994fb34,372006954,0,0x0,8
tick,0x7ffdc994fb34,372022939,0,0x0,8
tick,0x7ffdc994fb34,372037863,0,0x0,8
tick,0x7ffdc994fb34,372053839,0,0x0,8
tick,0x7ffdc994fb34,372068457,0,0x0,8
tick,0x7ffdc994fb34,372084784,0,0x0,8
tick,0x7ffdc994fb34,372100044,0,0x0,8
tick,0x7ffdc994fb34,372115708,0,0x0,8
tick,0x7ffdc994fb34,372131079,0,0x0,8
tick,0x7ffdc994fb34,372146565,0,0x0,8
tick,0x7ffdc994fb34,372162784,0,0x0,8
tick,0x7ffdc994fb34,372178585,0,0x0,8
tick,0x7ffdc994fb34,372193956,0,0x0,8
tick,0x7ffdc994fb34,372209207,0,0x0,8
tick,0x7ffdc994fb34,372225069,0,0x0,8
tick,0x7ffdc994fb34,372240381,0,0x0,8
tick,0x7ffdc994fb34,372256027,0,0x0,8
tick,0x7ffdc994fb34,372272063,0,0x0,8
tick,0x7ffdc994fb34,372287862,0,0x0,8
tick,0x7ffdc994fb34,372303368,0,0x0,8
tick,0x7ffdc994fb34,372318741,0,0x0,8
tick,0x7ffdc994fb34,372333933,0,0x0,8
tick,0x7ffdc994fb34,372349605,0,0x0,8
tick,0x7ffdc994fb34,372364892,0,0x0,8
tick,0x7ffdc994fb34,372380935,0,0x0,8
tick,0x7ffdc994fb34,372396156,0,0x0,8
tick,0x7ffdc994fb34,372411854,0,0x0,8
tick,0x7ffdc994fb34,372426884,0,0x0,8
tick,0x7ffdc994fb34,372442873,0,0x0,8
tick,0x7ffdc994fb34,372458663,0,0x0,8
tick,0x7ffdc994fb34,372474650,0,0x0,8
tick,0x7ffdc994fb34,372490352,0,0x0,8
tick,0x7ffdc994fb34,372505895,0,0x0,8
tick,0x7ffdc994fb34,372520831,0,0x0,8
tick,0x7ffdc994fb34,372536851,0,0x0,8
tick,0x7ffdc994fb34,372552290,0,0x0,8
tick,0x7ffdc994fb34,372567648,0,0x0,8
tick,0x7ffdc994fb34,372583370,0,0x0,8
tick,0x7ffdc994fb34,372599004,0,0x0,8
tick,0x7ffdc994fb34,372614206,0,0x0,8
tick,0x7ffdc994fb34,372629877,0,0x0,8
tick,0x7ffdc994fb34,372645504,0,0x0,8
tick,0x7ffdc994fb34,372661307,0,0x0,8
tick,0x7ffdc994fb34,372676744,0,0x0,8
tick,0x7ffdc994fb34,372691672,0,0x0,8
tick,0x7ffdc994fb34,372706478,0,0x0,8
tick,0x7ffdc994fb34,372722380,0,0x0,8
tick,0x7ffdc994fb34,372738324,0,0x0,8
tick,0x7ffdc994fb34,372753683,0,0x0,8
tick,0x7ffdc994fb34,372769569,0,0x0,8
tick,0x7ffdc994fb34,372784994,0,0x0,8
tick,0x7ffdc994fb34,372800975,0,0x0,8
tick,0x7ffdc994fb34,372816237,0,0x0,8
tick,0x7ffdc994fb34,372832297,0,0x0,8
tick,0x7ffdc994fb34,372848353,0,0x0,8
tick,0x7ffdc994fb34,372864323,0,0x0,8
tick,0x7ffdc994fb34,372879282,0,0x0,8
tick,0x7ffdc994fb34,372894625,0,0x0,8
tick,0x7ffdc994fb34,372910609,0,0x0,8
tick,0x7ffdc994fb34,372926512,0,0x0,8
tick,0x7ffdc994fb34,372941813,0,0x0,8
tick,0x7ffdc994fb34,372957882,0,0x0,8
tick,0x7ffdc994fb34,372973632,0,0x0,8
tick,0x7ffdc994fb34,372989563,0,0x0,8
tick,0x7ffdc994fb34,373004982,0,0x0,8
tick,0x7ffdc994fb34,373020990,0,0x0,8
tick,0x7ffdc994fb34,373036585,0,0x0,8
tick,0x7ffdc994fb34,373052717,0,0x0,8
tick,0x7ffdc994fb34,373068174,0,0x0,8
tick,0x7ffdc994fb34,373083494,0,0x0,8
tick,0x7ffdc994fb34,373099684,0,0x0,8
tick,0x7ffdc994fb34,373115350,0,0x0,8
tick,0x7ffdc994fb34,373131124,0,0x0,8
tick,0x7ffdc994fb34,373147178,0,0x0,8
tick,0x7ffdc994fb34,373162757,0,0x0,8
tick,0x7ffdc994fb34,373178632,0,0x0,8
tick,0x7ffdc994fb34,373194703,0,0x0,8
tick,0x7ffdc994fb34,373210446,0,0x0,8
tick,0x7ffdc994fb34,373225596,0,0x0,8
tick,0x7ffdc994fb34,373241335,0,0x0,8
tick,0x7ffdc994fb34,373257166,0,0x0,8
tick,0x7ffdc994fb34,373273210,0,0x0,8
tick,0x7ffdc994fb34,373288576,0,0x0,8
tick,0x7ffdc994fb34,373303661,0,0x0,8
tick,0x7ffdc994fb34,373319494,0,0x0,8
tick,0x7ffdc994fb34,373334932,0,0x0,8
tick,0x7ffdc994fb34,373350411,0,0x0,8
tick,0x7ffdc994fb34,373366193,0,0x0,8
tick,0x7ffdc994fb34,373381547,0,0x0,8
tick,0x7ffdc994fb34,373396953,0,0x0,8
tick,0x7ffdc994fb34,373412918,0,0x0,8
tick,0x7ffdc994fb34,373428490,0,0x0,8
tick,0x7ffdc994fb34,373443803,0,0x0,8
tick,0x7ffdc994fb34,373459484,0,0x0,8
tick,0x7ffdc994fb34,373474897,0,0x0,8
tick,0x7ffdc994fb34,373490274,0,0x0,8
tick,0x7ffdc994fb34,373505662,0,0x0,8
tick,0x7ffdc994fb34,373521355,0,0x0,8
tick,0x7ffdc994fb34,373536908,0,0x0,8
tick,0x7ffdc994fb34,373553052,0,0x0,8
tick,0x7ffdc994fb34,373568791,0,0x0,8
tick,0x7ffdc994fb34,373584638,0,0x0,8
tick,0x7ffdc994fb34,373600020,0,0x0,8
tick,0x7ffdc994fb34,373615881,0,0x0,8
tick,0x7ffdc994fb34,373631756,0,0x0,8
tick,0x7ffdc994fb34,373647125,0,0x0,8
tick,0x7ffdc994fb34,373663295,0,0x0,8
tick,0x7ffdc994fb34,373678377,0,0x0,8
tick,0x7ffdc994fb34,373693915,0,0x0,8
tick,0x7ffdc994fb34,373709145,0,0x0,8
tick,0x7ffdc994fb34,373724529,0,0x0,8
tick,0x7ffdc994fb34,373739900,0,0x0,8
tick,0x7ffdc994fb34,373755481,0,0x0,8
tick,0x7ffdc994fb34,373770730,0,0x0,8
tick,0x7ffdc994fb34,373786639,0,0x0,8
tick,0x7ffdc994fb34,373801835,0,0x0,8
tick,0x7ffdc994fb34,373818170,0,0x0,8
tick,0x7ffdc994fb34,373833811,0,0x0,8
tick,0x7ffdc994fb34,373849231,0,0x0,8
tick,0x7ffdc994fb34,373865427,0,0x0,8
tick,0x7ffdc994fb34,373881282,0,0x0,8
tick,0x7ffdc994fb34,373897429,0,0x0,8
tick,0x7ffdc994fb34,373912628,0,0x0,8
tick,0x7ffdc994fb34,373928660,0,0x0,8
tick,0x7ffdc994fb34,373943957,0,0x0,8
tick,0x7ffdc994fb34,373959713,0,0x0,8
tick,0x7ffdc994fb34,373975897,0,0x0,8
tick,0x7ffdc994fb34,373991311,0,0x0,8
tick,0x7ffdc994fb34,374006932,0,0x0,8
tick,0x7ffdc994fb34,374022470,0,0x0,8
tick,0x7ffdc994fb34,374038433,0,0x0,8
tick,0x7ffdc994fb34,374054401,0,0x0,8
tick,0x7ffdc994fb34,374069568,0,0x0,8
tick,0x7ffdc994fb34,374085237,0,0x0,8
tick,0x7ffdc994fb34,374100806,0,0x0,8
tick,0x7ffdc994fb34,374115894,0,0x0,8
tick,0x7ffdc994fb34,374131695,0,0x0,8
tick,0x7ffdc994fb34,374146856,0,0x0,8
tick,0x7ffdc994fb34,374162621,0,0x0,8
tick,0x7ffdc994fb34,374178346,0,0x0,8
tick,0x7ffdc994fb34,374194076,0,0x0,8
tick,0x7ffdc994fb34,374209304,0,0x0,8
tick,0x7ffdc994fb34,374225116,0,0x0,8
tick,0x7ffdc994fb34,374240446,0,0x0,8
tick,0x7ffdc994fb34,374256050,0,0x0,8
tick,0x7ffdc994fb34,374271567,0,0x0,8
tick,0x7ffdc994fb34,374286862,0,0x0,8
tick,0x7ffdc994fb34,374301891,0,0x0,8
tick,0x7ffdc994fb34,374317128,0,0x0,8
tick,0x7ffdc994fb34,374332871,0,0x0,8
tick,0x7ffdc994fb34,374348622,0,0x0,8
tick,0x7ffdc994fb34,374363842,0,0x0,8
tick,0x7ffdc994fb34,374379125,0,0x0,8
tick,0x7ffdc994fb34,374394357,0,0x0,8
tick,0x7ffdc994fb34,374409930,0,0x0,8
tick,0x7ffdc994fb34,374425750,0,0x0,8
tick,0x7ffdc994fb34,374441870,0,0x0,8
tick,0x7ffdc994fb34,374457560,0,0x0,8
tick,0x7ffdc994fb34,374473593,0,0x0,8
tick,0x7ffdc994fb34,374488804,0,0x0,8
tick,0x7ffdc994fb34,374504209,0,0x0,8
tick,0x7ffdc994fb34,374520407,0,0x0,8
tick,0x7ffdc994fb34,374535986,0,0x0,8
tick,0x7ffdc994fb34,374551535,0,0x0,8
tick,0x7ffdc994fb34,374567282,0,0x0,8
tick,0x7ffdc994fb34,374582596,0,0x0,8
tick,0x7ffdc994fb34,374598131,0,0x0,8
tick,0x7ffdc994fb34,374613533,0,0x0,8
tick,0x7ffdc994fb34,374629266,0,0x0,8
tick,0x7ffdc994fb34,374644274,0,0x0,8
tick,0x7ffdc994fb34,374660154,0,0x0,8
tick,0x7ffdc994fb34,374675515,0,0x0,8
tick,0x7ffdc994fb34,374691064,0,0x0,8
tick,0x7ffdc994fb34,374706548,0,0x0,8
tick,0x7ffdc994fb34,374722156,0,0x0,8
tick,0x7ffdc994fb34,374737620,0,0x0,8
tick,0x7ffdc994fb34,374752838,0,0x0,8
tick,0x7ffdc994fb34,374768020,0,0x0,8
tick,0x7ffdc994fb34,374783741,0,0x0,8
tick,0x7ffdc994fb34,374799360,0,0x0,8
tick,0x7ffdc994fb34,374815122,0,0x0,8
tick,0x7ffdc994fb34,374830747,0,0x0,8
tick,0x7ffdc994fb34,374846670,0,0x0,8
tick,0x7ffdc994fb34,374862270,0,0x0,8
tick,0x7ffdc994fb34,374877565,0,0x0,8
tick,0x7ffdc994fb34,374893245,0,0x0,8
tick,0x7ffdc994fb34,374908877,0,0x0,8
tick,0x7ffdc994fb34,374923799,0,0x0,8
tick,0x7ffdc994fb34,374939842,0,0x0,8
tick,0x7ffdc994fb34,374955829,0,0x0,8
tick,0x7ffdc994fb34,374971632,0,0x0,8
tick,0x7ffdc994fb34,374987780,0,0x0,8
tick,0x7ffdc994fb34,375003666,0,0x0,8
tick,0x7ffdc994fb34,375019298,0,0x0,8
tick,0x7ffdc994fb34,375035056,0,0x0,8
tick,0x7ffdc994fb34,375050455,0,0x0,8
tick,0x7ffdc994fb34,375066052,0,0x0,8
tick,0x7ffdc994fb34,375082171,0,0x0,8
tick,0x7ffdc994fb34,375097419,0,0x0,8
tick,0x7ffdc994fb34,375113445,0,0x0,8
tick,0x7ffdc994fb34,375129199,0,0x0,8
tick,0x7ffdc994fb34,375144749,0,0x0,8
tick,0x7ffdc994fb34,375160139,0,0x0,8
tick,0x7ffdc994fb34,375174921,0,0x0,8
tick,0x7ffdc994fb34,375190354,0,0x0,8
tick,0x7ffdc994fb34,375205637,0,0x0,8
tick,0x7ffdc994fb34,375222125,0,0x0,8
tick,0x7ffdc994fb34,375237515,0,0x0,8
tick,0x7ffdc994fb34,375252594,0,0x0,8
tick,0x7ffdc994fb34,375268200,0,0x0,8
tick,0x7ffdc994fb34,375284280,0,0x0,8
tick,0x7ffdc994fb34,375300267,0,0x0,8
tick,0x7ffdc994fb34,375315468,0,0x0,8
tick,0x7ffdc994fb34,375330847,0,0x0,8
tick,0x7ffdc994fb34,375346765,0,0x0,8
tick,0x7ffdc994fb34,375362155,0,0x0,8
tick,0x7ffdc994fb34,375377825,0,0x0,8
tick,0x7ffdc994fb34,375392944,0,0x0,8
tick,0x7ffdc994fb34,375408226,0,0x0,8
tick,0x7ffdc994fb34,375423929,0,0x0,8
tick,0x7ffdc994fb34,375439271,0,0x0,8
tick,0x7ffdc994fb34,375454493,0,0x0,8
tick,0x7ffdc994fb34,375470243,0,0x0,8
tick,0x7ffdc994fb34,375485963,0,0x0,8
tick,0x7ffdc994fb34,375501175,0,0x0,8
tick,0x7ffdc994fb34,375516339,0,0x0,8
tick,0x7ffdc994fb34,375532468,0,0x0,8
tick,0x7ffdc994fb34,375548215,0,0x0,8
tick,0x7ffdc994fb34,375563390,0,0x0,8
tick,0x7ffdc994fb34,375578991,0,0x0,8
tick,0x7ffdc994fb34,375593864,0,0x0,8
tick,0x7ffdc994fb34,375609317,0,0x0,8
tick,0x7ffdc994fb34,375624617,0,0x0,8
tick,0x7ffdc994fb34,375640366,0,0x0,8
tick,0x7ffdc994fb34,375655869,0,0x0,8
tick,0x7ffdc994fb34,375672116,0,0x0,8
tick,0x7ffdc994fb34,375688005,0,0x0,8
tick,0x7ffdc994fb34,375703830,0,0x0,8
tick,0x7ffdc994fb34,375719713,0,0x0,8
tick,0x7ffdc994fb34,375735359,0,0x0,8
tick,0x7ffdc994fb34,375751211,0,0x0,8
tick,0x7ffdc994fb34,375766738,0,0x0,8
tick,0x7ffdc994fb34,375782090,0,0x0,8
tick,0x7ffdc994fb34,375797604,0,0x0,8
tick,0x7ffdc994fb34,375813572,0,0x0,8
tick,0x7ffdc994fb34,375829023,0,0x0,8
tick,0x7ffdc994fb34,375844579,0,0x0,8
tick,0x7ffdc994fb34,375859762,0,0x0,8
tick,0x7ffdc994fb34,375875595,0,0x0,8
tick,0x7ffdc994fb34,375891021,0,0x0,8
tick,0x7ffdc994fb34,375906321,0,0x0,8
tick,0x7ffdc994fb34,375921940,0,0x0,8
tick,0x7ffdc994fb34,375937717,0,0x0,8
tick,0x7ffdc994fb34,375953414,0,0x0,8
tick,0x7ffdc994fb34,375968660,0,0x0,8
tick,0x7ffdc994fb34,375984414,0,0x0,8
tick,0x7ffdc994fb34,375999629,0,0x0,8
tick,0x7ffdc994fb34,376015463,0,0x0,8
tick,0x7ffdc994fb34,376031122,0,0x0,8
tick,0x7ffdc994fb34,376046805,0,0x0,8
tick,0x7ffdc994fb34,376062175,0,0x0,8
tick,0x7ffdc994fb34,376077655,0,0x0,8
tick,0x7ffdc994fb34,376092829,0,0x0,8
tick,0x7ffdc994fb34,376108324,0,0x0,8
tick,0x7ffdc994fb34,376124095,0,0x0,8
tick,0x7ffdc994fb34,376140004,0,0x0,8
tick,0x7ffdc994fb34,376156116,0,0x0,8
tick,0x7ffdc994fb34,376171428,0,0x0,8
tick,0x7ffdc994fb34,376186956,0,0x0,8
tick,0x7ffdc994fb34,376202963,0,0x0,8
tick,0x7ffdc994fb34,376218682,0,0x0,8
tick,0x7ffdc994fb34,376234239,0,0x0,8
tick,0x7ffdc994fb34,376249373,0,0x0,8
tick,0x7ffdc994fb34,376265256,0,0x0,8
tick,0x7ffdc994fb34,376280607,0,0x0,8
tick,0x7ffdc994fb34,376296694,0,0x0,8
tick,0x7ffdc994fb34,376312111,0,0x0,8
tick,0x7ffdc994fb34,376327431,0,0x0,8
tick,0x7ffdc994fb34,376343034,0,0x0,8
tick,0x7ffdc994fb34,376358920,0,0x0,8
tick,0x7ffdc994fb34,376374175,0,0x0,8
tick,0x7ffdc994fb34,376390065,0,0x0,8
tick,0x7ffdc994fb34,376405941,0,0x0,8
tick,0x7ffdc994fb34,376421571,0,0x0,8
tick,0x7ffdc994fb34,376437793,0,0x0,8
tick,0x7ffdc994fb34,376453593,0,0x0,8
tick,0x7ffdc994fb34,376468581,0,0x0,8
tick,0x7ffdc994fb34,376484878,0,0x0,8
tick,0x7ffdc994fb34,376500003,0,0x0,8
tick,0x7ffdc994fb34,376515147,0,0x0,8
tick,0x7ffdc994fb34,376530882,0,0x0,8
tick,0x7ffdc994fb34,376546580,0,0x0,8
tick,0x7ffdc994fb34,376561935,0,0x0,8
tick,0x7ffdc994fb34,376578104,0,0x0,8
tick,0x7ffdc994fb34,376592952,0,0x0,8
tick,0x7ffdc994fb34,376608259,0,0x0,8
tick,0x7ffdc994fb34,376624002,0,0x0,8
tick,0x7ffdc994fb34,376639355,0,0x0,8
tick,0x7ffdc994fb34,376654415,0,0x0,8
tick,0x7ffdc994fb34,376670130,0,0x0,8
tick,0x7ffdc994fb34,376685687,0,0x0,8
tick,0x7ffdc994fb34,376701326,0,0x0,8
tick,0x7ffdc994fb34,376716582,0,0x0,8
tick,0x7ffdc994fb34,376732035,0,0x0,8
tick,0x7ffdc994fb34,376747261,0,0x0,8
tick,0x7ffdc994fb34,376763227,0,0x0,8
tick,0x7ffdc994fb34,376778198,0,0x0,8
tick,0x7ffdc994fb34,376794222,0,0x0,8
tick,0x7ffdc994fb34,376810127,0,0x0,8
tick,0x7ffdc994fb34,376825572,0,0x0,8
tick,0x7ffdc994fb34,376841352,0,0x0,8
tick,0x7ffdc994fb34,376857468,0,0x0,8
tick,0x7ffdc994fb34,376872498,0,0x0,8
tick,0x7ffdc994fb34,376888434,0,0x0,8
tick,0x7ffdc994fb34,376904597,0,0x0,8
tick,0x7ffdc994fb34,376920560,0,0x0,8
tick,0x7ffdc994fb34,376935849,0,0x0,8
tick,0x7ffdc994fb34,376951819,0,0x0,8
tick,0x7ffdc994fb34,376966545,0,0x0,8
tick,0x7ffdc994fb34,376982597,0,0x0,8
tick,0x7ffdc994fb34,376998977,0,0x0,8
tick,0x7ffdc994fb34,377014014,0,0x0,8
tick,0x7ffdc994fb34,377029654,0,0x0,8
tick,0x7ffdc994fb34,377045060,0,0x0,8
tick,0x7ffdc994fb34,377064256,0,0x0,8
tick,0x7ffdc994fb34,377075902,0,0x0,8
tick,0x7ffdc994fb34,377091248,0,0x0,8
tick,0x7ffdc994fb34,377106839,0,0x0,8
tick,0x7ffdc994fb34,377121591,0,0x0,8
tick,0x7ffdc994fb34,377137690,0,0x0,8
tick,0x7ffdc994fb34,377155098,0,0x0,8
tick,0x7ffdc994fb34,377169556,0,0x0,8
tick,0x7ffdc994fb34,377185643,0,0x0,8
tick,0x7ffdc994fb34,377202613,0,0x0,8
tick,0x7ffdc994fb34,377219057,0,0x0,8
tick,0x7ffdc994fb34,377235691,0,0x0,8
tick,0x7ffdc994fb34,377251053,0,0x0,8
tick,0x7ffdc994fb34,377263198,0,0x0,8
tick,0x7ffdc994fb34,377277567,0,0x0,8
tick,0x7ffdc994fb34,377294785,0,0x0,8
tick,0x7ffdc994fb34,377310269,0,0x0,8
tick,0x7ffdc994fb34,377325311,0,0x0,8
tick,0x7ffdc994fb34,377340900,0,0x0,8
tick,0x7ffdc994fb34,377355206,0,0x0,8
tick,0x7ffdc994fb34,377375237,0,0x0,8
tick,0x7ffdc994fb34,377384241,0,0x0,8
tick,0x7ffdc994fb34,377400212,0,0x0,8
tick,0x7ffdc994fb34,377415008,0,0x0,8
tick,0x7ffdc994fb34,377431118,0,0x0,8
tick,0x7ffdc994fb34,377446017,0,0x0,8
tick,0x7ffdc994fb34,377462233,0,0x0,8
tick,0x7ffdc994fb34,377478092,0,0x0,8
tick,0x7ffdc994fb34,377494205,0,0x0,8
tick,0x7ffdc994fb34,377509621,0,0x0,8
tick,0x7ffdc994fb34,377524792,0,0x0,8
tick,0x7ffdc994fb34,377540942,0,0x0,8
tick,0x7ffdc994fb34,377555709,0,0x0,8
tick,0x7ffdc994fb34,377573196,0,0x0,8
tick,0x7ffdc994fb34,377591329,0,0x0,8
tick,0x7ffdc994fb34,377602995,0,0x0,8
tick,0x7ffdc994fb34,377618123,0,0x0,8
tick,0x7ffdc994fb34,377634387,0,0x0,8
tick,0x7ffdc994fb34,377649085,0,0x0,8
tick,0x7ffdc994fb34,377664145,0,0x0,8
tick,0x7ffdc994fb34,377679535,0,0x0,8
tick,0x7ffdc994fb34,377694059,0,0x0,8
tick,0x7ffdc994fb34,377709255,0,0x0,8
tick,0x7ffdc994fb34,377724667,0,0x0,8
tick,0x7ffdc994fb34,377740538,0,0x0,8
tick,0x7ffdc994fb34,377755832,0,0x0,8
tick,0x7ffdc994fb34,377776259,0,0x0,8
tick,0x7ffdc994fb34,377786016,0,0x0,8
tick,0x7ffdc994fb34,377801209,0,0x0,8
tick,0x7ffdc994fb34,377816965,0,0x0,8
tick,0x7ffdc994fb34,377833023,0,0x0,8
tick,0x7ffdc994fb34,377846860,0,0x0,8
tick,0x7ffdc994fb34,377863318,0,0x0,8
tick,0x7ffdc994fb34,377877302,0,0x0,8
tick,0x7ffdc994fb34,377893578,0,0x0,8
tick,0x7ffdc994fb34,377907708,0,0x0,8
tick,0x7ffdc994fb34,377924343,0,0x0,8
tick,0x7ffdc994fb34,377940004,0,0x0,8
tick,0x7ffdc994fb34,377955063,0,0x0,8
tick,0x7ffdc994fb34,377969542,0,0x0,8
tick,0x7ffdc994fb34,377984540,0,0x0,8
tick,0x7ffdc994fb34,377999417,0,0x0,8
tick,0x7ffdc994fb34,378015413,0,0x0,8
tick,0x7ffdc994fb34,378030843,0,0x0,8
tick,0x7ffdc994fb34,378046750,0,0x0,8
tick,0x7ffdc994fb34,378061631,0,0x0,8
tick,0x7ffdc994fb34,378076656,0,0x0,8
tick,0x7ffdc994fb34,378091945,0,0x0,8
tick,0x7ffdc994fb34,378107166,0,0x0,8
tick,0x7ffdc994fb34,378122612,0,0x0,8
tick,0x7ffdc994fb34,378138424,0,0x0,8
tick,0x7ffdc994fb34,378154069,0,0x0,8
tick,0x7ffdc994fb34,378169171,0,0x0,8
tick,0x7ffdc994fb34,378184452,0,0x0,8
tick,0x7ffdc994fb34,378199227,0,0x0,8
tick,0x7ffdc994fb34,378214844,0,0x0,8
tick,0x7ffdc994fb34,378230119,0,0x0,8
tick,0x7ffdc994fb34,378245463,0,0x0,8
tick,0x7ffdc994fb34,378260543,0,0x0,8
tick,0x7ffdc994fb34,378276254,0,0x0,8
tick,0x7ffdc994fb34,378291749,0,0x0,8
tick,0x7ffdc994fb34,378306526,0,0x0,8
tick,0x7ffdc994fb34,378322122,0,0x0,8
tick,0x7ffdc994fb34,378337410,0,0x0,8
tick,0x7ffdc994fb34,378352561,0,0x0,8
tick,0x7ffdc994fb34,378367997,0,0x0,8
tick,0x7ffdc994fb34,378383753,0,0x0,8
tick,0x7ffdc994fb34,378399254,0,0x0,8
tick,0x7ffdc994fb34,378415201,0,0x0,8
tick,0x7ffdc994fb34,378430201,0,0x0,8
tick,0x7ffdc994fb34,378445861,0,0x0,8
tick,0x7ffdc994fb34,378461056,0,0x0,8
tick,0x7ffdc994fb34,378476696,0,0x0,8
tick,0x7ffdc994fb34,378493004,0,0x0,8
tick,0x7ffdc994fb34,378508884,0,0x0,8
tick,0x7ffdc994fb34,378526241,0,0x0,8
tick,0x7ffdc994fb34,378542201,0,0x0,8
tick,0x7ffdc994fb34,378554965,0,0x0,8
tick,0x7ffdc994fb34,378568560,0,0x0,8
tick,0x7ffdc994fb34,378583992,0,0x0,8
tick,0x7ffdc994fb34,378599756,0,0x0,8
tick,0x7ffdc994fb34,378615246,0,0x0,8
tick,0x7ffdc994fb34,378630635,0,0x0,8
tick,0x7ffdc994fb34,378646699,0,0x0,8
tick,0x7ffdc994fb34,378661633,0,0x0,8
tick,0x7ffdc994fb34,378677438,0,0x0,8
tick,0x7ffdc994fb34,378692978,0,0x0,8
tick,0x7ffdc994fb34,378708888,0,0x0,8
tick,0x7ffdc994fb34,378724151,0,0x0,8
tick,0x7ffdc994fb34,378740241,0,0x0,8
tick,0x7ffdc994fb34,378755749,0,0x0,8
tick,0x7ffdc994fb34,378770853,0,0x0,8
tick,0x7ffdc994fb34,378787066,0,0x0,8
tick,0x7ffdc994fb34,378802807,0,0x0,8
tick,0x7ffdc994fb34,378818292,0,0x0,8
tick,0x7ffdc994fb34,378833631,0,0x0,8
tick,0x7ffdc994fb34,378849793,0,0x0,8
tick,0x7ffdc994fb34,378864733,0,0x0,8
tick,0x7ffdc994fb34,378880455,0,0x0,8
tick,0x7ffdc994fb34,378896310,0,0x0,8
tick,0x7ffdc994fb34,378911647,0,0x0,8
tick,0x7ffdc994fb34,378927243,0,0x0,8
tick,0x7ffdc994fb34,378942643,0,0x0,8
tick,0x7ffdc994fb34,378957421,0,0x0,8
tick,0x7ffdc994fb34,378972758,0,0x0,8
tick,0x7ffdc994fb34,378988560,0,0x0,8
tick,0x7ffdc994fb34,379004566,0,0x0,8
tick,0x7ffdc994fb34,379019892,0,0x0,8
tick,0x7ffdc994fb34,379035414,0,0x0,8
tick,0x7ffdc994fb34,379050764,0,0x0,8
tick,0x7ffdc994fb34,379066692,0,0x0,8
tick,0x7ffdc994fb34,379082596,0,0x0,8
tick,0x7ffdc994fb34,379098350,0,0x0,8
tick,0x7ffdc994fb34,379113885,0,0x0,8
tick,0x7ffdc994fb34,379129577,0,0x0,8
tick,0x7ffdc994fb34,379145619,0,0x0,8
tick,0x7ffdc994fb34,379161183,0,0x0,8
tick,0x7ffdc994fb34,379176974,0,0x0,8
tick,0x7ffdc994fb34,379192191,0,0x0,8
tick,0x7ffdc994fb34,379208186,0,0x0,8
tick,0x7ffdc994fb34,379223093,0,0x0,8
tick,0x7ffdc994fb34,379238420,0,0x0,8
tick,0x7ffdc994fb34,379253727,0,0x0,8
tick,0x7ffdc994fb34,379270511,0,0x0,8
tick,0x7ffdc994fb34,379285582,0,0x0,8
tick,0x7ffdc994fb34,379301079,0,0x0,8
tick,0x7ffdc994fb34,379316063,0,0x0,8
tick,0x7ffdc994fb34,379331345,0,0x0,8
tick,0x7ffdc994fb34,379346966,0,0x0,8
tick,0x7ffdc994fb34,379362887,0,0x0,8
tick,0x7ffdc994fb34,379378404,0,0x0,8
tick,0x7ffdc994fb34,379393859,0,0x0,8
tick,0x7ffdc994fb34,379409400,0,0x0,8
tick,0x7ffdc994fb34,379424774,0,0x0,8
tick,0x7ffdc994fb34,379440202,0,0x0,8
tick,0x7ffdc994fb34,379456286,0,0x0,8
tick,0x7ffdc994fb34,379472034,0,0x0,8
tick,0x7ffdc994fb34,379487939,0,0x0,8
tick,0x7ffdc994fb34,379503642,0,0x0,8
tick,0x7ffdc994fb34,379519362,0,0x0,8
tick,0x7ffdc994fb34,379534987,0,0x0,8
tick,0x7ffdc994fb34,379550801,0,0x0,8
tick,0x7ffdc994fb34,379566201,0,0x0,8
tick,0x7ffdc994fb34,379581777,0,0x0,8
tick,0x7ffdc994fb34,379596712,0,0x0,8
tick,0x7ffdc994fb34,379612529,0,0x0,8
tick,0x7ffdc994fb34,379627631,0,0x0,8
tick,0x7ffdc994fb34,379643268,0,0x0,8
tick,0x7ffdc994fb34,379658990,0,0x0,8
tick,0x7ffdc994fb34,379674070,0,0x0,8
tick,0x7ffdc994fb34,379691646,0,0x0,8
tick,0x7ffdc994fb34,379704809,0,0x0,8
tick,0x7ffdc994fb34,379720037,0,0x0,8
tick,0x7ffdc994fb34,379735738,0,0x0,8
tick,0x7ffdc994fb34,379751246,0,0x0,8
tick,0x7ffdc994fb34,379766722,0,0x0,8
tick,0x7ffdc994fb34,379782524,0,0x0,8
tick,0x7ffdc994fb34,379797676,0,0x0,8
tick,0x7ffdc994fb34,379813158,0,0x0,8
tick,0x7ffdc994fb34,379828557,0,0x0,8
tick,0x7ffdc994fb34,379843859,0,0x0,8
tick,0x7ffdc994fb34,379858976,0,0x0,8
tick,0x7ffdc994fb34,379874517,0,0x0,8
tick,0x7ffdc994fb34,379889771,0,0x0,8
tick,0x7ffdc994fb34,379905526,0,0x0,8
tick,0x7ffdc994fb34,379921080,0,0x0,8
tick,0x7ffdc994fb34,379936211,0,0x0,8
tick,0x7ffdc994fb34,379951352,0,0x0,8
tick,0x7ffdc994fb34,379966783,0,0x0,8
tick,0x7ffdc994fb34,379982619,0,0x0,8
tick,0x7ffdc994fb34,379998133,0,0x0,8
tick,0x7ffdc994fb34,380013288,0,0x0,8
tick,0x7ffdc994fb34,380029258,0,0x0,8
tick,0x7ffdc994fb34,380045371,0,0x0,8
tick,0x7ffdc994fb34,380060648,0,0x0,8
tick,0x7ffdc994fb34,380076517,0,0x0,8
tick,0x7ffdc994fb34,380092357,0,0x0,8
tick,0x7ffdc994fb34,380107801,0,0x0,8
tick,0x7ffdc994fb34,380123112,0,0x0,8
tick,0x7ffdc994fb34,380139096,0,0x0,8
tick,0x7ffdc994fb34,380154974,0,0x0,8
tick,0x7ffdc994fb34,380170565,0,0x0,8
tick,0x7ffdc994fb34,380185832,0,0x0,8
tick,0x7ffdc994fb34,380201425,0,0x0,8
tick,0x7ffdc994fb34,380217247,0,0x0,8
tick,0x7ffdc994fb34,380232909,0,0x0,8
tick,0x7ffdc994fb34,380248304,0,0x0,8
tick,0x7ffdc994fb34,380264345,0,0x0,8
tick,0x7ffdc994fb34,380279725,0,0x0,8
tick,0x7ffdc994fb34,380295582,0,0x0,8
tick,0x7ffdc994fb34,380311274,0,0x0,8
tick,0x7ffdc994fb34,380326647,0,0x0,8
tick,0x7ffdc994fb34,380341600,0,0x0,8
tick,0x7ffdc994fb34,380357721,0,0x0,8
tick,0x7ffdc994fb34,380373572,0,0x0,8
tick,0x7ffdc994fb34,380389091,0,0x0,8
tick,0x7ffdc994fb34,380403993,0,0x0,8
tick,0x7ffdc994fb34,380420127,0,0x0,8
tick,0x7ffdc994fb34,380435256,0,0x0,8
tick,0x7ffdc994fb34,380450723,0,0x0,8
tick,0x7ffdc994fb34,380466231,0,0x0,8
tick,0x7ffdc994fb34,380482115,0,0x0,8
tick,0x7ffdc994fb34,380498137,0,0x0,8
tick,0x7ffdc994fb34,380513595,0,0x0,8
tick,0x7ffdc994fb34,380529096,0,0x0,8
tick,0x7ffdc994fb34,380545062,0,0x0,8
tick,0x7ffdc994fb34,380560068,0,0x0,8
tick,0x7ffdc994fb34,380575821,0,0x0,8
tick,0x7ffdc994fb34,380591941,0,0x0,8
tick,0x7ffdc994fb34,380607056,0,0x0,8
tick,0x7ffdc994fb34,380622571,0,0x0,8
tick,0x7ffdc994fb34,380638412,0,0x0,8
tick,0x7ffdc994fb34,380654021,0,0x0,8
tick,0x7ffdc994fb34,380669410,0,0x0,8
tick,0x7ffdc994fb34,380685120,0,0x0,8
tick,0x7ffdc994fb34,380700534,0,0x0,8
tick,0x7ffdc994fb34,380715343,0,0x0,8
tick,0x7ffdc994fb34,380731415,0,0x0,8
tick,0x7ffdc994fb34,380746864,0,0x0,8
tick,0x7ffdc994fb34,380761899,0,0x0,8
tick,0x7ffdc994fb34,380777268,0,0x0,8
tick,0x7ffdc994fb34,380793117,0,0x0,8
tick,0x7ffdc994fb34,380808961,0,0x0,8
tick,0x7ffdc994fb34,380825051,0,0x0,8
tick,0x7ffdc994fb34,380840284,0,0x0,8
tick,0x7ffdc994fb34,380856058,0,0x0,8
tick,0x7ffdc994fb34,380871601,0,0x0,8
tick,0x7ffdc994fb34,380887440,0,0x0,8
tick,0x7ffdc994fb34,380902384,0,0x0,8
tick,0x7ffdc994fb34,380918533,0,0x0,8
tick,0x7ffdc994fb34,380934057,0,0x0,8
tick,0x7ffdc994fb34,380950145,0,0x0,8
tick,0x7ffdc994fb34,380965422,0,0x0,8
tick,0x7ffdc994fb34,380980566,0,0x0,8
tick,0x7ffdc994fb34,380995578,0,0x0,8
tick,0x7ffdc994fb34,381010931,0,0x0,8
tick,0x7ffdc994fb34,381026505,0,0x0,8
tick,0x7ffdc994fb34,381042259,0,0x0,8
tick,0x7ffdc994fb34,381057828,0,0x0,8
tick,0x7ffdc994fb34,381072788,0,0x0,8
tick,0x7ffdc994fb34,381088448,0,0x0,8
tick,0x7ffdc994fb34,381103350,0,0x0,8
tick,0x7ffdc994fb34,381119093,0,0x0,8
tick,0x7ffdc994fb34,381134529,0,0x0,8
tick,0x7ffdc994fb34,381150593,0,0x0,8
tick,0x7ffdc994fb34,381166162,0,0x0,8
tick,0x7ffdc994fb34,381181346,0,0x0,8
tick,0x7ffdc994fb34,381197296,0,0x0,8
tick,0x7ffdc994fb34,381213524,0,0x0,8
tick,0x7ffdc994fb34,381229577,0,0x0,8
tick,0x7ffdc994fb34,381245207,0,0x0,8
tick,0x7ffdc994fb34,381260493,0,0x0,8
tick,0x7ffdc994fb34,381276501,0,0x0,8
tick,0x7ffdc994fb34,381292340,0,0x0,8
tick,0x7ffdc994fb34,381307824,0,0x0,8
tick,0x7ffdc994fb34,381323260,0,0x0,8
tick,0x7ffdc994fb34,381338827,0,0x0,8
tick,0x7ffdc994fb34,381354058,0,0x0,8
tick,0x7ffdc994fb34,381369381,0,0x0,8
tick,0x7ffdc994fb34,381384946,0,0x0,8
tick,0x7ffdc994fb34,381400362,0,0x0,8
tick,0x7ffdc994fb34,381415757,0,0x0,8
tick,0x7ffdc994fb34,381431698,0,0x0,8
tick,0x7ffdc994fb34,381447216,0,0x0,8
tick,0x7ffdc994fb34,381462398,0,0x0,8
tick,0x7ffdc994fb34,381478375,0,0x0,8
tick,0x7ffdc994fb34,381493203,0,0x0,8
tick,0x7ffdc994fb34,381509237,0,0x0,8
tick,0x7ffdc994fb34,381524812,0,0x0,8
tick,0x7ffdc994fb34,381540665,0,0x0,8
tick,0x7ffdc994fb34,381556347,0,0x0,8
tick,0x7ffdc994fb34,381571380,0,0x0,8
tick,0x7ffdc994fb34,381587006,0,0x0,8
tick,0x7ffdc994fb34,381603023,0,0x0,8
tick,0x7ffdc994fb34,381618510,0,0x0,8
tick,0x7ffdc994fb34,381633754,0,0x0,8
tick,0x7ffdc994fb34,381649265,0,0x0,8
tick,0x7ffdc994fb34,381664864,0,0x0,8
tick,0x7ffdc994fb34,381680013,0,0x0,8
tick,0x7ffdc994fb34,381695186,0,0x0,8
tick,0x7ffdc994fb34,381710949,0,0x0,8
tick,0x7ffdc994fb34,381727012,0,0x0,8
tick,0x7ffdc994fb34,381742016,0,0x0,8
tick,0x7ffdc994fb34,381758399,0,0x0,8
tick,0x7ffdc994fb34,381774394,0,0x0,8
tick,0x7ffdc994fb34,381790015,0,0x0,8
tick,0x7ffdc994fb34,381805743,0,0x0,8
tick,0x7ffdc994fb34,381820993,0,0x0,8
tick,0x7ffdc994fb34,381835946,0,0x0,8
tick,0x7ffdc994fb34,381851224,0,0x0,8
tick,0x7ffdc994fb34,381866788,0,0x0,8
tick,0x7ffdc994fb34,381881596,0,0x0,8
tick,0x7ffdc994fb34,381897924,0,0x0,8
tick,0x7ffdc994fb34,381913031,0,0x0,8
tick,0x7ffdc994fb34,381928529,0,0x0,8
tick,0x7ffdc994fb34,381943672,0,0x0,8
tick,0x7ffdc994fb34,381959337,0,0x0,8
tick,0x7ffdc994fb34,381974776,0,0x0,8
tick,0x7ffdc994fb34,381989974,0,0x0,8
tick,0x7ffdc994fb34,382005871,0,0x0,8
tick,0x7ffdc994fb34,382022051,0,0x0,8
tick,0x7ffdc994fb34,382037123,0,0x0,8
tick,0x7ffdc994fb34,382052557,0,0x0,8
tick,0x7ffdc994fb34,382068542,0,0x0,8
tick,0x7ffdc994fb34,382083966,0,0x0,8
tick,0x7ffdc994fb34,382099029,0,0x0,8
tick,0x7ffdc994fb34,382114255,0,0x0,8
tick,0x7ffdc994fb34,382130101,0,0x0,8
tick,0x7ffdc994fb34,382145606,0,0x0,8
tick,0x7ffdc994fb34,382160816,0,0x0,8
tick,0x7ffdc994fb34,382176386,0,0x0,8
tick,0x7ffdc994fb34,382191850,0,0x0,8
tick,0x7ffdc994fb34,382207480,0,0x0,8
tick,0x7ffdc994fb34,382222646,0,0x0,8
tick,0x7ffdc994fb34,382238721,0,0x0,8
tick,0x7ffdc994fb34,382255040,0,0x0,8
tick,0x7ffdc994fb34,382270634,0,0x0,8
tick,0x7ffdc994fb34,382286915,0,0x0,8
tick,0x7ffdc994fb34,382302816,0,0x0,8
tick,0x7ffdc994fb34,382317928,0,0x0,8
tick,0x7ffdc994fb34,382333534,0,0x0,8
tick,0x7ffdc994fb34,382349117,0,0x0,8
tick,0x7ffdc994fb34,382364732,0,0x0,8
tick,0x7ffdc994fb34,382380276,0,0x0,8
tick,0x7ffdc994fb34,382395566,0,0x0,8
tick,0x7ffdc994fb34,382410993,0,0x0,8
tick,0x7ffdc994fb34,382426088,0,0x0,8
tick,0x7ffdc994fb34,382441868,0,0x0,8
tick,0x7ffdc994fb34,382456780,0,0x0,8
tick,0x7ffdc994fb34,382471939,0,0x0,8
tick,0x7ffdc994fb34,382487469,0,0x0,8
tick,0x7ffdc994fb34,382502910,0,0x0,8
tick,0x7ffdc994fb34,382518943,0,0x0,8
tick,0x7ffdc994fb34,382534536,0,0x0,8
tick,0x7ffdc994fb34,382550132,0,0x0,8
tick,0x7ffdc994fb34,382565965,0,0x0,8
tick,0x7ffdc994fb34,382580528,0,0x0,8
tick,0x7ffdc994fb34,382596687,0,0x0,8
tick,0x7ffdc994fb34,382611770,0,0x0,8
tick,0x7ffdc994fb34,382627091,0,0x0,8
tick,0x7ffdc994fb34,382642632,0,0x0,8
tick,0x7ffdc994fb34,382657829,0,0x0,8
tick,0x7ffdc994fb34,382673430,0,0x0,8
tick,0x7ffdc994fb34,382688691,0,0x0,8
tick,0x7ffdc994fb34,382704256,0,0x0,8
tick,0x7ffdc994fb34,382720109,0,0x0,8
tick,0x7ffdc994fb34,382735373,0,0x0,8
tick,0x7ffdc994fb34,382750654,0,0x0,8
tick,0x7ffdc994fb34,382766844,0,0x0,8
tick,0x7ffdc994fb34,382782369,0,0x0,8
tick,0x7ffdc994fb34,382797538,0,0x0,8
tick,0x7ffdc994fb34,382812836,0,0x0,8
tick,0x7ffdc994fb34,382828123,0,0x0,8
tick,0x7ffdc994fb34,382843495,0,0x0,8
tick,0x7ffdc994fb34,382858481,0,0x0,8
tick,0x7ffdc994fb34,382873877,0,0x0,8
tick,0x7ffdc994fb34,382889434,0,0x0,8
tick,0x7ffdc994fb34,382904389,0,0x0,8
tick,0x7ffdc994fb34,382919490,0,0x0,8
tick,0x7ffdc994fb34,382934669,0,0x0,8
tick,0x7ffdc994fb34,382949727,0,0x0,8
tick,0x7ffdc994fb34,382965637,0,0x0,8
tick,0x7ffdc994fb34,382981251,0,0x0,8
tick,0x7ffdc994fb34,382996787,0,0x0,8
tick,0x7ffdc994fb34,383011420,0,0x0,8
tick,0x7ffdc994fb34,383026588,0,0x0,8
tick,0x7ffdc994fb34,383042073,0,0x0,8
tick,0x7ffdc994fb34,383057700,0,0x0,8
tick,0x7ffdc994fb34,383073975,0,0x0,8
tick,0x7ffdc994fb34,383090158,0,0x0,8
tick,0x7ffdc994fb34,383105454,0,0x0,8
tick,0x7ffdc994fb34,383120422,0,0x0,8
tick,0x7ffdc994fb34,383136198,0,0x0,8
tick,0x7ffdc994fb34,383151495,0,0x0,8
tick,0x7ffdc994fb34,383167021,0,0x0,8
tick,0x7ffdc994fb34,383182648,0,0x0,8
tick,0x7ffdc994fb34,383198569,0,0x0,8
tick,0x7ffdc994fb34,383213971,0,0x0,8
tick,0x7ffdc994fb34,383229875,0,0x0,8
tick,0x7ffdc994fb34,383245401,0,0x0,8
tick,0x7ffdc994fb34,383260620,0,0x0,8
tick,0x7ffdc994fb34,383276343,0,0x0,8
tick,0x7ffdc994fb34,383292209,0,0x0,8
tick,0x7ffdc994fb34,383307285,0,0x0,8
tick,0x7ffdc994fb34,383323562,0,0x0,8
tick,0x7ffdc994fb34,383339067,0,0x0,8
tick,0x7ffdc994fb34,383354190,0,0x0,8
tick,0x7ffdc994fb34,383370352,0,0x0,8
tick,0x7ffdc994fb34,383385795,0,0x0,8
tick,0x7ffdc994fb34,383401002,0,0x0,8
tick,0x7ffdc994fb34,383417066,0,0x0,8
tick,0x7ffdc994fb34,383432060,0,0x0,8
tick,0x7ffdc994fb34,383448721,0,0x0,8
tick,0x7ffdc994fb34,383467379,0,0x0,8
tick,0x7ffdc994fb34,383484058,0,0x0,8
tick,0x7ffdc994fb34,383495809,0,0x0,8
tick,0x7ffdc994fb34,383514645,0,0x0,8
tick,0x7ffdc994fb34,383524674,0,0x0,8
tick,0x7ffdc994fb34,383540898,0,0x0,8
tick,0x7ffdc994fb34,383556173,0,0x0,8
tick,0x7ffdc994fb34,383571316,0,0x0,8
tick,0x7ffdc994fb34,383586735,0,0x0,8
tick,0x7ffdc994fb34,383602708,0,0x0,8
tick,0x7ffdc994fb34,383618003,0,0x0,8
tick,0x7ffdc994fb34,383633489,0,0x0,8
tick,0x7ffdc994fb34,383649309,0,0x0,8
tick,0x7ffdc994fb34,383665057,0,0x0,8
tick,0x7ffdc994fb34,383681399,0,0x0,8
tick,0x7ffdc994fb34,383696818,0,0x0,8
tick,0x7ffdc994fb34,383711866,0,0x0,8
tick,0x7ffdc994fb34,383727362,0,0x0,8
tick,0x7ffdc994fb34,383742801,0,0x0,8
tick,0x7ffdc994fb34,383758252,0,0x0,8
tick,0x7ffdc994fb34,383773533,0,0x0,8
tick,0x7ffdc994fb34,383789273,0,0x0,8
tick,0x7ffdc994fb34,383805312,0,0x0,8
tick,0x7ffdc994fb34,383820640,0,0x0,8
tick,0x7ffdc994fb34,383836529,0,0x0,8
tick,0x7ffdc994fb34,383852271,0,0x0,8
tick,0x7ffdc994fb34,383867603,0,0x0,8
tick,0x7ffdc994fb34,383883067,0,0x0,8
tick,0x7ffdc994fb34,383898809,0,0x0,8
tick,0x7ffdc994fb34,383914035,0,0x0,8
tick,0x7ffdc994fb34,383928495,0,0x0,8
tick,0x7ffdc994fb34,383943676,0,0x0,8
tick,0x7ffdc994fb34,383959029,0,0x0,8
tick,0x7ffdc994fb34,383974530,0,0x0,8
tick,0x7ffdc994fb34,383989993,0,0x0,8
tick,0x7ffdc994fb34,384005388,0,0x0,8
tick,0x7ffdc994fb34,384020943,0,0x0,8
tick,0x7ffdc994fb34,384036361,0,0x0,8
tick,0x7ffdc994fb34,384051634,0,0x0,8
tick,0x7ffdc994fb34,384067789,0,0x0,8
tick,0x7ffdc994fb34,384084981,0,0x0,8
tick,0x7ffdc994fb34,384097965,0,0x0,8
tick,0x7ffdc994fb34,384113445,0,0x0,8
tick,0x7ffdc994fb34,384128922,0,0x0,8
tick,0x7ffdc994fb34,384144066,0,0x0,8
tick,0x7ffdc994fb34,384159663,0,0x0,8
tick,0x7ffdc994fb34,384174207,0,0x0,8
tick,0x7ffdc994fb34,384190476,0,0x0,8
tick,0x7ffdc994fb34,384205406,0,0x0,8
tick,0x7ffdc994fb34,384220792,0,0x0,8
tick,0x7ffdc994fb34,384236637,0,0x0,8
tick,0x7ffdc994fb34,384252888,0,0x0,8
tick,0x7ffdc994fb34,384270561,0,0x0,8
tick,0x7ffdc994fb34,384284347,0,0x0,8
tick,0x7ffdc994fb34,384300206,0,0x0,8
tick,0x7ffdc994fb34,384316253,0,0x0,8
tick,0x7ffdc994fb34,384331887,0,0x0,8
tick,0x7ffdc994fb34,384346777,0,0x0,8
tick,0x7ffdc994fb34,384361997,0,0x0,8
tick,0x7ffdc994fb34,384377048,0,0x0,8
tick,0x7ffdc994fb34,384393068,0,0x0,8
tick,0x7ffdc994fb34,384409053,0,0x0,8
tick,0x7ffdc994fb34,384423932,0,0x0,8
tick,0x7ffdc994fb34,384439062,0,0x0,8
tick,0x7ffdc994fb34,384454336,0,0x0,8
tick,0x7ffdc994fb34,384469609,0,0x0,8
tick,0x7ffdc994fb34,384485537,0,0x0,8
tick,0x7ffdc994fb34,384501669,0,0x0,8
tick,0x7ffdc994fb34,384517620,0,0x0,8
tick,0x7ffdc994fb34,384532775,0,0x0,8
tick,0x7ffdc994fb34,384548893,0,0x0,8
tick,0x7ffdc994fb34,384565165,0,0x0,8
tick,0x7ffdc994fb34,384580019,0,0x0,8
tick,0x7ffdc994fb34,384595490,0,0x0,8
tick,0x7ffdc994fb34,384611326,0,0x0,8
tick,0x7ffdc994fb34,384626841,0,0x0,8
tick,0x7ffdc994fb34,384642097,0,0x0,8
tick,0x7ffdc994fb34,384657798,0,0x0,8
tick,0x7ffdc994fb34,384673344,0,0x0,8
tick,0x7ffdc994fb34,384689528,0,0x0,8
tick,0x7ffdc994fb34,384705728,0,0x0,8
tick,0x7ffdc994fb34,384721117,0,0x0,8
tick,0x7ffdc994fb34,384736270,0,0x0,8
tick,0x7ffdc994fb34,384752014,0,0x0,8
tick,0x7ffdc994fb34,384767491,0,0x0,8
tick,0x7ffdc994fb34,384783290,0,0x0,8
tick,0x7ffdc994fb34,384798881,0,0x0,8
tick,0x7ffdc994fb34,384814003,0,0x0,8
tick,0x7ffdc994fb34,384829477,0,0x0,8
tick,0x7ffdc994fb34,384844968,0,0x0,8
tick,0x7ffdc994fb34,384860382,0,0x0,8
tick,0x7ffdc994fb34,384876365,0,0x0,8
tick,0x7ffdc994fb34,384892183,0,0x0,8
tick,0x7ffdc994fb34,384908281,0,0x0,8
tick,0x7ffdc994fb34,384924016,0,0x0,8
tick,0x7ffdc994fb34,384939851,0,0x0,8
tick,0x7ffdc994fb34,384954994,0,0x0,8
tick,0x7ffdc994fb34,384970107,0,0x0,8
tick,0x7ffdc994fb34,384985659,0,0x0,8
tick,0x7ffdc994fb34,385001662,0,0x0,8
tick,0x7ffdc994fb34,385016653,0,0x0,8
tick,0x7ffdc994fb34,385031929,0,0x0,8
tick,0x7ffdc994fb34,385047499,0,0x0,8
tick,0x7ffdc994fb34,385062958,0,0x0,8
tick,0x7ffdc994fb34,385078673,0,0x0,8
tick,0x7ffdc994fb34,385094039,0,0x0,8
tick,0x7ffdc994fb34,385109507,0,0x0,8
tick,0x7ffdc994fb34,385124716,0,0x0,8
tick,0x7ffdc994fb34,385140682,0,0x0,8
tick,0x7ffdc994fb34,385156256,0,0x0,8
tick,0x7ffdc994fb34,385171471,0,0x0,8
tick,0x7ffdc994fb34,385187129,0,0x0,8
tick,0x7ffdc994fb34,385203206,0,0x0,8
tick,0x7ffdc994fb34,385218785,0,0x0,8
tick,0x7ffdc994fb34,385234964,0,0x0,8
tick,0x7ffdc994fb34,385250787,0,0x0,8
tick,0x7ffdc994fb34,385265977,0,0x0,8
tick,0x7ffdc994fb34,385281605,0,0x0,8
tick,0x7ffdc994fb34,385297594,0,0x0,8
tick,0x7ffdc994fb34,385312960,0,0x0,8
tick,0x7ffdc994fb34,385328789,0,0x0,8
tick,0x7ffdc994fb34,385344112,0,0x0,8
tick,0x7ffdc994fb34,385359965,0,0x0,8
tick,0x7ffdc994fb34,385375906,0,0x0,8
tick,0x7ffdc994fb34,385390995,0,0x0,8
tick,0x7ffdc994fb34,385406572,0,0x0,8
tick,0x7ffdc994fb34,385422208,0,0x0,8
tick,0x7ffdc994fb34,385438181,0,0x0,8
tick,0x7ffdc994fb34,385453956,0,0x0,8
tick,0x7ffdc994fb34,385470167,0,0x0,8
tick,0x7ffdc994fb34,385485794,0,0x0,8
tick,0x7ffdc994fb34,385501519,0,0x0,8
tick,0x7ffdc994fb34,385516776,0,0x0,8
tick,0x7ffdc994fb34,385532442,0,0x0,8
tick,0x7ffdc994fb34,385547348,0,0x0,8
tick,0x7ffdc994fb34,385562873,0,0x0,8
tick,0x7ffdc994fb34,385578406,0,0x0,8
tick,0x7ffdc994fb34,385593297,0,0x0,8
tick,0x7ffdc994fb34,385609071,0,0x0,8
tick,0x7ffdc994fb34,385624354,0,0x0,8
tick,0x7ffdc994fb34,385640335,0,0x0,8
tick,0x7ffdc994fb34,385656141,0,0x0,8
tick,0x7ffdc994fb34,385672322,0,0x0,8
tick,0x7ffdc994fb34,385687801,0,0x0,8
tick,0x7ffdc994fb34,385703175,0,0x0,8
tick,0x7ffdc994fb34,385719313,0,0x0,8
tick,0x7ffdc994fb34,385734586,0,0x0,8
tick,0x7ffdc994fb34,385750331,0,0x0,8
tick,0x7ffdc994fb34,385765293,0,0x0,8
tick,0x7ffdc994fb34,385781800,0,0x0,8
tick,0x7ffdc994fb34,385797159,0,0x0,8
tick,0x7ffdc994fb34,385812801,0,0x0,8
tick,0x7ffdc994fb34,385827831,0,0x0,8
tick,0x7ffdc994fb34,385843254,0,0x0,8
tick,0x7ffdc994fb34,385858797,0,0x0,8
tick,0x7ffdc994fb34,385874209,0,0x0,8
tick,0x7ffdc994fb34,385889372,0,0x0,8
tick,0x7ffdc994fb34,385904799,0,0x0,8
tick,0x7ffdc994fb34,385920208,0,0x0,8
tick,0x7ffdc994fb34,385935885,0,0x0,8
tick,0x7ffdc994fb34,385951097,0,0x0,8
tick,0x7ffdc994fb34,385967131,0,0x0,8
tick,0x7ffdc994fb34,385982522,0,0x0,8
tick,0x7ffdc994fb34,385997786,0,0x0,8
tick,0x7ffdc994fb34,386013053,0,0x0,8
tick,0x7ffdc994fb34,386028992,0,0x0,8
tick,0x7ffdc994fb34,386044315,0,0x0,8
tick,0x7ffdc994fb34,386059428,0,0x0,8
tick,0x7ffdc994fb34,386075143,0,0x0,8
tick,0x7ffdc994fb34,386090366,0,0x0,8
tick,0x7ffdc994fb34,386106252,0,0x0,8
tick,0x7ffdc994fb34,386121593,0,0x0,8
tick,0x7ffdc994fb34,386137541,0,0x0,8
tick,0x7ffdc994fb34,386153453,0,0x0,8
tick,0x7ffdc994fb34,386169592,0,0x0,8
tick,0x7ffdc994fb34,386185578,0,0x0,8
tick,0x7ffdc994fb34,386201519,0,0x0,8
tick,0x7ffdc994fb34,386217658,0,0x0,8
tick,0x7ffdc994fb34,386233462,0,0x0,8
tick,0x7ffdc994fb34,386249216,0,0x0,8
tick,0x7ffdc994fb34,386265257,0,0x0,8
tick,0x7ffdc994fb34,386281185,0,0x0,8
tick,0x7ffdc994fb34,386296411,0,0x0,8
tick,0x7ffdc994fb34,386312381,0,0x0,8
tick,0x7ffdc994fb34,386327908,0,0x0,8
tick,0x7ffdc994fb34,386344341,0,0x0,8
tick,0x7ffdc994fb34,386358661,0,0x0,8
tick,0x7ffdc994fb34,386373744,0,0x0,8
tick,0x7ffdc994fb34,386389684,0,0x0,8
tick,0x7ffdc994fb34,386405549,0,0x0,8
tick,0x7ffdc994fb34,386421611,0,0x0,8
tick,0x7ffdc994fb34,386437670,0,0x0,8
tick,0x7ffdc994fb34,386453697,0,0x0,8
tick,0x7ffdc994fb34,386469681,0,0x0,8
tick,0x7ffdc994fb34,386484997,0,0x0,8
tick,0x7ffdc994fb34,386500840,0,0x0,8
tick,0x7ffdc994fb34,386517129,0,0x0,8
tick,0x7ffdc994fb34,386531896,0,0x0,8
tick,0x7ffdc994fb34,386547889,0,0x0,8
tick,0x7ffdc994fb34,386564098,0,0x0,8
tick,0x7ffdc994fb34,386579403,0,0x0,8
tick,0x7ffdc994fb34,386595302,0,0x0,8
tick,0x7ffdc994fb34,386611440,0,0x0,8
tick,0x7ffdc994fb34,386627178,0,0x0,8
tick,0x7ffdc994fb34,386642442,0,0x0,8
tick,0x7ffdc994fb34,386657837,0,0x0,8
tick,0x7ffdc994fb34,386673571,0,0x0,8
tick,0x7ffdc994fb34,386689222,0,0x0,8
tick,0x7ffdc994fb34,386705194,0,0x0,8
tick,0x7ffdc994fb34,386721242,0,0x0,8
tick,0x7ffdc994fb34,386737321,0,0x0,8
tick,0x7ffdc994fb34,386753110,0,0x0,8
tick,0x7ffdc994fb34,386768779,0,0x0,8
tick,0x7ffdc994fb34,386784354,0,0x0,8
tick,0x7ffdc994fb34,386800214,0,0x0,8
tick,0x7ffdc994fb34,386816070,0,0x0,8
tick,0x7ffdc994fb34,386831948,0,0x0,8
tick,0x7ffdc994fb34,386847754,0,0x0,8
tick,0x7ffdc994fb34,386863028,0,0x0,8
tick,0x7ffdc994fb34,386879343,0,0x0,8
tick,0x7ffdc994fb34,386894615,0,0x0,8
tick,0x7ffdc994fb34,386910689,0,0x0,8
tick,0x7ffdc994fb34,386926430,0,0x0,8
tick,0x7ffdc994fb34,386941301,0,0x0,8
tick,0x7ffdc994fb34,386957136,0,0x0,8
tick,0x7ffdc994fb34,386972758,0,0x0,8
tick,0x7ffdc994fb34,386988522,0,0x0,8
tick,0x7ffdc994fb34,387003904,0,0x0,8
tick,0x7ffdc994fb34,387019180,0,0x0,8
tick,0x7ffdc994fb34,387034464,0,0x0,8
tick,0x7ffdc994fb34,387049950,0,0x0,8
tick,0x7ffdc994fb34,387065651,0,0x0,8
tick,0x7ffdc994fb34,387080599,0,0x0,8
tick,0x7ffdc994fb34,387096455,0,0x0,8
tick,0x7ffdc994fb34,387111700,0,0x0,8
tick,0x7ffdc994fb34,387127327,0,0x0,8
tick,0x7ffdc994fb34,387142865,0,0x0,8
tick,0x7ffdc994fb34,387158622,0,0x0,8
tick,0x7ffdc994fb34,387173923,0,0x0,8
tick,0x7ffdc994fb34,387189429,0,0x0,8
tick,0x7ffdc994fb34,387205105,0,0x0,8
tick,0x7ffdc994fb34,387220433,0,0x0,8
tick,0x7ffdc994fb34,387235813,0,0x0,8
tick,0x7ffdc994fb34,387251434,0,0x0,8
tick,0x7ffdc994fb34,387267002,0,0x0,8
tick,0x7ffdc994fb34,387282435,0,0x0,8
tick,0x7ffdc994fb34,387297920,0,0x0,8
tick,0x7ffdc994fb34,387313777,0,0x0,8
tick,0x7ffdc994fb34,387329849,0,0x0,8
tick,0x7ffdc994fb34,387345374,0,0x0,8
tick,0x7ffdc994fb34,387361171,0,0x0,8
tick,0x7ffdc994fb34,387376909,0,0x0,8
tick,0x7ffdc994fb34,387392823,0,0x0,8
tick,0x7ffdc994fb34,387408938,0,0x0,8
tick,0x7ffdc994fb34,387424886,0,0x0,8
tick,0x7ffdc994fb34,387440818,0,0x0,8
tick,0x7ffdc994fb34,387456247,0,0x0,8
tick,0x7ffdc994fb34,387471758,0,0x0,8
tick,0x7ffdc994fb34,387486965,0,0x0,8
tick,0x7ffdc994fb34,387502738,0,0x0,8
tick,0x7ffdc994fb34,387518485,0,0x0,8
tick,0x7ffdc994fb34,387534194,0,0x0,8
tick,0x7ffdc994fb34,387550164,0,0x0,8
tick,0x7ffdc994fb34,387565222,0,0x0,8
tick,0x7ffdc994fb34,387581063,0,0x0,8
tick,0x7ffdc994fb34,387596936,0,0x0,8
tick,0x7ffdc994fb34,387612704,0,0x0,8
tick,0x7ffdc994fb34,387628765,0,0x0,8
tick,0x7ffdc994fb34,387644581,0,0x0,8
tick,0x7ffdc994fb34,387659334,0,0x0,8
tick,0x7ffdc994fb34,387675514,0,0x0,8
tick,0x7ffdc994fb34,387691315,0,0x0,8
tick,0x7ffdc994fb34,387706697,0,0x0,8
tick,0x7ffdc994fb34,387722200,0,0x0,8
tick,0x7ffdc994fb34,387737766,0,0x0,8
tick,0x7ffdc994fb34,387753041,0,0x0,8
tick,0x7ffdc994fb34,387768146,0,0x0,8
tick,0x7ffdc994fb34,387783093,0,0x0,8
tick,0x7ffdc994fb34,387798804,0,0x0,8
tick,0x7ffdc994fb34,387813992,0,0x0,8
tick,0x7ffdc994fb34,387830180,0,0x0,8
tick,0x7ffdc994fb34,387845105,0,0x0,8
tick,0x7ffdc994fb34,387860642,0,0x0,8
tick,0x7ffdc994fb34,387876753,0,0x0,8
tick,0x7ffdc994fb34,387892809,0,0x0,8
tick,0x7ffdc994fb34,387908395,0,0x0,8
tick,0x7ffdc994fb34,387923315,0,0x0,8
tick,0x7ffdc994fb34,387938454,0,0x0,8
tick,0x7ffdc994fb34,387954405,0,0x0,8
tick,0x7ffdc994fb34,387970125,0,0x0,8
tick,0x7ffdc994fb34,387985479,0,0x0,8
tick,0x7ffdc994fb34,388001860,0,0x0,8
tick,0x7ffdc994fb34,388017007,0,0x0,8
tick,0x7ffdc994fb34,388032329,0,0x0,8
tick,0x7ffdc994fb34,388047338,0,0x0,8
tick,0x7ffdc994fb34,388063231,0,0x0,8
tick,0x7ffdc994fb34,388079321,0,0x0,8
tick,0x7ffdc994fb34,388094459,0,0x0,8
tick,0x7ffdc994fb34,388109865,0,0x0,8
tick,0x7ffdc994fb34,388125787,0,0x0,8
tick,0x7ffdc994fb34,388141109,0,0x0,8
tick,0x7ffdc994fb34,388156964,0,0x0,8
tick,0x7ffdc994fb34,388173153,0,0x0,8
tick,0x7ffdc994fb34,388189796,0,0x0,8
tick,0x7ffdc994fb34,388205393,0,0x0,8
tick,0x7ffdc994fb34,388221399,0,0x0,8
tick,0x7ffdc994fb34,388236900,0,0x0,8
tick,0x7ffdc994fb34,388252704,0,0x0,8
tick,0x7ffdc994fb34,388267900,0,0x0,8
tick,0x7ffdc994fb34,388283351,0,0x0,8
tick,0x7ffdc994fb34,388298802,0,0x0,8
tick,0x7ffdc994fb34,388314234,0,0x0,8
tick,0x7ffdc994fb34,388329951,0,0x0,8
tick,0x7ffdc994fb34,388345404,0,0x0,8
tick,0x7ffdc994fb34,388361104,0,0x0,8
tick,0x7ffdc994fb34,388376164,0,0x0,8
tick,0x7ffdc994fb34,388392100,0,0x0,8
tick,0x7ffdc994fb34,388407860,0,0x0,8
tick,0x7ffdc994fb34,388422984,0,0x0,8
tick,0x7ffdc994fb34,388437892,0,0x0,8
tick,0x7ffdc994fb34,388453311,0,0x0,8
tick,0x7ffdc994fb34,388469447,0,0x0,8
tick,0x7ffdc994fb34,388484848,0,0x0,8
tick,0x7ffdc994fb34,388500076,0,0x0,8
tick,0x7ffdc994fb34,388516028,0,0x0,8
tick,0x7ffdc994fb34,388531831,0,0x0,8
tick,0x7ffdc994fb34,388547268,0,0x0,8
tick,0x7ffdc994fb34,388563129,0,0x0,8
tick,0x7ffdc994fb34,388578528,0,0x0,8
tick,0x7ffdc994fb34,388594112,0,0x0,8
tick,0x7ffdc994fb34,388609843,0,0x0,8
tick,0x7ffdc994fb34,388625087,0,0x0,8
tick,0x7ffdc994fb34,388640676,0,0x0,8
tick,0x7ffdc994fb34,388656586,0,0x0,8
tick,0x7ffdc994fb34,388672337,0,0x0,8
tick,0x7ffdc994fb34,388687461,0,0x0,8
tick,0x7ffdc994fb34,388703624,0,0x0,8
tick,0x7ffdc994fb34,388719636,0,0x0,8
tick,0x7ffdc994fb34,388734735,0,0x0,8
tick,0x7ffdc994fb34,388750272,0,0x0,8
tick,0x7ffdc994fb34,388765735,0,0x0,8
tick,0x7ffdc994fb34,388781277,0,0x0,8
tick,0x7ffdc994fb34,388797072,0,0x0,8
tick,0x7ffdc994fb34,388812499,0,0x0,8
tick,0x7ffdc994fb34,388828386,0,0x0,8
tick,0x7ffdc994fb34,388843615,0,0x0,8
tick,0x7ffdc994fb34,388859132,0,0x0,8
tick,0x7ffdc994fb34,388874590,0,0x0,8
tick,0x7ffdc994fb34,388890624,0,0x0,8
tick,0x7ffdc994fb34,388905951,0,0x0,8
tick,0x7ffdc994fb34,388921546,0,0x0,8
tick,0x7ffdc994fb34,388937246,0,0x0,8
tick,0x7ffdc994fb34,388953352,0,0x0,8
tick,0x7ffdc994fb34,388969104,0,0x0,8
tick,0x7ffdc994fb34,388984415,0,0x0,8
tick,0x7ffdc994fb34,389000388,0,0x0,8
tick,0x7ffdc994fb34,389015675,0,0x0,8
tick,0x7ffdc994fb34,389031349,0,0x0,8
tick,0x7ffdc994fb34,389047389,0,0x0,8
tick,0x7ffdc994fb34,389062563,0,0x0,8
tick,0x7ffdc994fb34,389078097,0,0x0,8
tick,0x7ffdc994fb34,389093855,0,0x0,8
tick,0x7ffdc994fb34,389109564,0,0x0,8
tick,0x7ffdc994fb34,389125497,0,0x0,8
tick,0x7ffdc994fb34,389140818,0,0x0,8
tick,0x7ffdc994fb34,389156437,0,0x0,8
tick,0x7ffdc994fb34,389171877,0,0x0,8
tick,0x7ffdc994fb34,389187524,0,0x0,8
tick,0x7ffdc994fb34,389202669,0,0x0,8
tick,0x7ffdc994fb34,389218013,0,0x0,8
tick,0x7ffdc994fb34,389233144,0,0x0,8
tick,0x7ffdc994fb34,389249104,0,0x0,8
tick,0x7ffdc994fb34,389264667,0,0x0,8
tick,0x7ffdc994fb34,389280590,0,0x0,8
tick,0x7ffdc994fb34,389296214,0,0x0,8
tick,0x7ffdc994fb34,389311686,0,0x0,8
tick,0x7ffdc994fb34,389327429,0,0x0,8
tick,0x7ffdc994fb34,389342662,0,0x0,8
tick,0x7ffdc994fb34,389358297,0,0x0,8
tick,0x7ffdc994fb34,389373430,0,0x0,8
tick,0x7ffdc994fb34,389388848,0,0x0,8
tick,0x7ffdc994fb34,389404421,0,0x0,8
tick,0x7ffdc994fb34,389420359,0,0x0,8
tick,0x7ffdc994fb34,389435569,0,0x0,8
tick,0x7ffdc994fb34,389451357,0,0x0,8
tick,0x7ffdc994fb34,389466971,0,0x0,8
tick,0x7ffdc994fb34,389482389,0,0x0,8
tick,0x7ffdc994fb34,389497940,0,0x0,8
tick,0x7ffdc994fb34,389513555,0,0x0,8
tick,0x7ffdc994fb34,389529289,0,0x0,8
tick,0x7ffdc994fb34,389544516,0,0x0,8
tick,0x7ffdc994fb34,389560393,0,0x0,8
tick,0x7ffdc994fb34,389576418,0,0x0,8
tick,0x7ffdc994fb34,389592198,0,0x0,8
tick,0x7ffdc994fb34,389607854,0,0x0,8
tick,0x7ffdc994fb34,389623100,0,0x0,8
tick,0x7ffdc994fb34,389638607,0,0x0,8
tick,0x7ffdc994fb34,389653966,0,0x0,8
tick,0x7ffdc994fb34,389669644,0,0x0,8
tick,0x7ffdc994fb34,389684579,0,0x0,8
tick,0x7ffdc994fb34,389700297,0,0x0,8
tick,0x7ffdc994fb34,389716244,0,0x0,8
tick,0x7ffdc994fb34,389731976,0,0x0,8
tick,0x7ffdc994fb34,389748073,0,0x0,8
tick,0x7ffdc994fb34,389763851,0,0x0,8
tick,0x7ffdc994fb34,389779432,0,0x0,8
tick,0x7ffdc994fb34,389795343,0,0x0,8
tick,0x7ffdc994fb34,389810740,0,0x0,8
tick,0x7ffdc994fb34,389826179,0,0x0,8
tick,0x7ffdc994fb34,389841583,0,0x0,8
tick,0x7ffdc994fb34,389856973,0,0x0,8
tick,0x7ffdc994fb34,389872446,0,0x0,8
tick,0x7ffdc994fb34,389887837,0,0x0,8
tick,0x7ffdc994fb34,389903817,0,0x0,8
tick,0x7ffdc994fb34,389919535,0,0x0,8
tick,0x7ffdc994fb34,389934898,0,0x0,8
tick,0x7ffdc994fb34,389951249,0,0x0,8
tick,0x7ffdc994fb34,389966593,0,0x0,8
tick,0x7ffdc994fb34,389982865,0,0x0,8
tick,0x7ffdc994fb34,389998564,0,0x0,8
tick,0x7ffdc994fb34,390014028,0,0x0,8
tick,0x7ffdc994fb34,390029648,0,0x0,8
tick,0x7ffdc994fb34,390044962,0,0x0,8
tick,0x7ffdc994fb34,390060680,0,0x0,8
tick,0x7ffdc994fb34,390076652,0,0x0,8
tick,0x7ffdc994fb34,390091634,0,0x0,8
tick,0x7ffdc994fb34,390106921,0,0x0,8
tick,0x7ffdc994fb34,390122555,0,0x0,8
tick,0x7ffdc994fb34,390137401,0,0x0,8
tick,0x7ffdc994fb34,390153219,0,0x0,8
tick,0x7ffdc994fb34,390168968,0,0x0,8
tick,0x7ffdc994fb34,390184105,0,0x0,8
tick,0x7ffdc994fb34,390199582,0,0x0,8
tick,0x7ffdc994fb34,390215143,0,0x0,8
tick,0x7ffdc994fb34,390230466,0,0x0,8
tick,0x7ffdc994fb34,390246751,0,0x0,8
tick,0x7ffdc994fb34,390262637,0,0x0,8
tick,0x7ffdc994fb34,390278369,0,0x0,8
tick,0x7ffdc994fb34,390294036,0,0x0,8
tick,0x7ffdc994fb34,390309950,0,0x0,8
tick,0x7ffdc994fb34,390325164,0,0x0,8
tick,0x7ffdc994fb34,390341205,0,0x0,8
tick,0x7ffdc994fb34,390356505,0,0x0,8
tick,0x7ffdc994fb34,390372049,0,0x0,8
tick,0x7ffdc994fb34,390387757,0,0x0,8
tick,0x7ffdc994fb34,390403489,0,0x0,8
tick,0x7ffdc994fb34,390418894,0,0x0,8
tick,0x7ffdc994fb34,390434371,0,0x0,8
tick,0x7ffdc994fb34,390450122,0,0x0,8
tick,0x7ffdc994fb34,390465305,0,0x0,8
tick,0x7ffdc994fb34,390481051,0,0x0,8
tick,0x7ffdc994fb34,390496472,0,0x0,8
tick,0x7ffdc994fb34,390512138,0,0x0,8
tick,0x7ffdc994fb34,390527973,0,0x0,8
tick,0x7ffdc994fb34,390543389,0,0x0,8
tick,0x7ffdc994fb34,390558693,0,0x0,8
tick,0x7ffdc994fb34,390574278,0,0x0,8
tick,0x7ffdc994fb34,390589576,0,0x0,8
tick,0x7ffdc994fb34,390605043,0,0x0,8
tick,0x7ffdc994fb34,390620754,0,0x0,8
tick,0x7ffdc994fb34,390636095,0,0x0,8
tick,0x7ffdc994fb34,390651293,0,0x0,8
tick,0x7ffdc994fb34,390666967,0,0x0,8
tick,0x7ffdc994fb34,390682417,0,0x0,8
tick,0x7ffdc994fb34,390698073,0,0x0,8
tick,0x7ffdc994fb34,390713403,0,0x0,8
tick,0x7ffdc994fb34,390728870,0,0x0,8
tick,0x7ffdc994fb34,390744158,0,0x0,8
tick,0x7ffdc994fb34,390760308,0,0x0,8
tick,0x7ffdc994fb34,390775761,0,0x0,8
tick,0x7ffdc994fb34,390791407,0,0x0,8
tick,0x7ffdc994fb34,390806867,0,0x0,8
tick,0x7ffdc994fb34,390822219,0,0x0,8
tick,0x7ffdc994fb34,390837690,0,0x0,8
tick,0x7ffdc994fb34,390853263,0,0x0,8
tick,0x7ffdc994fb34,390868584,0,0x0,8
tick,0x7ffdc994fb34,390884563,0,0x0,8
tick,0x7ffdc994fb34,390899704,0,0x0,8
tick,0x7ffdc994fb34,390914999,0,0x0,8
tick,0x7ffdc994fb34,390930013,0,0x0,8
tick,0x7ffdc994fb34,390946014,0,0x0,8
tick,0x7ffdc994fb34,390960800,0,0x0,8
tick,0x7ffdc994fb34,390976416,0,0x0,8
tick,0x7ffdc994fb34,390992229,0,0x0,8
tick,0x7ffdc994fb34,391007604,0,0x0,8
tick,0x7ffdc994fb34,391023077,0,0x0,8
tick,0x7ffdc994fb34,391038705,0,0x0,8
tick,0x7ffdc994fb34,391053692,0,0x0,8
tick,0x7ffdc994fb34,391069088,0,0x0,8
tick,0x7ffdc994fb34,391084883,0,0x0,8
tick,0x7ffdc994fb34,391100090,0,0x0,8
tick,0x7ffdc994fb34,391115359,0,0x0,8
tick,0x7ffdc994fb34,391130752,0,0x0,8
tick,0x7ffdc994fb34,391147640,0,0x0,8
tick,0x7ffdc994fb34,391162215,0,0x0,8
tick,0x7ffdc994fb34,391177068,0,0x0,8
tick,0x7ffdc994fb34,391191981,0,0x0,8
tick,0x7ffdc994fb34,391206816,0,0x0,8
tick,0x7ffdc994fb34,391222205,0,0x0,8
tick,0x7ffdc994fb34,391238618,0,0x0,8
tick,0x7ffdc994fb34,391253177,0,0x0,8
tick,0x7ffdc994fb34,391268122,0,0x0,8
tick,0x7ffdc994fb34,391283084,0,0x0,8
tick,0x7ffdc994fb34,391299066,0,0x0,8
tick,0x7ffdc994fb34,391314305,0,0x0,8
tick,0x7ffdc994fb34,391330388,0,0x0,8
tick,0x7ffdc994fb34,391346039,0,0x0,8
tick,0x7ffdc994fb34,391360905,0,0x0,8
tick,0x7ffdc994fb34,391376188,0,0x0,8
tick,0x7ffdc994fb34,391391284,0,0x0,8
tick,0x7ffdc994fb34,391407164,0,0x0,8
tick,0x7ffdc994fb34,391422505,0,0x0,8
tick,0x7ffdc994fb34,391438799,0,0x0,8
tick,0x7ffdc994fb34,391454002,0,0x0,8
tick,0x7ffdc994fb34,391470207,0,0x0,8
tick,0x7ffdc994fb34,391485524,0,0x0,8
tick,0x7ffdc994fb34,391501526,0,0x0,8
tick,0x7ffdc994fb34,391516558,0,0x0,8
tick,0x7ffdc994fb34,391531790,0,0x0,8
tick,0x7ffdc994fb34,391547586,0,0x0,8
tick,0x7ffdc994fb34,391563661,0,0x0,8
tick,0x7ffdc994fb34,391578872,0,0x0,8
tick,0x7ffdc994fb34,391594497,0,0x0,8
tick,0x7ffdc994fb34,391610346,0,0x0,8
tick,0x7ffdc994fb34,391626691,0,0x0,8
tick,0x7ffdc994fb34,391642407,0,0x0,8
tick,0x7ffdc994fb34,391658295,0,0x0,8
tick,0x7ffdc994fb34,391673563,0,0x0,8
tick,0x7ffdc994fb34,391689042,0,0x0,8
tick,0x7ffdc994fb34,391704812,0,0x0,8
tick,0x7ffdc994fb34,391720501,0,0x0,8
tick,0x7ffdc994fb34,391735598,0,0x0,8
tick,0x7ffdc994fb34,391751536,0,0x0,8
tick,0x7ffdc994fb34,391767208,0,0x0,8
tick,0x7ffdc994fb34,391782493,0,0x0,8
tick,0x7ffdc994fb34,391798697,0,0x0,8
tick,0x7ffdc994fb34,391814273,0,0x0,8
tick,0x7ffdc994fb34,391829762,0,0x0,8
tick,0x7ffdc994fb34,391845058,0,0x0,8
tick,0x7ffdc994fb34,391860088,0,0x0,8
tick,0x7ffdc994fb34,391875223,0,0x0,8
tick,0x7ffdc994fb34,391890311,0,0x0,8
tick,0x7ffdc994fb34,391905666,0,0x0,8
tick,0x7ffdc994fb34,391921605,0,0x0,8
tick,0x7ffdc994fb34,391936782,0,0x0,8
tick,0x7ffdc994fb34,391952912,0,0x0,8
tick,0x7ffdc994fb34,391968996,0,0x0,8
tick,0x7ffdc994fb34,391983905,0,0x0,8
tick,0x7ffdc994fb34,391999972,0,0x0,8
tick,0x7ffdc994fb34,392015269,0,0x0,8
tick,0x7ffdc994fb34,392031061,0,0x0,8
tick,0x7ffdc994fb34,392047071,0,0x0,8
tick,0x7ffdc994fb34,392062443,0,0x0,8
tick,0x7ffdc994fb34,392077500,0,0x0,8
tick,0x7ffdc994fb34,392092673,0,0x0,8
tick,0x7ffdc994fb34,392108316,0,0x0,8
tick,0x7ffdc994fb34,392123805,0,0x0,8
tick,0x7ffdc994fb34,392139051,0,0x0,8
tick,0x7ffdc994fb34,392155268,0,0x0,8
tick,0x7ffdc994fb34,392170208,0,0x0,8
tick,0x7ffdc994fb34,392185411,0,0x0,8
tick,0x7ffdc994fb34,392201074,0,0x0,8
tick,0x7ffdc994fb34,392217174,0,0x0,8
tick,0x7ffdc994fb34,392232719,0,0x0,8
tick,0x7ffdc994fb34,392248217,0,0x0,8
tick,0x7ffdc994fb34,392264205,0,0x0,8
tick,0x7ffdc994fb34,392279798,0,0x0,8
tick,0x7ffdc994fb34,392295434,0,0x0,8
tick,0x7ffdc994fb34,392311487,0,0x0,8
tick,0x7ffdc994fb34,392327101,0,0x0,8
tick,0x7ffdc994fb34,392343144,0,0x0,8
tick,0x7ffdc994fb34,392358533,0,0x0,8
tick,0x7ffdc994fb34,392374394,0,0x0,8
tick,0x7ffdc994fb34,392390049,0,0x0,8
tick,0x7ffdc994fb34,392405016,0,0x0,8
tick,0x7ffdc994fb34,392420738,0,0x0,8
tick,0x7ffdc994fb34,392436016,0,0x0,8
tick,0x7ffdc994fb34,392451978,0,0x0,8
tick,0x7ffdc994fb34,392468232,0,0x0,8
tick,0x7ffdc994fb34,392483989,0,0x0,8
tick,0x7ffdc994fb34,392499236,0,0x0,8
tick,0x7ffdc994fb34,392514902,0,0x0,8
tick,0x7ffdc994fb34,392530240,0,0x0,8
tick,0x7ffdc994fb34,392546241,0,0x0,8
tick,0x7ffdc994fb34,392561511,0,0x0,8
tick,0x7ffdc994fb34,392576814,0,0x0,8
tick,0x7ffdc994fb34,392592509,0,0x0,8
tick,0x7ffdc994fb34,392607946,0,0x0,8
tick,0x7ffdc994fb34,392623745,0,0x0,8
tick,0x7ffdc994fb34,392639054,0,0x0,8
tick,0x7ffdc994fb34,392653942,0,0x0,8
tick,0x7ffdc994fb34,392669409,0,0x0,8
tick,0x7ffdc994fb34,392685086,0,0x0,8
tick,0x7ffdc994fb34,392700554,0,0x0,8
tick,0x7ffdc994fb34,392716241,0,0x0,8
tick,0x7ffdc994fb34,392731731,0,0x0,8
tick,0x7ffdc994fb34,392746968,0,0x0,8
tick,0x7ffdc994fb34,392762246,0,0x0,8
tick,0x7ffdc994fb34,392778122,0,0x0,8
tick,0x7ffdc994fb34,392793885,0,0x0,8
tick,0x7ffdc994fb34,392808920,0,0x0,8
tick,0x7ffdc994fb34,392824210,0,0x0,8
tick,0x7ffdc994fb34,392840231,0,0x0,8
tick,0x7ffdc994fb34,392856020,0,0x0,8
tick,0x7ffdc994fb34,392871470,0,0x0,8
tick,0x7ffdc994fb34,392887332,0,0x0,8
tick,0x7ffdc994fb34,392902101,0,0x0,8
tick,0x7ffdc994fb34,392917534,0,0x0,8
tick,0x7ffdc994fb34,392932873,0,0x0,8
tick,0x7ffdc994fb34,392948478,0,0x0,8
tick,0x7ffdc994fb34,392963416,0,0x0,8
tick,0x7ffdc994fb34,392979066,0,0x0,8
tick,0x7ffdc994fb34,392994165,0,0x0,8
tick,0x7ffdc994fb34,393009863,0,0x0,8
tick,0x7ffdc994fb34,393025947,0,0x0,8
tick,0x7ffdc994fb34,393042039,0,0x0,8
tick,0x7ffdc994fb34,393057334,0,0x0,8
tick,0x7ffdc994fb34,393073288,0,0x0,8
tick,0x7ffdc994fb34,393088862,0,0x0,8
tick,0x7ffdc994fb34,393103795,0,0x0,8
tick,0x7ffdc994fb34,393119816,0,0x0,8
tick,0x7ffdc994fb34,393135931,0,0x0,8
tick,0x7ffdc994fb34,393151700,0,0x0,8
tick,0x7ffdc994fb34,393167167,0,0x0,8
tick,0x7ffdc994fb34,393182640,0,0x0,8
tick,0x7ffdc994fb34,393197757,0,0x0,8
tick,0x7ffdc994fb34,393212992,0,0x0,8
tick,0x7ffdc994fb34,393228976,0,0x0,8
tick,0x7ffdc994fb34,393244158,0,0x0,8
tick,0x7ffdc994fb34,393259379,0,0x0,8
tick,0x7ffdc994fb34,393275244,0,0x0,8
tick,0x7ffdc994fb34,393291196,0,0x0,8
tick,0x7ffdc994fb34,393306706,0,0x0,8
tick,0x7ffdc994fb34,393322096,0,0x0,8
tick,0x7ffdc994fb34,393336985,0,0x0,8
tick,0x7ffdc994fb34,393352443,0,0x0,8
tick,0x7ffdc994fb34,393368594,0,0x0,8
tick,0x7ffdc994fb34,393384012,0,0x0,8
tick,0x7ffdc994fb34,393399650,0,0x0,8
tick,0x7ffdc994fb34,393415217,0,0x0,8
tick,0x7ffdc994fb34,393430345,0,0x0,8
tick,0x7ffdc994fb34,393445715,0,0x0,8
tick,0x7ffdc994fb34,393461577,0,0x0,8
tick,0x7ffdc994fb34,393477626,0,0x0,8
tick,0x7ffdc994fb34,393493014,0,0x0,8
tick,0x7ffdc994fb34,393508622,0,0x0,8
tick,0x7ffdc994fb34,393523840,0,0x0,8
tick,0x7ffdc994fb34,393540152,0,0x0,8
tick,0x7ffdc994fb34,393555958,0,0x0,8
tick,0x7ffdc994fb34,393571066,0,0x0,8
tick,0x7ffdc994fb34,393586619,0,0x0,8
tick,0x7ffdc994fb34,393602869,0,0x0,8
tick,0x7ffdc994fb34,393617923,0,0x0,8
tick,0x7ffdc994fb34,393633318,0,0x0,8
tick,0x7ffdc994fb34,393648561,0,0x0,8
tick,0x7ffdc994fb34,393664045,0,0x0,8
tick,0x7ffdc994fb34,393679298,0,0x0,8
tick,0x7ffdc994fb34,393694902,0,0x0,8
tick,0x7ffdc994fb34,393710631,0,0x0,8
tick,0x7ffdc994fb34,393725790,0,0x0,8
tick,0x7ffdc994fb34,393741290,0,0x0,8
tick,0x7ffdc994fb34,393757064,0,0x0,8
tick,0x7ffdc994fb34,393772055,0,0x0,8
tick,0x7ffdc994fb34,393787697,0,0x0,8
tick,0x7ffdc994fb34,393802890,0,0x0,8
tick,0x7ffdc994fb34,393818625,0,0x0,8
tick,0x7ffdc994fb34,393834224,0,0x0,8
tick,0x7ffdc994fb34,393849821,0,0x0,8
tick,0x7ffdc994fb34,393865303,0,0x0,8
tick,0x7ffdc994fb34,393880779,0,0x0,8
tick,0x7ffdc994fb34,393896024,0,0x0,8
tick,0x7ffdc994fb34,393911632,0,0x0,8
tick,0x7ffdc994fb34,393927285,0,0x0,8
tick,0x7ffdc994fb34,393943073,0,0x0,8
tick,0x7ffdc994fb34,393958203,0,0x0,8
tick,0x7ffdc994fb34,393973424,0,0x0,8
tick,0x7ffdc994fb34,393988477,0,0x0,8
tick,0x7ffdc994fb34,394004078,0,0x0,8
tick,0x7ffdc994fb34,394019674,0,0x0,8
tick,0x7ffdc994fb34,394035571,0,0x0,8
tick,0x7ffdc994fb34,394050909,0,0x0,8
tick,0x7ffdc994fb34,394066946,0,0x0,8
tick,0x7ffdc994fb34,394082520,0,0x0,8
tick,0x7ffdc994fb34,394098074,0,0x0,8
tick,0x7ffdc994fb34,394113781,0,0x0,8
tick,0x7ffdc994fb34,394139515,0,0x0,8
tick,0x7ffdc994fb34,394148748,0,0x0,8
tick,0x7ffdc994fb34,394160771,0,0x0,8
tick,0x7ffdc994fb34,394175804,0,0x0,8
tick,0x7ffdc994fb34,394191770,0,0x0,8
tick,0x7ffdc994fb34,394207939,0,0x0,8
tick,0x7ffdc994fb34,394224045,0,0x0,8
tick,0x7ffdc994fb34,394240003,0,0x0,8
tick,0x7ffdc994fb34,394258825,0,0x0,8
tick,0x7ffdc994fb34,394271376,0,0x0,8
tick,0x7ffdc994fb34,394287418,0,0x0,8
tick,0x7ffdc994fb34,394302363,0,0x0,8
tick,0x7ffdc994fb34,394317231,0,0x0,8
tick,0x7ffdc994fb34,394333288,0,0x0,8
tick,0x7ffdc994fb34,394349127,0,0x0,8
tick,0x7ffdc994fb34,394364824,0,0x0,8
tick,0x7ffdc994fb34,394380895,0,0x0,8
tick,0x7ffdc994fb34,394397120,0,0x0,8
tick,0x7ffdc994fb34,394412875,0,0x0,8
tick,0x7ffdc994fb34,394429034,0,0x0,8
tick,0x7ffdc994fb34,394444258,0,0x0,8
tick,0x7ffdc994fb34,394460086,0,0x0,8
tick,0x7ffdc994fb34,394476002,0,0x0,8
tick,0x7ffdc994fb34,394491928,0,0x0,8
tick,0x7ffdc994fb34,394506743,0,0x0,8
tick,0x7ffdc994fb34,394522393,0,0x0,8
tick,0x7ffdc994fb34,394538514,0,0x0,8
tick,0x7ffdc994fb34,394554226,0,0x0,8
tick,0x7ffdc994fb34,394569832,0,0x0,8
tick,0x7ffdc994fb34,394586179,0,0x0,8
tick,0x7ffdc994fb34,394601734,0,0x0,8
tick,0x7ffdc994fb34,394617441,0,0x0,8
tick,0x7ffdc994fb34,394633028,0,0x0,8
tick,0x7ffdc994fb34,394648144,0,0x0,8
tick,0x7ffdc994fb34,394663833,0,0x0,8
tick,0x7ffdc994fb34,394679218,0,0x0,8
tick,0x7ffdc994fb34,394694716,0,0x0,8
tick,0x7ffdc994fb34,394710064,0,0x0,8
tick,0x7ffdc994fb34,394725478,0,0x0,8
tick,0x7ffdc994fb34,394741012,0,0x0,8
tick,0x7ffdc994fb34,394756687,0,0x0,8
tick,0x7ffdc994fb34,394772649,0,0x0,8
tick,0x7ffdc994fb34,394787793,0,0x0,8
tick,0x7ffdc994fb34,394803924,0,0x0,8
tick,0x7ffdc994fb34,394819019,0,0x0,8
tick,0x7ffdc994fb34,394834215,0,0x0,8
tick,0x7ffdc994fb34,394849323,0,0x0,8
tick,0x7ffdc994fb34,394864782,0,0x0,8
tick,0x7ffdc994fb34,394880394,0,0x0,8
tick,0x7ffdc994fb34,394896704,0,0x0,8
tick,0x7ffdc994fb34,394912167,0,0x0,8
tick,0x7ffdc994fb34,394927231,0,0x0,8
tick,0x7ffdc994fb34,394942488,0,0x0,8
tick,0x7ffdc994fb34,394958012,0,0x0,8
tick,0x7ffdc994fb34,394973219,0,0x0,8
tick,0x7ffdc994fb34,394988711,0,0x0,8
tick,0x7ffdc994fb34,395004632,0,0x0,8
tick,0x7ffdc994fb34,395020772,0,0x0,8
tick,0x7ffdc994fb34,395035975,0,0x0,8
tick,0x7ffdc994fb34,395051266,0,0x0,8
tick,0x7ffdc994fb34,395067104,0,0x0,8
tick,0x7ffdc994fb34,395082347,0,0x0,8
tick,0x7ffdc994fb34,395097841,0,0x0,8
tick,0x7ffdc994fb34,395113862,0,0x0,8
tick,0x7ffdc994fb34,395128998,0,0x0,8
tick,0x7ffdc994fb34,395144582,0,0x0,8
tick,0x7ffdc994fb34,395160151,0,0x0,8
tick,0x7ffdc994fb34,395176290,0,0x0,8
tick,0x7ffdc994fb34,395192093,0,0x0,8
tick,0x7ffdc994fb34,395208448,0,0x0,8
tick,0x7ffdc994fb34,395223895,0,0x0,8
tick,0x7ffdc994fb34,395240051,0,0x0,8
tick,0x7ffdc994fb34,395254796,0,0x0,8
tick,0x7ffdc994fb34,395269946,0,0x0,8
tick,0x7ffdc994fb34,395284953,0,0x0,8
tick,0x7ffdc994fb34,395300378,0,0x0,8
tick,0x7ffdc994fb34,395316007,0,0x0,8
tick,0x7ffdc994fb34,395331625,0,0x0,8
tick,0x7ffdc994fb34,395346992,0,0x0,8
tick,0x7ffdc994fb34,395362564,0,0x0,8
tick,0x7ffdc994fb34,395377728,0,0x0,8
tick,0x7ffdc994fb34,395393040,0,0x0,8
tick,0x7ffdc994fb34,395408881,0,0x0,8
tick,0x7ffdc994fb34,395424364,0,0x0,8
tick,0x7ffdc994fb34,395440433,0,0x0,8
tick,0x7ffdc994fb34,395455353,0,0x0,8
tick,0x7ffdc994fb34,395471495,0,0x0,8
tick,0x7ffdc994fb34,395487160,0,0x0,8
tick,0x7ffdc994fb34,395503324,0,0x0,8
tick,0x7ffdc994fb34,395518749,0,0x0,8
tick,0x7ffdc994fb34,395534166,0,0x0,8
tick,0x7ffdc994fb34,395549436,0,0x0,8
tick,0x7ffdc994fb34,395564707,0,0x0,8
tick,0x7ffdc994fb34,395580405,0,0x0,8
tick,0x7ffdc994fb34,395596102,0,0x0,8
tick,0x7ffdc994fb34,395611603,0,0x0,8
tick,0x7ffdc994fb34,395627678,0,0x0,8
tick,0x7ffdc994fb34,395643052,0,0x0,8
tick,0x7ffdc994fb34,395658219,0,0x0,8
tick,0x7ffdc994fb34,395673684,0,0x0,8
tick,0x7ffdc994fb34,395689105,0,0x0,8
tick,0x7ffdc994fb34,395704320,0,0x0,8
tick,0x7ffdc994fb34,395719732,0,0x0,8
tick,0x7ffdc994fb34,395735427,0,0x0,8
tick,0x7ffdc994fb34,395751335,0,0x0,8
tick,0x7ffdc994fb34,395767169,0,0x0,8
tick,0x7ffdc994fb34,395783320,0,0x0,8
tick,0x7ffdc994fb34,395799400,0,0x0,8
tick,0x7ffdc994fb34,395815084,0,0x0,8
tick,0x7ffdc994fb34,395830948,0,0x0,8
tick,0x7ffdc994fb34,395846260,0,0x0,8
tick,0x7ffdc994fb34,395861839,0,0x0,8
tick,0x7ffdc994fb34,395877738,0,0x0,8
tick,0x7ffdc994fb34,395893236,0,0x0,8
tick,0x7ffdc994fb34,395908648,0,0x0,8
tick,0x7ffdc994fb34,395924970,0,0x0,8
tick,0x7ffdc994fb34,395940390,0,0x0,8
tick,0x7ffdc994fb34,395955770,0,0x0,8
tick,0x7ffdc994fb34,395971201,0,0x0,8
tick,0x7ffdc994fb34,395986655,0,0x0,8
tick,0x7ffdc994fb34,396002053,0,0x0,8
tick,0x7ffdc994fb34,396017974,0,0x0,8
tick,0x7ffdc994fb34,396033616,0,0x0,8
tick,0x7ffdc994fb34,396049144,0,0x0,8
tick,0x7ffdc994fb34,396063898,0,0x0,8
tick,0x7ffdc994fb34,396079413,0,0x0,8
tick,0x7ffdc994fb34,396095395,0,0x0,8
tick,0x7ffdc994fb34,396111630,0,0x0,8
tick,0x7ffdc994fb34,396126867,0,0x0,8
tick,0x7ffdc994fb34,396143068,0,0x0,8
tick,0x7ffdc994fb34,396158373,0,0x0,8
tick,0x7ffdc994fb34,396173798,0,0x0,8
tick,0x7ffdc994fb34,396189896,0,0x0,8
tick,0x7ffdc994fb34,396205782,0,0x0,8
tick,0x7ffdc994fb34,396221600,0,0x0,8
tick,0x7ffdc994fb34,396236883,0,0x0,8
tick,0x7ffdc994fb34,396252686,0,0x0,8
tick,0x7ffdc994fb34,396268100,0,0x0,8
tick,0x7ffdc994fb34,396283412,0,0x0,8
tick,0x7ffdc994fb34,396299158,0,0x0,8
tick,0x7ffdc994fb34,396314572,0,0x0,8
tick,0x7ffdc994fb34,396330557,0,0x0,8
tick,0x7ffdc994fb34,396346385,0,0x0,8
tick,0x7ffdc994fb34,396362087,0,0x0,8
tick,0x7ffdc994fb34,396377831,0,0x0,8
tick,0x7ffdc994fb34,396393251,0,0x0,8
tick,0x7ffdc994fb34,396408355,0,0x0,8
tick,0x7ffdc994fb34,396423791,0,0x0,8
tick,0x7ffdc994fb34,396439278,0,0x0,8
tick,0x7ffdc994fb34,396454087,0,0x0,8
tick,0x7ffdc994fb34,396469451,0,0x0,8
tick,0x7ffdc994fb34,396485340,0,0x0,8
tick,0x7ffdc994fb34,396500998,0,0x0,8
tick,0x7ffdc994fb34,396516745,0,0x0,8
tick,0x7ffdc994fb34,396532708,0,0x0,8
tick,0x7ffdc994fb34,396548181,0,0x0,8
tick,0x7ffdc994fb34,396563968,0,0x0,8
tick,0x7ffdc994fb34,396579353,0,0x0,8
tick,0x7ffdc994fb34,396594469,0,0x0,8
tick,0x7ffdc994fb34,396610530,0,0x0,8
tick,0x7ffdc994fb34,396625544,0,0x0,8
tick,0x7ffdc994fb34,396641234,0,0x0,8
tick,0x7ffdc994fb34,396656664,0,0x0,8
tick,0x7ffdc994fb34,396671968,0,0x0,8
tick,0x7ffdc994fb34,396687325,0,0x0,8
tick,0x7ffdc994fb34,396703305,0,0x0,8
tick,0x7ffdc994fb34,396719648,0,0x0,8
tick,0x7ffdc994fb34,396734904,0,0x0,8
tick,0x7ffdc994fb34,396750630,0,0x0,8
tick,0x7ffdc994fb34,396766342,0,0x0,8
tick,0x7ffdc994fb34,396781803,0,0x0,8
tick,0x7ffdc994fb34,396797288,0,0x0,8
tick,0x7ffdc994fb34,396812610,0,0x0,8
tick,0x7ffdc994fb34,396828157,0,0x0,8
tick,0x7ffdc994fb34,396843665,0,0x0,8
tick,0x7ffdc994fb34,396859377,0,0x0,8
tick,0x7ffdc994fb34,396875321,0,0x0,8
tick,0x7ffdc994fb34,396890595,0,0x0,8
tick,0x7ffdc994fb34,396906234,0,0x0,8
tick,0x7ffdc994fb34,396922008,0,0x0,8
tick,0x7ffdc994fb34,396937416,0,0x0,8
tick,0x7ffdc994fb34,396953593,0,0x0,8
tick,0x7ffdc994fb34,396968915,0,0x0,8
tick,0x7ffdc994fb34,396984553,0,0x0,8
tick,0x7ffdc994fb34,396999962,0,0x0,8
tick,0x7ffdc994fb34,397015278,0,0x0,8
tick,0x7ffdc994fb34,397031486,0,0x0,8
tick,0x7ffdc994fb34,397046759,0,0x0,8
tick,0x7ffdc994fb34,397062053,0,0x0,8
tick,0x7ffdc994fb34,397077304,0,0x0,8
tick,0x7ffdc994fb34,397093041,0,0x0,8
tick,0x7ffdc994fb34,397108823,0,0x0,8
tick,0x7ffdc994fb34,397124236,0,0x0,8
tick,0x7ffdc994fb34,397139608,0,0x0,8
tick,0x7ffdc994fb34,397154807,0,0x0,8
tick,0x7ffdc994fb34,397170390,0,0x0,8
tick,0x7ffdc994fb34,397186377,0,0x0,8
tick,0x7ffdc994fb34,397201872,0,0x0,8
tick,0x7ffdc994fb34,397217723,0,0x0,8
tick,0x7ffdc994fb34,397233831,0,0x0,8
tick,0x7ffdc994fb34,397249176,0,0x0,8
tick,0x7ffdc994fb34,397264734,0,0x0,8
tick,0x7ffdc994fb34,397280307,0,0x0,8
tick,0x7ffdc994fb34,397295630,0,0x0,8
tick,0x7ffdc994fb34,397311763,0,0x0,8
tick,0x7ffdc994fb34,397327871,0,0x0,8
tick,0x7ffdc994fb34,397343898,0,0x0,8
tick,0x7ffdc994fb34,397359683,0,0x0,8
tick,0x7ffdc994fb34,397374835,0,0x0,8
tick,0x7ffdc994fb34,397390774,0,0x0,8
tick,0x7ffdc994fb34,397405965,0,0x0,8
tick,0x7ffdc994fb34,397422288,0,0x0,8
tick,0x7ffdc994fb34,397437689,0,0x0,8
tick,0x7ffdc994fb34,397453105,0,0x0,8
tick,0x7ffdc994fb34,397468645,0,0x0,8
tick,0x7ffdc994fb34,397484298,0,0x0,8
tick,0x7ffdc994fb34,397499861,0,0x0,8
tick,0x7ffdc994fb34,397515612,0,0x0,8
tick,0x7ffdc994fb34,397531294,0,0x0,8
tick,0x7ffdc994fb34,397547160,0,0x0,8
tick,0x7ffdc994fb34,397578405,0,0x0,8
tick,0x7ffdc994fb34,397596587,0,0x0,8
tick,0x7ffdc994fb34,397610345,0,0x0,8
tick,0x7ffdc994fb34,397625429,0,0x0,8
tick,0x7ffdc994fb34,397641121,0,0x0,8
tick,0x7ffdc994fb34,397657080,0,0x0,8
tick,0x7ffdc994fb34,397673028,0,0x0,8
tick,0x7ffdc994fb34,397688342,0,0x0,8
tick,0x7ffdc994fb34,397704328,0,0x0,8
tick,0x7ffdc994fb34,397720226,0,0x0,8
tick,0x7ffdc994fb34,397735280,0,0x0,8
tick,0x7ffdc994fb34,397751318,0,0x0,8
tick,0x7ffdc994fb34,397767418,0,0x0,8
tick,0x7ffdc994fb34,397783213,0,0x0,8
tick,0x7ffdc994fb34,397798932,0,0x0,8
tick,0x7ffdc994fb34,397815363,0,0x0,8
tick,0x7ffdc994fb34,397833969,0,0x0,8
tick,0x7ffdc994fb34,397846221,0,0x0,8
tick,0x7ffdc994fb34,397862555,0,0x0,8
tick,0x7ffdc994fb34,397879441,0,0x0,8
tick,0x7ffdc994fb34,397893494,0,0x0,8
tick,0x7ffdc994fb34,397908133,0,0x0,8
tick,0x7ffdc994fb34,397923865,0,0x0,8
tick,0x7ffdc994fb34,397939455,0,0x0,8
tick,0x7ffdc994fb34,397954502,0,0x0,8
tick,0x7ffdc994fb34,397969774,0,0x0,8
tick,0x7ffdc994fb34,397985014,0,0x0,8
tick,0x7ffdc994fb34,398000974,0,0x0,8
tick,0x7ffdc994fb34,398016055,0,0x0,8
tick,0x7ffdc994fb34,398031919,0,0x0,8
tick,0x7ffdc994fb34,398047262,0,0x0,8
tick,0x7ffdc994fb34,398063000,0,0x0,8
tick,0x7ffdc994fb34,398078989,0,0x0,8
tick,0x7ffdc994fb34,398095750,0,0x0,8
tick,0x7ffdc994fb34,398111570,0,0x0,8
tick,0x7ffdc994fb34,398127563,0,0x0,8
tick,0x7ffdc994fb34,398143325,0,0x0,8
tick,0x7ffdc994fb34,398158667,0,0x0,8
tick,0x7ffdc994fb34,398174425,0,0x0,8
tick,0x7ffdc994fb34,398190079,0,0x0,8
tick,0x7ffdc994fb34,398205532,0,0x0,8
tick,0x7ffdc994fb34,398221577,0,0x0,8
tick,0x7ffdc994fb34,398236759,0,0x0,8
tick,0x7ffdc994fb34,398252617,0,0x0,8
tick,0x7ffdc994fb34,398268623,0,0x0,8
tick,0x7ffdc994fb34,398283864,0,0x0,8
tick,0x7ffdc994fb34,398299818,0,0x0,8
tick,0x7ffdc994fb34,398315627,0,0x0,8
tick,0x7ffdc994fb34,398331201,0,0x0,8
tick,0x7ffdc994fb34,398346803,0,0x0,8
tick,0x7ffdc994fb34,398362553,0,0x0,8
tick,0x7ffdc994fb34,398377781,0,0x0,8
tick,0x7ffdc994fb34,398393765,0,0x0,8
tick,0x7ffdc994fb34,398408921,0,0x0,8
tick,0x7ffdc994fb34,398424573,0,0x0,8
tick,0x7ffdc994fb34,398439645,0,0x0,8
tick,0x7ffdc994fb34,398455706,0,0x0,8
tick,0x7ffdc994fb34,398470882,0,0x0,8
tick,0x7ffdc994fb34,398486306,0,0x0,8
tick,0x7ffdc994fb34,398502278,0,0x0,8
tick,0x7ffdc994fb34,398517497,0,0x0,8
tick,0x7ffdc994fb34,398532959,0,0x0,8
tick,0x7ffdc994fb34,398548522,0,0x0,8
tick,0x7ffdc994fb34,398563956,0,0x0,8
tick,0x7ffdc994fb34,398579646,0,0x0,8
tick,0x7ffdc994fb34,398595202,0,0x0,8
tick,0x7ffdc994fb34,398610631,0,0x0,8
tick,0x7ffdc994fb34,398625823,0,0x0,8
tick,0x7ffdc994fb34,398641241,0,0x0,8
tick,0x7ffdc994fb34,398656596,0,0x0,8
tick,0x7ffdc994fb34,398671572,0,0x0,8
tick,0x7ffdc994fb34,398686643,0,0x0,8
tick,0x7ffdc994fb34,398701862,0,0x0,8
tick,0x7ffdc994fb34,398717666,0,0x0,8
tick,0x7ffdc994fb34,398733720,0,0x0,8
tick,0x7ffdc994fb34,398749376,0,0x0,8
tick,0x7ffdc994fb34,398765297,0,0x0,8
tick,0x7ffdc994fb34,398780911,0,0x0,8
tick,0x7ffdc994fb34,398796137,0,0x0,8
tick,0x7ffdc994fb34,398811300,0,0x0,8
tick,0x7ffdc994fb34,398826711,0,0x0,8
tick,0x7ffdc994fb34,398842646,0,0x0,8
tick,0x7ffdc994fb34,398857996,0,0x0,8
tick,0x7ffdc994fb34,398873344,0,0x0,8
tick,0x7ffdc994fb34,398888509,0,0x0,8
tick,0x7ffdc994fb34,398903500,0,0x0,8
tick,0x7ffdc994fb34,398919668,0,0x0,8
tick,0x7ffdc994fb34,398934935,0,0x0,8
tick,0x7ffdc994fb34,398950543,0,0x0,8
tick,0x7ffdc994fb34,398966484,0,0x0,8
tick,0x7ffdc994fb34,398982124,0,0x0,8
tick,0x7ffdc994fb34,398997192,0,0x0,8
tick,0x7ffdc994fb34,399013138,0,0x0,8
tick,0x7ffdc994fb34,399028363,0,0x0,8
tick,0x7ffdc994fb34,399043884,0,0x0,8
tick,0x7ffdc994fb34,399059441,0,0x0,8
tick,0x7ffdc994fb34,399074980,0,0x0,8
tick,0x7ffdc994fb34,399091159,0,0x0,8
tick,0x7ffdc994fb34,399106321,0,0x0,8
tick,0x7ffdc994fb34,399122221,0,0x0,8
tick,0x7ffdc994fb34,399137946,0,0x0,8
tick,0x7ffdc994fb34,399153531,0,0x0,8
tick,0x7ffdc994fb34,399169014,0,0x0,8
tick,0x7ffdc994fb34,399184424,0,0x0,8
tick,0x7ffdc994fb34,399199173,0,0x0,8
tick,0x7ffdc994fb34,399214374,0,0x0,8
tick,0x7ffdc994fb34,399230091,0,0x0,8
tick,0x7ffdc994fb34,399245881,0,0x0,8
tick,0x7ffdc994fb34,399261861,0,0x0,8
tick,0x7ffdc994fb34,399277282,0,0x0,8
tick,0x7ffdc994fb34,399292840,0,0x0,8
tick,0x7ffdc994fb34,399308472,0,0x0,8
tick,0x7ffdc994fb34,399323736,0,0x0,8
tick,0x7ffdc994fb34,399339000,0,0x0,8
tick,0x7ffdc994fb34,399354658,0,0x0,8
tick,0x7ffdc994fb34,399370489,0,0x0,8
tick,0x7ffdc994fb34,399386625,0,0x0,8
tick,0x7ffdc994fb34,399402339,0,0x0,8
tick,0x7ffdc994fb34,399417556,0,0x0,8
tick,0x7ffdc994fb34,399433241,0,0x0,8
tick,0x7ffdc994fb34,399448586,0,0x0,8
tick,0x7ffdc994fb34,399464022,0,0x0,8
tick,0x7ffdc994fb34,399479735,0,0x0,8
tick,0x7ffdc994fb34,399494652,0,0x0,8
tick,0x7ffdc994fb34,399510734,0,0x0,8
tick,0x7ffdc994fb34,399526460,0,0x0,8
tick,0x7ffdc994fb34,399542215,0,0x0,8
tick,0x7ffdc994fb34,399558171,0,0x0,8
tick,0x7ffdc994fb34,399573804,0,0x0,8
tick,0x7ffdc994fb34,399590046,0,0x0,8
tick,0x7ffdc994fb34,399604767,0,0x0,8
tick,0x7ffdc994fb34,399620131,0,0x0,8
tick,0x7ffdc994fb34,399635506,0,0x0,8
tick,0x7ffdc994fb34,399651069,0,0x0,8
tick,0x7ffdc994fb34,399667299,0,0x0,8
tick,0x7ffdc994fb34,399683625,0,0x0,8
tick,0x7ffdc994fb34,399699022,0,0x0,8
tick,0x7ffdc994fb34,399715261,0,0x0,8
tick,0x7ffdc994fb34,399730987,0,0x0,8
tick,0x7ffdc994fb34,399746058,0,0x0,8
tick,0x7ffdc994fb34,399762471,0,0x0,8
tick,0x7ffdc994fb34,399778114,0,0x0,8
tick,0x7ffdc994fb34,399794238,0,0x0,8
tick,0x7ffdc994fb34,399809533,0,0x0,8
tick,0x7ffdc994fb34,399824961,0,0x0,8
tick,0x7ffdc994fb34,399840193,0,0x0,8
tick,0x7ffdc994fb34,399855831,0,0x0,8
tick,0x7ffdc994fb34,399871606,0,0x0,8
tick,0x7ffdc994fb34,399887966,0,0x0,8
tick,0x7ffdc994fb34,399903189,0,0x0,8
tick,0x7ffdc994fb34,399918885,0,0x0,8
tick,0x7ffdc994fb34,399935149,0,0x0,8
tick,0x7ffdc994fb34,399950491,0,0x0,8
tick,0x7ffdc994fb34,399965403,0,0x0,8
tick,0x7ffdc994fb34,399981328,0,0x0,8
tick,0x7ffdc994fb34,399996757,0,0x0,8
tick,0x7ffdc994fb34,400012754,0,0x0,8
tick,0x7ffdc994fb34,400028088,0,0x0,8
tick,0x7ffdc994fb34,400043924,0,0x0,8
tick,0x7ffdc994fb34,400059824,0,0x0,8
tick,0x7ffdc994fb34,400075200,0,0x0,8
tick,0x7ffdc994fb34,400090734,0,0x0,8
tick,0x7ffdc994fb34,400106141,0,0x0,8
tick,0x7ffdc994fb34,400122211,0,0x0,8
tick,0x7ffdc994fb34,400138352,0,0x0,8
tick,0x7ffdc994fb34,400154132,0,0x0,8
tick,0x7ffdc994fb34,400169670,0,0x0,8
tick,0x7ffdc994fb34,400185651,0,0x0,8
tick,0x7ffdc994fb34,400201743,0,0x0,8
tick,0x7ffdc994fb34,400216832,0,0x0,8
tick,0x7ffdc994fb34,400232066,0,0x0,8
tick,0x7ffdc994fb34,400247332,0,0x0,8
tick,0x7ffdc994fb34,400263588,0,0x0,8
tick,0x7ffdc994fb34,400278699,0,0x0,8
tick,0x7ffdc994fb34,400294499,0,0x0,8
tick,0x7ffdc994fb34,400310433,0,0x0,8
tick,0x7ffdc994fb34,400326689,0,0x0,8
tick,0x7ffdc994fb34,400341956,0,0x0,8
tick,0x7ffdc994fb34,400357245,0,0x0,8
tick,0x7ffdc994fb34,400372457,0,0x0,8
tick,0x7ffdc994fb34,400388207,0,0x0,8
tick,0x7ffdc994fb34,400403384,0,0x0,8
tick,0x7ffdc994fb34,400419292,0,0x0,8
tick,0x7ffdc994fb34,400434619,0,0x0,8
tick,0x7ffdc994fb34,400450521,0,0x0,8
tick,0x7ffdc994fb34,400466258,0,0x0,8
tick,0x7ffdc994fb34,400482266,0,0x0,8
tick,0x7ffdc994fb34,400498066,0,0x0,8
tick,0x7ffdc994fb34,400513668,0,0x0,8
tick,0x7ffdc994fb34,400529288,0,0x0,8
tick,0x7ffdc994fb34,400545086,0,0x0,8
tick,0x7ffdc994fb34,400561361,0,0x0,8
tick,0x7ffdc994fb34,400576866,0,0x0,8
tick,0x7ffdc994fb34,400592786,0,0x0,8
tick,0x7ffdc994fb34,400608674,0,0x0,8
tick,0x7ffdc994fb34,400623797,0,0x0,8
tick,0x7ffdc994fb34,400639755,0,0x0,8
tick,0x7ffdc994fb34,400654871,0,0x0,8
tick,0x7ffdc994fb34,400671120,0,0x0,8
tick,0x7ffdc994fb34,400686613,0,0x0,8
tick,0x7ffdc994fb34,400702603,0,0x0,8
tick,0x7ffdc994fb34,400718039,0,0x0,8
tick,0x7ffdc994fb34,400733535,0,0x0,8
tick,0x7ffdc994fb34,400748812,0,0x0,8
tick,0x7ffdc994fb34,400764399,0,0x0,8
tick,0x7ffdc994fb34,400779927,0,0x0,8
tick,0x7ffdc994fb34,400796236,0,0x0,8
tick,0x7ffdc994fb34,400811613,0,0x0,8
tick,0x7ffdc994fb34,400827634,0,0x0,8
tick,0x7ffdc994fb34,400843273,0,0x0,8
tick,0x7ffdc994fb34,400859187,0,0x0,8
tick,0x7ffdc994fb34,400874830,0,0x0,8
tick,0x7ffdc994fb34,400890028,0,0x0,8
tick,0x7ffdc994fb34,400906030,0,0x0,8
tick,0x7ffdc994fb34,400921482,0,0x0,8
tick,0x7ffdc994fb34,400937736,0,0x0,8
tick,0x7ffdc994fb34,400952637,0,0x0,8
tick,0x7ffdc994fb34,400968457,0,0x0,8
tick,0x7ffdc994fb34,400984616,0,0x0,8
tick,0x7ffdc994fb34,401000248,0,0x0,8
tick,0x7ffdc994fb34,401015722,0,0x0,8
tick,0x7ffdc994fb34,401031603,0,0x0,8
tick,0x7ffdc994fb34,401046826,0,0x0,8
tick,0x7ffdc994fb34,401062770,0,0x0,8
tick,0x7ffdc994fb34,401078783,0,0x0,8
tick,0x7ffdc994fb34,401094398,0,0x0,8
tick,0x7ffdc994fb34,401110087,0,0x0,8
tick,0x7ffdc994fb34,401125621,0,0x0,8
tick,0x7ffdc994fb34,401141569,0,0x0,8
tick,0x7ffdc994fb34,401157064,0,0x0,8
tick,0x7ffdc994fb34,401172594,0,0x0,8
tick,0x7ffdc994fb34,401188016,0,0x0,8
tick,0x7ffdc994fb34,401202883,0,0x0,8
tick,0x7ffdc994fb34,401218882,0,0x0,8
tick,0x7ffdc994fb34,401234488,0,0x0,8
tick,0x7ffdc994fb34,401250978,0,0x0,8
tick,0x7ffdc994fb34,401266107,0,0x0,8
tick,0x7ffdc994fb34,401281726,0,0x0,8
tick,0x7ffdc994fb34,401297727,0,0x0,8
tick,0x7ffdc994fb34,401313552,0,0x0,8
tick,0x7ffdc994fb34,401328803,0,0x0,8
tick,0x7ffdc994fb34,401344518,0,0x0,8
tick,0x7ffdc994fb34,401359960,0,0x0,8
tick,0x7ffdc994fb34,401375872,0,0x0,8
tick,0x7ffdc994fb34,401391811,0,0x0,8
tick,0x7ffdc994fb34,401407515,0,0x0,8
tick,0x7ffdc994fb34,401422934,0,0x0,8
tick,0x7ffdc994fb34,401437874,0,0x0,8
tick,0x7ffdc994fb34,401453670,0,0x0,8
tick,0x7ffdc994fb34,401469517,0,0x0,8
tick,0x7ffdc994fb34,401484689,0,0x0,8
tick,0x7ffdc994fb34,401500455,0,0x0,8
tick,0x7ffdc994fb34,401515604,0,0x0,8
tick,0x7ffdc994fb34,401530971,0,0x0,8
tick,0x7ffdc994fb34,401546517,0,0x0,8
tick,0x7ffdc994fb34,401562448,0,0x0,8
tick,0x7ffdc994fb34,401577721,0,0x0,8
tick,0x7ffdc994fb34,401593540,0,0x0,8
tick,0x7ffdc994fb34,401608794,0,0x0,8
tick,0x7ffdc994fb34,401624111,0,0x0,8
tick,0x7ffdc994fb34,401639315,0,0x0,8
tick,0x7ffdc994fb34,401654906,0,0x0,8
tick,0x7ffdc994fb34,401669955,0,0x0,8
tick,0x7ffdc994fb34,401685640,0,0x0,8
tick,0x7ffdc994fb34,401700857,0,0x0,8
tick,0x7ffdc994fb34,401716933,0,0x0,8
tick,0x7ffdc994fb34,401732771,0,0x0,8
tick,0x7ffdc994fb34,401748472,0,0x0,8
tick,0x7ffdc994fb34,401764009,0,0x0,8
tick,0x7ffdc994fb34,401779814,0,0x0,8
tick,0x7ffdc994fb34,401794953,0,0x0,8
tick,0x7ffdc994fb34,401810212,0,0x0,8
tick,0x7ffdc994fb34,401825384,0,0x0,8
tick,0x7ffdc994fb34,401840815,0,0x0,8
tick,0x7ffdc994fb34,401856725,0,0x0,8
tick,0x7ffdc994fb34,401872688,0,0x0,8
tick,0x7ffdc994fb34,401889213,0,0x0,8
tick,0x7ffdc994fb34,401904818,0,0x0,8
tick,0x7ffdc994fb34,401920660,0,0x0,8
tick,0x7ffdc994fb34,401936583,0,0x0,8
tick,0x7ffdc994fb34,401952157,0,0x0,8
tick,0x7ffdc994fb34,401968186,0,0x0,8
tick,0x7ffdc994fb34,401984072,0,0x0,8
tick,0x7ffdc994fb34,401999097,0,0x0,8
tick,0x7ffdc994fb34,402014764,0,0x0,8
tick,0x7ffdc994fb34,402029952,0,0x0,8
tick,0x7ffdc994fb34,402045487,0,0x0,8
tick,0x7ffdc994fb34,402061454,0,0x0,8
tick,0x7ffdc994fb34,402077509,0,0x0,8
tick,0x7ffdc994fb34,402092384,0,0x0,8
tick,0x7ffdc994fb34,402107964,0,0x0,8
tick,0x7ffdc994fb34,402123301,0,0x0,8
tick,0x7ffdc994fb34,402138896,0,0x0,8
tick,0x7ffdc994fb34,402154200,0,0x0,8
tick,0x7ffdc994fb34,402170051,0,0x0,8
tick,0x7ffdc994fb34,402185266,0,0x0,8
tick,0x7ffdc994fb34,402201434,0,0x0,8
tick,0x7ffdc994fb34,402217325,0,0x0,8
tick,0x7ffdc994fb34,402232705,0,0x0,8
tick,0x7ffdc994fb34,402248605,0,0x0,8
tick,0x7ffdc994fb34,402263678,0,0x0,8
tick,0x7ffdc994fb34,402279188,0,0x0,8
tick,0x7ffdc994fb34,402295049,0,0x0,8
tick,0x7ffdc994fb34,402311040,0,0x0,8
tick,0x7ffdc994fb34,402326332,0,0x0,8
tick,0x7ffdc994fb34,402342177,0,0x0,8
tick,0x7ffdc994fb34,402357834,0,0x0,8
tick,0x7ffdc994fb34,402372776,0,0x0,8
tick,0x7ffdc994fb34,402388445,0,0x0,8
tick,0x7ffdc994fb34,402404376,0,0x0,8
tick,0x7ffdc994fb34,402419850,0,0x0,8
tick,0x7ffdc994fb34,402435309,0,0x0,8
tick,0x7ffdc994fb34,402450580,0,0x0,8
tick,0x7ffdc994fb34,402465580,0,0x0,8
tick,0x7ffdc994fb34,402481659,0,0x0,8
tick,0x7ffdc994fb34,402496206,0,0x0,8
tick,0x7ffdc994fb34,402511914,0,0x0,8
tick,0x7ffdc994fb34,402526717,0,0x0,8
tick,0x7ffdc994fb34,402542206,0,0x0,8
tick,0x7ffdc994fb34,402557804,0,0x0,8
tick,0x7ffdc994fb34,402573156,0,0x0,8
tick,0x7ffdc994fb34,402588890,0,0x0,8
tick,0x7ffdc994fb34,402604914,0,0x0,8
tick,0x7ffdc994fb34,402620061,0,0x0,8
tick,0x7ffdc994fb34,402636175,0,0x0,8
tick,0x7ffdc994fb34,402651420,0,0x0,8
tick,0x7ffdc994fb34,402667417,0,0x0,8
tick,0x7ffdc994fb34,402683667,0,0x0,8
tick,0x7ffdc994fb34,402699734,0,0x0,8
tick,0x7ffdc994fb34,402715492,0,0x0,8
tick,0x7ffdc994fb34,402731219,0,0x0,8
tick,0x7ffdc994fb34,402746541,0,0x0,8
tick,0x7ffdc994fb34,402761847,0,0x0,8
tick,0x7ffdc994fb34,402777870,0,0x0,8
tick,0x7ffdc994fb34,402793930,0,0x0,8
tick,0x7ffdc994fb34,402808925,0,0x0,8
tick,0x7ffdc994fb34,402824196,0,0x0,8
tick,0x7ffdc994fb34,402840208,0,0x0,8
tick,0x7ffdc994fb34,402855261,0,0x0,8
tick,0x7ffdc994fb34,402871069,0,0x0,8
tick,0x7ffdc994fb34,402886217,0,0x0,8
tick,0x7ffdc994fb34,402901930,0,0x0,8
tick,0x7ffdc994fb34,402917619,0,0x0,8
tick,0x7ffdc994fb34,402932831,0,0x0,8
tick,0x7ffdc994fb34,402948651,0,0x0,8
tick,0x7ffdc994fb34,402964233,0,0x0,8
tick,0x7ffdc994fb34,402980064,0,0x0,8
tick,0x7ffdc994fb34,402995436,0,0x0,8
tick,0x7ffdc994fb34,403011215,0,0x0,8
tick,0x7ffdc994fb34,403026740,0,0x0,8
tick,0x7ffdc994fb34,403042614,0,0x0,8
tick,0x7ffdc994fb34,403058218,0,0x0,8
tick,0x7ffdc994fb34,403074229,0,0x0,8
tick,0x7ffdc994fb34,403089863,0,0x0,8
tick,0x7ffdc994fb34,403105829,0,0x0,8
tick,0x7ffdc994fb34,403121043,0,0x0,8
tick,0x7ffdc994fb34,403136802,0,0x0,8
tick,0x7ffdc994fb34,403151529,0,0x0,8
tick,0x7ffdc994fb34,403167056,0,0x0,8
tick,0x7ffdc994fb34,403182600,0,0x0,8
tick,0x7ffdc994fb34,403198212,0,0x0,8
tick,0x7ffdc994fb34,403213976,0,0x0,8
tick,0x7ffdc994fb34,403229472,0,0x0,8
tick,0x7ffdc994fb34,403245216,0,0x0,8
tick,0x7ffdc994fb34,403260748,0,0x0,8
tick,0x7ffdc994fb34,403276329,0,0x0,8
tick,0x7ffdc994fb34,403292047,0,0x0,8
tick,0x7ffdc994fb34,403307770,0,0x0,8
tick,0x7ffdc994fb34,403322905,0,0x0,8
tick,0x7ffdc994fb34,403338973,0,0x0,8
tick,0x7ffdc994fb34,403354577,0,0x0,8
tick,0x7ffdc994fb34,403370798,0,0x0,8
tick,0x7ffdc994fb34,403386633,0,0x0,8
tick,0x7ffdc994fb34,403401963,0,0x0,8
tick,0x7ffdc994fb34,403417950,0,0x0,8
tick,0x7ffdc994fb34,403433619,0,0x0,8
tick,0x7ffdc994fb34,403448861,0,0x0,8
tick,0x7ffdc994fb34,403464665,0,0x0,8
tick,0x7ffdc994fb34,403480346,0,0x0,8
tick,0x7ffdc994fb34,403495676,0,0x0,8
tick,0x7ffdc994fb34,403511254,0,0x0,8
tick,0x7ffdc994fb34,403526866,0,0x0,8
tick,0x7ffdc994fb34,403542305,0,0x0,8
tick,0x7ffdc994fb34,403557611,0,0x0,8
tick,0x7ffdc994fb34,403573430,0,0x0,8
tick,0x7ffdc994fb34,403589360,0,0x0,8
tick,0x7ffdc994fb34,403604674,0,0x0,8
tick,0x7ffdc994fb34,403620252,0,0x0,8
tick,0x7ffdc994fb34,403635890,0,0x0,8
tick,0x7ffdc994fb34,403650602,0,0x0,8
tick,0x7ffdc994fb34,403666362,0,0x0,8
tick,0x7ffdc994fb34,403681560,0,0x0,8
tick,0x7ffdc994fb34,403697420,0,0x0,8
tick,0x7ffdc994fb34,403712088,0,0x0,8
tick,0x7ffdc994fb34,403728077,0,0x0,8
tick,0x7ffdc994fb34,403743403,0,0x0,8
tick,0x7ffdc994fb34,403759597,0,0x0,8
tick,0x7ffdc994fb34,403774602,0,0x0,8
tick,0x7ffdc994fb34,403790508,0,0x0,8
tick,0x7ffdc994fb34,403806523,0,0x0,8
tick,0x7ffdc994fb34,403822512,0,0x0,8
tick,0x7ffdc994fb34,403838274,0,0x0,8
tick,0x7ffdc994fb34,403853614,0,0x0,8
tick,0x7ffdc994fb34,403868950,0,0x0,8
tick,0x7ffdc994fb34,403884208,0,0x0,8
tick,0x7ffdc994fb34,403899552,0,0x0,8
tick,0x7ffdc994fb34,403914857,0,0x0,8
tick,0x7ffdc994fb34,403930859,0,0x0,8
tick,0x7ffdc994fb34,403946495,0,0x0,8
tick,0x7ffdc994fb34,403961690,0,0x0,8
tick,0x7ffdc994fb34,403977497,0,0x0,8
tick,0x7ffdc994fb34,403992876,0,0x0,8
tick,0x7ffdc994fb34,404008630,0,0x0,8
tick,0x7ffdc994fb34,404024156,0,0x0,8
tick,0x7ffdc994fb34,404039884,0,0x0,8
tick,0x7ffdc994fb34,404055020,0,0x0,8
tick,0x7ffdc994fb34,404070582,0,0x0,8
tick,0x7ffdc994fb34,404086472,0,0x0,8
tick,0x7ffdc994fb34,404102506,0,0x0,8
tick,0x7ffdc994fb34,404118602,0,0x0,8
tick,0x7ffdc994fb34,404134451,0,0x0,8
tick,0x7ffdc994fb34,404149809,0,0x0,8
tick,0x7ffdc994fb34,404165854,0,0x0,8
tick,0x7ffdc994fb34,404181094,0,0x0,8
tick,0x7ffdc994fb34,404197304,0,0x0,8
tick,0x7ffdc994fb34,404213013,0,0x0,8
tick,0x7ffdc994fb34,404228310,0,0x0,8
tick,0x7ffdc994fb34,404243859,0,0x0,8
tick,0x7ffdc994fb34,404259630,0,0x0,8
tick,0x7ffdc994fb34,404275569,0,0x0,8
tick,0x7ffdc994fb34,404291408,0,0x0,8
tick,0x7ffdc994fb34,404306713,0,0x0,8
tick,0x7ffdc994fb34,404322296,0,0x0,8
tick,0x7ffdc994fb34,404337823,0,0x0,8
tick,0x7ffdc994fb34,404353767,0,0x0,8
tick,0x7ffdc994fb34,404369461,0,0x0,8
tick,0x7ffdc994fb34,404384876,0,0x0,8
tick,0x7ffdc994fb34,404399960,0,0x0,8
tick,0x7ffdc994fb34,404416129,0,0x0,8
tick,0x7ffdc994fb34,404431600,0,0x0,8
tick,0x7ffdc994fb34,404447430,0,0x0,8
tick,0x7ffdc994fb34,404462918,0,0x0,8
tick,0x7ffdc994fb34,404478603,0,0x0,8
tick,0x7ffdc994fb34,404494660,0,0x0,8
tick,0x7ffdc994fb34,404510635,0,0x0,8
tick,0x7ffdc994fb34,404525636,0,0x0,8
tick,0x7ffdc994fb34,404541711,0,0x0,8
tick,0x7ffdc994fb34,404556554,0,0x0,8
tick,0x7ffdc994fb34,404572197,0,0x0,8
tick,0x7ffdc994fb34,404587896,0,0x0,8
tick,0x7ffdc994fb34,404604037,0,0x0,8
tick,0x7ffdc994fb34,404619236,0,0x0,8
tick,0x7ffdc994fb34,404635403,0,0x0,8
tick,0x7ffdc994fb34,404650410,0,0x0,8
tick,0x7ffdc994fb34,404665491,0,0x0,8
tick,0x7ffdc994fb34,404680637,0,0x0,8
tick,0x7ffdc994fb34,404696559,0,0x0,8
tick,0x7ffdc994fb34,404712012,0,0x0,8
tick,0x7ffdc994fb34,404727505,0,0x0,8
tick,0x7ffdc994fb34,404742888,0,0x0,8
tick,0x7ffdc994fb34,404758613,0,0x0,8
tick,0x7ffdc994fb34,404773920,0,0x0,8
tick,0x7ffdc994fb34,404789589,0,0x0,8
tick,0x7ffdc994fb34,404804951,0,0x0,8
tick,0x7ffdc994fb34,404820389,0,0x0,8
tick,0x7ffdc994fb34,404835630,0,0x0,8
tick,0x7ffdc994fb34,404850645,0,0x0,8
tick,0x7ffdc994fb34,404866671,0,0x0,8
tick,0x7ffdc994fb34,404882731,0,0x0,8
tick,0x7ffdc994fb34,404898517,0,0x0,8
tick,0x7ffdc994fb34,404914709,0,0x0,8
tick,0x7ffdc994fb34,404931084,0,0x0,8
tick,0x7ffdc994fb34,404945923,0,0x0,8
tick,0x7ffdc994fb34,404961393,0,0x0,8
tick,0x7ffdc994fb34,404977543,0,0x0,8
tick,0x7ffdc994fb34,404993322,0,0x0,8
tick,0x7ffdc994fb34,405009255,0,0x0,8
tick,0x7ffdc994fb34,405024922,0,0x0,8
tick,0x7ffdc994fb34,405040084,0,0x0,8
tick,0x7ffdc994fb34,405056003,0,0x0,8
tick,0x7ffdc994fb34,405072014,0,0x0,8
tick,0x7ffdc994fb34,405087906,0,0x0,8
tick,0x7ffdc994fb34,405103269,0,0x0,8
tick,0x7ffdc994fb34,405118890,0,0x0,8
tick,0x7ffdc994fb34,405134385,0,0x0,8
tick,0x7ffdc994fb34,405149783,0,0x0,8
tick,0x7ffdc994fb34,405165761,0,0x0,8
tick,0x7ffdc994fb34,405181133,0,0x0,8
tick,0x7ffdc994fb34,405196729,0,0x0,8
tick,0x7ffdc994fb34,405212795,0,0x0,8
tick,0x7ffdc994fb34,405227862,0,0x0,8
tick,0x7ffdc994fb34,405243096,0,0x0,8
tick,0x7ffdc994fb34,405259090,0,0x0,8
tick,0x7ffdc994fb34,405274791,0,0x0,8
tick,0x7ffdc994fb34,405290639,0,0x0,8
tick,0x7ffdc994fb34,405305960,0,0x0,8
tick,0x7ffdc994fb34,405321271,0,0x0,8
tick,0x7ffdc994fb34,405337144,0,0x0,8
tick,0x7ffdc994fb34,405353079,0,0x0,8
tick,0x7ffdc994fb34,405368902,0,0x0,8
tick,0x7ffdc994fb34,405384162,0,0x0,8
tick,0x7ffdc994fb34,405399624,0,0x0,8
tick,0x7ffdc994fb34,405414762,0,0x0,8
tick,0x7ffdc994fb34,405430540,0,0x0,8
tick,0x7ffdc994fb34,405445345,0,0x0,8
tick,0x7ffdc994fb34,405460866,0,0x0,8
tick,0x7ffdc994fb34,405476740,0,0x0,8
tick,0x7ffdc994fb34,405491591,0,0x0,8
tick,0x7ffdc994fb34,405507510,0,0x0,8
tick,0x7ffdc994fb34,405522637,0,0x0,8
tick,0x7ffdc994fb34,405538325,0,0x0,8
tick,0x7ffdc994fb34,405553657,0,0x0,8
tick,0x7ffdc994fb34,405569465,0,0x0,8
tick,0x7ffdc994fb34,405585044,0,0x0,8
tick,0x7ffdc994fb34,405600536,0,0x0,8
tick,0x7ffdc994fb34,405615912,0,0x0,8
tick,0x7ffdc994fb34,405631661,0,0x0,8
tick,0x7ffdc994fb34,405647167,0,0x0,8
tick,0x7ffdc994fb34,405662679,0,0x0,8
tick,0x7ffdc994fb34,405678774,0,0x0,8
tick,0x7ffdc994fb34,405694769,0,0x0,8
tick,0x7ffdc994fb34,405710739,0,0x0,8
tick,0x7ffdc994fb34,405726319,0,0x0,8
tick,0x7ffdc994fb34,405741498,0,0x0,8
tick,0x7ffdc994fb34,405756983,0,0x0,8
tick,0x7ffdc994fb34,405773255,0,0x0,8
tick,0x7ffdc994fb34,405789108,0,0x0,8
tick,0x7ffdc994fb34,405805014,0,0x0,8
tick,0x7ffdc994fb34,405820676,0,0x0,8
tick,0x7ffdc994fb34,405836485,0,0x0,8
tick,0x7ffdc994fb34,405852261,0,0x0,8
tick,0x7ffdc994fb34,405868450,0,0x0,8
tick,0x7ffdc994fb34,405883888,0,0x0,8
tick,0x7ffdc994fb34,405899316,0,0x0,8
tick,0x7ffdc994fb34,405915153,0,0x0,8
tick,0x7ffdc994fb34,405930337,0,0x0,8
tick,0x7ffdc994fb34,405945561,0,0x0,8
tick,0x7ffdc994fb34,405961026,0,0x0,8
tick,0x7ffdc994fb34,405976538,0,0x0,8
tick,0x7ffdc994fb34,405991846,0,0x0,8
tick,0x7ffdc994fb34,406006997,0,0x0,8
tick,0x7ffdc994fb34,406022946,0,0x0,8
tick,0x7ffdc994fb34,406038666,0,0x0,8
tick,0x7ffdc994fb34,406053551,0,0x0,8
tick,0x7ffdc994fb34,406069165,0,0x0,8
tick,0x7ffdc994fb34,406084905,0,0x0,8
tick,0x7ffdc994fb34,406101013,0,0x0,8
tick,0x7ffdc994fb34,406116935,0,0x0,8
tick,0x7ffdc994fb34,406131887,0,0x0,8
tick,0x7ffdc994fb34,406147954,0,0x0,8
tick,0x7ffdc994fb34,406163612,0,0x0,8
tick,0x7ffdc994fb34,406179607,0,0x0,8
tick,0x7ffdc994fb34,406195726,0,0x0,8
tick,0x7ffdc994fb34,406211438,0,0x0,8
tick,0x7ffdc994fb34,406227495,0,0x0,8
tick,0x7ffdc994fb34,406242937,0,0x0,8
tick,0x7ffdc994fb34,406258760,0,0x0,8
tick,0x7ffdc994fb34,406273998,0,0x0,8
tick,0x7ffdc994fb34,406289451,0,0x0,8
tick,0x7ffdc994fb34,406304759,0,0x0,8
tick,0x7ffdc994fb34,406320229,0,0x0,8
tick,0x7ffdc994fb34,406336026,0,0x0,8
tick,0x7ffdc994fb34,406351240,0,0x0,8
tick,0x7ffdc994fb34,406366860,0,0x0,8
tick,0x7ffdc994fb34,406382804,0,0x0,8
tick,0x7ffdc994fb34,406398467,0,0x0,8
tick,0x7ffdc994fb34,406414236,0,0x0,8
tick,0x7ffdc994fb34,406429319,0,0x0,8
tick,0x7ffdc994fb34,406444454,0,0x0,8
tick,0x7ffdc994fb34,406460131,0,0x0,8
tick,0x7ffdc994fb34,406475526,0,0x0,8
tick,0x7ffdc994fb34,406490740,0,0x0,8
tick,0x7ffdc994fb34,406506645,0,0x0,8
tick,0x7ffdc994fb34,406522064,0,0x0,8
tick,0x7ffdc994fb34,406537899,0,0x0,8
tick,0x7ffdc994fb34,406552935,0,0x0,8
tick,0x7ffdc994fb34,406568797,0,0x0,8
tick,0x7ffdc994fb34,406583675,0,0x0,8
tick,0x7ffdc994fb34,406599430,0,0x0,8
tick,0x7ffdc994fb34,406614658,0,0x0,8
tick,0x7ffdc994fb34,406630649,0,0x0,8
tick,0x7ffdc994fb34,406645970,0,0x0,8
tick,0x7ffdc994fb34,406661491,0,0x0,8
tick,0x7ffdc994fb34,406677014,0,0x0,8
tick,0x7ffdc994fb34,406692932,0,0x0,8
tick,0x7ffdc994fb34,406708160,0,0x0,8
tick,0x7ffdc994fb34,406723844,0,0x0,8
tick,0x7ffdc994fb34,406740246,0,0x0,8
tick,0x7ffdc994fb34,406755173,0,0x0,8
tick,0x7ffdc994fb34,406770801,0,0x0,8
tick,0x7ffdc994fb34,406786627,0,0x0,8
tick,0x7ffdc994fb34,406802361,0,0x0,8
tick,0x7ffdc994fb34,406818224,0,0x0,8
tick,0x7ffdc994fb34,406833427,0,0x0,8
tick,0x7ffdc994fb34,406849297,0,0x0,8
tick,0x7ffdc994fb34,406864307,0,0x0,8
tick,0x7ffdc994fb34,406879722,0,0x0,8
tick,0x7ffdc994fb34,406895216,0,0x0,8
tick,0x7ffdc994fb34,406911205,0,0x0,8
tick,0x7ffdc994fb34,406926734,0,0x0,8
tick,0x7ffdc994fb34,406942800,0,0x0,8
tick,0x7ffdc994fb34,406958310,0,0x0,8
tick,0x7ffdc994fb34,406974094,0,0x0,8
tick,0x7ffdc994fb34,406989713,0,0x0,8
tick,0x7ffdc994fb34,407005009,0,0x0,8
tick,0x7ffdc994fb34,407020974,0,0x0,8
tick,0x7ffdc994fb34,407036258,0,0x0,8
tick,0x7ffdc994fb34,407051282,0,0x0,8
tick,0x7ffdc994fb34,407066835,0,0x0,8
tick,0x7ffdc994fb34,407083012,0,0x0,8
tick,0x7ffdc994fb34,407098815,0,0x0,8
tick,0x7ffdc994fb34,407113796,0,0x0,8
tick,0x7ffdc994fb34,407129135,0,0x0,8
tick,0x7ffdc994fb34,407144507,0,0x0,8
tick,0x7ffdc994fb34,407160317,0,0x0,8
tick,0x7ffdc994fb34,407175695,0,0x0,8
tick,0x7ffdc994fb34,407190914,0,0x0,8
tick,0x7ffdc994fb34,407206518,0,0x0,8
tick,0x7ffdc994fb34,407221507,0,0x0,8
tick,0x7ffdc994fb34,407257728,0,0x0,8
tick,0x7ffdc994fb34,407268062,0,0x0,8
tick,0x7ffdc994fb34,407283659,0,0x0,8
tick,0x7ffdc994fb34,407298966,0,0x0,8
tick,0x7ffdc994fb34,407314632,0,0x0,8
tick,0x7ffdc994fb34,407329948,0,0x0,8
tick,0x7ffdc994fb34,407345965,0,0x0,8
tick,0x7ffdc994fb34,407361633,0,0x0,8
tick,0x7ffdc994fb34,407376662,0,0x0,8
tick,0x7ffdc994fb34,407391862,0,0x0,8
tick,0x7ffdc994fb34,407407095,0,0x0,8
tick,0x7ffdc994fb34,407422739,0,0x0,8
tick,0x7ffdc994fb34,407437992,0,0x0,8
tick,0x7ffdc994fb34,407453824,0,0x0,8
tick,0x7ffdc994fb34,407469670,0,0x0,8
tick,0x7ffdc994fb34,407485855,0,0x0,8
tick,0x7ffdc994fb34,407501249,0,0x0,8
tick,0x7ffdc994fb34,407517234,0,0x0,8
tick,0x7ffdc994fb34,407533084,0,0x0,8
tick,0x7ffdc994fb34,407548596,0,0x0,8
tick,0x7ffdc994fb34,407564140,0,0x0,8
tick,0x7ffdc994fb34,407579747,0,0x0,8
tick,0x7ffdc994fb34,407595504,0,0x0,8
tick,0x7ffdc994fb34,407611695,0,0x0,8
tick,0x7ffdc994fb34,407627535,0,0x0,8
tick,0x7ffdc994fb34,407643782,0,0x0,8
tick,0x7ffdc994fb34,407659267,0,0x0,8
tick,0x7ffdc994fb34,407674694,0,0x0,8
tick,0x7ffdc994fb34,407691056,0,0x0,8
tick,0x7ffdc994fb34,407706374,0,0x0,8
tick,0x7ffdc994fb34,407721952,0,0x0,8
tick,0x7ffdc994fb34,407736920,0,0x0,8
tick,0x7ffdc994fb34,407752426,0,0x0,8
tick,0x7ffdc994fb34,407767996,0,0x0,8
tick,0x7ffdc994fb34,407784349,0,0x0,8
tick,0x7ffdc994fb34,407800461,0,0x0,8
tick,0x7ffdc994fb34,407815631,0,0x0,8
tick,0x7ffdc994fb34,407831662,0,0x0,8
tick,0x7ffdc994fb34,407846892,0,0x0,8
tick,0x7ffdc994fb34,407862354,0,0x0,8
tick,0x7ffdc994fb34,407878312,0,0x0,8
tick,0x7ffdc994fb34,407894401,0,0x0,8
tick,0x7ffdc994fb34,407909989,0,0x0,8
tick,0x7ffdc994fb34,407926040,0,0x0,8
tick,0x7ffdc994fb34,407941238,0,0x0,8
tick,0x7ffdc994fb34,407957087,0,0x0,8
tick,0x7ffdc994fb34,407972562,0,0x0,8
tick,0x7ffdc994fb34,407988225,0,0x0,8
tick,0x7ffdc994fb34,408003621,0,0x0,8
tick,0x7ffdc994fb34,408019610,0,0x0,8
tick,0x7ffdc994fb34,408034871,0,0x0,8
tick,0x7ffdc994fb34,408050885,0,0x0,8
tick,0x7ffdc994fb34,408066495,0,0x0,8
tick,0x7ffdc994fb34,408082398,0,0x0,8
tick,0x7ffdc994fb34,408097757,0,0x0,8
tick,0x7ffdc994fb34,408113539,0,0x0,8
tick,0x7ffdc994fb34,408129089,0,0x0,8
tick,0x7ffdc994fb34,408144416,0,0x0,8
tick,0x7ffdc994fb34,408160550,0,0x0,8
tick,0x7ffdc994fb34,408174865,0,0x0,8
tick,0x7ffdc994fb34,408190787,0,0x0,8
tick,0x7ffdc994fb34,408206497,0,0x0,8
tick,0x7ffdc994fb34,408221854,0,0x0,8
tick,0x7ffdc994fb34,408237211,0,0x0,8
tick,0x7ffdc994fb34,408253122,0,0x0,8
tick,0x7ffdc994fb34,408268563,0,0x0,8
tick,0x7ffdc994fb34,408284401,0,0x0,8
tick,0x7ffdc994fb34,408299892,0,0x0,8
tick,0x7ffdc994fb34,408315625,0,0x0,8
tick,0x7ffdc994fb34,408331518,0,0x0,8
tick,0x7ffdc994fb34,408346861,0,0x0,8
tick,0x7ffdc994fb34,408362373,0,0x0,8
tick,0x7ffdc994fb34,408378200,0,0x0,8
tick,0x7ffdc994fb34,408393403,0,0x0,8
tick,0x7ffdc994fb34,408409001,0,0x0,8
tick,0x7ffdc994fb34,408424126,0,0x0,8
tick,0x7ffdc994fb34,408439803,0,0x0,8
tick,0x7ffdc994fb34,408455329,0,0x0,8
tick,0x7ffdc994fb34,408470840,0,0x0,8
tick,0x7ffdc994fb34,408486676,0,0x0,8
tick,0x7ffdc994fb34,408502258,0,0x0,8
tick,0x7ffdc994fb34,408517860,0,0x0,8
tick,0x7ffdc994fb34,408533339,0,0x0,8
tick,0x7ffdc994fb34,408549568,0,0x0,8
tick,0x7ffdc994fb34,408564816,0,0x0,8
tick,0x7ffdc994fb34,408580223,0,0x0,8
tick,0x7ffdc994fb34,408596056,0,0x0,8
tick,0x7ffdc994fb34,408611815,0,0x0,8
tick,0x7ffdc994fb34,408627424,0,0x0,8
tick,0x7ffdc994fb34,408642606,0,0x0,8
tick,0x7ffdc994fb34,408658048,0,0x0,8
tick,0x7ffdc994fb34,408673616,0,0x0,8
tick,0x7ffdc994fb34,408689283,0,0x0,8
tick,0x7ffdc994fb34,408705208,0,0x0,8
tick,0x7ffdc994fb34,408720682,0,0x0,8
tick,0x7ffdc994fb34,408736118,0,0x0,8
tick,0x7ffdc994fb34,408751834,0,0x0,8
tick,0x7ffdc994fb34,408767583,0,0x0,8
tick,0x7ffdc994fb34,408783498,0,0x0,8
tick,0x7ffdc994fb34,408799330,0,0x0,8
tick,0x7ffdc994fb34,408814595,0,0x0,8
tick,0x7ffdc994fb34,408830092,0,0x0,8
tick,0x7ffdc994fb34,408844967,0,0x0,8
tick,0x7ffdc994fb34,408861124,0,0x0,8
tick,0x7ffdc994fb34,408876103,0,0x0,8
tick,0x7ffdc994fb34,408892301,0,0x0,8
tick,0x7ffdc994fb34,408907424,0,0x0,8
tick,0x7ffdc994fb34,408922802,0,0x0,8
tick,0x7ffdc994fb34,408938641,0,0x0,8
tick,0x7ffdc994fb34,408954081,0,0x0,8
tick,0x7ffdc994fb34,408969314,0,0x0,8
tick,0x7ffdc994fb34,408984829,0,0x0,8
tick,0x7ffdc994fb34,409000439,0,0x0,8
tick,0x7ffdc994fb34,409016436,0,0x0,8
tick,0x7ffdc994fb34,409031240,0,0x0,8
tick,0x7ffdc994fb34,409046813,0,0x0,8
tick,0x7ffdc994fb34,409062800,0,0x0,8
tick,0x7ffdc994fb34,409078720,0,0x0,8
tick,0x7ffdc994fb34,409094861,0,0x0,8
tick,0x7ffdc994fb34,409109918,0,0x0,8
tick,0x7ffdc994fb34,409125893,0,0x0,8
tick,0x7ffdc994fb34,409141224,0,0x0,8
tick,0x7ffdc994fb34,409156900,0,0x0,8
tick,0x7ffdc994fb34,409172749,0,0x0,8
tick,0x7ffdc994fb34,409188166,0,0x0,8
tick,0x7ffdc994fb34,409203320,0,0x0,8
tick,0x7ffdc994fb34,409219408,0,0x0,8
tick,0x7ffdc994fb34,409234745,0,0x0,8
tick,0x7ffdc994fb34,409250430,0,0x0,8
tick,0x7ffdc994fb34,409266231,0,0x0,8
tick,0x7ffdc994fb34,409281218,0,0x0,8
tick,0x7ffdc994fb34,409297116,0,0x0,8
tick,0x7ffdc994fb34,409312677,0,0x0,8
tick,0x7ffdc994fb34,409328223,0,0x0,8
tick,0x7ffdc994fb34,409343665,0,0x0,8
tick,0x7ffdc994fb34,409359837,0,0x0,8
tick,0x7ffdc994fb34,409375185,0,0x0,8
tick,0x7ffdc994fb34,409390387,0,0x0,8
tick,0x7ffdc994fb34,409405568,0,0x0,8
tick,0x7ffdc994fb34,409421263,0,0x0,8
tick,0x7ffdc994fb34,409436940,0,0x0,8
tick,0x7ffdc994fb34,409453038,0,0x0,8
tick,0x7ffdc994fb34,409467812,0,0x0,8
tick,0x7ffdc994fb34,409483536,0,0x0,8
tick,0x7ffdc994fb34,409499242,0,0x0,8
tick,0x7ffdc994fb34,409514654,0,0x0,8
tick,0x7ffdc994fb34,409529890,0,0x0,8
tick,0x7ffdc994fb34,409545670,0,0x0,8
tick,0x7ffdc994fb34,409561703,0,0x0,8
tick,0x7ffdc994fb34,409577725,0,0x0,8
tick,0x7ffdc994fb34,409593301,0,0x0,8
tick,0x7ffdc994fb34,409608823,0,0x0,8
tick,0x7ffdc994fb34,409624543,0,0x0,8
tick,0x7ffdc994fb34,409639608,0,0x0,8
tick,0x7ffdc994fb34,409655319,0,0x0,8
tick,0x7ffdc994fb34,409671026,0,0x0,8
tick,0x7ffdc994fb34,409686810,0,0x0,8
tick,0x7ffdc994fb34,409702290,0,0x0,8
tick,0x7ffdc994fb34,409717784,0,0x0,8
tick,0x7ffdc994fb34,409733311,0,0x0,8
tick,0x7ffdc994fb34,409747804,0,0x0,8
tick,0x7ffdc994fb34,409763664,0,0x0,8
tick,0x7ffdc994fb34,409778934,0,0x0,8
tick,0x7ffdc994fb34,409794338,0,0x0,8
tick,0x7ffdc994fb34,409810381,0,0x0,8
tick,0x7ffdc994fb34,409826134,0,0x0,8
tick,0x7ffdc994fb34,409841474,0,0x0,8
tick,0x7ffdc994fb34,409857401,0,0x0,8
tick,0x7ffdc994fb34,409873564,0,0x0,8
tick,0x7ffdc994fb34,409888773,0,0x0,8
tick,0x7ffdc994fb34,409904088,0,0x0,8
tick,0x7ffdc994fb34,409919451,0,0x0,8
tick,0x7ffdc994fb34,409935269,0,0x0,8
tick,0x7ffdc994fb34,409950992,0,0x0,8
tick,0x7ffdc994fb34,409966676,0,0x0,8
tick,0x7ffdc994fb34,409981903,0,0x0,8
tick,0x7ffdc994fb34,409997400,0,0x0,8
tick,0x7ffdc994fb34,410012883,0,0x0,8
tick,0x7ffdc994fb34,410028409,0,0x0,8
tick,0x7ffdc994fb34,410044280,0,0x0,8
tick,0x7ffdc994fb34,410059708,0,0x0,8
tick,0x7ffdc994fb34,410075646,0,0x0,8
tick,0x7ffdc994fb34,410090894,0,0x0,8
tick,0x7ffdc994fb34,410106999,0,0x0,8
tick,0x7ffdc994fb34,410122628,0,0x0,8
tick,0x7ffdc994fb34,410138796,0,0x0,8
tick,0x7ffdc994fb34,410153328,0,0x0,8
tick,0x7ffdc994fb34,410169036,0,0x0,8
tick,0x7ffdc994fb34,410184304,0,0x0,8
tick,0x7ffdc994fb34,410200256,0,0x0,8
tick,0x7ffdc994fb34,410215983,0,0x0,8
tick,0x7ffdc994fb34,410231319,0,0x0,8
tick,0x7ffdc994fb34,410247254,0,0x0,8
tick,0x7ffdc994fb34,410262518,0,0x0,8
tick,0x7ffdc994fb34,410278579,0,0x0,8
tick,0x7ffdc994fb34,410294373,0,0x0,8
tick,0x7ffdc994fb34,410309652,0,0x0,8
tick,0x7ffdc994fb34,410325274,0,0x0,8
tick,0x7ffdc994fb34,410340081,0,0x0,8
tick,0x7ffdc994fb34,410355782,0,0x0,8
tick,0x7ffdc994fb34,410371145,0,0x0,8
tick,0x7ffdc994fb34,410386465,0,0x0,8
tick,0x7ffdc994fb34,410401600,0,0x0,8
tick,0x7ffdc994fb34,410417350,0,0x0,8
tick,0x7ffdc994fb34,410432997,0,0x0,8
tick,0x7ffdc994fb34,410448810,0,0x0,8
tick,0x7ffdc994fb34,410464121,0,0x0,8
tick,0x7ffdc994fb34,410479372,0,0x0,8
tick,0x7ffdc994fb34,410494970,0,0x0,8
tick,0x7ffdc994fb34,410510297,0,0x0,8
tick,0x7ffdc994fb34,410525766,0,0x0,8
tick,0x7ffdc994fb34,410541961,0,0x0,8
tick,0x7ffdc994fb34,410556952,0,0x0,8
tick,0x7ffdc994fb34,410572269,0,0x0,8
tick,0x7ffdc994fb34,410587800,0,0x0,8
tick,0x7ffdc994fb34,410603070,0,0x0,8
tick,0x7ffdc994fb34,410619308,0,0x0,8
tick,0x7ffdc994fb34,410634277,0,0x0,8
tick,0x7ffdc994fb34,410650319,0,0x0,8
tick,0x7ffdc994fb34,410666457,0,0x0,8
tick,0x7ffdc994fb34,410682065,0,0x0,8
tick,0x7ffdc994fb34,410697810,0,0x0,8
tick,0x7ffdc994fb34,410713256,0,0x0,8
tick,0x7ffdc994fb34,410729280,0,0x0,8
tick,0x7ffdc994fb34,410745300,0,0x0,8
tick,0x7ffdc994fb34,410760617,0,0x0,8
tick,0x7ffdc994fb34,410776035,0,0x0,8
tick,0x7ffdc994fb34,410791414,0,0x0,8
tick,0x7ffdc994fb34,410807013,0,0x0,8
tick,0x7ffdc994fb34,410822328,0,0x0,8
tick,0x7ffdc994fb34,410838148,0,0x0,8
tick,0x7ffdc994fb34,410854332,0,0x0,8
tick,0x7ffdc994fb34,410869455,0,0x0,8
tick,0x7ffdc994fb34,410884764,0,0x0,8
tick,0x7ffdc994fb34,410900704,0,0x0,8
tick,0x7ffdc994fb34,410916530,0,0x0,8
tick,0x7ffdc994fb34,410931939,0,0x0,8
tick,0x7ffdc994fb34,410947961,0,0x0,8
tick,0x7ffdc994fb34,410963330,0,0x0,8
tick,0x7ffdc994fb34,410978993,0,0x0,8
tick,0x7ffdc994fb34,410994810,0,0x0,8
tick,0x7ffdc994fb34,411010170,0,0x0,8
tick,0x7ffdc994fb34,411025581,0,0x0,8
tick,0x7ffdc994fb34,411041057,0,0x0,8
tick,0x7ffdc994fb34,411056590,0,0x0,8
tick,0x7ffdc994fb34,411071639,0,0x0,8
tick,0x7ffdc994fb34,411086523,0,0x0,8
tick,0x7ffdc994fb34,411102489,0,0x0,8
tick,0x7ffdc994fb34,411118131,0,0x0,8
tick,0x7ffdc994fb34,411133747,0,0x0,8
tick,0x7ffdc994fb34,411149313,0,0x0,8
tick,0x7ffdc994fb34,411164743,0,0x0,8
tick,0x7ffdc994fb34,411180359,0,0x0,8
tick,0x7ffdc994fb34,411196308,0,0x0,8
tick,0x7ffdc994fb34,411212777,0,0x0,8
tick,0x7ffdc994fb34,411227928,0,0x0,8
tick,0x7ffdc994fb34,411243256,0,0x0,8
tick,0x7ffdc994fb34,411258857,0,0x0,8
tick,0x7ffdc994fb34,411274022,0,0x0,8
tick,0x7ffdc994fb34,411289842,0,0x0,8
tick,0x7ffdc994fb34,411305387,0,0x0,8
tick,0x7ffdc994fb34,411320530,0,0x0,8
tick,0x7ffdc994fb34,411335923,0,0x0,8
tick,0x7ffdc994fb34,411351392,0,0x0,8
tick,0x7ffdc994fb34,411367141,0,0x0,8
tick,0x7ffdc994fb34,411382814,0,0x0,8
tick,0x7ffdc994fb34,411398429,0,0x0,8
tick,0x7ffdc994fb34,411414060,0,0x0,8
tick,0x7ffdc994fb34,411429572,0,0x0,8
tick,0x7ffdc994fb34,411444965,0,0x0,8
tick,0x7ffdc994fb34,411460817,0,0x0,8
tick,0x7ffdc994fb34,411476249,0,0x0,8
tick,0x7ffdc994fb34,411492491,0,0x0,8
tick,0x7ffdc994fb34,411508158,0,0x0,8
tick,0x7ffdc994fb34,411524317,0,0x0,8
tick,0x7ffdc994fb34,411540302,0,0x0,8
tick,0x7ffdc994fb34,411555332,0,0x0,8
tick,0x7ffdc994fb34,411570735,0,0x0,8
tick,0x7ffdc994fb34,411586359,0,0x0,8
tick,0x7ffdc994fb34,411602328,0,0x0,8
tick,0x7ffdc994fb34,411617422,0,0x0,8
tick,0x7ffdc994fb34,411632578,0,0x0,8
tick,0x7ffdc994fb34,411648017,0,0x0,8
tick,0x7ffdc994fb34,411663965,0,0x0,8
tick,0x7ffdc994fb34,411679511,0,0x0,8
tick,0x7ffdc994fb34,411695125,0,0x0,8
tick,0x7ffdc994fb34,411710448,0,0x0,8
tick,0x7ffdc994fb34,411726036,0,0x0,8
tick,0x7ffdc994fb34,411741488,0,0x0,8
tick,0x7ffdc994fb34,411757292,0,0x0,8
tick,0x7ffdc994fb34,411773101,0,0x0,8
tick,0x7ffdc994fb34,411788976,0,0x0,8
tick,0x7ffdc994fb34,411804401,0,0x0,8
tick,0x7ffdc994fb34,411819882,0,0x0,8
tick,0x7ffdc994fb34,411835620,0,0x0,8
tick,0x7ffdc994fb34,411850668,0,0x0,8
tick,0x7ffdc994fb34,411866220,0,0x0,8
tick,0x7ffdc994fb34,411882632,0,0x0,8
tick,0x7ffdc994fb34,411898177,0,0x0,8
tick,0x7ffdc994fb34,411913572,0,0x0,8
tick,0x7ffdc994fb34,411929742,0,0x0,8
tick,0x7ffdc994fb34,411945859,0,0x0,8
tick,0x7ffdc994fb34,411961624,0,0x0,8
tick,0x7ffdc994fb34,411977141,0,0x0,8
tick,0x7ffdc994fb34,411992926,0,0x0,8
tick,0x7ffdc994fb34,412008591,0,0x0,8
tick,0x7ffdc994fb34,412023703,0,0x0,8
tick,0x7ffdc994fb34,412039737,0,0x0,8
tick,0x7ffdc994fb34,412055639,0,0x0,8
tick,0x7ffdc994fb34,412071168,0,0x0,8
tick,0x7ffdc994fb34,412087353,0,0x0,8
tick,0x7ffdc994fb34,412103287,0,0x0,8
tick,0x7ffdc994fb34,412118766,0,0x0,8
tick,0x7ffdc994fb34,412133914,0,0x0,8
tick,0x7ffdc994fb34,412149285,0,0x0,8
tick,0x7ffdc994fb34,412163822,0,0x0,8
tick,0x7ffdc994fb34,412178957,0,0x0,8
tick,0x7ffdc994fb34,412194648,0,0x0,8
tick,0x7ffdc994fb34,412210116,0,0x0,8
tick,0x7ffdc994fb34,412225565,0,0x0,8
tick,0x7ffdc994fb34,412241433,0,0x0,8
tick,0x7ffdc994fb34,412257364,0,0x0,8
tick,0x7ffdc994fb34,412272852,0,0x0,8
tick,0x7ffdc994fb34,412289042,0,0x0,8
tick,0x7ffdc994fb34,412304935,0,0x0,8
tick,0x7ffdc994fb34,412320881,0,0x0,8
tick,0x7ffdc994fb34,412336775,0,0x0,8
tick,0x7ffdc994fb34,412352185,0,0x0,8
tick,0x7ffdc994fb34,412367559,0,0x0,8
tick,0x7ffdc994fb34,412383583,0,0x0,8
tick,0x7ffdc994fb34,412398233,0,0x0,8
tick,0x7ffdc994fb34,412413679,0,0x0,8
tick,0x7ffdc994fb34,412429748,0,0x0,8
tick,0x7ffdc994fb34,412445372,0,0x0,8
tick,0x7ffdc994fb34,412461002,0,0x0,8
tick,0x7ffdc994fb34,412476322,0,0x0,8
tick,0x7ffdc994fb34,412492294,0,0x0,8
tick,0x7ffdc994fb34,412508150,0,0x0,8
tick,0x7ffdc994fb34,412523164,0,0x0,8
tick,0x7ffdc994fb34,412538561,0,0x0,8
tick,0x7ffdc994fb34,412554215,0,0x0,8
tick,0x7ffdc994fb34,412570333,0,0x0,8
tick,0x7ffdc994fb34,412585544,0,0x0,8
tick,0x7ffdc994fb34,412600712,0,0x0,8
tick,0x7ffdc994fb34,412616467,0,0x0,8
tick,0x7ffdc994fb34,412631244,0,0x0,8
tick,0x7ffdc994fb34,412647663,0,0x0,8
tick,0x7ffdc994fb34,412663176,0,0x0,8
tick,0x7ffdc994fb34,412679067,0,0x0,8
tick,0x7ffdc994fb34,412695106,0,0x0,8
tick,0x7ffdc994fb34,412709961,0,0x0,8
tick,0x7ffdc994fb34,412725971,0,0x0,8
tick,0x7ffdc994fb34,412741950,0,0x0,8
tick,0x7ffdc994fb34,412756642,0,0x0,8
tick,0x7ffdc994fb34,412771934,0,0x0,8
tick,0x7ffdc994fb34,412787447,0,0x0,8
tick,0x7ffdc994fb34,412802910,0,0x0,8
tick,0x7ffdc994fb34,412818358,0,0x0,8
tick,0x7ffdc994fb34,412834592,0,0x0,8
tick,0x7ffdc994fb34,412850468,0,0x0,8
tick,0x7ffdc994fb34,412866304,0,0x0,8
tick,0x7ffdc994fb34,412881290,0,0x0,8
tick,0x7ffdc994fb34,412897526,0,0x0,8
tick,0x7ffdc994fb34,412913006,0,0x0,8
tick,0x7ffdc994fb34,412928240,0,0x0,8
tick,0x7ffdc994fb34,412943420,0,0x0,8
tick,0x7ffdc994fb34,412959090,0,0x0,8
tick,0x7ffdc994fb34,412974959,0,0x0,8
tick,0x7ffdc994fb34,412990489,0,0x0,8
tick,0x7ffdc994fb34,413006565,0,0x0,8
tick,0x7ffdc994fb34,413021842,0,0x0,8
tick,0x7ffdc994fb34,413037817,0,0x0,8
tick,0x7ffdc994fb34,413053416,0,0x0,8
tick,0x7ffdc994fb34,413069000,0,0x0,8
tick,0x7ffdc994fb34,413085215,0,0x0,8
tick,0x7ffdc994fb34,413101266,0,0x0,8
tick,0x7ffdc994fb34,413116961,0,0x0,8
tick,0x7ffdc994fb34,413132395,0,0x0,8
tick,0x7ffdc994fb34,413147611,0,0x0,8
tick,0x7ffdc994fb34,413162992,0,0x0,8
tick,0x7ffdc994fb34,413178306,0,0x0,8
tick,0x7ffdc994fb34,413193742,0,0x0,8
tick,0x7ffdc994fb34,413209437,0,0x0,8
tick,0x7ffdc994fb34,413224652,0,0x0,8
tick,0x7ffdc994fb34,413240300,0,0x0,8
tick,0x7ffdc994fb34,413255642,0,0x0,8
tick,0x7ffdc994fb34,413271021,0,0x0,8
tick,0x7ffdc994fb34,413286269,0,0x0,8
tick,0x7ffdc994fb34,413301822,0,0x0,8
tick,0x7ffdc994fb34,413316873,0,0x0,8
tick,0x7ffdc994fb34,413332883,0,0x0,8
tick,0x7ffdc994fb34,413348194,0,0x0,8
tick,0x7ffdc994fb34,413363328,0,0x0,8
tick,0x7ffdc994fb34,413378565,0,0x0,8
tick,0x7ffdc994fb34,413394395,0,0x0,8
tick,0x7ffdc994fb34,413409741,0,0x0,8
tick,0x7ffdc994fb34,413425847,0,0x0,8
tick,0x7ffdc994fb34,413441157,0,0x0,8
tick,0x7ffdc994fb34,413456549,0,0x0,8
tick,0x7ffdc994fb34,413472700,0,0x0,8
tick,0x7ffdc994fb34,413487298,0,0x0,8
tick,0x7ffdc994fb34,413503240,0,0x0,8
tick,0x7ffdc994fb34,413518768,0,0x0,8
tick,0x7ffdc994fb34,413533985,0,0x0,8
tick,0x7ffdc994fb34,413549159,0,0x0,8
tick,0x7ffdc994fb34,413564944,0,0x0,8
tick,0x7ffdc994fb34,413580614,0,0x0,8
tick,0x7ffdc994fb34,413595686,0,0x0,8
tick,0x7ffdc994fb34,413611227,0,0x0,8
tick,0x7ffdc994fb34,413626854,0,0x0,8
tick,0x7ffdc994fb34,413642683,0,0x0,8
tick,0x7ffdc994fb34,413658679,0,0x0,8
tick,0x7ffdc994fb34,413674108,0,0x0,8
tick,0x7ffdc994fb34,413689270,0,0x0,8
tick,0x7ffdc994fb34,413705490,0,0x0,8
tick,0x7ffdc994fb34,413720890,0,0x0,8
tick,0x7ffdc994fb34,413736729,0,0x0,8
tick,0x7ffdc994fb34,413752919,0,0x0,8
tick,0x7ffdc994fb34,413767684,0,0x0,8
tick,0x7ffdc994fb34,413783708,0,0x0,8
tick,0x7ffdc994fb34,413798827,0,0x0,8
tick,0x7ffdc994fb34,413814386,0,0x0,8
tick,0x7ffdc994fb34,413830487,0,0x0,8
tick,0x7ffdc994fb34,413845679,0,0x0,8
tick,0x7ffdc994fb34,413861607,0,0x0,8
tick,0x7ffdc994fb34,413877514,0,0x0,8
tick,0x7ffdc994fb34,413893439,0,0x0,8
tick,0x7ffdc994fb34,413908668,0,0x0,8
tick,0x7ffdc994fb34,413924448,0,0x0,8
tick,0x7ffdc994fb34,413939838,0,0x0,8
tick,0x7ffdc994fb34,413955477,0,0x0,8
tick,0x7ffdc994fb34,413971029,0,0x0,8
tick,0x7ffdc994fb34,413986493,0,0x0,8
tick,0x7ffdc994fb34,414001851,0,0x0,8
tick,0x7ffdc994fb34,414017572,0,0x0,8
tick,0x7ffdc994fb34,414033199,0,0x0,8
tick,0x7ffdc994fb34,414048517,0,0x0,8
tick,0x7ffdc994fb34,414063567,0,0x0,8
tick,0x7ffdc994fb34,414079272,0,0x0,8
tick,0x7ffdc994fb34,414095125,0,0x0,8
tick,0x7ffdc994fb34,414110142,0,0x0,8
tick,0x7ffdc994fb34,414125537,0,0x0,8
tick,0x7ffdc994fb34,414141272,0,0x0,8
tick,0x7ffdc994fb34,414157207,0,0x0,8
tick,0x7ffdc994fb34,414172504,0,0x0,8
tick,0x7ffdc994fb34,414188210,0,0x0,8
tick,0x7ffdc994fb34,414203420,0,0x0,8
tick,0x7ffdc994fb34,414219398,0,0x0,8
tick,0x7ffdc994fb34,414235136,0,0x0,8
tick,0x7ffdc994fb34,414250921,0,0x0,8
tick,0x7ffdc994fb34,414266401,0,0x0,8
tick,0x7ffdc994fb34,414281751,0,0x0,8
tick,0x7ffdc994fb34,414297295,0,0x0,8
tick,0x7ffdc994fb34,414312256,0,0x0,8
tick,0x7ffdc994fb34,414327895,0,0x0,8
tick,0x7ffdc994fb34,414343113,0,0x0,8
tick,0x7ffdc994fb34,414358416,0,0x0,8
tick,0x7ffdc994fb34,414373603,0,0x0,8
tick,0x7ffdc994fb34,414388735,0,0x0,8
tick,0x7ffdc994fb34,414404783,0,0x0,8
tick,0x7ffdc994fb34,414420333,0,0x0,8
tick,0x7ffdc994fb34,414436327,0,0x0,8
tick,0x7ffdc994fb34,414451818,0,0x0,8
tick,0x7ffdc994fb34,414467407,0,0x0,8
tick,0x7ffdc994fb34,414483291,0,0x0,8
tick,0x7ffdc994fb34,414499212,0,0x0,8
tick,0x7ffdc994fb34,414514437,0,0x0,8
tick,0x7ffdc994fb34,414529935,0,0x0,8
tick,0x7ffdc994fb34,414545578,0,0x0,8
tick,0x7ffdc994fb34,414560837,0,0x0,8
tick,0x7ffdc994fb34,414576122,0,0x0,8
tick,0x7ffdc994fb34,414592033,0,0x0,8
tick,0x7ffdc994fb34,414608224,0,0x0,8
tick,0x7ffdc994fb34,414623450,0,0x0,8
tick,0x7ffdc994fb34,414638488,0,0x0,8
tick,0x7ffdc994fb34,414654397,0,0x0,8
tick,0x7ffdc994fb34,414669971,0,0x0,8
tick,0x7ffdc994fb34,414685534,0,0x0,8
tick,0x7ffdc994fb34,414701052,0,0x0,8
tick,0x7ffdc994fb34,414717355,0,0x0,8
tick,0x7ffdc994fb34,414733358,0,0x0,8
tick,0x7ffdc994fb34,414748869,0,0x0,8
tick,0x7ffdc994fb34,414764456,0,0x0,8
tick,0x7ffdc994fb34,414780216,0,0x0,8
tick,0x7ffdc994fb34,414795295,0,0x0,8
tick,0x7ffdc994fb34,414810826,0,0x0,8
tick,0x7ffdc994fb34,414826623,0,0x0,8
tick,0x7ffdc994fb34,414841924,0,0x0,8
tick,0x7ffdc994fb34,414857632,0,0x0,8
tick,0x7ffdc994fb34,414872911,0,0x0,8
tick,0x7ffdc994fb34,414888286,0,0x0,8
tick,0x7ffdc994fb34,414903867,0,0x0,8
tick,0x7ffdc994fb34,414919340,0,0x0,8
tick,0x7ffdc994fb34,414935318,0,0x0,8
tick,0x7ffdc994fb34,414950596,0,0x0,8
tick,0x7ffdc994fb34,414966757,0,0x0,8
tick,0x7ffdc994fb34,414982036,0,0x0,8
tick,0x7ffdc994fb34,414997895,0,0x0,8
tick,0x7ffdc994fb34,415013270,0,0x0,8
tick,0x7ffdc994fb34,415029392,0,0x0,8
tick,0x7ffdc994fb34,415044560,0,0x0,8
tick,0x7ffdc994fb34,415059792,0,0x0,8
tick,0x7ffdc994fb34,415080122,0,0x0,8
tick,0x7ffdc994fb34,415091755,0,0x0,8
tick,0x7ffdc994fb34,415107204,0,0x0,8
tick,0x7ffdc994fb34,415122976,0,0x0,8
tick,0x7ffdc994fb34,415138484,0,0x0,8
tick,0x7ffdc994fb34,415154176,0,0x0,8
tick,0x7ffdc994fb34,415169621,0,0x0,8
tick,0x7ffdc994fb34,415185295,0,0x0,8
tick,0x7ffdc994fb34,415201246,0,0x0,8
tick,0x7ffdc994fb34,415216930,0,0x0,8
tick,0x7ffdc994fb34,415232583,0,0x0,8
tick,0x7ffdc994fb34,415248042,0,0x0,8
tick,0x7ffdc994fb34,415264072,0,0x0,8
tick,0x7ffdc994fb34,415279895,0,0x0,8
tick,0x7ffdc994fb34,415295604,0,0x0,8
tick,0x7ffdc994fb34,415310983,0,0x0,8
tick,0x7ffdc994fb34,415326625,0,0x0,8
tick,0x7ffdc994fb34,415341870,0,0x0,8
tick,0x7ffdc994fb34,415357714,0,0x0,8
tick,0x7ffdc994fb34,415373252,0,0x0,8
tick,0x7ffdc994fb34,415388916,0,0x0,8
tick,0x7ffdc994fb34,415404059,0,0x0,8
tick,0x7ffdc994fb34,415419579,0,0x0,8
tick,0x7ffdc994fb34,415435219,0,0x0,8
tick,0x7ffdc994fb34,415450891,0,0x0,8
tick,0x7ffdc994fb34,415466422,0,0x0,8
tick,0x7ffdc994fb34,415482039,0,0x0,8
tick,0x7ffdc994fb34,415498287,0,0x0,8
tick,0x7ffdc994fb34,415513852,0,0x0,8
tick,0x7ffdc994fb34,415529689,0,0x0,8
tick,0x7ffdc994fb34,415545020,0,0x0,8
tick,0x7ffdc994fb34,415560645,0,0x0,8
tick,0x7ffdc994fb34,415576761,0,0x0,8
tick,0x7ffdc994fb34,415592233,0,0x0,8
tick,0x7ffdc994fb34,415607822,0,0x0,8
tick,0x7ffdc994fb34,415622928,0,0x0,8
tick,0x7ffdc994fb34,415638339,0,0x0,8
tick,0x7ffdc994fb34,415653096,0,0x0,8
tick,0x7ffdc994fb34,415668517,0,0x0,8
tick,0x7ffdc994fb34,415683414,0,0x0,8
tick,0x7ffdc994fb34,415698669,0,0x0,8
tick,0x7ffdc994fb34,415714439,0,0x0,8
tick,0x7ffdc994fb34,415729766,0,0x0,8
tick,0x7ffdc994fb34,415745072,0,0x0,8
tick,0x7ffdc994fb34,415760886,0,0x0,8
tick,0x7ffdc994fb34,415776188,0,0x0,8
tick,0x7ffdc994fb34,415791655,0,0x0,8
tick,0x7ffdc994fb34,415807097,0,0x0,8
tick,0x7ffdc994fb34,415822659,0,0x0,8
tick,0x7ffdc994fb34,415838055,0,0x0,8
tick,0x7ffdc994fb34,415853406,0,0x0,8
tick,0x7ffdc994fb34,415869555,0,0x0,8
tick,0x7ffdc994fb34,415884545,0,0x0,8
tick,0x7ffdc994fb34,415900261,0,0x0,8
tick,0x7ffdc994fb34,415916264,0,0x0,8
tick,0x7ffdc994fb34,415932160,0,0x0,8
tick,0x7ffdc994fb34,415947637,0,0x0,8
tick,0x7ffdc994fb34,415963192,0,0x0,8
tick,0x7ffdc994fb34,415978342,0,0x0,8
tick,0x7ffdc994fb34,415993984,0,0x0,8
tick,0x7ffdc994fb34,416010103,0,0x0,8
tick,0x7ffdc994fb34,416025457,0,0x0,8
tick,0x7ffdc994fb34,416040914,0,0x0,8
tick,0x7ffdc994fb34,416056693,0,0x0,8
tick,0x7ffdc994fb34,416072498,0,0x0,8
tick,0x7ffdc994fb34,416087675,0,0x0,8
tick,0x7ffdc994fb34,416103426,0,0x0,8
tick,0x7ffdc994fb34,416118324,0,0x0,8
tick,0x7ffdc994fb34,416133195,0,0x0,8
tick,0x7ffdc994fb34,416148879,0,0x0,8
tick,0x7ffdc994fb34,416163624,0,0x0,8
tick,0x7ffdc994fb34,416178717,0,0x0,8
tick,0x7ffdc994fb34,416194585,0,0x0,8
tick,0x7ffdc994fb34,416210656,0,0x0,8
tick,0x7ffdc994fb34,416225895,0,0x0,8
tick,0x7ffdc994fb34,416242205,0,0x0,8
tick,0x7ffdc994fb34,416257604,0,0x0,8
tick,0x7ffdc994fb34,416273310,0,0x0,8
tick,0x7ffdc994fb34,416289070,0,0x0,8
tick,0x7ffdc994fb34,416304712,0,0x0,8
tick,0x7ffdc994fb34,416320206,0,0x0,8
tick,0x7ffdc994fb34,416336240,0,0x0,8
tick,0x7ffdc994fb34,416352078,0,0x0,8
tick,0x7ffdc994fb34,416367877,0,0x0,8
tick,0x7ffdc994fb34,416383888,0,0x0,8
tick,0x7ffdc994fb34,416399060,0,0x0,8
tick,0x7ffdc994fb34,416414373,0,0x0,8
tick,0x7ffdc994fb34,416429994,0,0x0,8
tick,0x7ffdc994fb34,416445281,0,0x0,8
tick,0x7ffdc994fb34,416461447,0,0x0,8
tick,0x7ffdc994fb34,416476667,0,0x0,8
tick,0x7ffdc994fb34,416492023,0,0x0,8
tick,0x7ffdc994fb34,416507071,0,0x0,8
tick,0x7ffdc994fb34,416522045,0,0x0,8
tick,0x7ffdc994fb34,416537607,0,0x0,8
tick,0x7ffdc994fb34,416552602,0,0x0,8
tick,0x7ffdc994fb34,416568444,0,0x0,8
tick,0x7ffdc994fb34,416583993,0,0x0,8
tick,0x7ffdc994fb34,416599382,0,0x0,8
tick,0x7ffdc994fb34,416614944,0,0x0,8
tick,0x7ffdc994fb34,416630500,0,0x0,8
tick,0x7ffdc994fb34,416646547,0,0x0,8
tick,0x7ffdc994fb34,416661686,0,0x0,8
tick,0x7ffdc994fb34,416677488,0,0x0,8
tick,0x7ffdc994fb34,416693160,0,0x0,8
tick,0x7ffdc994fb34,416708776,0,0x0,8
tick,0x7ffdc994fb34,416723853,0,0x0,8
tick,0x7ffdc994fb34,416739460,0,0x0,8
tick,0x7ffdc994fb34,416754823,0,0x0,8
tick,0x7ffdc994fb34,416770306,0,0x0,8
tick,0x7ffdc994fb34,416785135,0,0x0,8
tick,0x7ffdc994fb34,416800858,0,0x0,8
tick,0x7ffdc994fb34,416815860,0,0x0,8
tick,0x7ffdc994fb34,416831069,0,0x0,8
tick,0x7ffdc994fb34,416847223,0,0x0,8
tick,0x7ffdc994fb34,416862382,0,0x0,8
tick,0x7ffdc994fb34,416877751,0,0x0,8
tick,0x7ffdc994fb34,416893138,0,0x0,8
tick,0x7ffdc994fb34,416908555,0,0x0,8
tick,0x7ffdc994fb34,416924385,0,0x0,8
tick,0x7ffdc994fb34,416939394,0,0x0,8
tick,0x7ffdc994fb34,416954581,0,0x0,8
tick,0x7ffdc994fb34,416969949,0,0x0,8
tick,0x7ffdc994fb34,416984974,0,0x0,8
tick,0x7ffdc994fb34,417000238,0,0x0,8
tick,0x7ffdc994fb34,417015624,0,0x0,8
tick,0x7ffdc994fb34,417030713,0,0x0,8
tick,0x7ffdc994fb34,417046043,0,0x0,8
tick,0x7ffdc994fb34,417061825,0,0x0,8
tick,0x7ffdc994fb34,417077643,0,0x0,8
tick,0x7ffdc994fb34,417092960,0,0x0,8
tick,0x7ffdc994fb34,417108175,0,0x0,8
tick,0x7ffdc994fb34,417123916,0,0x0,8
tick,0x7ffdc994fb34,417138693,0,0x0,8
tick,0x7ffdc994fb34,417153961,0,0x0,8
tick,0x7ffdc994fb34,417169437,0,0x0,8
tick,0x7ffdc994fb34,417184705,0,0x0,8
tick,0x7ffdc994fb34,417199799,0,0x0,8
tick,0x7ffdc994fb34,417214941,0,0x0,8
tick,0x7ffdc994fb34,417230075,0,0x0,8
tick,0x7ffdc994fb34,417244869,0,0x0,8
tick,0x7ffdc994fb34,417261019,0,0x0,8
tick,0x7ffdc994fb34,417276654,0,0x0,8
tick,0x7ffdc994fb34,417292526,0,0x0,8
tick,0x7ffdc994fb34,417307935,0,0x0,8
tick,0x7ffdc994fb34,417323400,0,0x0,8
tick,0x7ffdc994fb34,417338691,0,0x0,8
tick,0x7ffdc994fb34,417354585,0,0x0,8
tick,0x7ffdc994fb34,417370258,0,0x0,8
tick,0x7ffdc994fb34,417386487,0,0x0,8
tick,0x7ffdc994fb34,417401760,0,0x0,8
tick,0x7ffdc994fb34,417417393,0,0x0,8
tick,0x7ffdc994fb34,417433601,0,0x0,8
tick,0x7ffdc994fb34,417449648,0,0x0,8
tick,0x7ffdc994fb34,417464833,0,0x0,8
tick,0x7ffdc994fb34,417480412,0,0x0,8
tick,0x7ffdc994fb34,417496624,0,0x0,8
tick,0x7ffdc994fb34,417511233,0,0x0,8
tick,0x7ffdc994fb34,417526608,0,0x0,8
tick,0x7ffdc994fb34,417542711,0,0x0,8
tick,0x7ffdc994fb34,417557454,0,0x0,8
tick,0x7ffdc994fb34,417574732,0,0x0,8
tick,0x7ffdc994fb34,417587313,0,0x0,8
tick,0x7ffdc994fb34,417602638,0,0x0,8
tick,0x7ffdc994fb34,417617913,0,0x0,8
tick,0x7ffdc994fb34,417632981,0,0x0,8
tick,0x7ffdc994fb34,417648113,0,0x0,8
tick,0x7ffdc994fb34,417672511,0,0x0,8
tick,0x7ffdc994fb34,417681949,0,0x0,8
tick,0x7ffdc994fb34,417698275,0,0x0,8
tick,0x7ffdc994fb34,417709306,0,0x0,8
tick,0x7ffdc994fb34,417725879,0,0x0,8
tick,0x7ffdc994fb34,417745129,0,0x0,8
tick,0x7ffdc994fb34,417759423,0,0x0,8
tick,0x7ffdc994fb34,417776304,0,0x0,8
tick,0x7ffdc994fb34,417797778,0,0x0,8
tick,0x7ffdc994fb34,417803742,0,0x0,8
tick,0x7ffdc994fb34,417816564,0,0x0,8
tick,0x7ffdc994fb34,417832291,0,0x0,8
tick,0x7ffdc994fb34,417846576,0,0x0,8
tick,0x7ffdc994fb34,417861967,0,0x0,8
tick,0x7ffdc994fb34,417878041,0,0x0,8
tick,0x7ffdc994fb34,417893577,0,0x0,8
tick,0x7ffdc994fb34,417909224,0,0x0,8
tick,0x7ffdc994fb34,417924825,0,0x0,8
tick,0x7ffdc994fb34,417940192,0,0x0,8
tick,0x7ffdc994fb34,417956784,0,0x0,8
tick,0x7ffdc994fb34,417970559,0,0x0,8
tick,0x7ffdc994fb34,417985384,0,0x0,8
tick,0x7ffdc994fb34,418000716,0,0x0,8
tick,0x7ffdc994fb34,418016027,0,0x0,8
tick,0x7ffdc994fb34,418031485,0,0x0,8
tick,0x7ffdc994fb34,418046742,0,0x0,8
tick,0x7ffdc994fb34,418062574,0,0x0,8
tick,0x7ffdc994fb34,418079046,0,0x0,8
tick,0x7ffdc994fb34,418094194,0,0x0,8
tick,0x7ffdc994fb34,418109846,0,0x0,8
tick,0x7ffdc994fb34,418125850,0,0x0,8
tick,0x7ffdc994fb34,418141222,0,0x0,8
tick,0x7ffdc994fb34,418157488,0,0x0,8
tick,0x7ffdc994fb34,418172955,0,0x0,8
tick,0x7ffdc994fb34,418190802,0,0x0,8
tick,0x7ffdc994fb34,418204952,0,0x0,8
tick,0x7ffdc994fb34,418219487,0,0x0,8
tick,0x7ffdc994fb34,418234807,0,0x0,8
tick,0x7ffdc994fb34,418250322,0,0x0,8
tick,0x7ffdc994fb34,418265706,0,0x0,8
tick,0x7ffdc994fb34,418281680,0,0x0,8
tick,0x7ffdc994fb34,418297187,0,0x0,8
tick,0x7ffdc994fb34,418312811,0,0x0,8
tick,0x7ffdc994fb34,418328023,0,0x0,8
tick,0x7ffdc994fb34,418344224,0,0x0,8
tick,0x7ffdc994fb34,418359824,0,0x0,8
tick,0x7ffdc994fb34,418375406,0,0x0,8
tick,0x7ffdc994fb34,418393702,0,0x0,8
tick,0x7ffdc994fb34,418414619,0,0x0,8
tick,0x7ffdc994fb34,418421939,0,0x0,8
tick,0x7ffdc994fb34,418438050,0,0x0,8
tick,0x7ffdc994fb34,418452641,0,0x0,8
tick,0x7ffdc994fb34,418467829,0,0x0,8
tick,0x7ffdc994fb34,418483629,0,0x0,8
tick,0x7ffdc994fb34,418499493,0,0x0,8
tick,0x7ffdc994fb34,418515025,0,0x0,8
tick,0x7ffdc994fb34,418530561,0,0x0,8
tick,0x7ffdc994fb34,418548175,0,0x0,8
tick,0x7ffdc994fb34,418561312,0,0x0,8
tick,0x7ffdc994fb34,418577274,0,0x0,8
tick,0x7ffdc994fb34,418591657,0,0x0,8
tick,0x7ffdc994fb34,418607489,0,0x0,8
tick,0x7ffdc994fb34,418623560,0,0x0,8
tick,0x7ffdc994fb34,418638974,0,0x0,8
tick,0x7ffdc994fb34,418654382,0,0x0,8
tick,0x7ffdc994fb34,418669981,0,0x0,8
tick,0x7ffdc994fb34,418685547,0,0x0,8
tick,0x7ffdc994fb34,418701176,0,0x0,8
tick,0x7ffdc994fb34,418716164,0,0x0,8
tick,0x7ffdc994fb34,418732379,0,0x0,8
tick,0x7ffdc994fb34,418746880,0,0x0,8
tick,0x7ffdc994fb34,418762743,0,0x0,8
tick,0x7ffdc994fb34,418778513,0,0x0,8
tick,0x7ffdc994fb34,418794393,0,0x0,8
tick,0x7ffdc994fb34,418809302,0,0x0,8
tick,0x7ffdc994fb34,418824876,0,0x0,8
tick,0x7ffdc994fb34,418840769,0,0x0,8
tick,0x7ffdc994fb34,418856946,0,0x0,8
tick,0x7ffdc994fb34,418872647,0,0x0,8
tick,0x7ffdc994fb34,418888575,0,0x0,8
tick,0x7ffdc994fb34,418904457,0,0x0,8
tick,0x7ffdc994fb34,418919750,0,0x0,8
tick,0x7ffdc994fb34,418934879,0,0x0,8
tick,0x7ffdc994fb34,418950487,0,0x0,8
tick,0x7ffdc994fb34,418965916,0,0x0,8
tick,0x7ffdc994fb34,418981609,0,0x0,8
tick,0x7ffdc994fb34,418997042,0,0x0,8
tick,0x7ffdc994fb34,419012402,0,0x0,8
tick,0x7ffdc994fb34,419027941,0,0x0,8
tick,0x7ffdc994fb34,419043623,0,0x0,8
tick,0x7ffdc994fb34,419058914,0,0x0,8
tick,0x7ffdc994fb34,419074572,0,0x0,8
tick,0x7ffdc994fb34,419090418,0,0x0,8
tick,0x7ffdc994fb34,419106281,0,0x0,8
tick,0x7ffdc994fb34,419122053,0,0x0,8
tick,0x7ffdc994fb34,419137692,0,0x0,8
tick,0x7ffdc994fb34,419153342,0,0x0,8
tick,0x7ffdc994fb34,419168597,0,0x0,8
tick,0x7ffdc994fb34,419184728,0,0x0,8
tick,0x7ffdc994fb34,419200123,0,0x0,8
tick,0x7ffdc994fb34,419216118,0,0x0,8
tick,0x7ffdc994fb34,419231008,0,0x0,8
tick,0x7ffdc994fb34,419247058,0,0x0,8
tick,0x7ffdc994fb34,419263004,0,0x0,8
tick,0x7ffdc994fb34,419278940,0,0x0,8
tick,0x7ffdc994fb34,419294581,0,0x0,8
tick,0x7ffdc994fb34,419310565,0,0x0,8
tick,0x7ffdc994fb34,419326011,0,0x0,8
tick,0x7ffdc994fb34,419342012,0,0x0,8
tick,0x7ffdc994fb34,419357232,0,0x0,8
tick,0x7ffdc994fb34,419372452,0,0x0,8
tick,0x7ffdc994fb34,419388321,0,0x0,8
tick,0x7ffdc994fb34,419403565,0,0x0,8
tick,0x7ffdc994fb34,419418906,0,0x0,8
tick,0x7ffdc994fb34,419434773,0,0x0,8
tick,0x7ffdc994fb34,419449851,0,0x0,8
tick,0x7ffdc994fb34,419465713,0,0x0,8
tick,0x7ffdc994fb34,419481130,0,0x0,8
tick,0x7ffdc994fb34,419496247,0,0x0,8
tick,0x7ffdc994fb34,419512035,0,0x0,8
tick,0x7ffdc994fb34,419527709,0,0x0,8
tick,0x7ffdc994fb34,419543019,0,0x0,8
tick,0x7ffdc994fb34,419558190,0,0x0,8
tick,0x7ffdc994fb34,419573676,0,0x0,8
tick,0x7ffdc994fb34,419589275,0,0x0,8
tick,0x7ffdc994fb34,419604585,0,0x0,8
tick,0x7ffdc994fb34,419620326,0,0x0,8
tick,0x7ffdc994fb34,419635947,0,0x0,8
tick,0x7ffdc994fb34,419651528,0,0x0,8
tick,0x7ffdc994fb34,419667285,0,0x0,8
tick,0x7ffdc994fb34,419682781,0,0x0,8
tick,0x7ffdc994fb34,419698607,0,0x0,8
tick,0x7ffdc994fb34,419714735,0,0x0,8
tick,0x7ffdc994fb34,419730379,0,0x0,8
tick,0x7ffdc994fb34,419746116,0,0x0,8
tick,0x7ffdc994fb34,419761837,0,0x0,8
tick,0x7ffdc994fb34,419777792,0,0x0,8
tick,0x7ffdc994fb34,419793742,0,0x0,8
tick,0x7ffdc994fb34,419809845,0,0x0,8
tick,0x7ffdc994fb34,419825487,0,0x0,8
tick,0x7ffdc994fb34,419841618,0,0x0,8
tick,0x7ffdc994fb34,419857517,0,0x0,8
tick,0x7ffdc994fb34,419871935,0,0x0,8
tick,0x7ffdc994fb34,419887554,0,0x0,8
tick,0x7ffdc994fb34,419902959,0,0x0,8
tick,0x7ffdc994fb34,419917818,0,0x0,8
tick,0x7ffdc994fb34,419933894,0,0x0,8
tick,0x7ffdc994fb34,419949575,0,0x0,8
tick,0x7ffdc994fb34,419965539,0,0x0,8
tick,0x7ffdc994fb34,419980969,0,0x0,8
tick,0x7ffdc994fb34,419996631,0,0x0,8
tick,0x7ffdc994fb34,420012874,0,0x0,8
tick,0x7ffdc994fb34,420028885,0,0x0,8
tick,0x7ffdc994fb34,420044134,0,0x0,8
tick,0x7ffdc994fb34,420060206,0,0x0,8
tick,0x7ffdc994fb34,420075666,0,0x0,8
tick,0x7ffdc994fb34,420091413,0,0x0,8
tick,0x7ffdc994fb34,420106676,0,0x0,8
tick,0x7ffdc994fb34,420122818,0,0x0,8
tick,0x7ffdc994fb34,420137920,0,0x0,8
tick,0x7ffdc994fb34,420154079,0,0x0,8
tick,0x7ffdc994fb34,420169532,0,0x0,8
tick,0x7ffdc994fb34,420185047,0,0x0,8
tick,0x7ffdc994fb34,420201285,0,0x0,8
tick,0x7ffdc994fb34,420217313,0,0x0,8
tick,0x7ffdc994fb34,420232904,0,0x0,8
tick,0x7ffdc994fb34,420248262,0,0x0,8
tick,0x7ffdc994fb34,420263526,0,0x0,8
tick,0x7ffdc994fb34,420279225,0,0x0,8
tick,0x7ffdc994fb34,420294971,0,0x0,8
tick,0x7ffdc994fb34,420310706,0,0x0,8
tick,0x7ffdc994fb34,420325784,0,0x0,8
tick,0x7ffdc994fb34,420341966,0,0x0,8
tick,0x7ffdc994fb34,420357304,0,0x0,8
tick,0x7ffdc994fb34,420372154,0,0x0,8
tick,0x7ffdc994fb34,420387980,0,0x0,8
tick,0x7ffdc994fb34,420404254,0,0x0,8
tick,0x7ffdc994fb34,420419978,0,0x0,8
tick,0x7ffdc994fb34,420435421,0,0x0,8
tick,0x7ffdc994fb34,420450610,0,0x0,8
tick,0x7ffdc994fb34,420467000,0,0x0,8
tick,0x7ffdc994fb34,420482630,0,0x0,8
tick,0x7ffdc994fb34,420497556,0,0x0,8
tick,0x7ffdc994fb34,420513732,0,0x0,8
tick,0x7ffdc994fb34,420529453,0,0x0,8
tick,0x7ffdc994fb34,420544411,0,0x0,8
tick,0x7ffdc994fb34,420560265,0,0x0,8
tick,0x7ffdc994fb34,420575449,0,0x0,8
tick,0x7ffdc994fb34,420591105,0,0x0,8
tick,0x7ffdc994fb34,420606472,0,0x0,8
tick,0x7ffdc994fb34,420621901,0,0x0,8
tick,0x7ffdc994fb34,420636726,0,0x0,8
tick,0x7ffdc994fb34,420652798,0,0x0,8
tick,0x7ffdc994fb34,420668436,0,0x0,8
tick,0x7ffdc994fb34,420684680,0,0x0,8
tick,0x7ffdc994fb34,420700295,0,0x0,8
tick,0x7ffdc994fb34,420715738,0,0x0,8
tick,0x7ffdc994fb34,420731037,0,0x0,8
tick,0x7ffdc994fb34,420746495,0,0x0,8
tick,0x7ffdc994fb34,420761874,0,0x0,8
tick,0x7ffdc994fb34,420777848,0,0x0,8
tick,0x7ffdc994fb34,420793924,0,0x0,8
tick,0x7ffdc994fb34,420810040,0,0x0,8
tick,0x7ffdc994fb34,420825368,0,0x0,8
tick,0x7ffdc994fb34,420840624,0,0x0,8
tick,0x7ffdc994fb34,420855642,0,0x0,8
tick,0x7ffdc994fb34,420870605,0,0x0,8
tick,0x7ffdc994fb34,420886568,0,0x0,8
tick,0x7ffdc994fb34,420902300,0,0x0,8
tick,0x7ffdc994fb34,420917163,0,0x0,8
tick,0x7ffdc994fb34,420933091,0,0x0,8
tick,0x7ffdc994fb34,420948605,0,0x0,8
tick,0x7ffdc994fb34,420964280,0,0x0,8
tick,0x7ffdc994fb34,420980409,0,0x0,8
tick,0x7ffdc994fb34,420995842,0,0x0,8
tick,0x7ffdc994fb34,421011302,0,0x0,8
tick,0x7ffdc994fb34,421027207,0,0x0,8
tick,0x7ffdc994fb34,421042466,0,0x0,8
tick,0x7ffdc994fb34,421058194,0,0x0,8
tick,0x7ffdc994fb34,421073388,0,0x0,8
tick,0x7ffdc994fb34,421088884,0,0x0,8
tick,0x7ffdc994fb34,421104761,0,0x0,8
tick,0x7ffdc994fb34,421120644,0,0x0,8
tick,0x7ffdc994fb34,421136181,0,0x0,8
tick,0x7ffdc994fb34,421152132,0,0x0,8
tick,0x7ffdc994fb34,421167715,0,0x0,8
tick,0x7ffdc994fb34,421183588,0,0x0,8
tick,0x7ffdc994fb34,421199221,0,0x0,8
tick,0x7ffdc994fb34,421215124,0,0x0,8
tick,0x7ffdc994fb34,421230271,0,0x0,8
tick,0x7ffdc994fb34,421246275,0,0x0,8
tick,0x7ffdc994fb34,421261682,0,0x0,8
tick,0x7ffdc994fb34,421276596,0,0x0,8
tick,0x7ffdc994fb34,421291773,0,0x0,8
tick,0x7ffdc994fb34,421307770,0,0x0,8
tick,0x7ffdc994fb34,421323255,0,0x0,8
tick,0x7ffdc994fb34,421338652,0,0x0,8
tick,0x7ffdc994fb34,421353900,0,0x0,8
tick,0x7ffdc994fb34,421369408,0,0x0,8
tick,0x7ffdc994fb34,421384817,0,0x0,8
tick,0x7ffdc994fb34,421400153,0,0x0,8
tick,0x7ffdc994fb34,421416021,0,0x0,8
tick,0x7ffdc994fb34,421431790,0,0x0,8
tick,0x7ffdc994fb34,421447110,0,0x0,8
tick,0x7ffdc994fb34,421462561,0,0x0,8
tick,0x7ffdc994fb34,421477707,0,0x0,8
tick,0x7ffdc994fb34,421492785,0,0x0,8
tick,0x7ffdc994fb34,421508576,0,0x0,8
tick,0x7ffdc994fb34,421523952,0,0x0,8
tick,0x7ffdc994fb34,421539445,0,0x0,8
tick,0x7ffdc994fb34,421554919,0,0x0,8
tick,0x7ffdc994fb34,421570046,0,0x0,8
tick,0x7ffdc994fb34,421585807,0,0x0,8
tick,0x7ffdc994fb34,421601803,0,0x0,8
tick,0x7ffdc994fb34,421617317,0,0x0,8
tick,0x7ffdc994fb34,421632157,0,0x0,8
tick,0x7ffdc994fb34,421648400,0,0x0,8
tick,0x7ffdc994fb34,421664025,0,0x0,8
tick,0x7ffdc994fb34,421680156,0,0x0,8
tick,0x7ffdc994fb34,421695710,0,0x0,8
tick,0x7ffdc994fb34,421711726,0,0x0,8
tick,0x7ffdc994fb34,421726940,0,0x0,8
tick,0x7ffdc994fb34,421742845,0,0x0,8
tick,0x7ffdc994fb34,421758775,0,0x0,8
tick,0x7ffdc994fb34,421774556,0,0x0,8
tick,0x7ffdc994fb34,421789485,0,0x0,8
tick,0x7ffdc994fb34,421805523,0,0x0,8
tick,0x7ffdc994fb34,421820764,0,0x0,8
tick,0x7ffdc994fb34,421836533,0,0x0,8
tick,0x7ffdc994fb34,421852189,0,0x0,8
tick,0x7ffdc994fb34,421867565,0,0x0,8
tick,0x7ffdc994fb34,421883137,0,0x0,8
tick,0x7ffdc994fb34,421898527,0,0x0,8
tick,0x7ffdc994fb34,421914265,0,0x0,8
tick,0x7ffdc994fb34,421930308,0,0x0,8
tick,0x7ffdc994fb34,421945978,0,0x0,8
tick,0x7ffdc994fb34,421961419,0,0x0,8
tick,0x7ffdc994fb34,421976923,0,0x0,8
tick,0x7ffdc994fb34,421992279,0,0x0,8
tick,0x7ffdc994fb34,422007437,0,0x0,8
tick,0x7ffdc994fb34,422023336,0,0x0,8
tick,0x7ffdc994fb34,422038839,0,0x0,8
tick,0x7ffdc994fb34,422054640,0,0x0,8
tick,0x7ffdc994fb34,422070232,0,0x0,8
tick,0x7ffdc994fb34,422085239,0,0x0,8
tick,0x7ffdc994fb34,422101172,0,0x0,8
tick,0x7ffdc994fb34,422116965,0,0x0,8
tick,0x7ffdc994fb34,422132700,0,0x0,8
tick,0x7ffdc994fb34,422147683,0,0x0,8
tick,0x7ffdc994fb34,422163706,0,0x0,8
tick,0x7ffdc994fb34,422179224,0,0x0,8
tick,0x7ffdc994fb34,422194759,0,0x0,8
tick,0x7ffdc994fb34,422209902,0,0x0,8
tick,0x7ffdc994fb34,422225293,0,0x0,8
tick,0x7ffdc994fb34,422241284,0,0x0,8
tick,0x7ffdc994fb34,422256897,0,0x0,8
tick,0x7ffdc994fb34,422272010,0,0x0,8
tick,0x7ffdc994fb34,422287277,0,0x0,8
tick,0x7ffdc994fb34,422303199,0,0x0,8
tick,0x7ffdc994fb34,422318311,0,0x0,8
tick,0x7ffdc994fb34,422333646,0,0x0,8
tick,0x7ffdc994fb34,422349723,0,0x0,8
tick,0x7ffdc994fb34,422365273,0,0x0,8
tick,0x7ffdc994fb34,422381135,0,0x0,8
tick,0x7ffdc994fb34,422396163,0,0x0,8
tick,0x7ffdc994fb34,422411683,0,0x0,8
tick,0x7ffdc994fb34,422427527,0,0x0,8
tick,0x7ffdc994fb34,422443355,0,0x0,8
tick,0x7ffdc994fb34,422458838,0,0x0,8
tick,0x7ffdc994fb34,422474847,0,0x0,8
tick,0x7ffdc994fb34,422490479,0,0x0,8
tick,0x7ffdc994fb34,422506460,0,0x0,8
tick,0x7ffdc994fb34,422521988,0,0x0,8
tick,0x7ffdc994fb34,422537337,0,0x0,8
tick,0x7ffdc994fb34,422553454,0,0x0,8
tick,0x7ffdc994fb34,422569437,0,0x0,8
tick,0x7ffdc994fb34,422584759,0,0x0,8
tick,0x7ffdc994fb34,422600472,0,0x0,8
tick,0x7ffdc994fb34,422616350,0,0x0,8
tick,0x7ffdc994fb34,422632301,0,0x0,8
tick,0x7ffdc994fb34,422648267,0,0x0,8
tick,0x7ffdc994fb34,422663532,0,0x0,8
tick,0x7ffdc994fb34,422679994,0,0x0,8
tick,0x7ffdc994fb34,422696145,0,0x0,8
tick,0x7ffdc994fb34,422712260,0,0x0,8
tick,0x7ffdc994fb34,422727588,0,0x0,8
tick,0x7ffdc994fb34,422743376,0,0x0,8
tick,0x7ffdc994fb34,422759367,0,0x0,8
tick,0x7ffdc994fb34,422774052,0,0x0,8
tick,0x7ffdc994fb34,422790311,0,0x0,8
tick,0x7ffdc994fb34,422805967,0,0x0,8
tick,0x7ffdc994fb34,422821677,0,0x0,8
tick,0x7ffdc994fb34,422837504,0,0x0,8
tick,0x7ffdc994fb34,422853524,0,0x0,8
tick,0x7ffdc994fb34,422869171,0,0x0,8
tick,0x7ffdc994fb34,422885007,0,0x0,8
tick,0x7ffdc994fb34,422899884,0,0x0,8
tick,0x7ffdc994fb34,422915748,0,0x0,8
tick,0x7ffdc994fb34,422930895,0,0x0,8
tick,0x7ffdc994fb34,422946382,0,0x0,8
tick,0x7ffdc994fb34,422962295,0,0x0,8
tick,0x7ffdc994fb34,422977994,0,0x0,8
tick,0x7ffdc994fb34,422993196,0,0x0,8
tick,0x7ffdc994fb34,423008569,0,0x0,8
tick,0x7ffdc994fb34,423023847,0,0x0,8
tick,0x7ffdc994fb34,423039611,0,0x0,8
tick,0x7ffdc994fb34,423055571,0,0x0,8
tick,0x7ffdc994fb34,423071275,0,0x0,8
tick,0x7ffdc994fb34,423086269,0,0x0,8
tick,0x7ffdc994fb34,423102192,0,0x0,8
tick,0x7ffdc994fb34,423117900,0,0x0,8
tick,0x7ffdc994fb34,423133257,0,0x0,8
tick,0x7ffdc994fb34,423148674,0,0x0,8
tick,0x7ffdc994fb34,423163960,0,0x0,8
tick,0x7ffdc994fb34,423179504,0,0x0,8
tick,0x7ffdc994fb34,423194911,0,0x0,8
tick,0x7ffdc994fb34,423210661,0,0x0,8
tick,0x7ffdc994fb34,423226476,0,0x0,8
tick,0x7ffdc994fb34,423242254,0,0x0,8
tick,0x7ffdc994fb34,423257910,0,0x0,8
tick,0x7ffdc994fb34,423272787,0,0x0,8
tick,0x7ffdc994fb34,423288060,0,0x0,8
tick,0x7ffdc994fb34,423303968,0,0x0,8
tick,0x7ffdc994fb34,423319720,0,0x0,8
tick,0x7ffdc994fb34,423335366,0,0x0,8
tick,0x7ffdc994fb34,423351321,0,0x0,8
tick,0x7ffdc994fb34,423367277,0,0x0,8
tick,0x7ffdc994fb34,423383230,0,0x0,8
tick,0x7ffdc994fb34,423398518,0,0x0,8
tick,0x7ffdc994fb34,423414556,0,0x0,8
tick,0x7ffdc994fb34,423430165,0,0x0,8
tick,0x7ffdc994fb34,423446346,0,0x0,8
tick,0x7ffdc994fb34,423462158,0,0x0,8
tick,0x7ffdc994fb34,423477715,0,0x0,8
tick,0x7ffdc994fb34,423493191,0,0x0,8
tick,0x7ffdc994fb34,423508677,0,0x0,8
tick,0x7ffdc994fb34,423524005,0,0x0,8
tick,0x7ffdc994fb34,423539107,0,0x0,8
tick,0x7ffdc994fb34,423554778,0,0x0,8
tick,0x7ffdc994fb34,423570420,0,0x0,8
tick,0x7ffdc994fb34,423586323,0,0x0,8
tick,0x7ffdc994fb34,423602249,0,0x0,8
tick,0x7ffdc994fb34,423618140,0,0x0,8
tick,0x7ffdc994fb34,423634024,0,0x0,8
tick,0x7ffdc994fb34,423650109,0,0x0,8
tick,0x7ffdc994fb34,423665024,0,0x0,8
tick,0x7ffdc994fb34,423681097,0,0x0,8
tick,0x7ffdc994fb34,423696407,0,0x0,8
tick,0x7ffdc994fb34,423712654,0,0x0,8
tick,0x7ffdc994fb34,423728436,0,0x0,8
tick,0x7ffdc994fb34,423744532,0,0x0,8
tick,0x7ffdc994fb34,423759822,0,0x0,8
tick,0x7ffdc994fb34,423775225,0,0x0,8
tick,0x7ffdc994fb34,423791118,0,0x0,8
tick,0x7ffdc994fb34,423806901,0,0x0,8
tick,0x7ffdc994fb34,423822658,0,0x0,8
tick,0x7ffdc994fb34,423838502,0,0x0,8
tick,0x7ffdc994fb34,423853998,0,0x0,8
tick,0x7ffdc994fb34,423869451,0,0x0,8
tick,0x7ffdc994fb34,423884777,0,0x0,8
tick,0x7ffdc994fb34,423900292,0,0x0,8
tick,0x7ffdc994fb34,423915583,0,0x0,8
tick,0x7ffdc994fb34,423931828,0,0x0,8
tick,0x7ffdc994fb34,423947006,0,0x0,8
tick,0x7ffdc994fb34,423962542,0,0x0,8
tick,0x7ffdc994fb34,423978001,0,0x0,8
tick,0x7ffdc994fb34,423993179,0,0x0,8
tick,0x7ffdc994fb34,424008841,0,0x0,8
tick,0x7ffdc994fb34,424024142,0,0x0,8
tick,0x7ffdc994fb34,424039647,0,0x0,8
tick,0x7ffdc994fb34,424055173,0,0x0,8
tick,0x7ffdc994fb34,424070699,0,0x0,8
tick,0x7ffdc994fb34,424086085,0,0x0,8
tick,0x7ffdc994fb34,424101631,0,0x0,8
tick,0x7ffdc994fb34,424117605,0,0x0,8
tick,0x7ffdc994fb34,424132454,0,0x0,8
tick,0x7ffdc994fb34,424147827,0,0x0,8
tick,0x7ffdc994fb34,424164147,0,0x0,8
tick,0x7ffdc994fb34,424179366,0,0x0,8
tick,0x7ffdc994fb34,424194870,0,0x0,8
tick,0x7ffdc994fb34,424210341,0,0x0,8
tick,0x7ffdc994fb34,424225600,0,0x0,8
tick,0x7ffdc994fb34,424241216,0,0x0,8
tick,0x7ffdc994fb34,424256509,0,0x0,8
tick,0x7ffdc994fb34,424271914,0,0x0,8
tick,0x7ffdc994fb34,424287445,0,0x0,8
tick,0x7ffdc994fb34,424302857,0,0x0,8
tick,0x7ffdc994fb34,424318298,0,0x0,8
tick,0x7ffdc994fb34,424333632,0,0x0,8
tick,0x7ffdc994fb34,424349475,0,0x0,8
tick,0x7ffdc994fb34,424365127,0,0x0,8
tick,0x7ffdc994fb34,424380438,0,0x0,8
tick,0x7ffdc994fb34,424395806,0,0x0,8
tick,0x7ffdc994fb34,424411243,0,0x0,8
tick,0x7ffdc994fb34,424427021,0,0x0,8
tick,0x7ffdc994fb34,424442625,0,0x0,8
tick,0x7ffdc994fb34,424457874,0,0x0,8
tick,0x7ffdc994fb34,424473191,0,0x0,8
tick,0x7ffdc994fb34,424488905,0,0x0,8
tick,0x7ffdc994fb34,424504755,0,0x0,8
tick,0x7ffdc994fb34,424520009,0,0x0,8
tick,0x7ffdc994fb34,424536085,0,0x0,8
tick,0x7ffdc994fb34,424552102,0,0x0,8
tick,0x7ffdc994fb34,424566737,0,0x0,8
tick,0x7ffdc994fb34,424581621,0,0x0,8
tick,0x7ffdc994fb34,424597642,0,0x0,8
tick,0x7ffdc994fb34,424613674,0,0x0,8
tick,0x7ffdc994fb34,424629047,0,0x0,8
tick,0x7ffdc994fb34,424644044,0,0x0,8
tick,0x7ffdc994fb34,424660111,0,0x0,8
tick,0x7ffdc994fb34,424676034,0,0x0,8
tick,0x7ffdc994fb34,424691175,0,0x0,8
tick,0x7ffdc994fb34,424706829,0,0x0,8
tick,0x7ffdc994fb34,424722293,0,0x0,8
tick,0x7ffdc994fb34,424738084,0,0x0,8
tick,0x7ffdc994fb34,424753057,0,0x0,8
tick,0x7ffdc994fb34,424768383,0,0x0,8
tick,0x7ffdc994fb34,424784583,0,0x0,8
tick,0x7ffdc994fb34,424799722,0,0x0,8
tick,0x7ffdc994fb34,424815191,0,0x0,8
tick,0x7ffdc994fb34,424830405,0,0x0,8
tick,0x7ffdc994fb34,424846597,0,0x0,8
tick,0x7ffdc994fb34,424861404,0,0x0,8
tick,0x7ffdc994fb34,424876957,0,0x0,8
tick,0x7ffdc994fb34,424892935,0,0x0,8
tick,0x7ffdc994fb34,424908573,0,0x0,8
tick,0x7ffdc994fb34,424924080,0,0x0,8
tick,0x7ffdc994fb34,424940136,0,0x0,8
tick,0x7ffdc994fb34,424955340,0,0x0,8
tick,0x7ffdc994fb34,424970765,0,0x0,8
tick,0x7ffdc994fb34,424986900,0,0x0,8
tick,0x7ffdc994fb34,425002105,0,0x0,8
tick,0x7ffdc994fb34,425017786,0,0x0,8
tick,0x7ffdc994fb34,425033585,0,0x0,8
tick,0x7ffdc994fb34,425049284,0,0x0,8
tick,0x7ffdc994fb34,425064360,0,0x0,8
tick,0x7ffdc994fb34,425079992,0,0x0,8
tick,0x7ffdc994fb34,425094923,0,0x0,8
tick,0x7ffdc994fb34,425110619,0,0x0,8
tick,0x7ffdc994fb34,425126035,0,0x0,8
tick,0x7ffdc994fb34,425142288,0,0x0,8
tick,0x7ffdc994fb34,425157445,0,0x0,8
tick,0x7ffdc994fb34,425172986,0,0x0,8
tick,0x7ffdc994fb34,425188195,0,0x0,8
tick,0x7ffdc994fb34,425203539,0,0x0,8
tick,0x7ffdc994fb34,425218624,0,0x0,8
tick,0x7ffdc994fb34,425234192,0,0x0,8
tick,0x7ffdc994fb34,425249635,0,0x0,8
tick,0x7ffdc994fb34,425264648,0,0x0,8
tick,0x7ffdc994fb34,425279906,0,0x0,8
tick,0x7ffdc994fb34,425295408,0,0x0,8
tick,0x7ffdc994fb34,425311004,0,0x0,8
tick,0x7ffdc994fb34,425326589,0,0x0,8
tick,0x7ffdc994fb34,425342034,0,0x0,8
tick,0x7ffdc994fb34,425357578,0,0x0,8
tick,0x7ffdc994fb34,425372906,0,0x0,8
tick,0x7ffdc994fb34,425388227,0,0x0,8
tick,0x7ffdc994fb34,425404190,0,0x0,8
tick,0x7ffdc994fb34,425420198,0,0x0,8
tick,0x7ffdc994fb34,425435260,0,0x0,8
tick,0x7ffdc994fb34,425451133,0,0x0,8
tick,0x7ffdc994fb34,425467195,0,0x0,8
tick,0x7ffdc994fb34,425482263,0,0x0,8
tick,0x7ffdc994fb34,425498190,0,0x0,8
tick,0x7ffdc994fb34,425513436,0,0x0,8
tick,0x7ffdc994fb34,425528779,0,0x0,8
tick,0x7ffdc994fb34,425544139,0,0x0,8
tick,0x7ffdc994fb34,425559337,0,0x0,8
tick,0x7ffdc994fb34,425575146,0,0x0,8
tick,0x7ffdc994fb34,425590950,0,0x0,8
tick,0x7ffdc994fb34,425606648,0,0x0,8
tick,0x7ffdc994fb34,425621904,0,0x0,8
tick,0x7ffdc994fb34,425637793,0,0x0,8
tick,0x7ffdc994fb34,425653305,0,0x0,8
tick,0x7ffdc994fb34,425669327,0,0x0,8
tick,0x7ffdc994fb34,425685236,0,0x0,8
tick,0x7ffdc994fb34,425701363,0,0x0,8
tick,0x7ffdc994fb34,425716732,0,0x0,8
tick,0x7ffdc994fb34,425731902,0,0x0,8
tick,0x7ffdc994fb34,425747548,0,0x0,8
tick,0x7ffdc994fb34,425762662,0,0x0,8
tick,0x7ffdc994fb34,425778269,0,0x0,8
tick,0x7ffdc994fb34,425793098,0,0x0,8
tick,0x7ffdc994fb34,425809043,0,0x0,8
tick,0x7ffdc994fb34,425824275,0,0x0,8
tick,0x7ffdc994fb34,425839635,0,0x0,8
tick,0x7ffdc994fb34,425855508,0,0x0,8
tick,0x7ffdc994fb34,425871045,0,0x0,8
tick,0x7ffdc994fb34,425886405,0,0x0,8
tick,0x7ffdc994fb34,425901619,0,0x0,8
tick,0x7ffdc994fb34,425917248,0,0x0,8
tick,0x7ffdc994fb34,425932605,0,0x0,8
tick,0x7ffdc994fb34,425948009,0,0x0,8
tick,0x7ffdc994fb34,425963204,0,0x0,8
tick,0x7ffdc994fb34,425979258,0,0x0,8
tick,0x7ffdc994fb34,425994604,0,0x0,8
tick,0x7ffdc994fb34,426010262,0,0x0,8
tick,0x7ffdc994fb34,426026347,0,0x0,8
tick,0x7ffdc994fb34,426042324,0,0x0,8
tick,0x7ffdc994fb34,426057779,0,0x0,8
tick,0x7ffdc994fb34,426073136,0,0x0,8
tick,0x7ffdc994fb34,426088687,0,0x0,8
tick,0x7ffdc994fb34,426104658,0,0x0,8
tick,0x7ffdc994fb34,426119965,0,0x0,8
tick,0x7ffdc994fb34,426136075,0,0x0,8
tick,0x7ffdc994fb34,426151328,0,0x0,8
tick,0x7ffdc994fb34,426166701,0,0x0,8
tick,0x7ffdc994fb34,426182500,0,0x0,8
tick,0x7ffdc994fb34,426198459,0,0x0,8
tick,0x7ffdc994fb34,426213129,0,0x0,8
tick,0x7ffdc994fb34,426229661,0,0x0,8
tick,0x7ffdc994fb34,426244956,0,0x0,8
tick,0x7ffdc994fb34,426260498,0,0x0,8
tick,0x7ffdc994fb34,426275804,0,0x0,8
tick,0x7ffdc994fb34,426291027,0,0x0,8
tick,0x7ffdc994fb34,426306485,0,0x0,8
tick,0x7ffdc994fb34,426321630,0,0x0,8
tick,0x7ffdc994fb34,426337410,0,0x0,8
tick,0x7ffdc994fb34,426352895,0,0x0,8
tick,0x7ffdc994fb34,426368743,0,0x0,8
tick,0x7ffdc994fb34,426384471,0,0x0,8
tick,0x7ffdc994fb34,426400187,0,0x0,8
tick,0x7ffdc994fb34,426415794,0,0x0,8
tick,0x7ffdc994fb34,426431446,0,0x0,8
tick,0x7ffdc994fb34,426447200,0,0x0,8
tick,0x7ffdc994fb34,426463106,0,0x0,8
tick,0x7ffdc994fb34,426478722,0,0x0,8
tick,0x7ffdc994fb34,426493493,0,0x0,8
tick,0x7ffdc994fb34,426509667,0,0x0,8
tick,0x7ffdc994fb34,426524777,0,0x0,8
tick,0x7ffdc994fb34,426540229,0,0x0,8
tick,0x7ffdc994fb34,426556520,0,0x0,8
tick,0x7ffdc994fb34,426571591,0,0x0,8
tick,0x7ffdc994fb34,426586852,0,0x0,8
tick,0x7ffdc994fb34,426601986,0,0x0,8
tick,0x7ffdc994fb34,426617767,0,0x0,8
tick,0x7ffdc994fb34,426633049,0,0x0,8
tick,0x7ffdc994fb34,426648036,0,0x0,8
tick,0x7ffdc994fb34,426663113,0,0x0,8
tick,0x7ffdc994fb34,426679048,0,0x0,8
tick,0x7ffdc994fb34,426694594,0,0x0,8
tick,0x7ffdc994fb34,426710272,0,0x0,8
tick,0x7ffdc994fb34,426726265,0,0x0,8
tick,0x7ffdc994fb34,426741701,0,0x0,8
tick,0x7ffdc994fb34,426757778,0,0x0,8
tick,0x7ffdc994fb34,426773702,0,0x0,8
tick,0x7ffdc994fb34,426789332,0,0x0,8
tick,0x7ffdc994fb34,426805427,0,0x0,8
tick,0x7ffdc994fb34,426821371,0,0x0,8
tick,0x7ffdc994fb34,426836862,0,0x0,8
tick,0x7ffdc994fb34,426853074,0,0x0,8
tick,0x7ffdc994fb34,426868477,0,0x0,8
tick,0x7ffdc994fb34,426883722,0,0x0,8
tick,0x7ffdc994fb34,426899070,0,0x0,8
tick,0x7ffdc994fb34,426914944,0,0x0,8
tick,0x7ffdc994fb34,426931096,0,0x0,8
tick,0x7ffdc994fb34,426947212,0,0x0,8
tick,0x7ffdc994fb34,426963134,0,0x0,8
tick,0x7ffdc994fb34,426977860,0,0x0,8
tick,0x7ffdc994fb34,426993258,0,0x0,8
tick,0x7ffdc994fb34,427009126,0,0x0,8
tick,0x7ffdc994fb34,427024435,0,0x0,8
tick,0x7ffdc994fb34,427040432,0,0x0,8
tick,0x7ffdc994fb34,427056190,0,0x0,8
tick,0x7ffdc994fb34,427072027,0,0x0,8
tick,0x7ffdc994fb34,427088086,0,0x0,8
tick,0x7ffdc994fb34,427103794,0,0x0,8
tick,0x7ffdc994fb34,427119124,0,0x0,8
tick,0x7ffdc994fb34,427134606,0,0x0,8
tick,0x7ffdc994fb34,427150000,0,0x0,8
tick,0x7ffdc994fb34,427165461,0,0x0,8
tick,0x7ffdc994fb34,427181273,0,0x0,8
tick,0x7ffdc994fb34,427196598,0,0x0,8
tick,0x7ffdc994fb34,427212466,0,0x0,8
tick,0x7ffdc994fb34,427228047,0,0x0,8
tick,0x7ffdc994fb34,427243295,0,0x0,8
tick,0x7ffdc994fb34,427258689,0,0x0,8
tick,0x7ffdc994fb34,427274159,0,0x0,8
tick,0x7ffdc994fb34,427290243,0,0x0,8
tick,0x7ffdc994fb34,427305879,0,0x0,8
tick,0x7ffdc994fb34,427321470,0,0x0,8
tick,0x7ffdc994fb34,427336805,0,0x0,8
tick,0x7ffdc994fb34,427352585,0,0x0,8
tick,0x7ffdc994fb34,427368651,0,0x0,8
tick,0x7ffdc994fb34,427384701,0,0x0,8
tick,0x7ffdc994fb34,427400391,0,0x0,8
tick,0x7ffdc994fb34,427415931,0,0x0,8
tick,0x7ffdc994fb34,427431555,0,0x0,8
tick,0x7ffdc994fb34,427447114,0,0x0,8
tick,0x7ffdc994fb34,427462262,0,0x0,8
tick,0x7ffdc994fb34,427477485,0,0x0,8
tick,0x7ffdc994fb34,427493120,0,0x0,8
tick,0x7ffdc994fb34,427508660,0,0x0,8
tick,0x7ffdc994fb34,427524673,0,0x0,8
tick,0x7ffdc994fb34,427539935,0,0x0,8
tick,0x7ffdc994fb34,427555439,0,0x0,8
tick,0x7ffdc994fb34,427571621,0,0x0,8
tick,0x7ffdc994fb34,427586499,0,0x0,8
tick,0x7ffdc994fb34,427601712,0,0x0,8
tick,0x7ffdc994fb34,427617673,0,0x0,8
tick,0x7ffdc994fb34,427633900,0,0x0,8
tick,0x7ffdc994fb34,427649730,0,0x0,8
tick,0x7ffdc994fb34,427665397,0,0x0,8
tick,0x7ffdc994fb34,427680476,0,0x0,8
tick,0x7ffdc994fb34,427696657,0,0x0,8
tick,0x7ffdc994fb34,427712376,0,0x0,8
tick,0x7ffdc994fb34,427727986,0,0x0,8
tick,0x7ffdc994fb34,427743150,0,0x0,8
tick,0x7ffdc994fb34,427758680,0,0x0,8
tick,0x7ffdc994fb34,427774074,0,0x0,8
tick,0x7ffdc994fb34,427789783,0,0x0,8
tick,0x7ffdc994fb34,427805596,0,0x0,8
tick,0x7ffdc994fb34,427821163,0,0x0,8
tick,0x7ffdc994fb34,427836607,0,0x0,8
tick,0x7ffdc994fb34,427852062,0,0x0,8
tick,0x7ffdc994fb34,427867650,0,0x0,8
tick,0x7ffdc994fb34,427883164,0,0x0,8
tick,0x7ffdc994fb34,427898771,0,0x0,8
tick,0x7ffdc994fb34,427914036,0,0x0,8
tick,0x7ffdc994fb34,427930155,0,0x0,8
tick,0x7ffdc994fb34,427945769,0,0x0,8
tick,0x7ffdc994fb34,427962237,0,0x0,8
tick,0x7ffdc994fb34,427977808,0,0x0,8
tick,0x7ffdc994fb34,427993965,0,0x0,8
tick,0x7ffdc994fb34,428009133,0,0x0,8
tick,0x7ffdc994fb34,428024385,0,0x0,8
tick,0x7ffdc994fb34,428039929,0,0x0,8
tick,0x7ffdc994fb34,428055584,0,0x0,8
tick,0x7ffdc994fb34,428070800,0,0x0,8
tick,0x7ffdc994fb34,428086765,0,0x0,8
tick,0x7ffdc994fb34,428102453,0,0x0,8
tick,0x7ffdc994fb34,428118264,0,0x0,8
tick,0x7ffdc994fb34,428133548,0,0x0,8
tick,0x7ffdc994fb34,428149535,0,0x0,8
tick,0x7ffdc994fb34,428164826,0,0x0,8
tick,0x7ffdc994fb34,428180156,0,0x0,8
tick,0x7ffdc994fb34,428195960,0,0x0,8
tick,0x7ffdc994fb34,428211839,0,0x0,8
tick,0x7ffdc994fb34,428226652,0,0x0,8
tick,0x7ffdc994fb34,428241944,0,0x0,8
tick,0x7ffdc994fb34,428257421,0,0x0,8
tick,0x7ffdc994fb34,428273577,0,0x0,8
tick,0x7ffdc994fb34,428288659,0,0x0,8
tick,0x7ffdc994fb34,428303883,0,0x0,8
tick,0x7ffdc994fb34,428319210,0,0x0,8
tick,0x7ffdc994fb34,428334566,0,0x0,8
tick,0x7ffdc994fb34,428350062,0,0x0,8
tick,0x7ffdc994fb34,428365232,0,0x0,8
tick,0x7ffdc994fb34,428381024,0,0x0,8
tick,0x7ffdc994fb34,428396517,0,0x0,8
tick,0x7ffdc994fb34,428412163,0,0x0,8
tick,0x7ffdc994fb34,428427940,0,0x0,8
tick,0x7ffdc994fb34,428443877,0,0x0,8
tick,0x7ffdc994fb34,428459051,0,0x0,8
tick,0x7ffdc994fb34,428474859,0,0x0,8
tick,0x7ffdc994fb34,428489985,0,0x0,8
tick,0x7ffdc994fb34,428506190,0,0x0,8
tick,0x7ffdc994fb34,428521365,0,0x0,8
tick,0x7ffdc994fb34,428536663,0,0x0,8
tick,0x7ffdc994fb34,428551863,0,0x0,8
tick,0x7ffdc994fb34,428567818,0,0x0,8
tick,0x7ffdc994fb34,428582832,0,0x0,8
tick,0x7ffdc994fb34,428597899,0,0x0,8
tick,0x7ffdc994fb34,428613524,0,0x0,8
tick,0x7ffdc994fb34,428629345,0,0x0,8
tick,0x7ffdc994fb34,428644954,0,0x0,8
tick,0x7ffdc994fb34,428660229,0,0x0,8
tick,0x7ffdc994fb34,428675430,0,0x0,8
tick,0x7ffdc994fb34,428691160,0,0x0,8
tick,0x7ffdc994fb34,428706243,0,0x0,8
tick,0x7ffdc994fb34,428721764,0,0x0,8
tick,0x7ffdc994fb34,428737492,0,0x0,8
tick,0x7ffdc994fb34,428752762,0,0x0,8
tick,0x7ffdc994fb34,428768438,0,0x0,8
tick,0x7ffdc994fb34,428784414,0,0x0,8
tick,0x7ffdc994fb34,428799629,0,0x0,8
tick,0x7ffdc994fb34,428815502,0,0x0,8
tick,0x7ffdc994fb34,428831751,0,0x0,8
tick,0x7ffdc994fb34,428847019,0,0x0,8
tick,0x7ffdc994fb34,428863354,0,0x0,8
tick,0x7ffdc994fb34,428879311,0,0x0,8
tick,0x7ffdc994fb34,428894082,0,0x0,8
tick,0x7ffdc994fb34,428909778,0,0x0,8
tick,0x7ffdc994fb34,428925274,0,0x0,8
tick,0x7ffdc994fb34,428940880,0,0x0,8
tick,0x7ffdc994fb34,428956049,0,0x0,8
tick,0x7ffdc994fb34,428971799,0,0x0,8
tick,0x7ffdc994fb34,428987229,0,0x0,8
tick,0x7ffdc994fb34,429002520,0,0x0,8
tick,0x7ffdc994fb34,429018211,0,0x0,8
tick,0x7ffdc994fb34,429033765,0,0x0,8
tick,0x7ffdc994fb34,429049237,0,0x0,8
tick,0x7ffdc994fb34,429064515,0,0x0,8
tick,0x7ffdc994fb34,429080266,0,0x0,8
tick,0x7ffdc994fb34,429096316,0,0x0,8
tick,0x7ffdc994fb34,429111709,0,0x0,8
tick,0x7ffdc994fb34,429126974,0,0x0,8
tick,0x7ffdc994fb34,429142063,0,0x0,8
tick,0x7ffdc994fb34,429157685,0,0x0,8
tick,0x7ffdc994fb34,429173046,0,0x0,8
tick,0x7ffdc994fb34,429188650,0,0x0,8
tick,0x7ffdc994fb34,429204169,0,0x0,8
tick,0x7ffdc994fb34,429219564,0,0x0,8
tick,0x7ffdc994fb34,429235077,0,0x0,8
tick,0x7ffdc994fb34,429250746,0,0x0,8
tick,0x7ffdc994fb34,429266395,0,0x0,8
tick,0x7ffdc994fb34,429281695,0,0x0,8
tick,0x7ffdc994fb34,429297168,0,0x0,8
tick,0x7ffdc994fb34,429312742,0,0x0,8
tick,0x7ffdc994fb34,429328866,0,0x0,8
tick,0x7ffdc994fb34,429344153,0,0x0,8
tick,0x7ffdc994fb34,429358943,0,0x0,8
tick,0x7ffdc994fb34,429374245,0,0x0,8
tick,0x7ffdc994fb34,429390325,0,0x0,8
tick,0x7ffdc994fb34,429405158,0,0x0,8
tick,0x7ffdc994fb34,429421180,0,0x0,8
tick,0x7ffdc994fb34,429437326,0,0x0,8
tick,0x7ffdc994fb34,429452399,0,0x0,8
tick,0x7ffdc994fb34,429467631,0,0x0,8
tick,0x7ffdc994fb34,429482587,0,0x0,8
tick,0x7ffdc994fb34,429498318,0,0x0,8
tick,0x7ffdc994fb34,429635113,0,0x0,8
tick,0x7ffdc994fb34,429644509,0,0x0,8
tick,0x7ffdc994fb34,429654710,0,0x0,8
tick,0x7ffdc994fb34,429669960,0,0x0,8
tick,0x7ffdc994fb34,429685622,0,0x0,8
tick,0x7ffdc994fb34,429701628,0,0x0,8
tick,0x7ffdc994fb34,429717684,0,0x0,8
tick,0x7ffdc994fb34,429733719,0,0x0,8
tick,0x7ffdc994fb34,429749463,0,0x0,8
tick,0x7ffdc994fb34,429764330,0,0x0,8
tick,0x7ffdc994fb34,429779736,0,0x0,8
tick,0x7ffdc994fb34,429795622,0,0x0,8
tick,0x7ffdc994fb34,429811684,0,0x0,8
tick,0x7ffdc994fb34,429827973,0,0x0,8
tick,0x7ffdc994fb34,429843146,0,0x0,8
tick,0x7ffdc994fb34,429859228,0,0x0,8
tick,0x7ffdc994fb34,429874931,0,0x0,8
tick,0x7ffdc994fb34,429890362,0,0x0,8
tick,0x7ffdc994fb34,429906040,0,0x0,8
tick,0x7ffdc994fb34,429921130,0,0x0,8
tick,0x7ffdc994fb34,429936829,0,0x0,8
tick,0x7ffdc994fb34,429952036,0,0x0,8
tick,0x7ffdc994fb34,429967976,0,0x0,8
tick,0x7ffdc994fb34,429983293,0,0x0,8
tick,0x7ffdc994fb34,429999652,0,0x0,8
tick,0x7ffdc994fb34,430015360,0,0x0,8
tick,0x7ffdc994fb34,430030586,0,0x0,8
tick,0x7ffdc994fb34,430045839,0,0x0,8
tick,0x7ffdc994fb34,430061155,0,0x0,8
tick,0x7ffdc994fb34,430076195,0,0x0,8
tick,0x7ffdc994fb34,430091958,0,0x0,8
tick,0x7ffdc994fb34,430107911,0,0x0,8
tick,0x7ffdc994fb34,430123117,0,0x0,8
tick,0x7ffdc994fb34,430138831,0,0x0,8
tick,0x7ffdc994fb34,430154213,0,0x0,8
tick,0x7ffdc994fb34,430169766,0,0x0,8
tick,0x7ffdc994fb34,430185332,0,0x0,8
tick,0x7ffdc994fb34,430200842,0,0x0,8
tick,0x7ffdc994fb34,430215938,0,0x0,8
tick,0x7ffdc994fb34,430231327,0,0x0,8
tick,0x7ffdc994fb34,430246453,0,0x0,8
tick,0x7ffdc994fb34,430262409,0,0x0,8
tick,0x7ffdc994fb34,430277659,0,0x0,8
tick,0x7ffdc994fb34,430293359,0,0x0,8
tick,0x7ffdc994fb34,430308881,0,0x0,8
tick,0x7ffdc994fb34,430324106,0,0x0,8
tick,0x7ffdc994fb34,430340086,0,0x0,8
tick,0x7ffdc994fb34,430355442,0,0x0,8
tick,0x7ffdc994fb34,430371652,0,0x0,8
tick,0x7ffdc994fb34,430387340,0,0x0,8
tick,0x7ffdc994fb34,430402658,0,0x0,8
tick,0x7ffdc994fb34,430417992,0,0x0,8
tick,0x7ffdc994fb34,430433208,0,0x0,8
tick,0x7ffdc994fb34,430448571,0,0x0,8
tick,0x7ffdc994fb34,430464230,0,0x0,8
tick,0x7ffdc994fb34,430480452,0,0x0,8
tick,0x7ffdc994fb34,430495730,0,0x0,8
tick,0x7ffdc994fb34,430511854,0,0x0,8
tick,0x7ffdc994fb34,430527910,0,0x0,8
tick,0x7ffdc994fb34,430543172,0,0x0,8
tick,0x7ffdc994fb34,430559039,0,0x0,8
tick,0x7ffdc994fb34,430574470,0,0x0,8
tick,0x7ffdc994fb34,430589896,0,0x0,8
tick,0x7ffdc994fb34,430604854,0,0x0,8
tick,0x7ffdc994fb34,430619970,0,0x0,8
tick,0x7ffdc994fb34,430635643,0,0x0,8
tick,0x7ffdc994fb34,430651644,0,0x0,8
tick,0x7ffdc994fb34,430667012,0,0x0,8
tick,0x7ffdc994fb34,430682238,0,0x0,8
tick,0x7ffdc994fb34,430697647,0,0x0,8
tick,0x7ffdc994fb34,430713114,0,0x0,8
tick,0x7ffdc994fb34,430729299,0,0x0,8
tick,0x7ffdc994fb34,430744990,0,0x0,8
tick,0x7ffdc994fb34,430760991,0,0x0,8
tick,0x7ffdc994fb34,430776340,0,0x0,8
tick,0x7ffdc994fb34,430791768,0,0x0,8
tick,0x7ffdc994fb34,430806941,0,0x0,8
tick,0x7ffdc994fb34,430822503,0,0x0,8
tick,0x7ffdc994fb34,430838256,0,0x0,8
tick,0x7ffdc994fb34,430853609,0,0x0,8
tick,0x7ffdc994fb34,430870106,0,0x0,8
tick,0x7ffdc994fb34,430885860,0,0x0,8
tick,0x7ffdc994fb34,430901877,0,0x0,8
tick,0x7ffdc994fb34,430917972,0,0x0,8
tick,0x7ffdc994fb34,430933612,0,0x0,8
tick,0x7ffdc994fb34,430949539,0,0x0,8
tick,0x7ffdc994fb34,430964853,0,0x0,8
tick,0x7ffdc994fb34,430980681,0,0x0,8
tick,0x7ffdc994fb34,430995974,0,0x0,8
tick,0x7ffdc994fb34,431011488,0,0x0,8
tick,0x7ffdc994fb34,431027714,0,0x0,8
tick,0x7ffdc994fb34,431043022,0,0x0,8
tick,0x7ffdc994fb34,431058628,0,0x0,8
tick,0x7ffdc994fb34,431074381,0,0x0,8
tick,0x7ffdc994fb34,431089713,0,0x0,8
tick,0x7ffdc994fb34,431105944,0,0x0,8
tick,0x7ffdc994fb34,431121430,0,0x0,8
tick,0x7ffdc994fb34,431136644,0,0x0,8
tick,0x7ffdc994fb34,431152605,0,0x0,8
tick,0x7ffdc994fb34,431168288,0,0x0,8
tick,0x7ffdc994fb34,431183991,0,0x0,8
tick,0x7ffdc994fb34,431199306,0,0x0,8
tick,0x7ffdc994fb34,431214667,0,0x0,8
tick,0x7ffdc994fb34,431230097,0,0x0,8
tick,0x7ffdc994fb34,431245625,0,0x0,8
tick,0x7ffdc994fb34,431260613,0,0x0,8
tick,0x7ffdc994fb34,431276936,0,0x0,8
tick,0x7ffdc994fb34,431291503,0,0x0,8
tick,0x7ffdc994fb34,431306809,0,0x0,8
tick,0x7ffdc994fb34,431322569,0,0x0,8
tick,0x7ffdc994fb34,431338175,0,0x0,8
tick,0x7ffdc994fb34,431354032,0,0x0,8
tick,0x7ffdc994fb34,431369226,0,0x0,8
tick,0x7ffdc994fb34,431383987,0,0x0,8
tick,0x7ffdc994fb34,431399318,0,0x0,8
tick,0x7ffdc994fb34,431414386,0,0x0,8
tick,0x7ffdc994fb34,431430034,0,0x0,8
tick,0x7ffdc994fb34,431445779,0,0x0,8
tick,0x7ffdc994fb34,431461715,0,0x0,8
tick,0x7ffdc994fb34,431478027,0,0x0,8
tick,0x7ffdc994fb34,431493116,0,0x0,8
tick,0x7ffdc994fb34,431508965,0,0x0,8
tick,0x7ffdc994fb34,431524827,0,0x0,8
tick,0x7ffdc994fb34,431540242,0,0x0,8
tick,0x7ffdc994fb34,431555730,0,0x0,8
tick,0x7ffdc994fb34,431571019,0,0x0,8
tick,0x7ffdc994fb34,431586593,0,0x0,8
tick,0x7ffdc994fb34,431602471,0,0x0,8
tick,0x7ffdc994fb34,431618595,0,0x0,8
tick,0x7ffdc994fb34,431634279,0,0x0,8
tick,0x7ffdc994fb34,431649701,0,0x0,8
tick,0x7ffdc994fb34,431664772,0,0x0,8
tick,0x7ffdc994fb34,431680487,0,0x0,8
tick,0x7ffdc994fb34,431695610,0,0x0,8
tick,0x7ffdc994fb34,431711213,0,0x0,8
tick,0x7ffdc994fb34,431726795,0,0x0,8
tick,0x7ffdc994fb34,431742199,0,0x0,8
tick,0x7ffdc994fb34,431758001,0,0x0,8
tick,0x7ffdc994fb34,431773540,0,0x0,8
tick,0x7ffdc994fb34,431789782,0,0x0,8
tick,0x7ffdc994fb34,431805472,0,0x0,8
tick,0x7ffdc994fb34,431821725,0,0x0,8
tick,0x7ffdc994fb34,431837510,0,0x0,8
tick,0x7ffdc994fb34,431853452,0,0x0,8
tick,0x7ffdc994fb34,431868718,0,0x0,8
tick,0x7ffdc994fb34,431884704,0,0x0,8
tick,0x7ffdc994fb34,431900085,0,0x0,8
tick,0x7ffdc994fb34,431916163,0,0x0,8
tick,0x7ffdc994fb34,431931579,0,0x0,8
tick,0x7ffdc994fb34,431946844,0,0x0,8
tick,0x7ffdc994fb34,431961755,0,0x0,8
tick,0x7ffdc994fb34,431977077,0,0x0,8
tick,0x7ffdc994fb34,431992521,0,0x0,8
tick,0x7ffdc994fb34,432007648,0,0x0,8
tick,0x7ffdc994fb34,432023430,0,0x0,8
tick,0x7ffdc994fb34,432039005,0,0x0,8
tick,0x7ffdc994fb34,432054725,0,0x0,8
tick,0x7ffdc994fb34,432069678,0,0x0,8
tick,0x7ffdc994fb34,432085093,0,0x0,8
tick,0x7ffdc994fb34,432100409,0,0x0,8
tick,0x7ffdc994fb34,432115762,0,0x0,8
tick,0x7ffdc994fb34,432130813,0,0x0,8
tick,0x7ffdc994fb34,432146420,0,0x0,8
tick,0x7ffdc994fb34,432161046,0,0x0,8
tick,0x7ffdc994fb34,432176172,0,0x0,8
tick,0x7ffdc994fb34,432191794,0,0x0,8
tick,0x7ffdc994fb34,432207272,0,0x0,8
tick,0x7ffdc994fb34,432222358,0,0x0,8
tick,0x7ffdc994fb34,432237553,0,0x0,8
tick,0x7ffdc994fb34,432252948,0,0x0,8
tick,0x7ffdc994fb34,432268638,0,0x0,8
tick,0x7ffdc994fb34,432284073,0,0x0,8
tick,0x7ffdc994fb34,432299414,0,0x0,8
tick,0x7ffdc994fb34,432314545,0,0x0,8
tick,0x7ffdc994fb34,432329630,0,0x0,8
tick,0x7ffdc994fb34,432345710,0,0x0,8
tick,0x7ffdc994fb34,432361321,0,0x0,8
tick,0x7ffdc994fb34,432377027,0,0x0,8
tick,0x7ffdc994fb34,432392951,0,0x0,8
tick,0x7ffdc994fb34,432408256,0,0x0,8
tick,0x7ffdc994fb34,432423781,0,0x0,8
tick,0x7ffdc994fb34,432439050,0,0x0,8
tick,0x7ffdc994fb34,432454508,0,0x0,8
tick,0x7ffdc994fb34,432469958,0,0x0,8
tick,0x7ffdc994fb34,432485241,0,0x0,8
tick,0x7ffdc994fb34,432501354,0,0x0,8
tick,0x7ffdc994fb34,432516270,0,0x0,8
tick,0x7ffdc994fb34,432531937,0,0x0,8
tick,0x7ffdc994fb34,432547205,0,0x0,8
tick,0x7ffdc994fb34,432562869,0,0x0,8
tick,0x7ffdc994fb34,432578395,0,0x0,8
tick,0x7ffdc994fb34,432593516,0,0x0,8
tick,0x7ffdc994fb34,432609258,0,0x0,8
tick,0x7ffdc994fb34,432624479,0,0x0,8
tick,0x7ffdc994fb34,432640343,0,0x0,8
tick,0x7ffdc994fb34,432656552,0,0x0,8
tick,0x7ffdc994fb34,432672506,0,0x0,8
tick,0x7ffdc994fb34,432687695,0,0x0,8
tick,0x7ffdc994fb34,432702519,0,0x0,8
tick,0x7ffdc994fb34,432717670,0,0x0,8
tick,0x7ffdc994fb34,432732579,0,0x0,8
tick,0x7ffdc994fb34,432748014,0,0x0,8
tick,0x7ffdc994fb34,432763222,0,0x0,8
tick,0x7ffdc994fb34,432779141,0,0x0,8
tick,0x7ffdc994fb34,432794689,0,0x0,8
tick,0x7ffdc994fb34,432810125,0,0x0,8
tick,0x7ffdc994fb34,432826124,0,0x0,8
tick,0x7ffdc994fb34,432841452,0,0x0,8
tick,0x7ffdc994fb34,432857086,0,0x0,8
tick,0x7ffdc994fb34,432872679,0,0x0,8
tick,0x7ffdc994fb34,432888109,0,0x0,8
tick,0x7ffdc994fb34,432903770,0,0x0,8
tick,0x7ffdc994fb34,432919596,0,0x0,8
tick,0x7ffdc994fb34,432934979,0,0x0,8
tick,0x7ffdc994fb34,432950541,0,0x0,8
tick,0x7ffdc994fb34,432966004,0,0x0,8
tick,0x7ffdc994fb34,432981609,0,0x0,8
tick,0x7ffdc994fb34,432997257,0,0x0,8
tick,0x7ffdc994fb34,433012868,0,0x0,8
tick,0x7ffdc994fb34,433028264,0,0x0,8
tick,0x7ffdc994fb34,433043688,0,0x0,8
tick,0x7ffdc994fb34,433059243,0,0x0,8
tick,0x7ffdc994fb34,433074473,0,0x0,8
tick,0x7ffdc994fb34,433089987,0,0x0,8
tick,0x7ffdc994fb34,433105513,0,0x0,8
tick,0x7ffdc994fb34,433121060,0,0x0,8
tick,0x7ffdc994fb34,433135750,0,0x0,8
tick,0x7ffdc994fb34,433151791,0,0x0,8
tick,0x7ffdc994fb34,433167472,0,0x0,8
tick,0x7ffdc994fb34,433183687,0,0x0,8
tick,0x7ffdc994fb34,433199389,0,0x0,8
tick,0x7ffdc994fb34,433214180,0,0x0,8
tick,0x7ffdc994fb34,433229923,0,0x0,8
tick,0x7ffdc994fb34,433245775,0,0x0,8
tick,0x7ffdc994fb34,433261816,0,0x0,8
tick,0x7ffdc994fb34,433277818,0,0x0,8
tick,0x7ffdc994fb34,433293677,0,0x0,8
tick,0x7ffdc994fb34,433309128,0,0x0,8
tick,0x7ffdc994fb34,433324386,0,0x0,8
tick,0x7ffdc994fb34,433339201,0,0x0,8
tick,0x7ffdc994fb34,433355187,0,0x0,8
tick,0x7ffdc994fb34,433370661,0,0x0,8
tick,0x7ffdc994fb34,433386098,0,0x0,8
tick,0x7ffdc994fb34,433401690,0,0x0,8
tick,0x7ffdc994fb34,433417130,0,0x0,8
tick,0x7ffdc994fb34,433432721,0,0x0,8
tick,0x7ffdc994fb34,433448201,0,0x0,8
tick,0x7ffdc994fb34,433463512,0,0x0,8
tick,0x7ffdc994fb34,433479171,0,0x0,8
tick,0x7ffdc994fb34,433494494,0,0x0,8
tick,0x7ffdc994fb34,433510329,0,0x0,8
tick,0x7ffdc994fb34,433526380,0,0x0,8
tick,0x7ffdc994fb34,433541769,0,0x0,8
tick,0x7ffdc994fb34,433557086,0,0x0,8
tick,0x7ffdc994fb34,433572739,0,0x0,8
tick,0x7ffdc994fb34,433588684,0,0x0,8
tick,0x7ffdc994fb34,433604585,0,0x0,8
tick,0x7ffdc994fb34,433619981,0,0x0,8
tick,0x7ffdc994fb34,433635482,0,0x0,8
tick,0x7ffdc994fb34,433651087,0,0x0,8
tick,0x7ffdc994fb34,433666795,0,0x0,8
tick,0x7ffdc994fb34,433682162,0,0x0,8
tick,0x7ffdc994fb34,433697773,0,0x0,8
tick,0x7ffdc994fb34,433713379,0,0x0,8
tick,0x7ffdc994fb34,433728658,0,0x0,8
tick,0x7ffdc994fb34,433744318,0,0x0,8
tick,0x7ffdc994fb34,433760151,0,0x0,8
tick,0x7ffdc994fb34,433776022,0,0x0,8
tick,0x7ffdc994fb34,433791022,0,0x0,8
tick,0x7ffdc994fb34,433806395,0,0x0,8
tick,0x7ffdc994fb34,433821856,0,0x0,8
tick,0x7ffdc994fb34,433837577,0,0x0,8
tick,0x7ffdc994fb34,433853555,0,0x0,8
tick,0x7ffdc994fb34,433868873,0,0x0,8
tick,0x7ffdc994fb34,433884554,0,0x0,8
tick,0x7ffdc994fb34,433900121,0,0x0,8
tick,0x7ffdc994fb34,433915450,0,0x0,8
tick,0x7ffdc994fb34,433931158,0,0x0,8
tick,0x7ffdc994fb34,433946730,0,0x0,8
tick,0x7ffdc994fb34,433962641,0,0x0,8
tick,0x7ffdc994fb34,433978192,0,0x0,8
tick,0x7ffdc994fb34,433993335,0,0x0,8
tick,0x7ffdc994fb34,434009231,0,0x0,8
tick,0x7ffdc994fb34,434025351,0,0x0,8
tick,0x7ffdc994fb34,434040727,0,0x0,8
tick,0x7ffdc994fb34,434056280,0,0x0,8
tick,0x7ffdc994fb34,434071833,0,0x0,8
tick,0x7ffdc994fb34,434087336,0,0x0,8
tick,0x7ffdc994fb34,434102774,0,0x0,8
tick,0x7ffdc994fb34,434118597,0,0x0,8
tick,0x7ffdc994fb34,434133852,0,0x0,8
tick,0x7ffdc994fb34,434149346,0,0x0,8
tick,0x7ffdc994fb34,434164610,0,0x0,8
tick,0x7ffdc994fb34,434180075,0,0x0,8
tick,0x7ffdc994fb34,434195542,0,0x0,8
tick,0x7ffdc994fb34,434212020,0,0x0,8
tick,0x7ffdc994fb34,434226895,0,0x0,8
tick,0x7ffdc994fb34,434242258,0,0x0,8
tick,0x7ffdc994fb34,434257778,0,0x0,8
tick,0x7ffdc994fb34,434273906,0,0x0,8
tick,0x7ffdc994fb34,434289051,0,0x0,8
tick,0x7ffdc994fb34,434304984,0,0x0,8
tick,0x7ffdc994fb34,434320575,0,0x0,8
tick,0x7ffdc994fb34,434335977,0,0x0,8
tick,0x7ffdc994fb34,434351809,0,0x0,8
tick,0x7ffdc994fb34,434366717,0,0x0,8
tick,0x7ffdc994fb34,434382341,0,0x0,8
tick,0x7ffdc994fb34,434397882,0,0x0,8
tick,0x7ffdc994fb34,434413213,0,0x0,8
tick,0x7ffdc994fb34,434428812,0,0x0,8
tick,0x7ffdc994fb34,434444691,0,0x0,8
tick,0x7ffdc994fb34,434460946,0,0x0,8
tick,0x7ffdc994fb34,434476074,0,0x0,8
tick,0x7ffdc994fb34,434491861,0,0x0,8
tick,0x7ffdc994fb34,434507098,0,0x0,8
tick,0x7ffdc994fb34,434522803,0,0x0,8
tick,0x7ffdc994fb34,434538090,0,0x0,8
tick,0x7ffdc994fb34,434553671,0,0x0,8
tick,0x7ffdc994fb34,434569188,0,0x0,8
tick,0x7ffdc994fb34,434584611,0,0x0,8
tick,0x7ffdc994fb34,434600025,0,0x0,8
tick,0x7ffdc994fb34,434615739,0,0x0,8
tick,0x7ffdc994fb34,434631328,0,0x0,8
tick,0x7ffdc994fb34,434647500,0,0x0,8
tick,0x7ffdc994fb34,434663775,0,0x0,8
tick,0x7ffdc994fb34,434678793,0,0x0,8
tick,0x7ffdc994fb34,434693089,0,0x0,8
tick,0x7ffdc994fb34,434709246,0,0x0,8
tick,0x7ffdc994fb34,434725312,0,0x0,8
tick,0x7ffdc994fb34,434741501,0,0x0,8
tick,0x7ffdc994fb34,434757102,0,0x0,8
tick,0x7ffdc994fb34,434772650,0,0x0,8
tick,0x7ffdc994fb34,434788325,0,0x0,8
tick,0x7ffdc994fb34,434803884,0,0x0,8
tick,0x7ffdc994fb34,434819243,0,0x0,8
tick,0x7ffdc994fb34,434834693,0,0x0,8
tick,0x7ffdc994fb34,434850646,0,0x0,8
tick,0x7ffdc994fb34,434866728,0,0x0,8
tick,0x7ffdc994fb34,434881096,0,0x0,8
tick,0x7ffdc994fb34,434896844,0,0x0,8
tick,0x7ffdc994fb34,434912893,0,0x0,8
tick,0x7ffdc994fb34,434928420,0,0x0,8
tick,0x7ffdc994fb34,434943205,0,0x0,8
tick,0x7ffdc994fb34,434958482,0,0x0,8
tick,0x7ffdc994fb34,434973614,0,0x0,8
tick,0x7ffdc994fb34,434989506,0,0x0,8
tick,0x7ffdc994fb34,435005626,0,0x0,8
tick,0x7ffdc994fb34,435021604,0,0x0,8
tick,0x7ffdc994fb34,435037542,0,0x0,8
tick,0x7ffdc994fb34,435052920,0,0x0,8
tick,0x7ffdc994fb34,435068392,0,0x0,8
tick,0x7ffdc994fb34,435084809,0,0x0,8
tick,0x7ffdc994fb34,435099459,0,0x0,8
tick,0x7ffdc994fb34,435114013,0,0x0,8
tick,0x7ffdc994fb34,435129885,0,0x0,8
tick,0x7ffdc994fb34,435145148,0,0x0,8
tick,0x7ffdc994fb34,435161326,0,0x0,8
tick,0x7ffdc994fb34,435176857,0,0x0,8
tick,0x7ffdc994fb34,435212136,0,0x0,8
tick,0x7ffdc994fb34,435222318,0,0x0,8
tick,0x7ffdc994fb34,435237978,0,0x0,8
tick,0x7ffdc994fb34,435253979,0,0x0,8
tick,0x7ffdc994fb34,435270049,0,0x0,8
tick,0x7ffdc994fb34,435285288,0,0x0,8
tick,0x7ffdc994fb34,435300708,0,0x0,8
tick,0x7ffdc994fb34,435316670,0,0x0,8
tick,0x7ffdc994fb34,435332187,0,0x0,8
tick,0x7ffdc994fb34,435347411,0,0x0,8
tick,0x7ffdc994fb34,435362735,0,0x0,8
tick,0x7ffdc994fb34,435377906,0,0x0,8
tick,0x7ffdc994fb34,435393249,0,0x0,8
tick,0x7ffdc994fb34,435408564,0,0x0,8
tick,0x7ffdc994fb34,435423796,0,0x0,8
tick,0x7ffdc994fb34,435439233,0,0x0,8
tick,0x7ffdc994fb34,435454409,0,0x0,8
tick,0x7ffdc994fb34,435470355,0,0x0,8
tick,0x7ffdc994fb34,435486220,0,0x0,8
tick,0x7ffdc994fb34,435500865,0,0x0,8
tick,0x7ffdc994fb34,435516564,0,0x0,8
tick,0x7ffdc994fb34,435531711,0,0x0,8
tick,0x7ffdc994fb34,435547558,0,0x0,8
tick,0x7ffdc994fb34,435562919,0,0x0,8
tick,0x7ffdc994fb34,435578175,0,0x0,8
tick,0x7ffdc994fb34,435593467,0,0x0,8
tick,0x7ffdc994fb34,435609371,0,0x0,8
tick,0x7ffdc994fb34,435624694,0,0x0,8
tick,0x7ffdc994fb34,435640655,0,0x0,8
tick,0x7ffdc994fb34,435655928,0,0x0,8
tick,0x7ffdc994fb34,435671762,0,0x0,8
tick,0x7ffdc994fb34,435687263,0,0x0,8
tick,0x7ffdc994fb34,435702234,0,0x0,8
tick,0x7ffdc994fb34,435717805,0,0x0,8
tick,0x7ffdc994fb34,435733117,0,0x0,8
tick,0x7ffdc994fb34,435749060,0,0x0,8
tick,0x7ffdc994fb34,435764825,0,0x0,8
tick,0x7ffdc994fb34,435780819,0,0x0,8
tick,0x7ffdc994fb34,435796557,0,0x0,8
tick,0x7ffdc994fb34,435812635,0,0x0,8
tick,0x7ffdc994fb34,435827563,0,0x0,8
tick,0x7ffdc994fb34,435843394,0,0x0,8
tick,0x7ffdc994fb34,435858545,0,0x0,8
tick,0x7ffdc994fb34,435873604,0,0x0,8
tick,0x7ffdc994fb34,435888586,0,0x0,8
tick,0x7ffdc994fb34,435903715,0,0x0,8
tick,0x7ffdc994fb34,435919793,0,0x0,8
tick,0x7ffdc994fb34,435935338,0,0x0,8
tick,0x7ffdc994fb34,435950327,0,0x0,8
tick,0x7ffdc994fb34,435966414,0,0x0,8
tick,0x7ffdc994fb34,435981747,0,0x0,8
tick,0x7ffdc994fb34,435997348,0,0x0,8
tick,0x7ffdc994fb34,436012777,0,0x0,8
tick,0x7ffdc994fb34,436027874,0,0x0,8
tick,0x7ffdc994fb34,436043021,0,0x0,8
tick,0x7ffdc994fb34,436058781,0,0x0,8
tick,0x7ffdc994fb34,436074013,0,0x0,8
tick,0x7ffdc994fb34,436089794,0,0x0,8
tick,0x7ffdc994fb34,436105696,0,0x0,8
tick,0x7ffdc994fb34,436120979,0,0x0,8
tick,0x7ffdc994fb34,436136277,0,0x0,8
tick,0x7ffdc994fb34,436151494,0,0x0,8
tick,0x7ffdc994fb34,436167675,0,0x0,8
tick,0x7ffdc994fb34,436183421,0,0x0,8
tick,0x7ffdc994fb34,436198954,0,0x0,8
tick,0x7ffdc994fb34,436214251,0,0x0,8
tick,0x7ffdc994fb34,436229796,0,0x0,8
tick,0x7ffdc994fb34,436245567,0,0x0,8
tick,0x7ffdc994fb34,436261421,0,0x0,8
tick,0x7ffdc994fb34,436276820,0,0x0,8
tick,0x7ffdc994fb34,436292323,0,0x0,8
tick,0x7ffdc994fb34,436307728,0,0x0,8
tick,0x7ffdc994fb34,436323436,0,0x0,8
tick,0x7ffdc994fb34,436339315,0,0x0,8
tick,0x7ffdc994fb34,436354814,0,0x0,8
tick,0x7ffdc994fb34,436370166,0,0x0,8
tick,0x7ffdc994fb34,436385344,0,0x0,8
tick,0x7ffdc994fb34,436401179,0,0x0,8
tick,0x7ffdc994fb34,436416179,0,0x0,8
tick,0x7ffdc994fb34,436431950,0,0x0,8
tick,0x7ffdc994fb34,436447770,0,0x0,8
tick,0x7ffdc994fb34,436463534,0,0x0,8
tick,0x7ffdc994fb34,436478695,0,0x0,8
tick,0x7ffdc994fb34,436494261,0,0x0,8
tick,0x7ffdc994fb34,436509895,0,0x0,8
tick,0x7ffdc994fb34,436525176,0,0x0,8
tick,0x7ffdc994fb34,436541457,0,0x0,8
tick,0x7ffdc994fb34,436556814,0,0x0,8
tick,0x7ffdc994fb34,436573098,0,0x0,8
tick,0x7ffdc994fb34,436588541,0,0x0,8
tick,0x7ffdc994fb34,436604216,0,0x0,8
tick,0x7ffdc994fb34,436619722,0,0x0,8
tick,0x7ffdc994fb34,436635485,0,0x0,8
tick,0x7ffdc994fb34,436650724,0,0x0,8
tick,0x7ffdc994fb34,436666084,0,0x0,8
tick,0x7ffdc994fb34,436680968,0,0x0,8
tick,0x7ffdc994fb34,436696726,0,0x0,8
tick,0x7ffdc994fb34,436712091,0,0x0,8
tick,0x7ffdc994fb34,436727631,0,0x0,8
tick,0x7ffdc994fb34,436743662,0,0x0,8
tick,0x7ffdc994fb34,436759589,0,0x0,8
tick,0x7ffdc994fb34,436775273,0,0x0,8
tick,0x7ffdc994fb34,436790979,0,0x0,8
tick,0x7ffdc994fb34,436806137,0,0x0,8
tick,0x7ffdc994fb34,436821554,0,0x0,8
tick,0x7ffdc994fb34,436837413,0,0x0,8
tick,0x7ffdc994fb34,436853390,0,0x0,8
tick,0x7ffdc994fb34,436868889,0,0x0,8
tick,0x7ffdc994fb34,436883840,0,0x0,8
tick,0x7ffdc994fb34,436900274,0,0x0,8
tick,0x7ffdc994fb34,436915455,0,0x0,8
tick,0x7ffdc994fb34,436931401,0,0x0,8
tick,0x7ffdc994fb34,436946934,0,0x0,8
tick,0x7ffdc994fb34,436962469,0,0x0,8
tick,0x7ffdc994fb34,436977709,0,0x0,8
tick,0x7ffdc994fb34,436993430,0,0x0,8
tick,0x7ffdc994fb34,437008879,0,0x0,8
tick,0x7ffdc994fb34,437024362,0,0x0,8
tick,0x7ffdc994fb34,437039684,0,0x0,8
tick,0x7ffdc994fb34,437054826,0,0x0,8
tick,0x7ffdc994fb34,437070421,0,0x0,8
tick,0x7ffdc994fb34,437085830,0,0x0,8
tick,0x7ffdc994fb34,437101904,0,0x0,8
tick,0x7ffdc994fb34,437117714,0,0x0,8
tick,0x7ffdc994fb34,437133070,0,0x0,8
tick,0x7ffdc994fb34,437148298,0,0x0,8
tick,0x7ffdc994fb34,437166480,0,0x0,8
tick,0x7ffdc994fb34,437179757,0,0x0,8
tick,0x7ffdc994fb34,437195652,0,0x0,8
tick,0x7ffdc994fb34,437211634,0,0x0,8
tick,0x7ffdc994fb34,437226402,0,0x0,8
tick,0x7ffdc994fb34,437242262,0,0x0,8
tick,0x7ffdc994fb34,437258304,0,0x0,8
tick,0x7ffdc994fb34,437273439,0,0x0,8
tick,0x7ffdc994fb34,437289308,0,0x0,8
tick,0x7ffdc994fb34,437304864,0,0x0,8
tick,0x7ffdc994fb34,437320477,0,0x0,8
tick,0x7ffdc994fb34,437335335,0,0x0,8
tick,0x7ffdc994fb34,437350388,0,0x0,8
tick,0x7ffdc994fb34,437365625,0,0x0,8
tick,0x7ffdc994fb34,437381787,0,0x0,8
tick,0x7ffdc994fb34,437396798,0,0x0,8
tick,0x7ffdc994fb34,437411679,0,0x0,8
tick,0x7ffdc994fb34,437427855,0,0x0,8
tick,0x7ffdc994fb34,437443334,0,0x0,8
tick,0x7ffdc994fb34,437459075,0,0x0,8
tick,0x7ffdc994fb34,437474949,0,0x0,8
tick,0x7ffdc994fb34,437490394,0,0x0,8
tick,0x7ffdc994fb34,437506066,0,0x0,8
tick,0x7ffdc994fb34,437521497,0,0x0,8
tick,0x7ffdc994fb34,437536528,0,0x0,8
tick,0x7ffdc994fb34,437551829,0,0x0,8
tick,0x7ffdc994fb34,437566968,0,0x0,8
tick,0x7ffdc994fb34,437582903,0,0x0,8
tick,0x7ffdc994fb34,437598690,0,0x0,8
tick,0x7ffdc994fb34,437614784,0,0x0,8
tick,0x7ffdc994fb34,437630030,0,0x0,8
tick,0x7ffdc994fb34,437645972,0,0x0,8
tick,0x7ffdc994fb34,437661275,0,0x0,8
tick,0x7ffdc994fb34,437676831,0,0x0,8
tick,0x7ffdc994fb34,437691929,0,0x0,8
tick,0x7ffdc994fb34,437707560,0,0x0,8
tick,0x7ffdc994fb34,437722807,0,0x0,8
tick,0x7ffdc994fb34,437738556,0,0x0,8
tick,0x7ffdc994fb34,437754667,0,0x0,8
tick,0x7ffdc994fb34,437769764,0,0x0,8
tick,0x7ffdc994fb34,437786028,0,0x0,8
tick,0x7ffdc994fb34,437801562,0,0x0,8
tick,0x7ffdc994fb34,437817153,0,0x0,8
tick,0x7ffdc994fb34,437832601,0,0x0,8
tick,0x7ffdc994fb34,437848293,0,0x0,8
tick,0x7ffdc994fb34,437864240,0,0x0,8
tick,0x7ffdc994fb34,437879790,0,0x0,8
tick,0x7ffdc994fb34,437895261,0,0x0,8
tick,0x7ffdc994fb34,437910627,0,0x0,8
tick,0x7ffdc994fb34,437926440,0,0x0,8
tick,0x7ffdc994fb34,437941822,0,0x0,8
tick,0x7ffdc994fb34,437957114,0,0x0,8
tick,0x7ffdc994fb34,437972450,0,0x0,8
tick,0x7ffdc994fb34,437987802,0,0x0,8
tick,0x7ffdc994fb34,438003761,0,0x0,8
tick,0x7ffdc994fb34,438019193,0,0x0,8
tick,0x7ffdc994fb34,438034672,0,0x0,8
tick,0x7ffdc994fb34,438050607,0,0x0,8
tick,0x7ffdc994fb34,438066238,0,0x0,8
tick,0x7ffdc994fb34,438082473,0,0x0,8
tick,0x7ffdc994fb34,438097650,0,0x0,8
tick,0x7ffdc994fb34,438113116,0,0x0,8
tick,0x7ffdc994fb34,438129048,0,0x0,8
tick,0x7ffdc994fb34,438144244,0,0x0,8
tick,0x7ffdc994fb34,438159480,0,0x0,8
tick,0x7ffdc994fb34,438175082,0,0x0,8
tick,0x7ffdc994fb34,438191623,0,0x0,8
tick,0x7ffdc994fb34,438206582,0,0x0,8
tick,0x7ffdc994fb34,438222789,0,0x0,8
tick,0x7ffdc994fb34,438238010,0,0x0,8
tick,0x7ffdc994fb34,438254259,0,0x0,8
tick,0x7ffdc994fb34,438269613,0,0x0,8
tick,0x7ffdc994fb34,438285331,0,0x0,8
tick,0x7ffdc994fb34,438300558,0,0x0,8
tick,0x7ffdc994fb34,438316021,0,0x0,8
tick,0x7ffdc994fb34,438331509,0,0x0,8
tick,0x7ffdc994fb34,438346980,0,0x0,8
tick,0x7ffdc994fb34,438362809,0,0x0,8
tick,0x7ffdc994fb34,438378660,0,0x0,8
tick,0x7ffdc994fb34,438393928,0,0x0,8
tick,0x7ffdc994fb34,438409583,0,0x0,8
tick,0x7ffdc994fb34,438425133,0,0x0,8
tick,0x7ffdc994fb34,438440947,0,0x0,8
tick,0x7ffdc994fb34,438456018,0,0x0,8
tick,0x7ffdc994fb34,438472279,0,0x0,8
tick,0x7ffdc994fb34,438487954,0,0x0,8
tick,0x7ffdc994fb34,438503406,0,0x0,8
tick,0x7ffdc994fb34,438518904,0,0x0,8
tick,0x7ffdc994fb34,438534635,0,0x0,8
tick,0x7ffdc994fb34,438550385,0,0x0,8
tick,0x7ffdc994fb34,438565454,0,0x0,8
tick,0x7ffdc994fb34,438581002,0,0x0,8
tick,0x7ffdc994fb34,438596616,0,0x0,8
tick,0x7ffdc994fb34,438611978,0,0x0,8
tick,0x7ffdc994fb34,438627771,0,0x0,8
tick,0x7ffdc994fb34,438642964,0,0x0,8
tick,0x7ffdc994fb34,438659066,0,0x0,8
tick,0x7ffdc994fb34,438674243,0,0x0,8
tick,0x7ffdc994fb34,438689566,0,0x0,8
tick,0x7ffdc994fb34,438705515,0,0x0,8
tick,0x7ffdc994fb34,438720755,0,0x0,8
tick,0x7ffdc994fb34,438736799,0,0x0,8
tick,0x7ffdc994fb34,438752201,0,0x0,8
tick,0x7ffdc994fb34,438767980,0,0x0,8
tick,0x7ffdc994fb34,438784012,0,0x0,8
tick,0x7ffdc994fb34,438799888,0,0x0,8
tick,0x7ffdc994fb34,438814955,0,0x0,8
tick,0x7ffdc994fb34,438830041,0,0x0,8
tick,0x7ffdc994fb34,438845616,0,0x0,8
tick,0x7ffdc994fb34,438860837,0,0x0,8
tick,0x7ffdc994fb34,438876176,0,0x0,8
tick,0x7ffdc994fb34,438891267,0,0x0,8
tick,0x7ffdc994fb34,438906808,0,0x0,8
tick,0x7ffdc994fb34,438922132,0,0x0,8
tick,0x7ffdc994fb34,438937655,0,0x0,8
tick,0x7ffdc994fb34,438952865,0,0x0,8
tick,0x7ffdc994fb34,438968451,0,0x0,8
tick,0x7ffdc994fb34,438983385,0,0x0,8
tick,0x7ffdc994fb34,438999420,0,0x0,8
tick,0x7ffdc994fb34,439014724,0,0x0,8
tick,0x7ffdc994fb34,439030327,0,0x0,8
tick,0x7ffdc994fb34,439045967,0,0x0,8
tick,0x7ffdc994fb34,439061653,0,0x0,8
tick,0x7ffdc994fb34,439077643,0,0x0,8
tick,0x7ffdc994fb34,439093416,0,0x0,8
tick,0x7ffdc994fb34,439108413,0,0x0,8
tick,0x7ffdc994fb34,439123897,0,0x0,8
tick,0x7ffdc994fb34,439139714,0,0x0,8
tick,0x7ffdc994fb34,439155026,0,0x0,8
tick,0x7ffdc994fb34,439170570,0,0x0,8
tick,0x7ffdc994fb34,439186120,0,0x0,8
tick,0x7ffdc994fb34,439201303,0,0x0,8
tick,0x7ffdc994fb34,439217405,0,0x0,8
tick,0x7ffdc994fb34,439233085,0,0x0,8
tick,0x7ffdc994fb34,439248736,0,0x0,8
tick,0x7ffdc994fb34,439264241,0,0x0,8
tick,0x7ffdc994fb34,439279748,0,0x0,8
tick,0x7ffdc994fb34,439295550,0,0x0,8
tick,0x7ffdc994fb34,439310801,0,0x0,8
tick,0x7ffdc994fb34,439326635,0,0x0,8
tick,0x7ffdc994fb34,439341604,0,0x0,8
tick,0x7ffdc994fb34,439356938,0,0x0,8
tick,0x7ffdc994fb34,439372636,0,0x0,8
tick,0x7ffdc994fb34,439388924,0,0x0,8
tick,0x7ffdc994fb34,439403747,0,0x0,8
tick,0x7ffdc994fb34,439420084,0,0x0,8
tick,0x7ffdc994fb34,439435226,0,0x0,8
tick,0x7ffdc994fb34,439450453,0,0x0,8
tick,0x7ffdc994fb34,439466033,0,0x0,8
tick,0x7ffdc994fb34,439481823,0,0x0,8
tick,0x7ffdc994fb34,439497243,0,0x0,8
tick,0x7ffdc994fb34,439513165,0,0x0,8
tick,0x7ffdc994fb34,439528443,0,0x0,8
tick,0x7ffdc994fb34,439544277,0,0x0,8
tick,0x7ffdc994fb34,439560458,0,0x0,8
tick,0x7ffdc994fb34,439576064,0,0x0,8
tick,0x7ffdc994fb34,439591788,0,0x0,8
tick,0x7ffdc994fb34,439607117,0,0x0,8
tick,0x7ffdc994fb34,439622807,0,0x0,8
tick,0x7ffdc994fb34,439638810,0,0x0,8
tick,0x7ffdc994fb34,439654231,0,0x0,8
tick,0x7ffdc994fb34,439670552,0,0x0,8
tick,0x7ffdc994fb34,439686011,0,0x0,8
tick,0x7ffdc994fb34,439701436,0,0x0,8
tick,0x7ffdc994fb34,439716675,0,0x0,8
tick,0x7ffdc994fb34,439732321,0,0x0,8
tick,0x7ffdc994fb34,439747953,0,0x0,8
tick,0x7ffdc994fb34,439763867,0,0x0,8
tick,0x7ffdc994fb34,439779201,0,0x0,8
tick,0x7ffdc994fb34,439795059,0,0x0,8
tick,0x7ffdc994fb34,439810695,0,0x0,8
tick,0x7ffdc994fb34,439825958,0,0x0,8
tick,0x7ffdc994fb34,439841880,0,0x0,8
tick,0x7ffdc994fb34,439857314,0,0x0,8
tick,0x7ffdc994fb34,439872748,0,0x0,8
tick,0x7ffdc994fb34,439888010,0,0x0,8
tick,0x7ffdc994fb34,439904048,0,0x0,8
tick,0x7ffdc994fb34,439919071,0,0x0,8
tick,0x7ffdc994fb34,439934722,0,0x0,8
tick,0x7ffdc994fb34,439950748,0,0x0,8
tick,0x7ffdc994fb34,439966946,0,0x0,8
tick,0x7ffdc994fb34,439981829,0,0x0,8
tick,0x7ffdc994fb34,439997393,0,0x0,8
tick,0x7ffdc994fb34,440013557,0,0x0,8
tick,0x7ffdc994fb34,440029191,0,0x0,8
tick,0x7ffdc994fb34,440044658,0,0x0,8
tick,0x7ffdc994fb34,440060418,0,0x0,8
tick,0x7ffdc994fb34,440076367,0,0x0,8
tick,0x7ffdc994fb34,440091733,0,0x0,8
tick,0x7ffdc994fb34,440107417,0,0x0,8
tick,0x7ffdc994fb34,440122895,0,0x0,8
tick,0x7ffdc994fb34,440138592,0,0x0,8
tick,0x7ffdc994fb34,440154146,0,0x0,8
tick,0x7ffdc994fb34,440169828,0,0x0,8
tick,0x7ffdc994fb34,440185115,0,0x0,8
tick,0x7ffdc994fb34,440201099,0,0x0,8
tick,0x7ffdc994fb34,440216448,0,0x0,8
tick,0x7ffdc994fb34,440232227,0,0x0,8
tick,0x7ffdc994fb34,440247884,0,0x0,8
tick,0x7ffdc994fb34,440263141,0,0x0,8
tick,0x7ffdc994fb34,440278579,0,0x0,8
tick,0x7ffdc994fb34,440293655,0,0x0,8
tick,0x7ffdc994fb34,440309487,0,0x0,8
tick,0x7ffdc994fb34,440325052,0,0x0,8
tick,0x7ffdc994fb34,440340936,0,0x0,8
tick,0x7ffdc994fb34,440356090,0,0x0,8
tick,0x7ffdc994fb34,440372006,0,0x0,8
tick,0x7ffdc994fb34,440387727,0,0x0,8
tick,0x7ffdc994fb34,440402511,0,0x0,8
tick,0x7ffdc994fb34,440418131,0,0x0,8
tick,0x7ffdc994fb34,440433814,0,0x0,8
tick,0x7ffdc994fb34,440449418,0,0x0,8
tick,0x7ffdc994fb34,440464856,0,0x0,8
tick,0x7ffdc994fb34,440480748,0,0x0,8
tick,0x7ffdc994fb34,440496944,0,0x0,8
tick,0x7ffdc994fb34,440512408,0,0x0,8
tick,0x7ffdc994fb34,440528184,0,0x0,8
tick,0x7ffdc994fb34,440543325,0,0x0,8
tick,0x7ffdc994fb34,440559041,0,0x0,8
tick,0x7ffdc994fb34,440574423,0,0x0,8
tick,0x7ffdc994fb34,440590205,0,0x0,8
tick,0x7ffdc994fb34,440605988,0,0x0,8
tick,0x7ffdc994fb34,440622013,0,0x0,8
tick,0x7ffdc994fb34,440636908,0,0x0,8
tick,0x7ffdc994fb34,440653093,0,0x0,8
tick,0x7ffdc994fb34,440668586,0,0x0,8
tick,0x7ffdc994fb34,440684257,0,0x0,8
tick,0x7ffdc994fb34,440699966,0,0x0,8
tick,0x7ffdc994fb34,440715717,0,0x0,8
tick,0x7ffdc994fb34,440731058,0,0x0,8
tick,0x7ffdc994fb34,440746477,0,0x0,8
tick,0x7ffdc994fb34,440761652,0,0x0,8
tick,0x7ffdc994fb34,440777323,0,0x0,8
tick,0x7ffdc994fb34,440792969,0,0x0,8
tick,0x7ffdc994fb34,440808379,0,0x0,8
tick,0x7ffdc994fb34,440823729,0,0x0,8
tick,0x7ffdc994fb34,440839543,0,0x0,8
tick,0x7ffdc994fb34,440854688,0,0x0,8
tick,0x7ffdc994fb34,440870852,0,0x0,8
tick,0x7ffdc994fb34,440887076,0,0x0,8
tick,0x7ffdc994fb34,440903111,0,0x0,8
tick,0x7ffdc994fb34,440917478,0,0x0,8
tick,0x7ffdc994fb34,440933096,0,0x0,8
tick,0x7ffdc994fb34,440948381,0,0x0,8
tick,0x7ffdc994fb34,440964348,0,0x0,8
tick,0x7ffdc994fb34,440979963,0,0x0,8
tick,0x7ffdc994fb34,440995175,0,0x0,8
tick,0x7ffdc994fb34,441011074,0,0x0,8
tick,0x7ffdc994fb34,441026836,0,0x0,8
tick,0x7ffdc994fb34,441043197,0,0x0,8
tick,0x7ffdc994fb34,441058950,0,0x0,8
tick,0x7ffdc994fb34,441074385,0,0x0,8
tick,0x7ffdc994fb34,441090225,0,0x0,8
tick,0x7ffdc994fb34,441106330,0,0x0,8
tick,0x7ffdc994fb34,441121480,0,0x0,8
tick,0x7ffdc994fb34,441136900,0,0x0,8
tick,0x7ffdc994fb34,441152988,0,0x0,8
tick,0x7ffdc994fb34,441168371,0,0x0,8
tick,0x7ffdc994fb34,441183579,0,0x0,8
tick,0x7ffdc994fb34,441199315,0,0x0,8
tick,0x7ffdc994fb34,441214178,0,0x0,8
tick,0x7ffdc994fb34,441229731,0,0x0,8
tick,0x7ffdc994fb34,441245136,0,0x0,8
tick,0x7ffdc994fb34,441260581,0,0x0,8
tick,0x7ffdc994fb34,441275988,0,0x0,8
tick,0x7ffdc994fb34,441292202,0,0x0,8
tick,0x7ffdc994fb34,441307584,0,0x0,8
tick,0x7ffdc994fb34,441323430,0,0x0,8
tick,0x7ffdc994fb34,441339266,0,0x0,8
tick,0x7ffdc994fb34,441354948,0,0x0,8
tick,0x7ffdc994fb34,441370768,0,0x0,8
tick,0x7ffdc994fb34,441386832,0,0x0,8
tick,0x7ffdc994fb34,441402229,0,0x0,8
tick,0x7ffdc994fb34,441417662,0,0x0,8
tick,0x7ffdc994fb34,441433175,0,0x0,8
tick,0x7ffdc994fb34,441449068,0,0x0,8
tick,0x7ffdc994fb34,441464443,0,0x0,8
tick,0x7ffdc994fb34,441480028,0,0x0,8
tick,0x7ffdc994fb34,441495833,0,0x0,8
tick,0x7ffdc994fb34,441511049,0,0x0,8
tick,0x7ffdc994fb34,441526761,0,0x0,8
tick,0x7ffdc994fb34,441542422,0,0x0,8
tick,0x7ffdc994fb34,441557952,0,0x0,8
tick,0x7ffdc994fb34,441573180,0,0x0,8
tick,0x7ffdc994fb34,441588459,0,0x0,8
tick,0x7ffdc994fb34,441604410,0,0x0,8
tick,0x7ffdc994fb34,441620106,0,0x0,8
tick,0x7ffdc994fb34,441636007,0,0x0,8
tick,0x7ffdc994fb34,441651431,0,0x0,8
tick,0x7ffdc994fb34,441666713,0,0x0,8
tick,0x7ffdc994fb34,441682020,0,0x0,8
tick,0x7ffdc994fb34,441697486,0,0x0,8
tick,0x7ffdc994fb34,441713642,0,0x0,8
tick,0x7ffdc994fb34,441729303,0,0x0,8
tick,0x7ffdc994fb34,441744313,0,0x0,8
tick,0x7ffdc994fb34,441760093,0,0x0,8
tick,0x7ffdc994fb34,441775654,0,0x0,8
tick,0x7ffdc994fb34,441791924,0,0x0,8
tick,0x7ffdc994fb34,441807537,0,0x0,8
tick,0x7ffdc994fb34,441823679,0,0x0,8
tick,0x7ffdc994fb34,441839313,0,0x0,8
tick,0x7ffdc994fb34,441854948,0,0x0,8
tick,0x7ffdc994fb34,441870792,0,0x0,8
tick,0x7ffdc994fb34,441886841,0,0x0,8
tick,0x7ffdc994fb34,441902166,0,0x0,8
tick,0x7ffdc994fb34,441918036,0,0x0,8
tick,0x7ffdc994fb34,441933824,0,0x0,8
tick,0x7ffdc994fb34,441949895,0,0x0,8
tick,0x7ffdc994fb34,441965368,0,0x0,8
tick,0x7ffdc994fb34,441980773,0,0x0,8
tick,0x7ffdc994fb34,441996448,0,0x0,8
tick,0x7ffdc994fb34,442012491,0,0x0,8
tick,0x7ffdc994fb34,442027945,0,0x0,8
tick,0x7ffdc994fb34,442043320,0,0x0,8
tick,0x7ffdc994fb34,442059161,0,0x0,8
tick,0x7ffdc994fb34,442074766,0,0x0,8
tick,0x7ffdc994fb34,442089857,0,0x0,8
tick,0x7ffdc994fb34,442105807,0,0x0,8
tick,0x7ffdc994fb34,442120925,0,0x0,8
tick,0x7ffdc994fb34,442136368,0,0x0,8
tick,0x7ffdc994fb34,442151096,0,0x0,8
tick,0x7ffdc994fb34,442167072,0,0x0,8
tick,0x7ffdc994fb34,442182642,0,0x0,8
tick,0x7ffdc994fb34,442198392,0,0x0,8
tick,0x7ffdc994fb34,442214711,0,0x0,8
tick,0x7ffdc994fb34,442230506,0,0x0,8
tick,0x7ffdc994fb34,442245519,0,0x0,8
tick,0x7ffdc994fb34,442261334,0,0x0,8
tick,0x7ffdc994fb34,442276981,0,0x0,8
tick,0x7ffdc994fb34,442292339,0,0x0,8
tick,0x7ffdc994fb34,442308136,0,0x0,8
tick,0x7ffdc994fb34,442323262,0,0x0,8
tick,0x7ffdc994fb34,442338826,0,0x0,8
tick,0x7ffdc994fb34,442354251,0,0x0,8
tick,0x7ffdc994fb34,442369725,0,0x0,8
tick,0x7ffdc994fb34,442385357,0,0x0,8
tick,0x7ffdc994fb34,442400443,0,0x0,8
tick,0x7ffdc994fb34,442416523,0,0x0,8
tick,0x7ffdc994fb34,442431858,0,0x0,8
tick,0x7ffdc994fb34,442447587,0,0x0,8
tick,0x7ffdc994fb34,442462701,0,0x0,8
tick,0x7ffdc994fb34,442478597,0,0x0,8
tick,0x7ffdc994fb34,442493963,0,0x0,8
tick,0x7ffdc994fb34,442509940,0,0x0,8
tick,0x7ffdc994fb34,442525078,0,0x0,8
tick,0x7ffdc994fb34,442540776,0,0x0,8
tick,0x7ffdc994fb34,442556457,0,0x0,8
tick,0x7ffdc994fb34,442572683,0,0x0,8
tick,0x7ffdc994fb34,442587796,0,0x0,8
tick,0x7ffdc994fb34,442603067,0,0x0,8
tick,0x7ffdc994fb34,442618535,0,0x0,8
tick,0x7ffdc994fb34,442633503,0,0x0,8
tick,0x7ffdc994fb34,442649179,0,0x0,8
tick,0x7ffdc994fb34,442664543,0,0x0,8
tick,0x7ffdc994fb34,442680421,0,0x0,8
tick,0x7ffdc994fb34,442695281,0,0x0,8
tick,0x7ffdc994fb34,442710197,0,0x0,8
tick,0x7ffdc994fb34,442725633,0,0x0,8
tick,0x7ffdc994fb34,442741066,0,0x0,8
tick,0x7ffdc994fb34,442756603,0,0x0,8
tick,0x7ffdc994fb34,442771967,0,0x0,8
tick,0x7ffdc994fb34,442787471,0,0x0,8
tick,0x7ffdc994fb34,442802889,0,0x0,8
tick,0x7ffdc994fb34,442818123,0,0x0,8
tick,0x7ffdc994fb34,442833892,0,0x0,8
tick,0x7ffdc994fb34,442849029,0,0x0,8
tick,0x7ffdc994fb34,442864156,0,0x0,8
tick,0x7ffdc994fb34,442879441,0,0x0,8
tick,0x7ffdc994fb34,442894569,0,0x0,8
tick,0x7ffdc994fb34,442910637,0,0x0,8
tick,0x7ffdc994fb34,442926590,0,0x0,8
tick,0x7ffdc994fb34,442942903,0,0x0,8
tick,0x7ffdc994fb34,442958081,0,0x0,8
tick,0x7ffdc994fb34,442973384,0,0x0,8
tick,0x7ffdc994fb34,442988828,0,0x0,8
tick,0x7ffdc994fb34,443004123,0,0x0,8
tick,0x7ffdc994fb34,443019605,0,0x0,8
tick,0x7ffdc994fb34,443035258,0,0x0,8
tick,0x7ffdc994fb34,443050663,0,0x0,8
tick,0x7ffdc994fb34,443066405,0,0x0,8
tick,0x7ffdc994fb34,443082097,0,0x0,8
tick,0x7ffdc994fb34,443098145,0,0x0,8
tick,0x7ffdc994fb34,443114268,0,0x0,8
tick,0x7ffdc994fb34,443129645,0,0x0,8
tick,0x7ffdc994fb34,443145443,0,0x0,8
tick,0x7ffdc994fb34,443161308,0,0x0,8
tick,0x7ffdc994fb34,443176790,0,0x0,8
tick,0x7ffdc994fb34,443192431,0,0x0,8
tick,0x7ffdc994fb34,443208242,0,0x0,8
tick,0x7ffdc994fb34,443223890,0,0x0,8
tick,0x7ffdc994fb34,443239781,0,0x0,8
tick,0x7ffdc994fb34,443255030,0,0x0,8
tick,0x7ffdc994fb34,443270894,0,0x0,8
tick,0x7ffdc994fb34,443286836,0,0x0,8
tick,0x7ffdc994fb34,443302058,0,0x0,8
tick,0x7ffdc994fb34,443317124,0,0x0,8
tick,0x7ffdc994fb34,443332350,0,0x0,8
tick,0x7ffdc994fb34,443348493,0,0x0,8
tick,0x7ffdc994fb34,443364028,0,0x0,8
tick,0x7ffdc994fb34,443379007,0,0x0,8
tick,0x7ffdc994fb34,443394097,0,0x0,8
tick,0x7ffdc994fb34,443409636,0,0x0,8
tick,0x7ffdc994fb34,443426061,0,0x0,8
tick,0x7ffdc994fb34,443441032,0,0x0,8
tick,0x7ffdc994fb34,443456971,0,0x0,8
tick,0x7ffdc994fb34,443473178,0,0x0,8
tick,0x7ffdc994fb34,443488667,0,0x0,8
tick,0x7ffdc994fb34,443504387,0,0x0,8
tick,0x7ffdc994fb34,443519756,0,0x0,8
tick,0x7ffdc994fb34,443535384,0,0x0,8
tick,0x7ffdc994fb34,443551462,0,0x0,8
tick,0x7ffdc994fb34,443567596,0,0x0,8
tick,0x7ffdc994fb34,443582500,0,0x0,8
tick,0x7ffdc994fb34,443597995,0,0x0,8
tick,0x7ffdc994fb34,443614147,0,0x0,8
tick,0x7ffdc994fb34,443629799,0,0x0,8
tick,0x7ffdc994fb34,443645121,0,0x0,8
tick,0x7ffdc994fb34,443661055,0,0x0,8
tick,0x7ffdc994fb34,443676518,0,0x0,8
tick,0x7ffdc994fb34,443692027,0,0x0,8
tick,0x7ffdc994fb34,443707958,0,0x0,8
tick,0x7ffdc994fb34,443723778,0,0x0,8
tick,0x7ffdc994fb34,443739580,0,0x0,8
tick,0x7ffdc994fb34,443755332,0,0x0,8
tick,0x7ffdc994fb34,443770431,0,0x0,8
tick,0x7ffdc994fb34,443785694,0,0x0,8
tick,0x7ffdc994fb34,443802136,0,0x0,8
tick,0x7ffdc994fb34,443817422,0,0x0,8
tick,0x7ffdc994fb34,443832289,0,0x0,8
tick,0x7ffdc994fb34,443847637,0,0x0,8
tick,0x7ffdc994fb34,443863151,0,0x0,8
tick,0x7ffdc994fb34,443878983,0,0x0,8
tick,0x7ffdc994fb34,443894387,0,0x0,8
tick,0x7ffdc994fb34,443909359,0,0x0,8
tick,0x7ffdc994fb34,443925185,0,0x0,8
tick,0x7ffdc994fb34,443940277,0,0x0,8
tick,0x7ffdc994fb34,443956499,0,0x0,8
tick,0x7ffdc994fb34,443972610,0,0x0,8
tick,0x7ffdc994fb34,443987929,0,0x0,8
tick,0x7ffdc994fb34,444003958,0,0x0,8
tick,0x7ffdc994fb34,444019265,0,0x0,8
tick,0x7ffdc994fb34,444034583,0,0x0,8
tick,0x7ffdc994fb34,444049704,0,0x0,8
tick,0x7ffdc994fb34,444064886,0,0x0,8
tick,0x7ffdc994fb34,444080986,0,0x0,8
tick,0x7ffdc994fb34,444096747,0,0x0,8
tick,0x7ffdc994fb34,444112715,0,0x0,8
tick,0x7ffdc994fb34,444128096,0,0x0,8
tick,0x7ffdc994fb34,444143407,0,0x0,8
tick,0x7ffdc994fb34,444159172,0,0x0,8
tick,0x7ffdc994fb34,444174672,0,0x0,8
tick,0x7ffdc994fb34,444190669,0,0x0,8
tick,0x7ffdc994fb34,444205962,0,0x0,8
tick,0x7ffdc994fb34,444220966,0,0x0,8
tick,0x7ffdc994fb34,444236476,0,0x0,8
tick,0x7ffdc994fb34,444252258,0,0x0,8
tick,0x7ffdc994fb34,444267575,0,0x0,8
tick,0x7ffdc994fb34,444283601,0,0x0,8
tick,0x7ffdc994fb34,444299616,0,0x0,8
tick,0x7ffdc994fb34,444314986,0,0x0,8
tick,0x7ffdc994fb34,444329667,0,0x0,8
tick,0x7ffdc994fb34,444344945,0,0x0,8
tick,0x7ffdc994fb34,444360674,0,0x0,8
tick,0x7ffdc994fb34,444375486,0,0x0,8
tick,0x7ffdc994fb34,444391180,0,0x0,8
tick,0x7ffdc994fb34,444406425,0,0x0,8
tick,0x7ffdc994fb34,444422064,0,0x0,8
tick,0x7ffdc994fb34,444437353,0,0x0,8
tick,0x7ffdc994fb34,444453072,0,0x0,8
tick,0x7ffdc994fb34,444469418,0,0x0,8
tick,0x7ffdc994fb34,444484381,0,0x0,8
tick,0x7ffdc994fb34,444500290,0,0x0,8
tick,0x7ffdc994fb34,444516278,0,0x0,8
tick,0x7ffdc994fb34,444532246,0,0x0,8
tick,0x7ffdc994fb34,444547247,0,0x0,8
tick,0x7ffdc994fb34,444563139,0,0x0,8
tick,0x7ffdc994fb34,444578227,0,0x0,8
tick,0x7ffdc994fb34,444594368,0,0x0,8
tick,0x7ffdc994fb34,444610445,0,0x0,8
tick,0x7ffdc994fb34,444626003,0,0x0,8
tick,0x7ffdc994fb34,444641386,0,0x0,8
tick,0x7ffdc994fb34,444656906,0,0x0,8
tick,0x7ffdc994fb34,444672975,0,0x0,8
tick,0x7ffdc994fb34,444688398,0,0x0,8
tick,0x7ffdc994fb34,444704598,0,0x0,8
tick,0x7ffdc994fb34,444720040,0,0x0,8
tick,0x7ffdc994fb34,444735009,0,0x0,8
tick,0x7ffdc994fb34,444750692,0,0x0,8
tick,0x7ffdc994fb34,444766457,0,0x0,8
tick,0x7ffdc994fb34,444781576,0,0x0,8
tick,0x7ffdc994fb34,444796976,0,0x0,8
tick,0x7ffdc994fb34,444812297,0,0x0,8
tick,0x7ffdc994fb34,444828012,0,0x0,8
tick,0x7ffdc994fb34,444843418,0,0x0,8
tick,0x7ffdc994fb34,444858629,0,0x0,8
tick,0x7ffdc994fb34,444874517,0,0x0,8
tick,0x7ffdc994fb34,444890380,0,0x0,8
tick,0x7ffdc994fb34,444905779,0,0x0,8
tick,0x7ffdc994fb34,444920617,0,0x0,8
tick,0x7ffdc994fb34,444936114,0,0x0,8
tick,0x7ffdc994fb34,444951834,0,0x0,8
tick,0x7ffdc994fb34,444967396,0,0x0,8
tick,0x7ffdc994fb34,444982705,0,0x0,8
tick,0x7ffdc994fb34,444998572,0,0x0,8
tick,0x7ffdc994fb34,445014118,0,0x0,8
tick,0x7ffdc994fb34,445029569,0,0x0,8
tick,0x7ffdc994fb34,445045490,0,0x0,8
tick,0x7ffdc994fb34,445061215,0,0x0,8
tick,0x7ffdc994fb34,445076765,0,0x0,8
tick,0x7ffdc994fb34,445093011,0,0x0,8
tick,0x7ffdc994fb34,445108298,0,0x0,8
tick,0x7ffdc994fb34,445123401,0,0x0,8
tick,0x7ffdc994fb34,445139210,0,0x0,8
tick,0x7ffdc994fb34,445154502,0,0x0,8
tick,0x7ffdc994fb34,445170693,0,0x0,8
tick,0x7ffdc994fb34,445186596,0,0x0,8
tick,0x7ffdc994fb34,445202233,0,0x0,8
tick,0x7ffdc994fb34,445217850,0,0x0,8
tick,0x7ffdc994fb34,445233126,0,0x0,8
tick,0x7ffdc994fb34,445248927,0,0x0,8
tick,0x7ffdc994fb34,445264819,0,0x0,8
tick,0x7ffdc994fb34,445280028,0,0x0,8
tick,0x7ffdc994fb34,445296201,0,0x0,8
tick,0x7ffdc994fb34,445312537,0,0x0,8
tick,0x7ffdc994fb34,445328009,0,0x0,8
tick,0x7ffdc994fb34,445344303,0,0x0,8
tick,0x7ffdc994fb34,445359577,0,0x0,8
tick,0x7ffdc994fb34,445375476,0,0x0,8
tick,0x7ffdc994fb34,445391609,0,0x0,8
tick,0x7ffdc994fb34,445406607,0,0x0,8
tick,0x7ffdc994fb34,445422208,0,0x0,8
tick,0x7ffdc994fb34,445438042,0,0x0,8
tick,0x7ffdc994fb34,445454199,0,0x0,8
tick,0x7ffdc994fb34,445469967,0,0x0,8
tick,0x7ffdc994fb34,445485581,0,0x0,8
tick,0x7ffdc994fb34,445501544,0,0x0,8
tick,0x7ffdc994fb34,445517553,0,0x0,8
tick,0x7ffdc994fb34,445532918,0,0x0,8
tick,0x7ffdc994fb34,445549023,0,0x0,8
tick,0x7ffdc994fb34,445565137,0,0x0,8
tick,0x7ffdc994fb34,445580843,0,0x0,8
tick,0x7ffdc994fb34,445597104,0,0x0,8
tick,0x7ffdc994fb34,445613027,0,0x0,8
tick,0x7ffdc994fb34,445628751,0,0x0,8
tick,0x7ffdc994fb34,445644874,0,0x0,8
tick,0x7ffdc994fb34,445660224,0,0x0,8
tick,0x7ffdc994fb34,445675564,0,0x0,8
tick,0x7ffdc994fb34,445691467,0,0x0,8
tick,0x7ffdc994fb34,445707105,0,0x0,8
tick,0x7ffdc994fb34,445722942,0,0x0,8
tick,0x7ffdc994fb34,445738677,0,0x0,8
tick,0x7ffdc994fb34,445754499,0,0x0,8
tick,0x7ffdc994fb34,445770537,0,0x0,8
tick,0x7ffdc994fb34,445786579,0,0x0,8
tick,0x7ffdc994fb34,445802603,0,0x0,8
tick,0x7ffdc994fb34,445818387,0,0x0,8
tick,0x7ffdc994fb34,445834392,0,0x0,8
tick,0x7ffdc994fb34,445850668,0,0x0,8
tick,0x7ffdc994fb34,445866366,0,0x0,8
tick,0x7ffdc994fb34,445882092,0,0x0,8
tick,0x7ffdc994fb34,445898151,0,0x0,8
tick,0x7ffdc994fb34,445913922,0,0x0,8
tick,0x7ffdc994fb34,445929326,0,0x0,8
tick,0x7ffdc994fb34,445944555,0,0x0,8
tick,0x7ffdc994fb34,445959871,0,0x0,8
tick,0x7ffdc994fb34,445975911,0,0x0,8
tick,0x7ffdc994fb34,445991695,0,0x0,8
tick,0x7ffdc994fb34,446007948,0,0x0,8
tick,0x7ffdc994fb34,446023647,0,0x0,8
tick,0x7ffdc994fb34,446039912,0,0x0,8
tick,0x7ffdc994fb34,446055949,0,0x0,8
tick,0x7ffdc994fb34,446071606,0,0x0,8
tick,0x7ffdc994fb34,446087540,0,0x0,8
tick,0x7ffdc994fb34,446103595,0,0x0,8
tick,0x7ffdc994fb34,446118852,0,0x0,8
tick,0x7ffdc994fb34,446134206,0,0x0,8
tick,0x7ffdc994fb34,446150567,0,0x0,8
tick,0x7ffdc994fb34,446166203,0,0x0,8
tick,0x7ffdc994fb34,446181541,0,0x0,8
tick,0x7ffdc994fb34,446196742,0,0x0,8
tick,0x7ffdc994fb34,446212534,0,0x0,8
tick,0x7ffdc994fb34,446227320,0,0x0,8
tick,0x7ffdc994fb34,446243298,0,0x0,8
tick,0x7ffdc994fb34,446258912,0,0x0,8
tick,0x7ffdc994fb34,446274697,0,0x0,8
tick,0x7ffdc994fb34,446291020,0,0x0,8
tick,0x7ffdc994fb34,446306894,0,0x0,8
tick,0x7ffdc994fb34,446322876,0,0x0,8
tick,0x7ffdc994fb34,446338575,0,0x0,8
tick,0x7ffdc994fb34,446354689,0,0x0,8
tick,0x7ffdc994fb34,446370742,0,0x0,8
tick,0x7ffdc994fb34,446387250,0,0x0,8
tick,0x7ffdc994fb34,446402900,0,0x0,8
tick,0x7ffdc994fb34,446418715,0,0x0,8
tick,0x7ffdc994fb34,446434469,0,0x0,8
tick,0x7ffdc994fb34,446450478,0,0x0,8
tick,0x7ffdc994fb34,446465672,0,0x0,8
tick,0x7ffdc994fb34,446481064,0,0x0,8
tick,0x7ffdc994fb34,446496730,0,0x0,8
tick,0x7ffdc994fb34,446512517,0,0x0,8
tick,0x7ffdc994fb34,446528489,0,0x0,8
tick,0x7ffdc994fb34,446544149,0,0x0,8
tick,0x7ffdc994fb34,446559130,0,0x0,8
tick,0x7ffdc994fb34,446575142,0,0x0,8
tick,0x7ffdc994fb34,446591199,0,0x0,8
tick,0x7ffdc994fb34,446607067,0,0x0,8
tick,0x7ffdc994fb34,446621977,0,0x0,8
tick,0x7ffdc994fb34,446638101,0,0x0,8
tick,0x7ffdc994fb34,446654237,0,0x0,8
tick,0x7ffdc994fb34,446670263,0,0x0,8
tick,0x7ffdc994fb34,446685980,0,0x0,8
tick,0x7ffdc994fb34,446701862,0,0x0,8
tick,0x7ffdc994fb34,446718024,0,0x0,8
tick,0x7ffdc994fb34,446733774,0,0x0,8
tick,0x7ffdc994fb34,446749249,0,0x0,8
tick,0x7ffdc994fb34,446765320,0,0x0,8
tick,0x7ffdc994fb34,446781140,0,0x0,8
tick,0x7ffdc994fb34,446797283,0,0x0,8
tick,0x7ffdc994fb34,446812950,0,0x0,8
tick,0x7ffdc994fb34,446828091,0,0x0,8
tick,0x7ffdc994fb34,446843443,0,0x0,8
tick,0x7ffdc994fb34,446859583,0,0x0,8
tick,0x7ffdc994fb34,446874915,0,0x0,8
tick,0x7ffdc994fb34,446890620,0,0x0,8
tick,0x7ffdc994fb34,446906630,0,0x0,8
tick,0x7ffdc994fb34,446922862,0,0x0,8
tick,0x7ffdc994fb34,446938297,0,0x0,8
tick,0x7ffdc994fb34,446954135,0,0x0,8
tick,0x7ffdc994fb34,446969833,0,0x0,8
tick,0x7ffdc994fb34,446985218,0,0x0,8
tick,0x7ffdc994fb34,447001186,0,0x0,8
tick,0x7ffdc994fb34,447016295,0,0x0,8
tick,0x7ffdc994fb34,447031634,0,0x0,8
tick,0x7ffdc994fb34,447047678,0,0x0,8
tick,0x7ffdc994fb34,447063538,0,0x0,8
tick,0x7ffdc994fb34,447079602,0,0x0,8
tick,0x7ffdc994fb34,447095651,0,0x0,8
tick,0x7ffdc994fb34,447111590,0,0x0,8
tick,0x7ffdc994fb34,447127608,0,0x0,8
tick,0x7ffdc994fb34,447143553,0,0x0,8
tick,0x7ffdc994fb34,447158974,0,0x0,8
tick,0x7ffdc994fb34,447175013,0,0x0,8
tick,0x7ffdc994fb34,447190818,0,0x0,8
tick,0x7ffdc994fb34,447206847,0,0x0,8
tick,0x7ffdc994fb34,447222909,0,0x0,8
tick,0x7ffdc994fb34,447237668,0,0x0,8
tick,0x7ffdc994fb34,447253808,0,0x0,8
tick,0x7ffdc994fb34,447269830,0,0x0,8
tick,0x7ffdc994fb34,447285712,0,0x0,8
tick,0x7ffdc994fb34,447301778,0,0x0,8
tick,0x7ffdc994fb34,447317431,0,0x0,8
tick,0x7ffdc994fb34,447333334,0,0x0,8
tick,0x7ffdc994fb34,447348892,0,0x0,8
tick,0x7ffdc994fb34,447364725,0,0x0,8
tick,0x7ffdc994fb34,447380642,0,0x0,8
tick,0x7ffdc994fb34,447396740,0,0x0,8
tick,0x7ffdc994fb34,447411976,0,0x0,8
tick,0x7ffdc994fb34,447427061,0,0x0,8
tick,0x7ffdc994fb34,447443043,0,0x0,8
tick,0x7ffdc994fb34,447459055,0,0x0,8
tick,0x7ffdc994fb34,447474990,0,0x0,8
tick,0x7ffdc994fb34,447490845,0,0x0,8
tick,0x7ffdc994fb34,447506598,0,0x0,8
tick,0x7ffdc994fb34,447522823,0,0x0,8
tick,0x7ffdc994fb34,447538493,0,0x0,8
tick,0x7ffdc994fb34,447554450,0,0x0,8
tick,0x7ffdc994fb34,447570722,0,0x0,8
tick,0x7ffdc994fb34,447586485,0,0x0,8
tick,0x7ffdc994fb34,447602546,0,0x0,8
tick,0x7ffdc994fb34,447618460,0,0x0,8
tick,0x7ffdc994fb34,447634478,0,0x0,8
tick,0x7ffdc994fb34,447650675,0,0x0,8
tick,0x7ffdc994fb34,447665735,0,0x0,8
tick,0x7ffdc994fb34,447681581,0,0x0,8
tick,0x7ffdc994fb34,447696316,0,0x0,8
tick,0x7ffdc994fb34,447711309,0,0x0,8
tick,0x7ffdc994fb34,447726668,0,0x0,8
tick,0x7ffdc994fb34,447742844,0,0x0,8
tick,0x7ffdc994fb34,447758601,0,0x0,8
tick,0x7ffdc994fb34,447774599,0,0x0,8
tick,0x7ffdc994fb34,447790254,0,0x0,8
tick,0x7ffdc994fb34,447806251,0,0x0,8
tick,0x7ffdc994fb34,447822314,0,0x0,8
tick,0x7ffdc994fb34,447838042,0,0x0,8
tick,0x7ffdc994fb34,447854118,0,0x0,8
tick,0x7ffdc994fb34,447869067,0,0x0,8
tick,0x7ffdc994fb34,447885023,0,0x0,8
tick,0x7ffdc994fb34,447900604,0,0x0,8
tick,0x7ffdc994fb34,447916952,0,0x0,8
tick,0x7ffdc994fb34,447932657,0,0x0,8
tick,0x7ffdc994fb34,447947960,0,0x0,8
tick,0x7ffdc994fb34,447963746,0,0x0,8
tick,0x7ffdc994fb34,447979950,0,0x0,8
tick,0x7ffdc994fb34,447995793,0,0x0,8
tick,0x7ffdc994fb34,448011790,0,0x0,8
tick,0x7ffdc994fb34,448027695,0,0x0,8
tick,0x7ffdc994fb34,448043408,0,0x0,8
tick,0x7ffdc994fb34,448059542,0,0x0,8
tick,0x7ffdc994fb34,448075432,0,0x0,8
tick,0x7ffdc994fb34,448091373,0,0x0,8
tick,0x7ffdc994fb34,448107341,0,0x0,8
tick,0x7ffdc994fb34,448123489,0,0x0,8
tick,0x7ffdc994fb34,448139420,0,0x0,8
tick,0x7ffdc994fb34,448155393,0,0x0,8
tick,0x7ffdc994fb34,448171528,0,0x0,8
tick,0x7ffdc994fb34,448186877,0,0x0,8
tick,0x7ffdc994fb34,448202177,0,0x0,8
tick,0x7ffdc994fb34,448218095,0,0x0,8
tick,0x7ffdc994fb34,448234303,0,0x0,8
tick,0x7ffdc994fb34,448250027,0,0x0,8
tick,0x7ffdc994fb34,448266166,0,0x0,8
tick,0x7ffdc994fb34,448282007,0,0x0,8
tick,0x7ffdc994fb34,448297426,0,0x0,8
tick,0x7ffdc994fb34,448313432,0,0x0,8
tick,0x7ffdc994fb34,448329707,0,0x0,8
tick,0x7ffdc994fb34,448345650,0,0x0,8
tick,0x7ffdc994fb34,448360908,0,0x0,8
tick,0x7ffdc994fb34,448376197,0,0x0,8
tick,0x7ffdc994fb34,448391938,0,0x0,8
tick,0x7ffdc994fb34,448408021,0,0x0,8
tick,0x7ffdc994fb34,448423657,0,0x0,8
tick,0x7ffdc994fb34,448439784,0,0x0,8
tick,0x7ffdc994fb34,448454333,0,0x0,8
tick,0x7ffdc994fb34,448470532,0,0x0,8
tick,0x7ffdc994fb34,448486344,0,0x0,8
tick,0x7ffdc994fb34,448502260,0,0x0,8
tick,0x7ffdc994fb34,448517234,0,0x0,8
tick,0x7ffdc994fb34,448533094,0,0x0,8
tick,0x7ffdc994fb34,448548923,0,0x0,8
tick,0x7ffdc994fb34,448564431,0,0x0,8
tick,0x7ffdc994fb34,448579986,0,0x0,8
tick,0x7ffdc994fb34,448595490,0,0x0,8
tick,0x7ffdc994fb34,448611036,0,0x0,8
tick,0x7ffdc994fb34,448626682,0,0x0,8
tick,0x7ffdc994fb34,448642242,0,0x0,8
tick,0x7ffdc994fb34,448657564,0,0x0,8
tick,0x7ffdc994fb34,448672719,0,0x0,8
tick,0x7ffdc994fb34,448688589,0,0x0,8
tick,0x7ffdc994fb34,448704123,0,0x0,8
tick,0x7ffdc994fb34,448719664,0,0x0,8
tick,0x7ffdc994fb34,448735532,0,0x0,8
tick,0x7ffdc994fb34,448751567,0,0x0,8
tick,0x7ffdc994fb34,448767690,0,0x0,8
tick,0x7ffdc994fb34,448783569,0,0x0,8
tick,0x7ffdc994fb34,448799403,0,0x0,8
tick,0x7ffdc994fb34,448815319,0,0x0,8
tick,0x7ffdc994fb34,448831247,0,0x0,8
tick,0x7ffdc994fb34,448845998,0,0x0,8
tick,0x7ffdc994fb34,448861961,0,0x0,8
tick,0x7ffdc994fb34,448877332,0,0x0,8
tick,0x7ffdc994fb34,448893114,0,0x0,8
tick,0x7ffdc994fb34,448909097,0,0x0,8
tick,0x7ffdc994fb34,448925372,0,0x0,8
tick,0x7ffdc994fb34,448941323,0,0x0,8
tick,0x7ffdc994fb34,448957139,0,0x0,8
tick,0x7ffdc994fb34,448973564,0,0x0,8
tick,0x7ffdc994fb34,448989436,0,0x0,8
tick,0x7ffdc994fb34,449004644,0,0x0,8
tick,0x7ffdc994fb34,449020740,0,0x0,8
tick,0x7ffdc994fb34,449036976,0,0x0,8
tick,0x7ffdc994fb34,449052564,0,0x0,8
tick,0x7ffdc994fb34,449067975,0,0x0,8
tick,0x7ffdc994fb34,449084156,0,0x0,8
tick,0x7ffdc994fb34,449100026,0,0x0,8
tick,0x7ffdc994fb34,449116029,0,0x0,8
tick,0x7ffdc994fb34,449132033,0,0x0,8
tick,0x7ffdc994fb34,449147315,0,0x0,8
tick,0x7ffdc994fb34,449163376,0,0x0,8
tick,0x7ffdc994fb34,449178561,0,0x0,8
tick,0x7ffdc994fb34,449194265,0,0x0,8
tick,0x7ffdc994fb34,449209740,0,0x0,8
tick,0x7ffdc994fb34,449225605,0,0x0,8
tick,0x7ffdc994fb34,449241569,0,0x0,8
tick,0x7ffdc994fb34,449257146,0,0x0,8
tick,0x7ffdc994fb34,449273160,0,0x0,8
tick,0x7ffdc994fb34,449288865,0,0x0,8
tick,0x7ffdc994fb34,449305107,0,0x0,8
tick,0x7ffdc994fb34,449321046,0,0x0,8
tick,0x7ffdc994fb34,449336462,0,0x0,8
tick,0x7ffdc994fb34,449352351,0,0x0,8
tick,0x7ffdc994fb34,449367832,0,0x0,8
tick,0x7ffdc994fb34,449383737,0,0x0,8
tick,0x7ffdc994fb34,449399908,0,0x0,8
tick,0x7ffdc994fb34,449415799,0,0x0,8
tick,0x7ffdc994fb34,449431167,0,0x0,8
tick,0x7ffdc994fb34,449446254,0,0x0,8
tick,0x7ffdc994fb34,449461939,0,0x0,8
tick,0x7ffdc994fb34,449478048,0,0x0,8
tick,0x7ffdc994fb34,449493744,0,0x0,8
tick,0x7ffdc994fb34,449509565,0,0x0,8
tick,0x7ffdc994fb34,449525608,0,0x0,8
tick,0x7ffdc994fb34,449540826,0,0x0,8
tick,0x7ffdc994fb34,449557180,0,0x0,8
tick,0x7ffdc994fb34,449572900,0,0x0,8
tick,0x7ffdc994fb34,449588252,0,0x0,8
tick,0x7ffdc994fb34,449604013,0,0x0,8
tick,0x7ffdc994fb34,449619983,0,0x0,8
tick,0x7ffdc994fb34,449636190,0,0x0,8
tick,0x7ffdc994fb34,449651788,0,0x0,8
tick,0x7ffdc994fb34,449667983,0,0x0,8
tick,0x7ffdc994fb34,449683553,0,0x0,8
tick,0x7ffdc994fb34,449699419,0,0x0,8
tick,0x7ffdc994fb34,449715240,0,0x0,8
tick,0x7ffdc994fb34,449730163,0,0x0,8
tick,0x7ffdc994fb34,449746276,0,0x0,8
tick,0x7ffdc994fb34,449762422,0,0x0,8
tick,0x7ffdc994fb34,449778159,0,0x0,8
tick,0x7ffdc994fb34,449794173,0,0x0,8
tick,0x7ffdc994fb34,449810095,0,0x0,8
tick,0x7ffdc994fb34,449825708,0,0x0,8
tick,0x7ffdc994fb34,449841770,0,0x0,8
tick,0x7ffdc994fb34,449857456,0,0x0,8
tick,0x7ffdc994fb34,449872991,0,0x0,8
tick,0x7ffdc994fb34,449888808,0,0x0,8
tick,0x7ffdc994fb34,449903898,0,0x0,8
tick,0x7ffdc994fb34,449920307,0,0x0,8
tick,0x7ffdc994fb34,449935541,0,0x0,8
tick,0x7ffdc994fb34,449951680,0,0x0,8
tick,0x7ffdc994fb34,449967619,0,0x0,8
tick,0x7ffdc994fb34,449983538,0,0x0,8
tick,0x7ffdc994fb34,449998724,0,0x0,8
tick,0x7ffdc994fb34,450014844,0,0x0,8
tick,0x7ffdc994fb34,450029890,0,0x0,8
tick,0x7ffdc994fb34,450045934,0,0x0,8
tick,0x7ffdc994fb34,450061862,0,0x0,8
tick,0x7ffdc994fb34,450077087,0,0x0,8
tick,0x7ffdc994fb34,450092383,0,0x0,8
tick,0x7ffdc994fb34,450107557,0,0x0,8
tick,0x7ffdc994fb34,450122706,0,0x0,8
tick,0x7ffdc994fb34,450137772,0,0x0,8
tick,0x7ffdc994fb34,450153310,0,0x0,8
tick,0x7ffdc994fb34,450168457,0,0x0,8
tick,0x7ffdc994fb34,450184187,0,0x0,8
tick,0x7ffdc994fb34,450199416,0,0x0,8
tick,0x7ffdc994fb34,450214689,0,0x0,8
tick,0x7ffdc994fb34,450230442,0,0x0,8
tick,0x7ffdc994fb34,450245595,0,0x0,8
tick,0x7ffdc994fb34,450261656,0,0x0,8
tick,0x7ffdc994fb34,450277614,0,0x0,8
tick,0x7ffdc994fb34,450293826,0,0x0,8
tick,0x7ffdc994fb34,450308733,0,0x0,8
tick,0x7ffdc994fb34,450323782,0,0x0,8
tick,0x7ffdc994fb34,450338747,0,0x0,8
tick,0x7ffdc994fb34,450354353,0,0x0,8
tick,0x7ffdc994fb34,450369730,0,0x0,8
tick,0x7ffdc994fb34,450385300,0,0x0,8
tick,0x7ffdc994fb34,450401554,0,0x0,8
tick,0x7ffdc994fb34,450417345,0,0x0,8
tick,0x7ffdc994fb34,450432656,0,0x0,8
tick,0x7ffdc994fb34,450448702,0,0x0,8
tick,0x7ffdc994fb34,450464829,0,0x0,8
tick,0x7ffdc994fb34,450480743,0,0x0,8
tick,0x7ffdc994fb34,450496445,0,0x0,8
tick,0x7ffdc994fb34,450511941,0,0x0,8
tick,0x7ffdc994fb34,450527285,0,0x0,8
tick,0x7ffdc994fb34,450542379,0,0x0,8
tick,0x7ffdc994fb34,450557700,0,0x0,8
tick,0x7ffdc994fb34,450573740,0,0x0,8
tick,0x7ffdc994fb34,450589024,0,0x0,8
tick,0x7ffdc994fb34,450604964,0,0x0,8
tick,0x7ffdc994fb34,450620850,0,0x0,8
tick,0x7ffdc994fb34,450636736,0,0x0,8
tick,0x7ffdc994fb34,450652593,0,0x0,8
tick,0x7ffdc994fb34,450668382,0,0x0,8
tick,0x7ffdc994fb34,450683466,0,0x0,8
tick,0x7ffdc994fb34,450699334,0,0x0,8
tick,0x7ffdc994fb34,450715032,0,0x0,8
tick,0x7ffdc994fb34,450730270,0,0x0,8
tick,0x7ffdc994fb34,450745679,0,0x0,8
tick,0x7ffdc994fb34,450761005,0,0x0,8
tick,0x7ffdc994fb34,450776497,0,0x0,8
tick,0x7ffdc994fb34,450792442,0,0x0,8
tick,0x7ffdc994fb34,450808703,0,0x0,8
tick,0x7ffdc994fb34,450823970,0,0x0,8
tick,0x7ffdc994fb34,450839322,0,0x0,8
tick,0x7ffdc994fb34,450854215,0,0x0,8
tick,0x7ffdc994fb34,450870186,0,0x0,8
tick,0x7ffdc994fb34,450885347,0,0x0,8
tick,0x7ffdc994fb34,450901125,0,0x0,8
tick,0x7ffdc994fb34,450916554,0,0x0,8
tick,0x7ffdc994fb34,450932109,0,0x0,8
tick,0x7ffdc994fb34,450947984,0,0x0,8
tick,0x7ffdc994fb34,450963911,0,0x0,8
tick,0x7ffdc994fb34,450993430,0,0x0,8
tick,0x7ffdc994fb34,451014734,0,0x0,8
tick,0x7ffdc994fb34,451024856,0,0x0,8
tick,0x7ffdc994fb34,451040730,0,0x0,8
tick,0x7ffdc994fb34,451056673,0,0x0,8
tick,0x7ffdc994fb34,451072902,0,0x0,8
tick,0x7ffdc994fb34,451087305,0,0x0,8
tick,0x7ffdc994fb34,451103778,0,0x0,8
tick,0x7ffdc994fb34,451118723,0,0x0,8
tick,0x7ffdc994fb34,451133953,0,0x0,8
tick,0x7ffdc994fb34,451149181,0,0x0,8
tick,0x7ffdc994fb34,451164835,0,0x0,8
tick,0x7ffdc994fb34,451180019,0,0x0,8
tick,0x7ffdc994fb34,451195751,0,0x0,8
tick,0x7ffdc994fb34,451212031,0,0x0,8
tick,0x7ffdc994fb34,451232044,0,0x0,8
tick,0x7ffdc994fb34,451276326,0,0x0,8
tick,0x7ffdc994fb34,451285173,0,0x0,8
tick,0x7ffdc994fb34,451288134,0,0x0,8
tick,0x7ffdc994fb34,451305884,0,0x0,8
tick,0x7ffdc994fb34,451337452,0,0x0,8
tick,0x7ffdc994fb34,451349364,0,0x0,8
tick,0x7ffdc994fb34,451364974,0,0x0,8
tick,0x7ffdc994fb34,451380971,0,0x0,8
tick,0x7ffdc994fb34,451395640,0,0x0,8
tick,0x7ffdc994fb34,451411126,0,0x0,8
tick,0x7ffdc994fb34,451426363,0,0x0,8
tick,0x7ffdc994fb34,451441981,0,0x0,8
tick,0x7ffdc994fb34,451458111,0,0x0,8
tick,0x7ffdc994fb34,451473167,0,0x0,8
tick,0x7ffdc994fb34,451489174,0,0x0,8
tick,0x7ffdc994fb34,451504570,0,0x0,8
tick,0x7ffdc994fb34,451520043,0,0x0,8
tick,0x7ffdc994fb34,451535416,0,0x0,8
tick,0x7ffdc994fb34,451551377,0,0x0,8
tick,0x7ffdc994fb34,451566635,0,0x0,8
tick,0x7ffdc994fb34,451582015,0,0x0,8
tick,0x7ffdc994fb34,451598045,0,0x0,8
tick,0x7ffdc994fb34,451613786,0,0x0,8
tick,0x7ffdc994fb34,451629145,0,0x0,8
tick,0x7ffdc994fb34,451644527,0,0x0,8
tick,0x7ffdc994fb34,451659936,0,0x0,8
tick,0x7ffdc994fb34,451675043,0,0x0,8
tick,0x7ffdc994fb34,451691020,0,0x0,8
tick,0x7ffdc994fb34,451706940,0,0x0,8
tick,0x7ffdc994fb34,451723020,0,0x0,8
tick,0x7ffdc994fb34,451739217,0,0x0,8
tick,0x7ffdc994fb34,451755131,0,0x0,8
tick,0x7ffdc994fb34,451771129,0,0x0,8
tick,0x7ffdc994fb34,451787151,0,0x0,8
tick,0x7ffdc994fb34,451803016,0,0x0,8
tick,0x7ffdc994fb34,451818513,0,0x0,8
tick,0x7ffdc994fb34,451834278,0,0x0,8
tick,0x7ffdc994fb34,451849606,0,0x0,8
tick,0x7ffdc994fb34,451865423,0,0x0,8
tick,0x7ffdc994fb34,451880879,0,0x0,8
tick,0x7ffdc994fb34,451897102,0,0x0,8
tick,0x7ffdc994fb34,451913105,0,0x0,8
tick,0x7ffdc994fb34,451928281,0,0x0,8
tick,0x7ffdc994fb34,451944638,0,0x0,8
tick,0x7ffdc994fb34,451960209,0,0x0,8
tick,0x7ffdc994fb34,451975556,0,0x0,8
tick,0x7ffdc994fb34,451991561,0,0x0,8
tick,0x7ffdc994fb34,452007760,0,0x0,8
tick,0x7ffdc994fb34,452023555,0,0x0,8
tick,0x7ffdc994fb34,452038981,0,0x0,8
tick,0x7ffdc994fb34,452054829,0,0x0,8
tick,0x7ffdc994fb34,452070863,0,0x0,8
tick,0x7ffdc994fb34,452086042,0,0x0,8
tick,0x7ffdc994fb34,452101195,0,0x0,8
tick,0x7ffdc994fb34,452117466,0,0x0,8
tick,0x7ffdc994fb34,452132747,0,0x0,8
tick,0x7ffdc994fb34,452148158,0,0x0,8
tick,0x7ffdc994fb34,452163372,0,0x0,8
tick,0x7ffdc994fb34,452178963,0,0x0,8
tick,0x7ffdc994fb34,452194550,0,0x0,8
tick,0x7ffdc994fb34,452210140,0,0x0,8
tick,0x7ffdc994fb34,452225058,0,0x0,8
tick,0x7ffdc994fb34,452241321,0,0x0,8
tick,0x7ffdc994fb34,452256372,0,0x0,8
tick,0x7ffdc994fb34,452271766,0,0x0,8
tick,0x7ffdc994fb34,452287304,0,0x0,8
tick,0x7ffdc994fb34,452303211,0,0x0,8
tick,0x7ffdc994fb34,452319153,0,0x0,8
tick,0x7ffdc994fb34,452334454,0,0x0,8
tick,0x7ffdc994fb34,452350537,0,0x0,8
tick,0x7ffdc994fb34,452365758,0,0x0,8
tick,0x7ffdc994fb34,452380858,0,0x0,8
tick,0x7ffdc994fb34,452397062,0,0x0,8
tick,0x7ffdc994fb34,452413214,0,0x0,8
tick,0x7ffdc994fb34,452429129,0,0x0,8
tick,0x7ffdc994fb34,452444478,0,0x0,8
tick,0x7ffdc994fb34,452459388,0,0x0,8
tick,0x7ffdc994fb34,452474234,0,0x0,8
tick,0x7ffdc994fb34,452489568,0,0x0,8
tick,0x7ffdc994fb34,452504854,0,0x0,8
tick,0x7ffdc994fb34,452520779,0,0x0,8
tick,0x7ffdc994fb34,452536677,0,0x0,8
tick,0x7ffdc994fb34,452552050,0,0x0,8
tick,0x7ffdc994fb34,452566952,0,0x0,8
tick,0x7ffdc994fb34,452582914,0,0x0,8
tick,0x7ffdc994fb34,452599113,0,0x0,8
tick,0x7ffdc994fb34,452614812,0,0x0,8
tick,0x7ffdc994fb34,452630325,0,0x0,8
tick,0x7ffdc994fb34,452646013,0,0x0,8
tick,0x7ffdc994fb34,452662364,0,0x0,8
tick,0x7ffdc994fb34,452677033,0,0x0,8
tick,0x7ffdc994fb34,452692551,0,0x0,8
tick,0x7ffdc994fb34,452708055,0,0x0,8
tick,0x7ffdc994fb34,452723124,0,0x0,8
tick,0x7ffdc994fb34,452739460,0,0x0,8
tick,0x7ffdc994fb34,452754046,0,0x0,8
tick,0x7ffdc994fb34,452770244,0,0x0,8
tick,0x7ffdc994fb34,452786359,0,0x0,8
tick,0x7ffdc994fb34,452802307,0,0x0,8
tick,0x7ffdc994fb34,452818374,0,0x0,8
tick,0x7ffdc994fb34,452833906,0,0x0,8
tick,0x7ffdc994fb34,452849101,0,0x0,8
tick,0x7ffdc994fb34,452865276,0,0x0,8
tick,0x7ffdc994fb34,452881235,0,0x0,8
tick,0x7ffdc994fb34,452897173,0,0x0,8
tick,0x7ffdc994fb34,452913227,0,0x0,8
tick,0x7ffdc994fb34,452929188,0,0x0,8
tick,0x7ffdc994fb34,452944533,0,0x0,8
tick,0x7ffdc994fb34,452960141,0,0x0,8
tick,0x7ffdc994fb34,452975239,0,0x0,8
tick,0x7ffdc994fb34,452990071,0,0x0,8
tick,0x7ffdc994fb34,453005611,0,0x0,8
tick,0x7ffdc994fb34,453021416,0,0x0,8
tick,0x7ffdc994fb34,453036871,0,0x0,8
tick,0x7ffdc994fb34,453052445,0,0x0,8
tick,0x7ffdc994fb34,453067769,0,0x0,8
tick,0x7ffdc994fb34,453083839,0,0x0,8
tick,0x7ffdc994fb34,453098936,0,0x0,8
tick,0x7ffdc994fb34,453114130,0,0x0,8
tick,0x7ffdc994fb34,453129885,0,0x0,8
tick,0x7ffdc994fb34,453145673,0,0x0,8
tick,0x7ffdc994fb34,453161948,0,0x0,8
tick,0x7ffdc994fb34,453177043,0,0x0,8
tick,0x7ffdc994fb34,453192829,0,0x0,8
tick,0x7ffdc994fb34,453209104,0,0x0,8
tick,0x7ffdc994fb34,453224313,0,0x0,8
tick,0x7ffdc994fb34,453240554,0,0x0,8
tick,0x7ffdc994fb34,453256212,0,0x0,8
tick,0x7ffdc994fb34,453271831,0,0x0,8
tick,0x7ffdc994fb34,453286432,0,0x0,8
tick,0x7ffdc994fb34,453302240,0,0x0,8
tick,0x7ffdc994fb34,453318225,0,0x0,8
tick,0x7ffdc994fb34,453333282,0,0x0,8
tick,0x7ffdc994fb34,453348985,0,0x0,8
tick,0x7ffdc994fb34,453363894,0,0x0,8
tick,0x7ffdc994fb34,453379192,0,0x0,8
tick,0x7ffdc994fb34,453394537,0,0x0,8
tick,0x7ffdc994fb34,453410310,0,0x0,8
tick,0x7ffdc994fb34,453425879,0,0x0,8
tick,0x7ffdc994fb34,453441242,0,0x0,8
tick,0x7ffdc994fb34,453456681,0,0x0,8
tick,0x7ffdc994fb34,453471789,0,0x0,8
tick,0x7ffdc994fb34,453487267,0,0x0,8
tick,0x7ffdc994fb34,453502611,0,0x0,8
tick,0x7ffdc994fb34,453518052,0,0x0,8
tick,0x7ffdc994fb34,453533125,0,0x0,8
tick,0x7ffdc994fb34,453549208,0,0x0,8
tick,0x7ffdc994fb34,453564497,0,0x0,8
tick,0x7ffdc994fb34,453580603,0,0x0,8
tick,0x7ffdc994fb34,453595553,0,0x0,8
tick,0x7ffdc994fb34,453610825,0,0x0,8
tick,0x7ffdc994fb34,453626087,0,0x0,8
tick,0x7ffdc994fb34,453642303,0,0x0,8
tick,0x7ffdc994fb34,453657575,0,0x0,8
tick,0x7ffdc994fb34,453672826,0,0x0,8
tick,0x7ffdc994fb34,453688414,0,0x0,8
tick,0x7ffdc994fb34,453703554,0,0x0,8
tick,0x7ffdc994fb34,453719164,0,0x0,8
tick,0x7ffdc994fb34,453735151,0,0x0,8
tick,0x7ffdc994fb34,453751175,0,0x0,8
tick,0x7ffdc994fb34,453766610,0,0x0,8
tick,0x7ffdc994fb34,453781849,0,0x0,8
tick,0x7ffdc994fb34,453798058,0,0x0,8
tick,0x7ffdc994fb34,453812726,0,0x0,8
tick,0x7ffdc994fb34,453828396,0,0x0,8
tick,0x7ffdc994fb34,453843406,0,0x0,8
tick,0x7ffdc994fb34,453859549,0,0x0,8
tick,0x7ffdc994fb34,453874827,0,0x0,8
tick,0x7ffdc994fb34,453889808,0,0x0,8
tick,0x7ffdc994fb34,453905818,0,0x0,8
tick,0x7ffdc994fb34,453921963,0,0x0,8
tick,0x7ffdc994fb34,453937849,0,0x0,8
tick,0x7ffdc994fb34,453952912,0,0x0,8
tick,0x7ffdc994fb34,453968478,0,0x0,8
tick,0x7ffdc994fb34,453984286,0,0x0,8
tick,0x7ffdc994fb34,453999998,0,0x0,8
tick,0x7ffdc994fb34,454015933,0,0x0,8
tick,0x7ffdc994fb34,454031766,0,0x0,8
tick,0x7ffdc994fb34,454047489,0,0x0,8
tick,0x7ffdc994fb34,454062755,0,0x0,8
tick,0x7ffdc994fb34,454078414,0,0x0,8
tick,0x7ffdc994fb34,454093527,0,0x0,8
tick,0x7ffdc994fb34,454109489,0,0x0,8
tick,0x7ffdc994fb34,454125175,0,0x0,8
tick,0x7ffdc994fb34,454140796,0,0x0,8
tick,0x7ffdc994fb34,454156283,0,0x0,8
tick,0x7ffdc994fb34,454171649,0,0x0,8
tick,0x7ffdc994fb34,454187545,0,0x0,8
tick,0x7ffdc994fb34,454202557,0,0x0,8
tick,0x7ffdc994fb34,454217426,0,0x0,8
tick,0x7ffdc994fb34,454233135,0,0x0,8
tick,0x7ffdc994fb34,454248754,0,0x0,8
tick,0x7ffdc994fb34,454264134,0,0x0,8
tick,0x7ffdc994fb34,454279820,0,0x0,8
tick,0x7ffdc994fb34,454295647,0,0x0,8
tick,0x7ffdc994fb34,454310653,0,0x0,8
tick,0x7ffdc994fb34,454326321,0,0x0,8
tick,0x7ffdc994fb34,454341383,0,0x0,8
tick,0x7ffdc994fb34,454356891,0,0x0,8
tick,0x7ffdc994fb34,454372874,0,0x0,8
tick,0x7ffdc994fb34,454388368,0,0x0,8
tick,0x7ffdc994fb34,454404159,0,0x0,8
tick,0x7ffdc994fb34,454419219,0,0x0,8
tick,0x7ffdc994fb34,454434702,0,0x0,8
tick,0x7ffdc994fb34,454449851,0,0x0,8
tick,0x7ffdc994fb34,454465962,0,0x0,8
tick,0x7ffdc994fb34,454481371,0,0x0,8
tick,0x7ffdc994fb34,454497165,0,0x0,8
tick,0x7ffdc994fb34,454513032,0,0x0,8
tick,0x7ffdc994fb34,454528559,0,0x0,8
tick,0x7ffdc994fb34,454544501,0,0x0,8
tick,0x7ffdc994fb34,454559968,0,0x0,8
tick,0x7ffdc994fb34,454574746,0,0x0,8
tick,0x7ffdc994fb34,454590302,0,0x0,8
tick,0x7ffdc994fb34,454606282,0,0x0,8
tick,0x7ffdc994fb34,454621121,0,0x0,8
tick,0x7ffdc994fb34,454637034,0,0x0,8
tick,0x7ffdc994fb34,454652002,0,0x0,8
tick,0x7ffdc994fb34,454668038,0,0x0,8
tick,0x7ffdc994fb34,454683769,0,0x0,8
tick,0x7ffdc994fb34,454699407,0,0x0,8
tick,0x7ffdc994fb34,454714510,0,0x0,8
tick,0x7ffdc994fb34,454730130,0,0x0,8
tick,0x7ffdc994fb34,454745662,0,0x0,8
tick,0x7ffdc994fb34,454761306,0,0x0,8
tick,0x7ffdc994fb34,454776887,0,0x0,8
tick,0x7ffdc994fb34,454791977,0,0x0,8
tick,0x7ffdc994fb34,454808125,0,0x0,8
tick,0x7ffdc994fb34,454823666,0,0x0,8
tick,0x7ffdc994fb34,454839938,0,0x0,8
tick,0x7ffdc994fb34,454855830,0,0x0,8
tick,0x7ffdc994fb34,454871959,0,0x0,8
tick,0x7ffdc994fb34,454887721,0,0x0,8
tick,0x7ffdc994fb34,454903930,0,0x0,8
tick,0x7ffdc994fb34,454919686,0,0x0,8
tick,0x7ffdc994fb34,454935006,0,0x0,8
tick,0x7ffdc994fb34,454950934,0,0x0,8
tick,0x7ffdc994fb34,454966380,0,0x0,8
tick,0x7ffdc994fb34,454982459,0,0x0,8
tick,0x7ffdc994fb34,454997896,0,0x0,8
tick,0x7ffdc994fb34,455014000,0,0x0,8
tick,0x7ffdc994fb34,455029711,0,0x0,8
tick,0x7ffdc994fb34,455044937,0,0x0,8
tick,0x7ffdc994fb34,455060089,0,0x0,8
tick,0x7ffdc994fb34,455075747,0,0x0,8
tick,0x7ffdc994fb34,455091637,0,0x0,8
tick,0x7ffdc994fb34,455107128,0,0x0,8
tick,0x7ffdc994fb34,455122815,0,0x0,8
tick,0x7ffdc994fb34,455138261,0,0x0,8
tick,0x7ffdc994fb34,455154354,0,0x0,8
tick,0x7ffdc994fb34,455169923,0,0x0,8
tick,0x7ffdc994fb34,455185345,0,0x0,8
tick,0x7ffdc994fb34,455201242,0,0x0,8
tick,0x7ffdc994fb34,455216692,0,0x0,8
tick,0x7ffdc994fb34,455231471,0,0x0,8
tick,0x7ffdc994fb34,455247138,0,0x0,8
tick,0x7ffdc994fb34,455263326,0,0x0,8
tick,0x7ffdc994fb34,455279183,0,0x0,8
tick,0x7ffdc994fb34,455295314,0,0x0,8
tick,0x7ffdc994fb34,455310646,0,0x0,8
tick,0x7ffdc994fb34,455326230,0,0x0,8
tick,0x7ffdc994fb34,455342560,0,0x0,8
tick,0x7ffdc994fb34,455358181,0,0x0,8
tick,0x7ffdc994fb34,455374202,0,0x0,8
tick,0x7ffdc994fb34,455389674,0,0x0,8
tick,0x7ffdc994fb34,455404863,0,0x0,8
tick,0x7ffdc994fb34,455420215,0,0x0,8
tick,0x7ffdc994fb34,455435237,0,0x0,8
tick,0x7ffdc994fb34,455450810,0,0x0,8
tick,0x7ffdc994fb34,455466355,0,0x0,8
tick,0x7ffdc994fb34,455482242,0,0x0,8
tick,0x7ffdc994fb34,455498049,0,0x0,8
tick,0x7ffdc994fb34,455513401,0,0x0,8
tick,0x7ffdc994fb34,455528568,0,0x0,8
tick,0x7ffdc994fb34,455544007,0,0x0,8
tick,0x7ffdc994fb34,455559482,0,0x0,8
tick,0x7ffdc994fb34,455574806,0,0x0,8
tick,0x7ffdc994fb34,455590379,0,0x0,8
tick,0x7ffdc994fb34,455605561,0,0x0,8
tick,0x7ffdc994fb34,455621216,0,0x0,8
tick,0x7ffdc994fb34,455636936,0,0x0,8
tick,0x7ffdc994fb34,455652432,0,0x0,8
tick,0x7ffdc994fb34,455667920,0,0x0,8
tick,0x7ffdc994fb34,455683333,0,0x0,8
tick,0x7ffdc994fb34,455699075,0,0x0,8
tick,0x7ffdc994fb34,455714719,0,0x0,8
tick,0x7ffdc994fb34,455730035,0,0x0,8
tick,0x7ffdc994fb34,455746117,0,0x0,8
tick,0x7ffdc994fb34,455760876,0,0x0,8
tick,0x7ffdc994fb34,455776992,0,0x0,8
tick,0x7ffdc994fb34,455792810,0,0x0,8
tick,0x7ffdc994fb34,455808471,0,0x0,8
tick,0x7ffdc994fb34,455823827,0,0x0,8
tick,0x7ffdc994fb34,455839519,0,0x0,8
tick,0x7ffdc994fb34,455855175,0,0x0,8
tick,0x7ffdc994fb34,455870524,0,0x0,8
tick,0x7ffdc994fb34,455885904,0,0x0,8
tick,0x7ffdc994fb34,455901130,0,0x0,8
tick,0x7ffdc994fb34,455916310,0,0x0,8
tick,0x7ffdc994fb34,455932546,0,0x0,8
tick,0x7ffdc994fb34,455948365,0,0x0,8
tick,0x7ffdc994fb34,455963761,0,0x0,8
tick,0x7ffdc994fb34,455978945,0,0x0,8
tick,0x7ffdc994fb34,455994539,0,0x0,8
tick,0x7ffdc994fb34,456010144,0,0x0,8
tick,0x7ffdc994fb34,456025396,0,0x0,8
tick,0x7ffdc994fb34,456040870,0,0x0,8
tick,0x7ffdc994fb34,456056450,0,0x0,8
tick,0x7ffdc994fb34,456071726,0,0x0,8
tick,0x7ffdc994fb34,456087148,0,0x0,8
tick,0x7ffdc994fb34,456102940,0,0x0,8
tick,0x7ffdc994fb34,456118144,0,0x0,8
tick,0x7ffdc994fb34,456133840,0,0x0,8
tick,0x7ffdc994fb34,456149744,0,0x0,8
tick,0x7ffdc994fb34,456164954,0,0x0,8
tick,0x7ffdc994fb34,456180254,0,0x0,8
tick,0x7ffdc994fb34,456195752,0,0x0,8
tick,0x7ffdc994fb34,456211878,0,0x0,8
tick,0x7ffdc994fb34,456227942,0,0x0,8
tick,0x7ffdc994fb34,456243848,0,0x0,8
tick,0x7ffdc994fb34,456258904,0,0x0,8
tick,0x7ffdc994fb34,456274219,0,0x0,8
tick,0x7ffdc994fb34,456289923,0,0x0,8
tick,0x7ffdc994fb34,456304943,0,0x0,8
tick,0x7ffdc994fb34,456320083,0,0x0,8
tick,0x7ffdc994fb34,456335301,0,0x0,8
tick,0x7ffdc994fb34,456350973,0,0x0,8
tick,0x7ffdc994fb34,456366420,0,0x0,8
tick,0x7ffdc994fb34,456381200,0,0x0,8
tick,0x7ffdc994fb34,456396401,0,0x0,8
tick,0x7ffdc994fb34,456412274,0,0x0,8
tick,0x7ffdc994fb34,456427723,0,0x0,8
tick,0x7ffdc994fb34,456443104,0,0x0,8
tick,0x7ffdc994fb34,456458567,0,0x0,8
tick,0x7ffdc994fb34,456474288,0,0x0,8
tick,0x7ffdc994fb34,456489660,0,0x0,8
tick,0x7ffdc994fb34,456505303,0,0x0,8
tick,0x7ffdc994fb34,456520496,0,0x0,8
tick,0x7ffdc994fb34,456536158,0,0x0,8
tick,0x7ffdc994fb34,456552112,0,0x0,8
tick,0x7ffdc994fb34,456567785,0,0x0,8
tick,0x7ffdc994fb34,456583032,0,0x0,8
tick,0x7ffdc994fb34,456598787,0,0x0,8
tick,0x7ffdc994fb34,456614382,0,0x0,8
tick,0x7ffdc994fb34,456629658,0,0x0,8
tick,0x7ffdc994fb34,456645661,0,0x0,8
tick,0x7ffdc994fb34,456661161,0,0x0,8
tick,0x7ffdc994fb34,456675892,0,0x0,8
tick,0x7ffdc994fb34,456691674,0,0x0,8
tick,0x7ffdc994fb34,456707106,0,0x0,8
tick,0x7ffdc994fb34,456722696,0,0x0,8
tick,0x7ffdc994fb34,456737858,0,0x0,8
tick,0x7ffdc994fb34,456753136,0,0x0,8
tick,0x7ffdc994fb34,456768943,0,0x0,8
tick,0x7ffdc994fb34,456785128,0,0x0,8
tick,0x7ffdc994fb34,456800908,0,0x0,8
tick,0x7ffdc994fb34,456816803,0,0x0,8
tick,0x7ffdc994fb34,456832627,0,0x0,8
tick,0x7ffdc994fb34,456847970,0,0x0,8
tick,0x7ffdc994fb34,456863276,0,0x0,8
tick,0x7ffdc994fb34,456878937,0,0x0,8
tick,0x7ffdc994fb34,456895008,0,0x0,8
tick,0x7ffdc994fb34,456910214,0,0x0,8
tick,0x7ffdc994fb34,456926390,0,0x0,8
tick,0x7ffdc994fb34,456941959,0,0x0,8
tick,0x7ffdc994fb34,456957194,0,0x0,8
tick,0x7ffdc994fb34,456972512,0,0x0,8
tick,0x7ffdc994fb34,456987951,0,0x0,8
tick,0x7ffdc994fb34,457003317,0,0x0,8
tick,0x7ffdc994fb34,457018049,0,0x0,8
tick,0x7ffdc994fb34,457034241,0,0x0,8
tick,0x7ffdc994fb34,457049223,0,0x0,8
tick,0x7ffdc994fb34,457064797,0,0x0,8
tick,0x7ffdc994fb34,457081179,0,0x0,8
tick,0x7ffdc994fb34,457096730,0,0x0,8
tick,0x7ffdc994fb34,457112307,0,0x0,8
tick,0x7ffdc994fb34,457127330,0,0x0,8
tick,0x7ffdc994fb34,457142857,0,0x0,8
tick,0x7ffdc994fb34,457158486,0,0x0,8
tick,0x7ffdc994fb34,457174554,0,0x0,8
tick,0x7ffdc994fb34,457190670,0,0x0,8
tick,0x7ffdc994fb34,457207018,0,0x0,8
tick,0x7ffdc994fb34,457222204,0,0x0,8
tick,0x7ffdc994fb34,457238051,0,0x0,8
tick,0x7ffdc994fb34,457253067,0,0x0,8
tick,0x7ffdc994fb34,457268832,0,0x0,8
tick,0x7ffdc994fb34,457284207,0,0x0,8
tick,0x7ffdc994fb34,457299461,0,0x0,8
tick,0x7ffdc994fb34,457315367,0,0x0,8
tick,0x7ffdc994fb34,457331140,0,0x0,8
tick,0x7ffdc994fb34,457347256,0,0x0,8
tick,0x7ffdc994fb34,457362947,0,0x0,8
tick,0x7ffdc994fb34,457378651,0,0x0,8
tick,0x7ffdc994fb34,457393887,0,0x0,8
tick,0x7ffdc994fb34,457409926,0,0x0,8
tick,0x7ffdc994fb34,457425455,0,0x0,8
tick,0x7ffdc994fb34,457441082,0,0x0,8
tick,0x7ffdc994fb34,457456777,0,0x0,8
tick,0x7ffdc994fb34,457472728,0,0x0,8
tick,0x7ffdc994fb34,457488549,0,0x0,8
tick,0x7ffdc994fb34,457504001,0,0x0,8
tick,0x7ffdc994fb34,457519622,0,0x0,8
tick,0x7ffdc994fb34,457535670,0,0x0,8
tick,0x7ffdc994fb34,457550898,0,0x0,8
tick,0x7ffdc994fb34,457566009,0,0x0,8
tick,0x7ffdc994fb34,457581272,0,0x0,8
tick,0x7ffdc994fb34,457596514,0,0x0,8
tick,0x7ffdc994fb34,457612383,0,0x0,8
tick,0x7ffdc994fb34,457628059,0,0x0,8
tick,0x7ffdc994fb34,457643296,0,0x0,8
tick,0x7ffdc994fb34,457658587,0,0x0,8
tick,0x7ffdc994fb34,457674070,0,0x0,8
tick,0x7ffdc994fb34,457689742,0,0x0,8
tick,0x7ffdc994fb34,457705366,0,0x0,8
tick,0x7ffdc994fb34,457720520,0,0x0,8
tick,0x7ffdc994fb34,457736358,0,0x0,8
tick,0x7ffdc994fb34,457751712,0,0x0,8
tick,0x7ffdc994fb34,457766727,0,0x0,8
tick,0x7ffdc994fb34,457782489,0,0x0,8
tick,0x7ffdc994fb34,457798094,0,0x0,8
tick,0x7ffdc994fb34,457813572,0,0x0,8
tick,0x7ffdc994fb34,457829762,0,0x0,8
tick,0x7ffdc994fb34,457844720,0,0x0,8
tick,0x7ffdc994fb34,457860245,0,0x0,8
tick,0x7ffdc994fb34,457875635,0,0x0,8
tick,0x7ffdc994fb34,457891413,0,0x0,8
tick,0x7ffdc994fb34,457906664,0,0x0,8
tick,0x7ffdc994fb34,457922496,0,0x0,8
tick,0x7ffdc994fb34,457937916,0,0x0,8
tick,0x7ffdc994fb34,457953673,0,0x0,8
tick,0x7ffdc994fb34,457969528,0,0x0,8
tick,0x7ffdc994fb34,457984121,0,0x0,8
tick,0x7ffdc994fb34,457999299,0,0x0,8
tick,0x7ffdc994fb34,458014506,0,0x0,8
tick,0x7ffdc994fb34,458030252,0,0x0,8
tick,0x7ffdc994fb34,458045907,0,0x0,8
tick,0x7ffdc994fb34,458062020,0,0x0,8
tick,0x7ffdc994fb34,458077956,0,0x0,8
tick,0x7ffdc994fb34,458093127,0,0x0,8
tick,0x7ffdc994fb34,458108660,0,0x0,8
tick,0x7ffdc994fb34,458123936,0,0x0,8
tick,0x7ffdc994fb34,458139185,0,0x0,8
tick,0x7ffdc994fb34,458154601,0,0x0,8
tick,0x7ffdc994fb34,458169668,0,0x0,8
tick,0x7ffdc994fb34,458184937,0,0x0,8
tick,0x7ffdc994fb34,458200819,0,0x0,8
tick,0x7ffdc994fb34,458216569,0,0x0,8
tick,0x7ffdc994fb34,458232298,0,0x0,8
tick,0x7ffdc994fb34,458248361,0,0x0,8
tick,0x7ffdc994fb34,458263854,0,0x0,8
tick,0x7ffdc994fb34,458279280,0,0x0,8
tick,0x7ffdc994fb34,458294338,0,0x0,8
tick,0x7ffdc994fb34,458309951,0,0x0,8
tick,0x7ffdc994fb34,458325427,0,0x0,8
tick,0x7ffdc994fb34,458341314,0,0x0,8
tick,0x7ffdc994fb34,458356863,0,0x0,8
tick,0x7ffdc994fb34,458372440,0,0x0,8
tick,0x7ffdc994fb34,458388150,0,0x0,8
tick,0x7ffdc994fb34,458404351,0,0x0,8
tick,0x7ffdc994fb34,458419466,0,0x0,8
tick,0x7ffdc994fb34,458434920,0,0x0,8
tick,0x7ffdc994fb34,458450188,0,0x0,8
tick,0x7ffdc994fb34,458465613,0,0x0,8
tick,0x7ffdc994fb34,458481574,0,0x0,8
tick,0x7ffdc994fb34,458497048,0,0x0,8
tick,0x7ffdc994fb34,458512641,0,0x0,8
tick,0x7ffdc994fb34,458528634,0,0x0,8
tick,0x7ffdc994fb34,458544670,0,0x0,8
tick,0x7ffdc994fb34,458559859,0,0x0,8
tick,0x7ffdc994fb34,458575431,0,0x0,8
tick,0x7ffdc994fb34,458590507,0,0x0,8
tick,0x7ffdc994fb34,458606115,0,0x0,8
tick,0x7ffdc994fb34,458621934,0,0x0,8
tick,0x7ffdc994fb34,458636942,0,0x0,8
tick,0x7ffdc994fb34,458652667,0,0x0,8
tick,0x7ffdc994fb34,458668177,0,0x0,8
tick,0x7ffdc994fb34,458683809,0,0x0,8
tick,0x7ffdc994fb34,458700041,0,0x0,8
tick,0x7ffdc994fb34,458715622,0,0x0,8
tick,0x7ffdc994fb34,458730879,0,0x0,8
tick,0x7ffdc994fb34,458746102,0,0x0,8
tick,0x7ffdc994fb34,458761643,0,0x0,8
tick,0x7ffdc994fb34,458777326,0,0x0,8
tick,0x7ffdc994fb34,458793120,0,0x0,8
tick,0x7ffdc994fb34,458808512,0,0x0,8
tick,0x7ffdc994fb34,458823740,0,0x0,8
tick,0x7ffdc994fb34,458839792,0,0x0,8
tick,0x7ffdc994fb34,458855218,0,0x0,8
tick,0x7ffdc994fb34,458870572,0,0x0,8
tick,0x7ffdc994fb34,458886400,0,0x0,8
tick,0x7ffdc994fb34,458901913,0,0x0,8
tick,0x7ffdc994fb34,458917987,0,0x0,8
tick,0x7ffdc994fb34,458933098,0,0x0,8
tick,0x7ffdc994fb34,458948731,0,0x0,8
tick,0x7ffdc994fb34,458964063,0,0x0,8
tick,0x7ffdc994fb34,458979986,0,0x0,8
tick,0x7ffdc994fb34,458995260,0,0x0,8
tick,0x7ffdc994fb34,459011357,0,0x0,8
tick,0x7ffdc994fb34,459026738,0,0x0,8
tick,0x7ffdc994fb34,459042369,0,0x0,8
tick,0x7ffdc994fb34,459057384,0,0x0,8
tick,0x7ffdc994fb34,459072735,0,0x0,8
tick,0x7ffdc994fb34,459088262,0,0x0,8
tick,0x7ffdc994fb34,459103354,0,0x0,8
tick,0x7ffdc994fb34,459118873,0,0x0,8
tick,0x7ffdc994fb34,459134243,0,0x0,8
tick,0x7ffdc994fb34,459150146,0,0x0,8
tick,0x7ffdc994fb34,459166168,0,0x0,8
tick,0x7ffdc994fb34,459181756,0,0x0,8
tick,0x7ffdc994fb34,459197304,0,0x0,8
tick,0x7ffdc994fb34,459212719,0,0x0,8
tick,0x7ffdc994fb34,459227603,0,0x0,8
tick,0x7ffdc994fb34,459243388,0,0x0,8
tick,0x7ffdc994fb34,459259316,0,0x0,8
tick,0x7ffdc994fb34,459275395,0,0x0,8
tick,0x7ffdc994fb34,459290970,0,0x0,8
tick,0x7ffdc994fb34,459306875,0,0x0,8
tick,0x7ffdc994fb34,459322228,0,0x0,8
tick,0x7ffdc994fb34,459337980,0,0x0,8
tick,0x7ffdc994fb34,459353162,0,0x0,8
tick,0x7ffdc994fb34,459368793,0,0x0,8
tick,0x7ffdc994fb34,459384471,0,0x0,8
tick,0x7ffdc994fb34,459399706,0,0x0,8
tick,0x7ffdc994fb34,459415162,0,0x0,8
tick,0x7ffdc994fb34,459430788,0,0x0,8
tick,0x7ffdc994fb34,459446450,0,0x0,8
tick,0x7ffdc994fb34,459462406,0,0x0,8
tick,0x7ffdc994fb34,459477953,0,0x0,8
tick,0x7ffdc994fb34,459493249,0,0x0,8
tick,0x7ffdc994fb34,459509159,0,0x0,8
tick,0x7ffdc994fb34,459525068,0,0x0,8
tick,0x7ffdc994fb34,459540875,0,0x0,8
tick,0x7ffdc994fb34,459556584,0,0x0,8
tick,0x7ffdc994fb34,459572702,0,0x0,8
tick,0x7ffdc994fb34,459588183,0,0x0,8
tick,0x7ffdc994fb34,459603277,0,0x0,8
tick,0x7ffdc994fb34,459619105,0,0x0,8
tick,0x7ffdc994fb34,459634617,0,0x0,8
tick,0x7ffdc994fb34,459650059,0,0x0,8
tick,0x7ffdc994fb34,459665111,0,0x0,8
tick,0x7ffdc994fb34,459680588,0,0x0,8
tick,0x7ffdc994fb34,459696353,0,0x0,8
tick,0x7ffdc994fb34,459712511,0,0x0,8
tick,0x7ffdc994fb34,459727643,0,0x0,8
tick,0x7ffdc994fb34,459743493,0,0x0,8
tick,0x7ffdc994fb34,459759634,0,0x0,8
tick,0x7ffdc994fb34,459775848,0,0x0,8
tick,0x7ffdc994fb34,459791724,0,0x0,8
tick,0x7ffdc994fb34,459807450,0,0x0,8
tick,0x7ffdc994fb34,459822878,0,0x0,8
tick,0x7ffdc994fb34,459838579,0,0x0,8
tick,0x7ffdc994fb34,459854691,0,0x0,8
tick,0x7ffdc994fb34,459870267,0,0x0,8
tick,0x7ffdc994fb34,459885932,0,0x0,8
tick,0x7ffdc994fb34,459901925,0,0x0,8
tick,0x7ffdc994fb34,459918052,0,0x0,8
tick,0x7ffdc994fb34,459933708,0,0x0,8
tick,0x7ffdc994fb34,459949482,0,0x0,8
tick,0x7ffdc994fb34,459965383,0,0x0,8
tick,0x7ffdc994fb34,459980549,0,0x0,8
tick,0x7ffdc994fb34,459996428,0,0x0,8
tick,0x7ffdc994fb34,460011433,0,0x0,8
tick,0x7ffdc994fb34,460027397,0,0x0,8
tick,0x7ffdc994fb34,460042452,0,0x0,8
tick,0x7ffdc994fb34,460057901,0,0x0,8
tick,0x7ffdc994fb34,460073414,0,0x0,8
tick,0x7ffdc994fb34,460088896,0,0x0,8
tick,0x7ffdc994fb34,460104434,0,0x0,8
tick,0x7ffdc994fb34,460119576,0,0x0,8
tick,0x7ffdc994fb34,460135168,0,0x0,8
tick,0x7ffdc994fb34,460150281,0,0x0,8
tick,0x7ffdc994fb34,460166353,0,0x0,8
tick,0x7ffdc994fb34,460181761,0,0x0,8
tick,0x7ffdc994fb34,460197059,0,0x0,8
tick,0x7ffdc994fb34,460212441,0,0x0,8
tick,0x7ffdc994fb34,460227429,0,0x0,8
tick,0x7ffdc994fb34,460242286,0,0x0,8
tick,0x7ffdc994fb34,460257650,0,0x0,8
tick,0x7ffdc994fb34,460273326,0,0x0,8
tick,0x7ffdc994fb34,460288597,0,0x0,8
tick,0x7ffdc994fb34,460303556,0,0x0,8
tick,0x7ffdc994fb34,460318863,0,0x0,8
tick,0x7ffdc994fb34,460334259,0,0x0,8
tick,0x7ffdc994fb34,460349672,0,0x0,8
tick,0x7ffdc994fb34,460365092,0,0x0,8
tick,0x7ffdc994fb34,460380827,0,0x0,8
tick,0x7ffdc994fb34,460396010,0,0x0,8
tick,0x7ffdc994fb34,460411313,0,0x0,8
tick,0x7ffdc994fb34,460426989,0,0x0,8
tick,0x7ffdc994fb34,460442736,0,0x0,8
tick,0x7ffdc994fb34,460458159,0,0x0,8
tick,0x7ffdc994fb34,460473161,0,0x0,8
tick,0x7ffdc994fb34,460489101,0,0x0,8
tick,0x7ffdc994fb34,460504197,0,0x0,8
tick,0x7ffdc994fb34,460519583,0,0x0,8
tick,0x7ffdc994fb34,460535533,0,0x0,8
tick,0x7ffdc994fb34,460550452,0,0x0,8
tick,0x7ffdc994fb34,460566246,0,0x0,8
tick,0x7ffdc994fb34,460581921,0,0x0,8
tick,0x7ffdc994fb34,460597751,0,0x0,8
tick,0x7ffdc994fb34,460613006,0,0x0,8
tick,0x7ffdc994fb34,460628427,0,0x0,8
tick,0x7ffdc994fb34,460643982,0,0x0,8
tick,0x7ffdc994fb34,460660190,0,0x0,8
tick,0x7ffdc994fb34,460675480,0,0x0,8
tick,0x7ffdc994fb34,460691036,0,0x0,8
tick,0x7ffdc994fb34,460706970,0,0x0,8
tick,0x7ffdc994fb34,460722213,0,0x0,8
tick,0x7ffdc994fb34,460737621,0,0x0,8
tick,0x7ffdc994fb34,460753368,0,0x0,8
tick,0x7ffdc994fb34,460769037,0,0x0,8
tick,0x7ffdc994fb34,460784451,0,0x0,8
tick,0x7ffdc994fb34,460799598,0,0x0,8
tick,0x7ffdc994fb34,460815581,0,0x0,8
tick,0x7ffdc994fb34,460831336,0,0x0,8
tick,0x7ffdc994fb34,460847360,0,0x0,8
tick,0x7ffdc994fb34,460863478,0,0x0,8
tick,0x7ffdc994fb34,460878720,0,0x0,8
tick,0x7ffdc994fb34,460893957,0,0x0,8
tick,0x7ffdc994fb34,460909254,0,0x0,8
tick,0x7ffdc994fb34,460924382,0,0x0,8
tick,0x7ffdc994fb34,460940075,0,0x0,8
tick,0x7ffdc994fb34,460955344,0,0x0,8
tick,0x7ffdc994fb34,460970618,0,0x0,8
tick,0x7ffdc994fb34,460986762,0,0x0,8
tick,0x7ffdc994fb34,461002368,0,0x0,8
tick,0x7ffdc994fb34,461018001,0,0x0,8
tick,0x7ffdc994fb34,461033536,0,0x0,8
tick,0x7ffdc994fb34,461048691,0,0x0,8
tick,0x7ffdc994fb34,461064707,0,0x0,8
tick,0x7ffdc994fb34,461080181,0,0x0,8
tick,0x7ffdc994fb34,461096167,0,0x0,8
tick,0x7ffdc994fb34,461111911,0,0x0,8
tick,0x7ffdc994fb34,461128152,0,0x0,8
tick,0x7ffdc994fb34,461143842,0,0x0,8
tick,0x7ffdc994fb34,461159084,0,0x0,8
tick,0x7ffdc994fb34,461174786,0,0x0,8
tick,0x7ffdc994fb34,461190902,0,0x0,8
tick,0x7ffdc994fb34,461206149,0,0x0,8
tick,0x7ffdc994fb34,461221483,0,0x0,8
tick,0x7ffdc994fb34,461236728,0,0x0,8
tick,0x7ffdc994fb34,461252181,0,0x0,8
tick,0x7ffdc994fb34,461267922,0,0x0,8
tick,0x7ffdc994fb34,461283845,0,0x0,8
tick,0x7ffdc994fb34,461299172,0,0x0,8
tick,0x7ffdc994fb34,461314622,0,0x0,8
tick,0x7ffdc994fb34,461329609,0,0x0,8
tick,0x7ffdc994fb34,461345153,0,0x0,8
tick,0x7ffdc994fb34,461361063,0,0x0,8
tick,0x7ffdc994fb34,461377128,0,0x0,8
tick,0x7ffdc994fb34,461392681,0,0x0,8
tick,0x7ffdc994fb34,461408152,0,0x0,8
tick,0x7ffdc994fb34,461423309,0,0x0,8
tick,0x7ffdc994fb34,461438610,0,0x0,8
tick,0x7ffdc994fb34,461454546,0,0x0,8
tick,0x7ffdc994fb34,461470553,0,0x0,8
tick,0x7ffdc994fb34,461485941,0,0x0,8
tick,0x7ffdc994fb34,461501410,0,0x0,8
tick,0x7ffdc994fb34,461516984,0,0x0,8
tick,0x7ffdc994fb34,461532193,0,0x0,8
tick,0x7ffdc994fb34,461547868,0,0x0,8
tick,0x7ffdc994fb34,461562933,0,0x0,8
tick,0x7ffdc994fb34,461578338,0,0x0,8
tick,0x7ffdc994fb34,461593657,0,0x0,8
tick,0x7ffdc994fb34,461609358,0,0x0,8
tick,0x7ffdc994fb34,461624963,0,0x0,8
tick,0x7ffdc994fb34,461640547,0,0x0,8
tick,0x7ffdc994fb34,461655891,0,0x0,8
tick,0x7ffdc994fb34,461671020,0,0x0,8
tick,0x7ffdc994fb34,461686946,0,0x0,8
tick,0x7ffdc994fb34,461702318,0,0x0,8
tick,0x7ffdc994fb34,461718381,0,0x0,8
tick,0x7ffdc994fb34,461733989,0,0x0,8
tick,0x7ffdc994fb34,461750058,0,0x0,8
tick,0x7ffdc994fb34,461765474,0,0x0,8
tick,0x7ffdc994fb34,461780850,0,0x0,8
tick,0x7ffdc994fb34,461796544,0,0x0,8
tick,0x7ffdc994fb34,461812344,0,0x0,8
tick,0x7ffdc994fb34,461827566,0,0x0,8
tick,0x7ffdc994fb34,461842597,0,0x0,8
tick,0x7ffdc994fb34,461858327,0,0x0,8
tick,0x7ffdc994fb34,461873729,0,0x0,8
tick,0x7ffdc994fb34,461889559,0,0x0,8
tick,0x7ffdc994fb34,461904771,0,0x0,8
tick,0x7ffdc994fb34,461919962,0,0x0,8
tick,0x7ffdc994fb34,461935150,0,0x0,8
tick,0x7ffdc994fb34,461951465,0,0x0,8
tick,0x7ffdc994fb34,461966635,0,0x0,8
tick,0x7ffdc994fb34,461982380,0,0x0,8
tick,0x7ffdc994fb34,461997655,0,0x0,8
tick,0x7ffdc994fb34,462012906,0,0x0,8
tick,0x7ffdc994fb34,462028942,0,0x0,8
tick,0x7ffdc994fb34,462044013,0,0x0,8
tick,0x7ffdc994fb34,462059792,0,0x0,8
tick,0x7ffdc994fb34,462074914,0,0x0,8
tick,0x7ffdc994fb34,462090849,0,0x0,8
tick,0x7ffdc994fb34,462106033,0,0x0,8
tick,0x7ffdc994fb34,462121259,0,0x0,8
tick,0x7ffdc994fb34,462136509,0,0x0,8
tick,0x7ffdc994fb34,462152771,0,0x0,8
tick,0x7ffdc994fb34,462168559,0,0x0,8
tick,0x7ffdc994fb34,462183960,0,0x0,8
tick,0x7ffdc994fb34,462199630,0,0x0,8
tick,0x7ffdc994fb34,462214968,0,0x0,8
tick,0x7ffdc994fb34,462230668,0,0x0,8
tick,0x7ffdc994fb34,462246114,0,0x0,8
tick,0x7ffdc994fb34,462261667,0,0x0,8
tick,0x7ffdc994fb34,462277080,0,0x0,8
tick,0x7ffdc994fb34,462292559,0,0x0,8
tick,0x7ffdc994fb34,462307935,0,0x0,8
tick,0x7ffdc994fb34,462323445,0,0x0,8
tick,0x7ffdc994fb34,462339291,0,0x0,8
tick,0x7ffdc994fb34,462355210,0,0x0,8
tick,0x7ffdc994fb34,462370523,0,0x0,8
tick,0x7ffdc994fb34,462386024,0,0x0,8
tick,0x7ffdc994fb34,462402425,0,0x0,8
tick,0x7ffdc994fb34,462418092,0,0x0,8
tick,0x7ffdc994fb34,462433246,0,0x0,8
tick,0x7ffdc994fb34,462448595,0,0x0,8
tick,0x7ffdc994fb34,462463842,0,0x0,8
tick,0x7ffdc994fb34,462479334,0,0x0,8
tick,0x7ffdc994fb34,462494624,0,0x0,8
tick,0x7ffdc994fb34,462510537,0,0x0,8
tick,0x7ffdc994fb34,462525780,0,0x0,8
tick,0x7ffdc994fb34,462541388,0,0x0,8
tick,0x7ffdc994fb34,462556606,0,0x0,8
tick,0x7ffdc994fb34,462571893,0,0x0,8
tick,0x7ffdc994fb34,462587656,0,0x0,8
tick,0x7ffdc994fb34,462603388,0,0x0,8
tick,0x7ffdc994fb34,462619080,0,0x0,8
tick,0x7ffdc994fb34,462635129,0,0x0,8
tick,0x7ffdc994fb34,462650834,0,0x0,8
tick,0x7ffdc994fb34,462665996,0,0x0,8
tick,0x7ffdc994fb34,462681947,0,0x0,8
tick,0x7ffdc994fb34,462697951,0,0x0,8
tick,0x7ffdc994fb34,462712985,0,0x0,8
tick,0x7ffdc994fb34,462729004,0,0x0,8
tick,0x7ffdc994fb34,462744416,0,0x0,8
tick,0x7ffdc994fb34,462759634,0,0x0,8
tick,0x7ffdc994fb34,462775357,0,0x0,8
tick,0x7ffdc994fb34,462791212,0,0x0,8
tick,0x7ffdc994fb34,462806490,0,0x0,8
tick,0x7ffdc994fb34,462821835,0,0x0,8
tick,0x7ffdc994fb34,462837240,0,0x0,8
tick,0x7ffdc994fb34,462853198,0,0x0,8
tick,0x7ffdc994fb34,462868612,0,0x0,8
tick,0x7ffdc994fb34,462884206,0,0x0,8
tick,0x7ffdc994fb34,462899288,0,0x0,8
tick,0x7ffdc994fb34,462914879,0,0x0,8
tick,0x7ffdc994fb34,462930314,0,0x0,8
tick,0x7ffdc994fb34,462946030,0,0x0,8
tick,0x7ffdc994fb34,462961943,0,0x0,8
tick,0x7ffdc994fb34,462977897,0,0x0,8
tick,0x7ffdc994fb34,462993628,0,0x0,8
tick,0x7ffdc994fb34,463009085,0,0x0,8
tick,0x7ffdc994fb34,463024466,0,0x0,8
tick,0x7ffdc994fb34,463040399,0,0x0,8
tick,0x7ffdc994fb34,463056282,0,0x0,8
tick,0x7ffdc994fb34,463071777,0,0x0,8
tick,0x7ffdc994fb34,463087761,0,0x0,8
tick,0x7ffdc994fb34,463103778,0,0x0,8
tick,0x7ffdc994fb34,463120255,0,0x0,8
tick,0x7ffdc994fb34,463135538,0,0x0,8
tick,0x7ffdc994fb34,463150996,0,0x0,8
tick,0x7ffdc994fb34,463166364,0,0x0,8
tick,0x7ffdc994fb34,463182515,0,0x0,8
tick,0x7ffdc994fb34,463197830,0,0x0,8
tick,0x7ffdc994fb34,463213184,0,0x0,8
tick,0x7ffdc994fb34,463228430,0,0x0,8
tick,0x7ffdc994fb34,463244213,0,0x0,8
tick,0x7ffdc994fb34,463259844,0,0x0,8
tick,0x7ffdc994fb34,463274937,0,0x0,8
tick,0x7ffdc994fb34,463290706,0,0x0,8
tick,0x7ffdc994fb34,463306175,0,0x0,8
tick,0x7ffdc994fb34,463321912,0,0x0,8
tick,0x7ffdc994fb34,463337291,0,0x0,8
tick,0x7ffdc994fb34,463353570,0,0x0,8
tick,0x7ffdc994fb34,463368599,0,0x0,8
tick,0x7ffdc994fb34,463384460,0,0x0,8
tick,0x7ffdc994fb34,463400505,0,0x0,8
tick,0x7ffdc994fb34,463415959,0,0x0,8
tick,0x7ffdc994fb34,463431575,0,0x0,8
tick,0x7ffdc994fb34,463447567,0,0x0,8
tick,0x7ffdc994fb34,463463064,0,0x0,8
tick,0x7ffdc994fb34,463478817,0,0x0,8
tick,0x7ffdc994fb34,463493841,0,0x0,8
tick,0x7ffdc994fb34,463509727,0,0x0,8
tick,0x7ffdc994fb34,463524894,0,0x0,8
tick,0x7ffdc994fb34,463540719,0,0x0,8
tick,0x7ffdc994fb34,463556343,0,0x0,8
tick,0x7ffdc994fb34,463572398,0,0x0,8
tick,0x7ffdc994fb34,463587944,0,0x0,8
tick,0x7ffdc994fb34,463603789,0,0x0,8
tick,0x7ffdc994fb34,463619462,0,0x0,8
tick,0x7ffdc994fb34,463635232,0,0x0,8
tick,0x7ffdc994fb34,463651070,0,0x0,8
tick,0x7ffdc994fb34,463666447,0,0x0,8
tick,0x7ffdc994fb34,463682122,0,0x0,8
tick,0x7ffdc994fb34,463697691,0,0x0,8
tick,0x7ffdc994fb34,463713421,0,0x0,8
tick,0x7ffdc994fb34,463728504,0,0x0,8
tick,0x7ffdc994fb34,463744361,0,0x0,8
tick,0x7ffdc994fb34,463760032,0,0x0,8
tick,0x7ffdc994fb34,463775854,0,0x0,8
tick,0x7ffdc994fb34,463791128,0,0x0,8
tick,0x7ffdc994fb34,463805991,0,0x0,8
tick,0x7ffdc994fb34,463821948,0,0x0,8
tick,0x7ffdc994fb34,463837556,0,0x0,8
tick,0x7ffdc994fb34,463853041,0,0x0,8
tick,0x7ffdc994fb34,463868321,0,0x0,8
tick,0x7ffdc994fb34,463884242,0,0x0,8
tick,0x7ffdc994fb34,463899803,0,0x0,8
tick,0x7ffdc994fb34,463915039,0,0x0,8
tick,0x7ffdc994fb34,463930788,0,0x0,8
tick,0x7ffdc994fb34,463946424,0,0x0,8
tick,0x7ffdc994fb34,463962348,0,0x0,8
tick,0x7ffdc994fb34,463977796,0,0x0,8
tick,0x7ffdc994fb34,463993077,0,0x0,8
tick,0x7ffdc994fb34,464009002,0,0x0,8
tick,0x7ffdc994fb34,464024341,0,0x0,8
tick,0x7ffdc994fb34,464039790,0,0x0,8
tick,0x7ffdc994fb34,464055291,0,0x0,8
tick,0x7ffdc994fb34,464070796,0,0x0,8
tick,0x7ffdc994fb34,464085767,0,0x0,8
tick,0x7ffdc994fb34,464101620,0,0x0,8
tick,0x7ffdc994fb34,464117234,0,0x0,8
tick,0x7ffdc994fb34,464133054,0,0x0,8
tick,0x7ffdc994fb34,464148376,0,0x0,8
tick,0x7ffdc994fb34,464163900,0,0x0,8
tick,0x7ffdc994fb34,464179846,0,0x0,8
tick,0x7ffdc994fb34,464195047,0,0x0,8
tick,0x7ffdc994fb34,464210980,0,0x0,8
tick,0x7ffdc994fb34,464226952,0,0x0,8
tick,0x7ffdc994fb34,464242453,0,0x0,8
tick,0x7ffdc994fb34,464257956,0,0x0,8
tick,0x7ffdc994fb34,464273329,0,0x0,8
tick,0x7ffdc994fb34,464289248,0,0x0,8
tick,0x7ffdc994fb34,464304975,0,0x0,8
tick,0x7ffdc994fb34,464320204,0,0x0,8
tick,0x7ffdc994fb34,464335997,0,0x0,8
tick,0x7ffdc994fb34,464351627,0,0x0,8
tick,0x7ffdc994fb34,464366389,0,0x0,8
tick,0x7ffdc994fb34,464381842,0,0x0,8
tick,0x7ffdc994fb34,464398009,0,0x0,8
tick,0x7ffdc994fb34,464413266,0,0x0,8
tick,0x7ffdc994fb34,464429007,0,0x0,8
tick,0x7ffdc994fb34,464444578,0,0x0,8
tick,0x7ffdc994fb34,464460476,0,0x0,8
tick,0x7ffdc994fb34,464476334,0,0x0,8
tick,0x7ffdc994fb34,464491782,0,0x0,8
tick,0x7ffdc994fb34,464507265,0,0x0,8
tick,0x7ffdc994fb34,464523273,0,0x0,8
tick,0x7ffdc994fb34,464539057,0,0x0,8
tick,0x7ffdc994fb34,464554380,0,0x0,8
tick,0x7ffdc994fb34,464570162,0,0x0,8
tick,0x7ffdc994fb34,464585703,0,0x0,8
tick,0x7ffdc994fb34,464600823,0,0x0,8
tick,0x7ffdc994fb34,464616325,0,0x0,8
tick,0x7ffdc994fb34,464631253,0,0x0,8
tick,0x7ffdc994fb34,464646392,0,0x0,8
tick,0x7ffdc994fb34,464662224,0,0x0,8
tick,0x7ffdc994fb34,464677592,0,0x0,8
tick,0x7ffdc994fb34,464693787,0,0x0,8
tick,0x7ffdc994fb34,464709203,0,0x0,8
tick,0x7ffdc994fb34,464725115,0,0x0,8
tick,0x7ffdc994fb34,464740743,0,0x0,8
tick,0x7ffdc994fb34,464756674,0,0x0,8
tick,0x7ffdc994fb34,464772147,0,0x0,8
tick,0x7ffdc994fb34,464787648,0,0x0,8
tick,0x7ffdc994fb34,464803483,0,0x0,8
tick,0x7ffdc994fb34,464819120,0,0x0,8
tick,0x7ffdc994fb34,464834738,0,0x0,8
tick,0x7ffdc994fb34,464850626,0,0x0,8
tick,0x7ffdc994fb34,464865923,0,0x0,8
tick,0x7ffdc994fb34,464881138,0,0x0,8
tick,0x7ffdc994fb34,464896808,0,0x0,8
tick,0x7ffdc994fb34,464912065,0,0x0,8
tick,0x7ffdc994fb34,464928371,0,0x0,8
tick,0x7ffdc994fb34,464943980,0,0x0,8
tick,0x7ffdc994fb34,464959713,0,0x0,8
tick,0x7ffdc994fb34,464975064,0,0x0,8
tick,0x7ffdc994fb34,464990528,0,0x0,8
tick,0x7ffdc994fb34,465005832,0,0x0,8
tick,0x7ffdc994fb34,465021502,0,0x0,8
tick,0x7ffdc994fb34,465037160,0,0x0,8
tick,0x7ffdc994fb34,465052579,0,0x0,8
tick,0x7ffdc994fb34,465067722,0,0x0,8
tick,0x7ffdc994fb34,465083133,0,0x0,8
tick,0x7ffdc994fb34,465099596,0,0x0,8
tick,0x7ffdc994fb34,465115035,0,0x0,8
tick,0x7ffdc994fb34,465130454,0,0x0,8
tick,0x7ffdc994fb34,465145839,0,0x0,8
tick,0x7ffdc994fb34,465161292,0,0x0,8
tick,0x7ffdc994fb34,465177104,0,0x0,8
tick,0x7ffdc994fb34,465192890,0,0x0,8
tick,0x7ffdc994fb34,465208843,0,0x0,8
tick,0x7ffdc994fb34,465224829,0,0x0,8
tick,0x7ffdc994fb34,465240210,0,0x0,8
tick,0x7ffdc994fb34,465255576,0,0x0,8
tick,0x7ffdc994fb34,465271749,0,0x0,8
tick,0x7ffdc994fb34,465287303,0,0x0,8
tick,0x7ffdc994fb34,465303217,0,0x0,8
tick,0x7ffdc994fb34,465318878,0,0x0,8
tick,0x7ffdc994fb34,465333746,0,0x0,8
tick,0x7ffdc994fb34,465349116,0,0x0,8
tick,0x7ffdc994fb34,465364499,0,0x0,8
tick,0x7ffdc994fb34,465380436,0,0x0,8
tick,0x7ffdc994fb34,465394975,0,0x0,8
tick,0x7ffdc994fb34,465411096,0,0x0,8
tick,0x7ffdc994fb34,465426037,0,0x0,8
tick,0x7ffdc994fb34,465441288,0,0x0,8
tick,0x7ffdc994fb34,465457318,0,0x0,8
tick,0x7ffdc994fb34,465473177,0,0x0,8
tick,0x7ffdc994fb34,465488079,0,0x0,8
tick,0x7ffdc994fb34,465503423,0,0x0,8
tick,0x7ffdc994fb34,465519008,0,0x0,8
tick,0x7ffdc994fb34,465534164,0,0x0,8
tick,0x7ffdc994fb34,465550096,0,0x0,8
tick,0x7ffdc994fb34,465565761,0,0x0,8
tick,0x7ffdc994fb34,465580876,0,0x0,8
tick,0x7ffdc994fb34,465596711,0,0x0,8
tick,0x7ffdc994fb34,465611834,0,0x0,8
tick,0x7ffdc994fb34,465627020,0,0x0,8
tick,0x7ffdc994fb34,465642947,0,0x0,8
tick,0x7ffdc994fb34,465657666,0,0x0,8
tick,0x7ffdc994fb34,465673768,0,0x0,8
tick,0x7ffdc994fb34,465689579,0,0x0,8
tick,0x7ffdc994fb34,465705367,0,0x0,8
tick,0x7ffdc994fb34,465720940,0,0x0,8
tick,0x7ffdc994fb34,465736290,0,0x0,8
tick,0x7ffdc994fb34,465752064,0,0x0,8
tick,0x7ffdc994fb34,465767366,0,0x0,8
tick,0x7ffdc994fb34,465783040,0,0x0,8
tick,0x7ffdc994fb34,465798845,0,0x0,8
tick,0x7ffdc994fb34,465813766,0,0x0,8
tick,0x7ffdc994fb34,465829540,0,0x0,8
tick,0x7ffdc994fb34,465844834,0,0x0,8
tick,0x7ffdc994fb34,465860391,0,0x0,8
tick,0x7ffdc994fb34,465876039,0,0x0,8
tick,0x7ffdc994fb34,465891319,0,0x0,8
tick,0x7ffdc994fb34,465907298,0,0x0,8
tick,0x7ffdc994fb34,465923238,0,0x0,8
tick,0x7ffdc994fb34,465939140,0,0x0,8
tick,0x7ffdc994fb34,465954254,0,0x0,8
tick,0x7ffdc994fb34,465970105,0,0x0,8
tick,0x7ffdc994fb34,465985161,0,0x0,8
tick,0x7ffdc994fb34,466000657,0,0x0,8
tick,0x7ffdc994fb34,466016332,0,0x0,8
tick,0x7ffdc994fb34,466032186,0,0x0,8
tick,0x7ffdc994fb34,466046927,0,0x0,8
tick,0x7ffdc994fb34,466062970,0,0x0,8
tick,0x7ffdc994fb34,466078594,0,0x0,8
tick,0x7ffdc994fb34,466094333,0,0x0,8
tick,0x7ffdc994fb34,466109832,0,0x0,8
tick,0x7ffdc994fb34,466125350,0,0x0,8
tick,0x7ffdc994fb34,466140630,0,0x0,8
tick,0x7ffdc994fb34,466156081,0,0x0,8
tick,0x7ffdc994fb34,466171756,0,0x0,8
tick,0x7ffdc994fb34,466186914,0,0x0,8
tick,0x7ffdc994fb34,466202264,0,0x0,8
tick,0x7ffdc994fb34,466217817,0,0x0,8
tick,0x7ffdc994fb34,466233134,0,0x0,8
tick,0x7ffdc994fb34,466248553,0,0x0,8
tick,0x7ffdc994fb34,466263784,0,0x0,8
tick,0x7ffdc994fb34,466279503,0,0x0,8
tick,0x7ffdc994fb34,466294254,0,0x0,8
tick,0x7ffdc994fb34,466308912,0,0x0,8
tick,0x7ffdc994fb34,466324456,0,0x0,8
tick,0x7ffdc994fb34,466339954,0,0x0,8
tick,0x7ffdc994fb34,466355471,0,0x0,8
tick,0x7ffdc994fb34,466371683,0,0x0,8
tick,0x7ffdc994fb34,466386902,0,0x0,8
tick,0x7ffdc994fb34,466402940,0,0x0,8
tick,0x7ffdc994fb34,466418437,0,0x0,8
tick,0x7ffdc994fb34,466434537,0,0x0,8
tick,0x7ffdc994fb34,466449924,0,0x0,8
tick,0x7ffdc994fb34,466465710,0,0x0,8
tick,0x7ffdc994fb34,466480934,0,0x0,8
tick,0x7ffdc994fb34,466496953,0,0x0,8
tick,0x7ffdc994fb34,466513170,0,0x0,8
tick,0x7ffdc994fb34,466528648,0,0x0,8
tick,0x7ffdc994fb34,466543877,0,0x0,8
tick,0x7ffdc994fb34,466560051,0,0x0,8
tick,0x7ffdc994fb34,466575174,0,0x0,8
tick,0x7ffdc994fb34,466591035,0,0x0,8
tick,0x7ffdc994fb34,466607048,0,0x0,8
tick,0x7ffdc994fb34,466623325,0,0x0,8
tick,0x7ffdc994fb34,466639068,0,0x0,8
tick,0x7ffdc994fb34,466654950,0,0x0,8
tick,0x7ffdc994fb34,466670288,0,0x0,8
tick,0x7ffdc994fb34,466686184,0,0x0,8
tick,0x7ffdc994fb34,466701940,0,0x0,8
tick,0x7ffdc994fb34,466717236,0,0x0,8
tick,0x7ffdc994fb34,466732794,0,0x0,8
tick,0x7ffdc994fb34,466748209,0,0x0,8
tick,0x7ffdc994fb34,466763428,0,0x0,8
tick,0x7ffdc994fb34,466779858,0,0x0,8
tick,0x7ffdc994fb34,466795170,0,0x0,8
tick,0x7ffdc994fb34,466811106,0,0x0,8
tick,0x7ffdc994fb34,466826305,0,0x0,8
tick,0x7ffdc994fb34,466842307,0,0x0,8
tick,0x7ffdc994fb34,466857732,0,0x0,8
tick,0x7ffdc994fb34,466873364,0,0x0,8
tick,0x7ffdc994fb34,466888424,0,0x0,8
tick,0x7ffdc994fb34,466903909,0,0x0,8
tick,0x7ffdc994fb34,466919766,0,0x0,8
tick,0x7ffdc994fb34,466935444,0,0x0,8
tick,0x7ffdc994fb34,466951556,0,0x0,8
tick,0x7ffdc994fb34,466967429,0,0x0,8
tick,0x7ffdc994fb34,466983720,0,0x0,8
tick,0x7ffdc994fb34,466999596,0,0x0,8
tick,0x7ffdc994fb34,467015083,0,0x0,8
tick,0x7ffdc994fb34,467030344,0,0x0,8
tick,0x7ffdc994fb34,467046687,0,0x0,8
tick,0x7ffdc994fb34,467062206,0,0x0,8
tick,0x7ffdc994fb34,467078241,0,0x0,8
tick,0x7ffdc994fb34,467093490,0,0x0,8
tick,0x7ffdc994fb34,467109639,0,0x0,8
tick,0x7ffdc994fb34,467124929,0,0x0,8
tick,0x7ffdc994fb34,467141101,0,0x0,8
tick,0x7ffdc994fb34,467156958,0,0x0,8
tick,0x7ffdc994fb34,467173259,0,0x0,8
tick,0x7ffdc994fb34,467188925,0,0x0,8
tick,0x7ffdc994fb34,467204167,0,0x0,8
tick,0x7ffdc994fb34,467220396,0,0x0,8
tick,0x7ffdc994fb34,467236169,0,0x0,8
tick,0x7ffdc994fb34,467251296,0,0x0,8
tick,0x7ffdc994fb34,467267079,0,0x0,8
tick,0x7ffdc994fb34,467283122,0,0x0,8
tick,0x7ffdc994fb34,467298746,0,0x0,8
tick,0x7ffdc994fb34,467314088,0,0x0,8
tick,0x7ffdc994fb34,467329553,0,0x0,8
tick,0x7ffdc994fb34,467345526,0,0x0,8
tick,0x7ffdc994fb34,467360898,0,0x0,8
tick,0x7ffdc994fb34,467376612,0,0x0,8
tick,0x7ffdc994fb34,467391791,0,0x0,8
tick,0x7ffdc994fb34,467407480,0,0x0,8
tick,0x7ffdc994fb34,467422976,0,0x0,8
tick,0x7ffdc994fb34,467438878,0,0x0,8
tick,0x7ffdc994fb34,467454370,0,0x0,8
tick,0x7ffdc994fb34,467470136,0,0x0,8
tick,0x7ffdc994fb34,467485533,0,0x0,8
tick,0x7ffdc994fb34,467501150,0,0x0,8
tick,0x7ffdc994fb34,467516732,0,0x0,8
tick,0x7ffdc994fb34,467532823,0,0x0,8
tick,0x7ffdc994fb34,467548274,0,0x0,8
tick,0x7ffdc994fb34,467564153,0,0x0,8
tick,0x7ffdc994fb34,467580129,0,0x0,8
tick,0x7ffdc994fb34,467595928,0,0x0,8
tick,0x7ffdc994fb34,467611133,0,0x0,8
tick,0x7ffdc994fb34,467626998,0,0x0,8
tick,0x7ffdc994fb34,467642595,0,0x0,8
tick,0x7ffdc994fb34,467657987,0,0x0,8
tick,0x7ffdc994fb34,467673938,0,0x0,8
tick,0x7ffdc994fb34,467689906,0,0x0,8
tick,0x7ffdc994fb34,467705270,0,0x0,8
tick,0x7ffdc994fb34,467720943,0,0x0,8
tick,0x7ffdc994fb34,467736568,0,0x0,8
tick,0x7ffdc994fb34,467752091,0,0x0,8
tick,0x7ffdc994fb34,467767457,0,0x0,8
tick,0x7ffdc994fb34,467782964,0,0x0,8
tick,0x7ffdc994fb34,467798244,0,0x0,8
tick,0x7ffdc994fb34,467813768,0,0x0,8
tick,0x7ffdc994fb34,467829110,0,0x0,8
tick,0x7ffdc994fb34,467844884,0,0x0,8
tick,0x7ffdc994fb34,467860273,0,0x0,8
tick,0x7ffdc994fb34,467876380,0,0x0,8
tick,0x7ffdc994fb34,467892158,0,0x0,8
tick,0x7ffdc994fb34,467907771,0,0x0,8
tick,0x7ffdc994fb34,467922806,0,0x0,8
tick,0x7ffdc994fb34,467938550,0,0x0,8
tick,0x7ffdc994fb34,467953977,0,0x0,8
tick,0x7ffdc994fb34,467969106,0,0x0,8
tick,0x7ffdc994fb34,467984882,0,0x0,8
tick,0x7ffdc994fb34,468000688,0,0x0,8
tick,0x7ffdc994fb34,468016790,0,0x0,8
tick,0x7ffdc994fb34,468032591,0,0x0,8
tick,0x7ffdc994fb34,468048040,0,0x0,8
tick,0x7ffdc994fb34,468063165,0,0x0,8
tick,0x7ffdc994fb34,468078836,0,0x0,8
tick,0x7ffdc994fb34,468094071,0,0x0,8
tick,0x7ffdc994fb34,468109860,0,0x0,8
tick,0x7ffdc994fb34,468125667,0,0x0,8
tick,0x7ffdc994fb34,468141259,0,0x0,8
tick,0x7ffdc994fb34,468155679,0,0x0,8
tick,0x7ffdc994fb34,468171516,0,0x0,8
tick,0x7ffdc994fb34,468186987,0,0x0,8
tick,0x7ffdc994fb34,468202499,0,0x0,8
tick,0x7ffdc994fb34,468218108,0,0x0,8
tick,0x7ffdc994fb34,468233440,0,0x0,8
tick,0x7ffdc994fb34,468249137,0,0x0,8
tick,0x7ffdc994fb34,468264373,0,0x0,8
tick,0x7ffdc994fb34,468280098,0,0x0,8
tick,0x7ffdc994fb34,468295575,0,0x0,8
tick,0x7ffdc994fb34,468311307,0,0x0,8
tick,0x7ffdc994fb34,468326595,0,0x0,8
tick,0x7ffdc994fb34,468342172,0,0x0,8
tick,0x7ffdc994fb34,468357842,0,0x0,8
tick,0x7ffdc994fb34,468373030,0,0x0,8
tick,0x7ffdc994fb34,468388621,0,0x0,8
tick,0x7ffdc994fb34,468403648,0,0x0,8
tick,0x7ffdc994fb34,468419319,0,0x0,8
tick,0x7ffdc994fb34,468435220,0,0x0,8
tick,0x7ffdc994fb34,468451062,0,0x0,8
tick,0x7ffdc994fb34,468465949,0,0x0,8
tick,0x7ffdc994fb34,468481913,0,0x0,8
tick,0x7ffdc994fb34,468497476,0,0x0,8
tick,0x7ffdc994fb34,468512826,0,0x0,8
tick,0x7ffdc994fb34,468528723,0,0x0,8
tick,0x7ffdc994fb34,468543973,0,0x0,8
tick,0x7ffdc994fb34,468559511,0,0x0,8
tick,0x7ffdc994fb34,468574674,0,0x0,8
tick,0x7ffdc994fb34,468590166,0,0x0,8
tick,0x7ffdc994fb34,468605973,0,0x0,8
tick,0x7ffdc994fb34,468621182,0,0x0,8
tick,0x7ffdc994fb34,468636870,0,0x0,8
tick,0x7ffdc994fb34,468652166,0,0x0,8
tick,0x7ffdc994fb34,468667691,0,0x0,8
tick,0x7ffdc994fb34,468682721,0,0x0,8
tick,0x7ffdc994fb34,468698440,0,0x0,8
tick,0x7ffdc994fb34,468713681,0,0x0,8
tick,0x7ffdc994fb34,468729163,0,0x0,8
tick,0x7ffdc994fb34,468744969,0,0x0,8
tick,0x7ffdc994fb34,468760841,0,0x0,8
tick,0x7ffdc994fb34,468775853,0,0x0,8
tick,0x7ffdc994fb34,468791331,0,0x0,8
tick,0x7ffdc994fb34,468807096,0,0x0,8
tick,0x7ffdc994fb34,468823261,0,0x0,8
tick,0x7ffdc994fb34,468839129,0,0x0,8
tick,0x7ffdc994fb34,468854539,0,0x0,8
tick,0x7ffdc994fb34,468870678,0,0x0,8
tick,0x7ffdc994fb34,468886463,0,0x0,8
tick,0x7ffdc994fb34,468902462,0,0x0,8
tick,0x7ffdc994fb34,468918192,0,0x0,8
tick,0x7ffdc994fb34,468933765,0,0x0,8
tick,0x7ffdc994fb34,468948905,0,0x0,8
tick,0x7ffdc994fb34,468964389,0,0x0,8
tick,0x7ffdc994fb34,468980265,0,0x0,8
tick,0x7ffdc994fb34,468995242,0,0x0,8
tick,0x7ffdc994fb34,469010820,0,0x0,8
tick,0x7ffdc994fb34,469026530,0,0x0,8
tick,0x7ffdc994fb34,469042201,0,0x0,8
tick,0x7ffdc994fb34,469057278,0,0x0,8
tick,0x7ffdc994fb34,469072874,0,0x0,8
tick,0x7ffdc994fb34,469089011,0,0x0,8
tick,0x7ffdc994fb34,469104756,0,0x0,8
tick,0x7ffdc994fb34,469120563,0,0x0,8
tick,0x7ffdc994fb34,469136725,0,0x0,8
tick,0x7ffdc994fb34,469151845,0,0x0,8
tick,0x7ffdc994fb34,469167627,0,0x0,8
tick,0x7ffdc994fb34,469183168,0,0x0,8
tick,0x7ffdc994fb34,469198384,0,0x0,8
tick,0x7ffdc994fb34,469213881,0,0x0,8
tick,0x7ffdc994fb34,469230098,0,0x0,8
tick,0x7ffdc994fb34,469245806,0,0x0,8
tick,0x7ffdc994fb34,469261958,0,0x0,8
tick,0x7ffdc994fb34,469277848,0,0x0,8
tick,0x7ffdc994fb34,469294218,0,0x0,8
tick,0x7ffdc994fb34,469309538,0,0x0,8
tick,0x7ffdc994fb34,469324844,0,0x0,8
tick,0x7ffdc994fb34,469340254,0,0x0,8
tick,0x7ffdc994fb34,469356445,0,0x0,8
tick,0x7ffdc994fb34,469372024,0,0x0,8
tick,0x7ffdc994fb34,469387725,0,0x0,8
tick,0x7ffdc994fb34,469402986,0,0x0,8
tick,0x7ffdc994fb34,469418829,0,0x0,8
tick,0x7ffdc994fb34,469434312,0,0x0,8
tick,0x7ffdc994fb34,469450434,0,0x0,8
tick,0x7ffdc994fb34,469466039,0,0x0,8
tick,0x7ffdc994fb34,469481463,0,0x0,8
tick,0x7ffdc994fb34,469497345,0,0x0,8
tick,0x7ffdc994fb34,469512846,0,0x0,8
tick,0x7ffdc994fb34,469528672,0,0x0,8
tick,0x7ffdc994fb34,469544408,0,0x0,8
tick,0x7ffdc994fb34,469559712,0,0x0,8
tick,0x7ffdc994fb34,469575663,0,0x0,8
tick,0x7ffdc994fb34,469591874,0,0x0,8
tick,0x7ffdc994fb34,469607465,0,0x0,8
tick,0x7ffdc994fb34,469623016,0,0x0,8
tick,0x7ffdc994fb34,469638409,0,0x0,8
tick,0x7ffdc994fb34,469654524,0,0x0,8
tick,0x7ffdc994fb34,469670089,0,0x0,8
tick,0x7ffdc994fb34,469685373,0,0x0,8
tick,0x7ffdc994fb34,469701190,0,0x0,8
tick,0x7ffdc994fb34,469716366,0,0x0,8
tick,0x7ffdc994fb34,469732071,0,0x0,8
tick,0x7ffdc994fb34,469747777,0,0x0,8
tick,0x7ffdc994fb34,469763397,0,0x0,8
tick,0x7ffdc994fb34,469778884,0,0x0,8
tick,0x7ffdc994fb34,469794155,0,0x0,8
tick,0x7ffdc994fb34,469809807,0,0x0,8
tick,0x7ffdc994fb34,469825210,0,0x0,8
tick,0x7ffdc994fb34,469841286,0,0x0,8
tick,0x7ffdc994fb34,469856369,0,0x0,8
tick,0x7ffdc994fb34,469871853,0,0x0,8
tick,0x7ffdc994fb34,469887590,0,0x0,8
tick,0x7ffdc994fb34,469903157,0,0x0,8
tick,0x7ffdc994fb34,469918563,0,0x0,8
tick,0x7ffdc994fb34,469933674,0,0x0,8
tick,0x7ffdc994fb34,469949160,0,0x0,8
tick,0x7ffdc994fb34,469964517,0,0x0,8
tick,0x7ffdc994fb34,469980279,0,0x0,8
tick,0x7ffdc994fb34,469995550,0,0x0,8
tick,0x7ffdc994fb34,470011209,0,0x0,8
tick,0x7ffdc994fb34,470026994,0,0x0,8
tick,0x7ffdc994fb34,470042128,0,0x0,8
tick,0x7ffdc994fb34,470057457,0,0x0,8
tick,0x7ffdc994fb34,470072753,0,0x0,8
tick,0x7ffdc994fb34,470088237,0,0x0,8
tick,0x7ffdc994fb34,470103608,0,0x0,8
tick,0x7ffdc994fb34,470119445,0,0x0,8
tick,0x7ffdc994fb34,470134715,0,0x0,8
tick,0x7ffdc994fb34,470150688,0,0x0,8
tick,0x7ffdc994fb34,470165850,0,0x0,8
tick,0x7ffdc994fb34,470182154,0,0x0,8
tick,0x7ffdc994fb34,470198051,0,0x0,8
tick,0x7ffdc994fb34,470213691,0,0x0,8
tick,0x7ffdc994fb34,470229564,0,0x0,8
tick,0x7ffdc994fb34,470244510,0,0x0,8
tick,0x7ffdc994fb34,470260022,0,0x0,8
tick,0x7ffdc994fb34,470275535,0,0x0,8
tick,0x7ffdc994fb34,470291678,0,0x0,8
tick,0x7ffdc994fb34,470307002,0,0x0,8
tick,0x7ffdc994fb34,470322590,0,0x0,8
tick,0x7ffdc994fb34,470337690,0,0x0,8
tick,0x7ffdc994fb34,470352979,0,0x0,8
tick,0x7ffdc994fb34,470368379,0,0x0,8
tick,0x7ffdc994fb34,470384208,0,0x0,8
tick,0x7ffdc994fb34,470400158,0,0x0,8
tick,0x7ffdc994fb34,470415754,0,0x0,8
tick,0x7ffdc994fb34,470431605,0,0x0,8
tick,0x7ffdc994fb34,470446378,0,0x0,8
tick,0x7ffdc994fb34,470462382,0,0x0,8
tick,0x7ffdc994fb34,470478696,0,0x0,8
tick,0x7ffdc994fb34,470494327,0,0x0,8
tick,0x7ffdc994fb34,470509906,0,0x0,8
tick,0x7ffdc994fb34,470525224,0,0x0,8
tick,0x7ffdc994fb34,470541339,0,0x0,8
tick,0x7ffdc994fb34,470556301,0,0x0,8
tick,0x7ffdc994fb34,470572109,0,0x0,8
tick,0x7ffdc994fb34,470587638,0,0x0,8
tick,0x7ffdc994fb34,470603162,0,0x0,8
tick,0x7ffdc994fb34,470618467,0,0x0,8
tick,0x7ffdc994fb34,470633475,0,0x0,8
tick,0x7ffdc994fb34,470649130,0,0x0,8
tick,0x7ffdc994fb34,470664308,0,0x0,8
tick,0x7ffdc994fb34,470680189,0,0x0,8
tick,0x7ffdc994fb34,470695784,0,0x0,8
tick,0x7ffdc994fb34,470712073,0,0x0,8
tick,0x7ffdc994fb34,470727343,0,0x0,8
tick,0x7ffdc994fb34,470743296,0,0x0,8
tick,0x7ffdc994fb34,470759282,0,0x0,8
tick,0x7ffdc994fb34,470775536,0,0x0,8
